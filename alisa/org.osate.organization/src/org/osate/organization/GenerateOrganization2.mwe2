/**
 * Copyright (c) 2004-2021 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files ("Third Party Software"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software ("Third Party Licensors") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */
module org.osate.organization.GenerateOrganization2

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var fileExtensions = "org"
var projectName = "org.osate.organization"
var runtimeProject = "../${projectName}"
var fileHeader =
"/**
 * Copyright (c) 2004-2021 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN \"AS-IS\" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files (\"Third Party Software\"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software (\"Third Party Licensors\") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */"

Workflow {
	component = DirectoryCleaner {
		directory = "${runtimeProject}/src-gen"
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}/model/generated"
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}.ui/src-gen"
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}.tests/src-gen"
	}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = projectName
				rootPath = ".."
				runtimeTest = {
					enabled = true
				}
				genericIde = {
					name = "${projectName}.ui"
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = false
				}
				createEclipseMetaData = true
			}
			code = {
				preferXtendStubs = false
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = fileHeader
			}
		}
		language = auto-inject {
			name = "org.osate.organization.Organization"
			fileExtensions = fileExtensions
			fragment = grammarAccess.GrammarAccessFragment2 {}
			fragment = ecore.EMFGeneratorFragment2 {}
			fragment = serializer.SerializerFragment2 {
				generateStub = false
			}
			fragment = resourceFactory.ResourceFactoryFragment2 {}
			fragment = parser.antlr.XtextAntlrGeneratorFragment2 {}
			//fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 {}
			fragment = validation.ValidatorFragment2 {
				generateXtendStub = true
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			fragment = scoping.ImportNamespacesScopingFragment2 {
				generateXtendStub = true
			}
			fragment = exporting.QualifiedNamesFragment2 {}
			fragment = builder.BuilderIntegrationFragment2 {}
			//fragment = generator.GeneratorFragment2 {}
			fragment = formatting.Formatter2Fragment2 {
				generateXtendStub = true
			}
			fragment = ui.labeling.LabelProviderFragment2 {
				generateXtendStub = true
			}
			fragment = ui.outline.QuickOutlineFragment2 {}
			fragment = ui.outline.OutlineTreeProviderFragment2 {
				generateXtendStub = true
			}
			fragment = ui.quickfix.QuickfixProviderFragment2 {
				generateXtendStub = true
			}
			fragment = ui.contentAssist.ContentAssistFragment2 {
				generateXtendStub = true
			}
			fragment = junit.JUnitFragment {
				generateStub = true
				junitVersion = "4"
			}
			fragment = ui.refactoring.RefactorElementNameFragment2 {}
			//fragment = types.TypesGeneratorFragment2 {}
			//fragment = xbase.XtypeGeneratorFragment2 {}
			//fragment = xbase.XbaseGeneratorFragment2 {}
			fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
			fragment = ui.compare.CompareFragment2 {}
			//fragment = web.WebIntegrationFragment {
			//	framework = "Ace"
			//}
			//fragment = ui.projectWizard.TemplateProjectWizardFragment {}
			//fragment = ui.fileWizard.TemplateFileWizardFragment {}
		}
	}
}

