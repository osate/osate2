<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.5.0.v201506092134 Build &lt;@BUILD@></property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[function qualifiedName(ne) {
	var name = ne.getName()
	var container = ne.eContainer()
	while (container != null) {
		if (!(typeof container.name === 'undefined')) {
			name = container.getName() + '.' + name
		}
		container = container.eContainer()
	}
	return name
}

reportContext.setPersistentGlobalVariable("qualifiedName", qualifiedName)]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <data-sources>
        <script-data-source name="requirements" id="4">
            <method name="open"><![CDATA[/**
 * Copyright (c) 2004-2021 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files ("Third Party Software"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software ("Third Party Licensors") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */
Alisa = new JavaImporter(
	org.eclipse.xtext,
	org.osate.aadl2,
	org.osate.aadl2.instance,
	org.osate.reqspec,
	org.osate.reqspec.reqSpec,
	org.osate.reqspec.util)


function goalsForRequirement(requirement, comp) {
	var result = new java.util.TreeSet(comp)

	result.addAll(requirement.getGoalReference())
	if (result.isEmpty()) {
		for (var req in Iterator(requirement.getRefinesReference())) {
			addNonDropped(result, goalsForRequirement(req, comp))
		}
		for (var req in Iterator(requirement.getDecomposesReference())) {
			addNonDropped(result, goalsForRequirement(req, comp))
		}
		for (var req in Iterator(requirement.getEvolvesReference())) {
			addNonDropped(result, goalsForRequirement(req, comp))
		}
	}
	return result
}

function stakeholdersForGoal(goal, comp) {
	var result = new java.util.TreeSet(comp)

	result.addAll(goal.getStakeholderReference())
	if (result.isEmpty()) {
		for (var goal in Iterator(goal.getGoalReference())) {
			result.addAll(stakeholdersForGoal(goal, comp))
		}
		for (var goal in Iterator(goal.getRefinesReference())) {
			result.addAll(stakeholdersForGoal(goal, comp))
		}
		for (var req in Iterator(goal.getEvolvesReference())) {
			result.addAll(stakeholdersForGoal(goal, comp))
		}
	}
	return result
}

function addNonDropped(set, elements) {
	for (var e in Iterator(elements)) {
		if (!e.isDropped()) {
			set.add(e)
		}
	}
}

with (Alisa) {
	type = reportContext.getParameterValue('FileType')
	file = reportContext.getParameterValue('AADLFile')
	report = reportContext.getParameterValue('ReportType')

	// get reqspec reference finder from guice
	
	var registry = org.eclipse.xtext.resource.IResourceServiceProvider$Registry.INSTANCE
	var uri = org.eclipse.emf.common.util.URI.createPlatformResourceURI(file)
	var provider
	if (type =='instance') {
		resourceSet = new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl()
		resource = resourceSet.getResource(uri, true)
		var si = resource.getContents().get(0)
		uri1 = si.getComponentImplementation().eResource().getURI()
		provider = registry.getResourceServiceProvider(uri1)
		resource.unload()
	} else {
		provider = registry.getResourceServiceProvider(uri)
	}
	var finder = provider.get(IReqspecGlobalReferenceFinder)

	// load the file

	resourceSet = provider.get(org.eclipse.xtext.resource.XtextResourceSet)
	resourceSet.addLoadOption(org.eclipse.xtext.resource.XtextResource.OPTION_RESOLVE_ALL, Boolean.TRUE)
	resource = resourceSet.createResource(uri)
	resource.load(resourceSet.getLoadOptions())
	
	var sysreqs = new java.util.HashSet()
	var requirements = new java.util.ArrayList()
	var goals = new java.util.ArrayList()
	
	if (type =='instance') {
		// get requirements used in instance model
		var componentInstances = new java.util.ArrayList()
		si = resource.contents.get(0)
		componentInstances.add(si)
		componentInstances.addAll(EcoreUtil2.getAllContentsOfType(si, ComponentInstance))
		
		for(var ci in Iterator(componentInstances)) {
			var srss = finder.getSystemRequirementSets(ci)
			if (srss != null) {
				for (var iter = srss.iterator(); iter.hasNext();) {
					sysreqs.add(iter.next())
				}
			}
		}
	} else 	if (type == 'package') {
		// get requirements used in package
		var pack = resource.getContents().get(0)
		var classifiers = EcoreUtil2.getAllContentsOfType(pack, ComponentClassifier)
		for(var c in Iterator(classifiers)) {
			var srss = finder.getSystemRequirementSets(c)
			if (srss != null) {
				for (var iter = srss.iterator(); iter.hasNext();) {
					sysreqs.add(iter.next())
				}
			}
		}		
	} else if (type == 'reqspec') {
		// get requirements from reqspec file
		var reqspec = resource.getContents().get(0)
		for (var part in Iterator(reqspec.getParts())) {
			if (part instanceof SystemRequirementSet) {
				sysreqs.add(part)
			}
		}
	} else if (type == 'reqdoc') {
		// get requirements from reqdoc file
		var reqspec = resource.getContents().get(0)
		for (var part in Iterator(reqspec.getParts())) {
			if (part instanceof ReqDocument) {
				addNonDropped(requirements, EcoreUtil2.getAllContentsOfType(part, Requirement))
			}
		}
	} else if (type == 'goals') {
		// get goals from goals file
		var reqspec = resource.getContents().get(0)
		for (var part in Iterator(reqspec.getParts())) {
			if (part instanceof StakeholderGoals) {
				//goals.addAll(part.getGoals())
				addNonDropped(goals, part.getGoals())
			}
		}
	} else if (type == 'goaldoc') {
		// get goals from goaldoc file
		var reqspec = resource.getContents().get(0)
		for (var part in Iterator(reqspec.getParts())) {
			if (part instanceof ReqDocument) {
				addNonDropped(goals, EcoreUtil2.getAllContentsOfType(part, Goal))
			}
		}
	}
	
	for (var srs in Iterator(sysreqs)) {
		//requirements.addAll(srs.getRequirements())
		addNonDropped(requirements, srs.getRequirements())
	}

	// sort requirements/goals by qualified name
	
	var qncomp = JavaAdapter(java.util.Comparator, {
		compare: function (ne1, ne2) {
			return qualifiedName(ne1).localeCompare(qualifiedName(ne2))
		}
	})
	
	requirement2goals = new java.util.TreeMap(qncomp)
	goal2stakeholders = new java.util.TreeMap(qncomp)
	nogoals = new java.util.TreeSet(qncomp)
	nostakeholders = new java.util.TreeSet(qncomp)

	if (type != 'goals' &amp;&amp; type != 'goaldoc') {	
		goals = new java.util.HashSet()
		for (var req in Iterator(requirements)) {
			if (!req.isDropped()) {
				var gs = goalsForRequirement(req, qncomp)
				if (gs.isEmpty()) {
					nogoals.add(req)
				} else {
					requirement2goals.put(req, gs)
					goals.addAll(gs)
				}
			}
		}
	}
	for (var goal in Iterator(goals)) {
		if (!goal.isDropped()) {
			var ss = stakeholdersForGoal(goal, qncomp)
			if (ss.isEmpty()) {
				nostakeholders.add(goal)
			} else {
				goal2stakeholders.put(goal, ss)
			}
		}
	}
}
]]></method>
        </script-data-source>
    </data-sources>
    <data-sets>
        <script-data-set name="r2g" id="5">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">reqname</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">reqtitle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">goals</property>
                    <property name="dataType">javaObject</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">reqname</property>
                </structure>
                <structure>
                    <property name="columnName">reqtitle</property>
                </structure>
                <structure>
                    <property name="columnName">goals</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">reqname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">reqtitle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">goals</property>
                        <property name="dataType">javaObject</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[iter = requirement2goals.navigableKeySet().iterator()
]]></method>
            <method name="fetch"><![CDATA[if (!iter.hasNext()) {
	return false
}
r = iter.next()
row['goals'] = requirement2goals.get(r)
row['reqname'] = qualifiedName(r)
row['reqtitle'] = r.getTitle()
return true
]]></method>
        </script-data-set>
        <script-data-set name="g2s" id="247">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">goalname</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">goaltitle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">stakeholders</property>
                    <property name="dataType">javaObject</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">goalname</property>
                </structure>
                <structure>
                    <property name="columnName">goaltitle</property>
                </structure>
                <structure>
                    <property name="columnName">stakeholders</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">goalname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">goaltitle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">stakeholders</property>
                        <property name="dataType">javaObject</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[iter = goal2stakeholders.navigableKeySet().iterator()
]]></method>
            <method name="fetch"><![CDATA[if (!iter.hasNext()) {
	return false
}
g = iter.next()
row['stakeholders'] = goal2stakeholders.get(g)
row['goalname'] = qualifiedName(g)
row['goaltitle'] = g.getTitle()
return true
]]></method>
        </script-data-set>
        <script-data-set name="nogoal" id="153">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">reqname</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">reqtitle</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">reqdescription</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">reqname</property>
                </structure>
                <structure>
                    <property name="columnName">reqtitle</property>
                </structure>
                <structure>
                    <property name="columnName">reqdescription</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">reqname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">reqtitle</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">reqdescription</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[iter = nogoals.iterator()
]]></method>
            <method name="fetch"><![CDATA[if (iter.hasNext()) {
	r = iter.next()
	row['reqname'] = qualifiedName(r)
	row['reqtitle'] = r.getTitle()
	return true
} else {
	return false
}]]></method>
        </script-data-set>
        <script-data-set name="nostakeholder" id="248">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">goalname</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">goaltitle</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">goalname</property>
                </structure>
                <structure>
                    <property name="columnName">goaltitle</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">goalname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">goaltitle</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[iter = nostakeholders.iterator()
]]></method>
            <method name="fetch"><![CDATA[if (!iter.hasNext()) {
	return false
}
g = iter.next()
row['goalname'] = qualifiedName(g)
row['goaltitle'] = g.getTitle()
return true
]]></method>
        </script-data-set>
        <script-data-set name="goals" id="154">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">goalname</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">goaltitle</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">goalname</property>
                </structure>
                <structure>
                    <property name="columnName">goaltitle</property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">goals</property>
                    <property name="dataType">javaObject</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">null</expression>
                    <property name="isInput">true</property>
                    <property name="isOutput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">goalname</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">goaltitle</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[goals = inputParameters.get("goals")
goaliter = goals.iterator()
]]></method>
            <method name="fetch"><![CDATA[if (goaliter.hasNext()) {
	g = goaliter.next()
	row['goalname'] = qualifiedName(g)
	row['goaltitle'] = g.getTitle()
	return true
} else {
	return false
}]]></method>
        </script-data-set>
        <script-data-set name="stakeholders" id="249">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">stakeholdername</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">stakeholdername</property>
                </structure>
            </list-property>
            <list-property name="parameters">
                <structure>
                    <property name="name">stakeholders</property>
                    <property name="dataType">javaObject</property>
                    <property name="position">1</property>
                    <expression name="defaultValue" type="javascript">null</expression>
                    <property name="isInput">true</property>
                    <property name="isOutput">true</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">stakeholdername</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[stakeholders = inputParameters.get("stakeholders")
stakeholderiter = stakeholders.iterator()
]]></method>
            <method name="fetch"><![CDATA[if (!stakeholderiter.hasNext()) {
	return false
}
s = stakeholderiter.next()
row['stakeholdername'] = qualifiedName(s)
return true
]]></method>
        </script-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <page-footer>
                <grid id="80">
                    <column id="81"/>
                    <column id="82"/>
                    <row id="83">
                        <cell id="84">
                            <text id="100">
                                <property name="contentType">html</property>
                                <text-property name="content"><![CDATA[<value-of>new Date()</value-of>]]></text-property>
                            </text>
                        </cell>
                        <cell id="85">
                            <auto-text id="98">
                                <property name="textAlign">right</property>
                                <property name="type">page-number</property>
                            </auto-text>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="102">
            <property name="fontSize">14pt</property>
            <property name="textAlign">center</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('ReportType') != 'requirement2goals'</expression>
                </structure>
            </list-property>
            <text-property name="text">System Requirements to Stakeholder Goals Report</text-property>
        </label>
        <label id="195">
            <property name="fontSize">14pt</property>
            <property name="textAlign">center</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('ReportType') != 'goal2stakeholders'</expression>
                </structure>
            </list-property>
            <text-property name="text">Stakeholder Goal to Stakeholders Report</text-property>
        </label>
        <grid id="254">
            <property name="width">7.930555555555555in</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Column Binding</property>
                    <text-property name="displayName">Project</text-property>
                    <expression name="expression" type="javascript">reportContext.getParameterValue('ProjectName')</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_1</property>
                    <text-property name="displayName">Folders</text-property>
                    <expression name="expression" type="javascript">reportContext.getParameterValue('Directories')</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_2</property>
                    <text-property name="displayName">File</text-property>
                    <expression name="expression" type="javascript">reportContext.getParameterValue('FileName')</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <column id="255">
                <property name="width">0.5555555555555556in</property>
            </column>
            <column id="256">
                <property name="width">7.375in</property>
            </column>
            <row id="257">
                <cell id="258">
                    <label id="266">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">Project:</text-property>
                    </label>
                </cell>
                <cell id="259">
                    <data id="269">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <property name="resultSetColumn">Column Binding</property>
                    </data>
                </cell>
            </row>
            <row id="260">
                <cell id="261">
                    <label id="267">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">Folder:</text-property>
                    </label>
                </cell>
                <cell id="262">
                    <data id="270">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <property name="resultSetColumn">Column Binding_1</property>
                    </data>
                </cell>
            </row>
            <row id="263">
                <cell id="264">
                    <label id="268">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">File:</text-property>
                    </label>
                </cell>
                <cell id="265">
                    <data id="271">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <property name="resultSetColumn">Column Binding_2</property>
                    </data>
                </cell>
            </row>
        </grid>
        <table name="requirement2goals" id="6">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="marginTop">6pt</property>
            <property name="dataSet">r2g</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('ReportType') != 'requirement2goals'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">reqname</property>
                    <text-property name="displayName">reqname</text-property>
                    <expression name="expression" type="javascript">dataSetRow["reqname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">reqtitle</property>
                    <text-property name="displayName">reqtitle</text-property>
                    <expression name="expression" type="javascript">dataSetRow["reqtitle"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">goals</property>
                    <text-property name="displayName">goals</text-property>
                    <expression name="expression" type="javascript">dataSetRow["goals"]</expression>
                    <property name="dataType">javaObject</property>
                </structure>
            </list-property>
            <column id="20"/>
            <column id="21"/>
            <header>
                <row id="7">
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">medium</property>
                    <cell id="8">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <label id="9">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Requirement</text-property>
                        </label>
                    </cell>
                    <cell id="10">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <label id="11">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Goals</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="12">
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">1px</property>
                    <property name="borderLeftStyle">none</property>
                    <property name="borderRightStyle">none</property>
                    <property name="borderTopStyle">none</property>
                    <cell id="13">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="paddingTop">0pt</property>
                        <property name="paddingLeft">0pt</property>
                        <property name="paddingBottom">0pt</property>
                        <property name="paddingRight">0pt</property>
                        <grid id="22">
                            <property name="height">0.59375in</property>
                            <column id="23"/>
                            <row id="24">
                                <cell id="25">
                                    <data id="28">
                                        <property name="fontStyle">italic</property>
                                        <property name="resultSetColumn">reqname</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="26">
                                <property name="height">0.2916666666666667in</property>
                                <cell id="27">
                                    <data id="29">
                                        <property name="resultSetColumn">reqtitle</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                    <cell id="15">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="paddingTop">0pt</property>
                        <property name="paddingLeft">0pt</property>
                        <property name="paddingBottom">0pt</property>
                        <property name="paddingRight">0pt</property>
                        <table id="187">
                            <property name="dataSet">goals</property>
                            <list-property name="paramBindings">
                                <structure>
                                    <property name="paramName">goals</property>
                                    <simple-property-list name="expression">
                                        <value type="javascript">row["goals"]</value>
                                    </simple-property-list>
                                </structure>
                            </list-property>
                            <list-property name="boundDataColumns">
                                <structure>
                                    <property name="name">goalname</property>
                                    <text-property name="displayName">goalname</text-property>
                                    <expression name="expression" type="javascript">dataSetRow["goalname"]</expression>
                                    <property name="dataType">string</property>
                                </structure>
                                <structure>
                                    <property name="name">goaltitle</property>
                                    <text-property name="displayName">goaltitle</text-property>
                                    <expression name="expression" type="javascript">dataSetRow["goaltitle"]</expression>
                                    <property name="dataType">string</property>
                                </structure>
                            </list-property>
                            <column id="194"/>
                            <detail>
                                <row id="190">
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">solid</property>
                                    <property name="borderTopWidth">thin</property>
                                    <cell id="191">
                                        <property name="paddingTop">0pt</property>
                                        <property name="paddingLeft">0pt</property>
                                        <property name="paddingBottom">3pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <grid id="30">
                                            <column id="31"/>
                                            <row id="32">
                                                <cell id="33">
                                                    <data id="36">
                                                        <property name="fontWeight">normal</property>
                                                        <property name="fontStyle">italic</property>
                                                        <property name="resultSetColumn">goalname</property>
                                                    </data>
                                                </cell>
                                            </row>
                                            <row id="34">
                                                <cell id="35">
                                                    <data id="37">
                                                        <property name="resultSetColumn">goaltitle</property>
                                                    </data>
                                                </cell>
                                            </row>
                                        </grid>
                                    </cell>
                                </row>
                            </detail>
                        </table>
                    </cell>
                </row>
            </detail>
        </table>
        <table name="goal2stakeholders" id="216">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="dataSet">g2s</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('ReportType') != 'goal2stakeholders'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">goalname</property>
                    <text-property name="displayName">goalname</text-property>
                    <expression name="expression" type="javascript">dataSetRow["goalname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">goaltitle</property>
                    <text-property name="displayName">goaltitle</text-property>
                    <expression name="expression" type="javascript">dataSetRow["goaltitle"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">stakeholders</property>
                    <text-property name="displayName">stakeholders</text-property>
                    <expression name="expression" type="javascript">dataSetRow["stakeholders"]</expression>
                    <property name="dataType">javaObject</property>
                </structure>
            </list-property>
            <column id="245"/>
            <column id="246"/>
            <header>
                <row id="217">
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">medium</property>
                    <cell id="218">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <label id="219">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Goal</text-property>
                        </label>
                    </cell>
                    <cell id="220">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <label id="221">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Stakeholder</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="222">
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">1px</property>
                    <cell id="223">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="paddingTop">0pt</property>
                        <property name="paddingLeft">0pt</property>
                        <property name="paddingBottom">0pt</property>
                        <property name="paddingRight">0pt</property>
                        <grid id="224">
                            <property name="height">0.59375in</property>
                            <column id="225"/>
                            <row id="226">
                                <cell id="227">
                                    <data id="228">
                                        <property name="fontStyle">italic</property>
                                        <property name="resultSetColumn">goalname</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="229">
                                <property name="height">0.2916666666666667in</property>
                                <cell id="230">
                                    <data id="231">
                                        <property name="resultSetColumn">goaltitle</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                    <cell id="232">
                        <property name="borderRightStyle">solid</property>
                        <property name="borderRightWidth">thin</property>
                        <property name="paddingTop">0pt</property>
                        <property name="paddingLeft">0pt</property>
                        <property name="paddingBottom">0pt</property>
                        <property name="paddingRight">0pt</property>
                        <table id="233">
                            <property name="dataSet">stakeholders</property>
                            <list-property name="paramBindings">
                                <structure>
                                    <property name="paramName">stakeholders</property>
                                    <simple-property-list name="expression">
                                        <value type="javascript">row["stakeholders"]</value>
                                    </simple-property-list>
                                </structure>
                            </list-property>
                            <list-property name="boundDataColumns">
                                <structure>
                                    <property name="name">stakeholdername</property>
                                    <text-property name="displayName">stakeholdername</text-property>
                                    <expression name="expression" type="javascript">dataSetRow["stakeholdername"]</expression>
                                    <property name="dataType">string</property>
                                </structure>
                            </list-property>
                            <column id="244"/>
                            <detail>
                                <row id="234">
                                    <property name="borderBottomStyle">solid</property>
                                    <property name="borderBottomWidth">thin</property>
                                    <property name="borderLeftStyle">none</property>
                                    <property name="borderRightStyle">none</property>
                                    <property name="borderTopStyle">none</property>
                                    <cell id="235">
                                        <property name="paddingTop">0pt</property>
                                        <property name="paddingLeft">0pt</property>
                                        <property name="paddingBottom">3pt</property>
                                        <property name="paddingRight">0pt</property>
                                        <grid id="236">
                                            <column id="237"/>
                                            <row id="238">
                                                <cell id="239">
                                                    <data id="240">
                                                        <property name="fontWeight">normal</property>
                                                        <property name="fontStyle">italic</property>
                                                        <property name="resultSetColumn">stakeholdername</property>
                                                    </data>
                                                </cell>
                                            </row>
                                        </grid>
                                    </cell>
                                </row>
                            </detail>
                        </table>
                    </cell>
                </row>
            </detail>
        </table>
        <table name="nogoals" id="134">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="marginTop">auto</property>
            <property name="pageBreakBefore">always</property>
            <property name="dataSet">nogoal</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('ReportType') != 'requirement2goals'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">reqname</property>
                    <text-property name="displayName">reqname</text-property>
                    <expression name="expression" type="javascript">dataSetRow["reqname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">reqtitle</property>
                    <text-property name="displayName">reqtitle</text-property>
                    <expression name="expression" type="javascript">dataSetRow["reqtitle"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">reqdescription</property>
                    <text-property name="displayName">reqdescription</text-property>
                    <expression name="expression" type="javascript">dataSetRow["reqdescription"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="143"/>
            <header>
                <row id="135">
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">medium</property>
                    <cell id="136">
                        <label id="144">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Requirements not Traceable to a Goal</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="137">
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">1px</property>
                    <cell id="138">
                        <grid id="145">
                            <property name="height">0.59375in</property>
                            <column id="146"/>
                            <row id="147">
                                <cell id="148">
                                    <data id="149">
                                        <property name="fontStyle">italic</property>
                                        <property name="resultSetColumn">reqname</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="150">
                                <property name="height">0.2916666666666667in</property>
                                <cell id="151">
                                    <data id="152">
                                        <property name="resultSetColumn">reqtitle</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="141">
                    <cell id="142"/>
                </row>
            </footer>
        </table>
        <table name="nostakeholders" id="199">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="marginTop">auto</property>
            <property name="pageBreakBefore">always</property>
            <property name="dataSet">nostakeholder</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('ReportType') != 'goal2stakeholders'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">goalname</property>
                    <text-property name="displayName">goalname</text-property>
                    <expression name="expression" type="javascript">dataSetRow["goalname"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">goaltitle</property>
                    <text-property name="displayName">goaltitle</text-property>
                    <expression name="expression" type="javascript">dataSetRow["goaltitle"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="215"/>
            <header>
                <row id="200">
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">medium</property>
                    <cell id="201">
                        <label id="202">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Stakeholder Goals not Traceable to a Stakeholder</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="203">
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">1px</property>
                    <cell id="204">
                        <grid id="205">
                            <property name="height">0.59375in</property>
                            <column id="206"/>
                            <row id="207">
                                <cell id="208">
                                    <data id="209">
                                        <property name="fontStyle">italic</property>
                                        <structure name="toc"/>
                                        <property name="resultSetColumn">goalname</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="210">
                                <property name="height">0.2916666666666667in</property>
                                <cell id="211">
                                    <data id="212">
                                        <property name="resultSetColumn">goaltitle</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="213">
                    <cell id="214"/>
                </row>
            </footer>
        </table>
    </body>
</report>
