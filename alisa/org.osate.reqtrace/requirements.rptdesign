<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.23" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 4.5.0.v201506092134 Build &lt;@BUILD@></property>
    <property name="units">in</property>
    <method name="initialize"><![CDATA[function qualifiedName(ne) {
	var name = ne.getName()
	var container = ne.eContainer()
	while (container != null) {
		if (!(typeof container.name === 'undefined')) {
			name = container.getName() + '.' + name
		}
		container = container.eContainer()
	}
	return name
}

reportContext.setPersistentGlobalVariable("qualifiedName", qualifiedName)]]></method>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <data-sources>
        <script-data-source name="requirements" id="4">
            <method name="open"><![CDATA[/**
 * Copyright (c) 2004-2021 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files ("Third Party Software"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software ("Third Party Licensors") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */
Alisa = new JavaImporter(
	org.eclipse.xtext,
	org.osate.aadl2,
	org.osate.aadl2.instance,
	org.osate.reqspec,
	org.osate.reqspec.reqSpec,
	org.osate.reqspec.util)


function addNonDropped(set, elements) {
	for (var e in Iterator(elements)) {
		if (!e.isDropped()) {
			set.add(e)
		}
	}
}

with (Alisa) {
	type = reportContext.getParameterValue('selectionType')
	selected = reportContext.getParameterValue('selectedObject')

	var registry = org.eclipse.xtext.resource.IResourceServiceProvider$Registry.INSTANCE
	var uri = (type != 'Classifier') ? org.eclipse.emf.common.util.URI.createPlatformResourceURI(selected)
			: selected.eResource().getURI()
	var provider = registry.getResourceServiceProvider(uri)
	var finder = provider.get(IReqspecGlobalReferenceFinder)

	if (type != 'Classifier') {
		// load the file
		resourceSet = provider.get(org.eclipse.xtext.resource.XtextResourceSet)
		resourceSet.addLoadOption(org.eclipse.xtext.resource.XtextResource.OPTION_RESOLVE_ALL, Boolean.TRUE)
		resource = resourceSet.createResource(uri)
		resource.load(resourceSet.getLoadOptions())
	}
	
	// sort requirements/goals by qualified name
	var qncomp = JavaAdapter(java.util.Comparator, {
		compare: function (ne1, ne2) {
			return qualifiedName(ne1).localeCompare(qualifiedName(ne2))
		}
	})
	
	var sysreqs = new java.util.HashSet()
	requirements = new java.util.TreeSet(qncomp)

	if (type == 'reqspec') {
		// get requirements from reqspec file
		var reqspec = resource.getContents().get(0)
		for (var part in Iterator(reqspec.getParts())) {
			if (part instanceof SystemRequirementSet) {
				sysreqs.add(part)
			}
		}
	} else if (type == 'reqdoc') {
		// get requirements from reqdoc file
		var reqspec = resource.getContents().get(0)
		for (var part in Iterator(reqspec.getParts())) {
			if (part instanceof ReqDocument) {
				addNonDropped(requirements, EcoreUtil2.getAllContentsOfType(part, Requirement))
			}
		}
	} else 	if (type == 'Classifier') {
		// get requirements for selected classifier
		var srss = finder.getSystemRequirementSets(selected)
		if (srss != null) {
			for (var iter = srss.iterator(); iter.hasNext();) {
				sysreqs.add(iter.next())
			}
		}
	}

	if (!sysreqs.isEmpty()) {
		for (var srs in Iterator(sysreqs)) {
			requirements.addAll(srs.getRequirements())
		}
	}

}
]]></method>
        </script-data-source>
    </data-sources>
    <data-sets>
        <script-data-set name="reqs" id="5">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">name</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">title</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">description</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">name</property>
                </structure>
                <structure>
                    <property name="columnName">title</property>
                </structure>
                <structure>
                    <property name="columnName">description</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">name</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">title</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">description</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="needsCache">false</property>
            <property name="dataSource">requirements</property>
            <method name="open"><![CDATA[iter = requirements.iterator()
]]></method>
            <method name="fetch"><![CDATA[if (!iter.hasNext()) {
	return false
}

r = iter.next()

row['name'] = qualifiedName(r)
row['title'] = r.getTitle()

if (r.description == null) {
	row['description'] = ""
} else {
	target = r.getTargetElement()
	if (target == null) {
		target = r.eContainer().getTarget()
	}
	row['description'] = org.osate.alisa.common.util.CommonUtilExtension.toText(r.getDescription(), target)
}

return true
]]></method>
        </script-data-set>
    </data-sets>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <page-footer>
                <grid id="80">
                    <column id="81"/>
                    <column id="82"/>
                    <row id="83">
                        <cell id="84">
                            <text id="100">
                                <property name="contentType">html</property>
                                <text-property name="content"><![CDATA[<value-of>new Date()</value-of>]]></text-property>
                            </text>
                        </cell>
                        <cell id="85">
                            <auto-text id="98">
                                <property name="textAlign">right</property>
                                <property name="type">page-number</property>
                            </auto-text>
                        </cell>
                    </row>
                </grid>
            </page-footer>
        </simple-master-page>
    </page-setup>
    <body>
        <label id="102">
            <property name="fontSize">14pt</property>
            <property name="textAlign">center</property>
            <text-property name="text">System Requirements Report</text-property>
        </label>
        <grid id="254">
            <property name="width">7.930555555555555in</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('selectionType') == 'Classifier'</expression>
                </structure>
            </list-property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">Column Binding</property>
                    <text-property name="displayName">Project</text-property>
                    <expression name="expression" type="javascript">reportContext.getParameterValue('ProjectName')</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_1</property>
                    <text-property name="displayName">Folders</text-property>
                    <expression name="expression" type="javascript">reportContext.getParameterValue('Directories')</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_2</property>
                    <text-property name="displayName">File</text-property>
                    <expression name="expression" type="javascript">reportContext.getParameterValue('FileName')</expression>
                    <property name="dataType">string</property>
                    <property name="allowExport">true</property>
                </structure>
            </list-property>
            <column id="255">
                <property name="width">0.5555555555555556in</property>
            </column>
            <column id="256">
                <property name="width">7.375in</property>
            </column>
            <row id="257">
                <cell id="258">
                    <label id="266">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">Project:</text-property>
                    </label>
                </cell>
                <cell id="259">
                    <data id="269">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <property name="resultSetColumn">Column Binding</property>
                    </data>
                </cell>
            </row>
            <row id="260">
                <cell id="261">
                    <label id="267">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">Folder:</text-property>
                    </label>
                </cell>
                <cell id="262">
                    <data id="270">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <property name="resultSetColumn">Column Binding_1</property>
                    </data>
                </cell>
            </row>
            <row id="263">
                <cell id="264">
                    <label id="268">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">File:</text-property>
                    </label>
                </cell>
                <cell id="265">
                    <data id="271">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <property name="resultSetColumn">Column Binding_2</property>
                    </data>
                </cell>
            </row>
        </grid>
        <grid id="272">
            <property name="width">7.927083333333333in</property>
            <list-property name="visibility">
                <structure>
                    <property name="format">all</property>
                    <expression name="valueExpr" type="javascript">reportContext.getParameterValue('selectionType') != 'Classifier'</expression>
                </structure>
            </list-property>
            <column id="273">
                <property name="width">0.8645833333333334in</property>
            </column>
            <column id="274">
                <property name="width">7.0625in</property>
            </column>
            <row id="275">
                <cell id="276">
                    <label id="277">
                        <property name="fontSize">9pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">Classifier:</text-property>
                    </label>
                </cell>
                <cell id="278">
                    <data id="279">
                        <property name="fontSize">9pt</property>
                        <property name="fontStyle">italic</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">Classifier</property>
                                <expression name="expression" type="javascript">if (reportContext.getParameterValue('selectionType') == 'Classifier') reportContext.getParameterValue('selectedObject').getQualifiedName()</expression>
                                <property name="dataType">string</property>
                                <property name="allowExport">true</property>
                            </structure>
                        </list-property>
                        <property name="resultSetColumn">Classifier</property>
                    </data>
                </cell>
            </row>
        </grid>
        <table id="134">
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">medium</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">medium</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">medium</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">medium</property>
            <property name="marginTop">auto</property>
            <property name="pageBreakBefore">always</property>
            <property name="dataSet">reqs</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">name</property>
                    <text-property name="displayName">name</text-property>
                    <expression name="expression" type="javascript">dataSetRow["name"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">title</property>
                    <text-property name="displayName">title</text-property>
                    <expression name="expression" type="javascript">dataSetRow["title"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">description</property>
                    <text-property name="displayName">description</text-property>
                    <expression name="expression" type="javascript">dataSetRow["description"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="143"/>
            <header>
                <row id="135">
                    <property name="borderBottomStyle">solid</property>
                    <property name="borderBottomWidth">medium</property>
                    <cell id="136">
                        <label id="144">
                            <property name="fontSize">12pt</property>
                            <property name="fontWeight">bold</property>
                            <text-property name="text">Requirements</text-property>
                        </label>
                    </cell>
                </row>
            </header>
            <detail>
                <row id="137">
                    <property name="borderTopStyle">solid</property>
                    <property name="borderTopWidth">1px</property>
                    <cell id="138">
                        <grid id="145">
                            <property name="height">0.59375in</property>
                            <column id="146"/>
                            <row id="147">
                                <cell id="148">
                                    <data id="149">
                                        <property name="fontStyle">italic</property>
                                        <property name="resultSetColumn">name</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="150">
                                <property name="height">0.2916666666666667in</property>
                                <cell id="151">
                                    <data id="152">
                                        <property name="resultSetColumn">title</property>
                                    </data>
                                </cell>
                            </row>
                            <row id="153">
                                <property name="height">0.2916666666666667in</property>
                                <cell id="154">
                                    <data id="155">
                                        <property name="resultSetColumn">description</property>
                                    </data>
                                </cell>
                            </row>
                        </grid>
                    </cell>
                </row>
            </detail>
            <footer>
                <row id="141">
                    <cell id="142"/>
                </row>
            </footer>
        </table>
    </body>
</report>
