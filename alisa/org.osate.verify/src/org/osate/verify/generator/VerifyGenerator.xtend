/**
 * Copyright (c) 2004-2020 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files ("Third Party Software"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software ("Third Party Licensors") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */

/*
 * generated by Xtext
 */
package org.osate.verify.generator

import java.util.HashSet
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.osate.verify.verify.VerificationActivity
import org.osate.verify.verify.VerificationMethodRegistry

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class VerifyGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
//		val content = (resource.contents.get(0) as Verification).contents
//		val vll = content.filter[el | el instanceof VerificationLibrary].map[vl| vl as VerificationLibrary]
//		vll.forEach[mylib| addedImports.clear
//			fsa.generateFile('''«mylib.name»/«mylib.name».java''', mylib.generate)
//		]
	}
	
	def dispatch String generate(VerificationMethodRegistry vmr){
		
	}
	val addedImports = new HashSet<String>
	
	
//	def dispatch String generate(VerificationLibrary vl){
//'''
//package «vl.name»;
//import org.osate.aadl2.instance.ComponentInstance;
//import org.junit.Test;
//««««FOR el : vl.content»
//««««el.generateImports»
//««««ENDFOR»
//
//class «vl.name» {
//	«FOR el : vl.content»
//	«el.generate»
//	«ENDFOR»
//}
//'''
//	}
	
	
	// should it be impl
	def dispatch String generate(VerificationActivity va){
		'''
		@Test
		public void «va.name» (ComponentInstance ci){
«««			org.junit.Assert.assertTrue(«va.method.method»(ci));
		}
		'''
		//mnam need more code
	}
	
	 
	def String generateImports(VerificationActivity va){
		val themethod = va.method.name//?.methodPath
		if (themethod !== null && addedImports.add(themethod)) {
			'''import «themethod.substring(0,themethod.lastIndexOf('.'))»;
			'''
		}
	}
	
}
