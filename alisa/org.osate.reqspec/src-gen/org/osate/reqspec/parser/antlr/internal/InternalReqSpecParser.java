package org.osate.reqspec.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.reqspec.services.ReqSpecGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/**
 * Copyright (c) 2004-2020 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files ("Third Party Software"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software ("Third Party Licensors") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */
@SuppressWarnings("all")
public class InternalReqSpecParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "Requirements", "Description", "Development", "Requirement", "Stakeholder", "Uncertainty", "Connection", "Decomposes", "Precedence", "Subprogram", "Volatility", "Component", "Conflicts", "Constants", "Mitigates", "Predicate", "Processor", "Rationale", "Abstract", "Category", "Document", "Informal", "Inherits", "Boolean", "Compute", "Dropped", "Element", "Evolves", "Feature", "Include", "Integer", "Process", "Refines", "Section", "Virtual", "Device", "Downto", "Global", "Impact", "Issues", "Memory", "String", "KW_System", "Thread", "Typeof", "Delta", "Endif", "Error", "False", "Goals", "Group", "Model", "State", "Units", "Value", "Data", "Else", "Flow", "Goal", "Mode", "Real", "Root", "Self", "Then", "This", "True", "Upto", "When", "With", "And", "Bus", "Div", "For", "Img", "Mod", "Not", "See", "Use", "Val", "ExclamationMarkEqualsSign", "AmpersandAmpersand", "FullStopFullStop", "ColonColon", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "GreaterThanSignLessThanSign", "GreaterThanSignEqualsSign", "As", "If", "In", "Or", "VerticalLineVerticalLine", "NumberSign", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "RULE_DIGIT", "RULE_EXPONENT", "RULE_INT_EXPONENT", "RULE_REAL_LIT", "RULE_EXTENDED_DIGIT", "RULE_BASED_INTEGER", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int Val=82;
    public static final int Or=94;
    public static final int Memory=44;
    public static final int KW_System=46;
    public static final int Decomposes=11;
    public static final int String=45;
    public static final int False=52;
    public static final int Document=24;
    public static final int Feature=32;
    public static final int LessThanSign=107;
    public static final int Goal=62;
    public static final int LeftParenthesis=98;
    public static final int Development=6;
    public static final int Then=67;
    public static final int Boolean=27;
    public static final int GreaterThanSign=109;
    public static final int Root=65;
    public static final int RULE_ID=118;
    public static final int RULE_DIGIT=112;
    public static final int GreaterThanSignEqualsSign=90;
    public static final int ColonColon=86;
    public static final int Requirement=7;
    public static final int EqualsSignEqualsSign=88;
    public static final int See=80;
    public static final int PlusSign=101;
    public static final int RULE_INT=119;
    public static final int RULE_ML_COMMENT=121;
    public static final int LeftSquareBracket=110;
    public static final int If=92;
    public static final int Mitigates=18;
    public static final int Group=54;
    public static final int Description=5;
    public static final int Processor=20;
    public static final int In=93;
    public static final int VerticalLineVerticalLine=95;
    public static final int RULE_REAL_LIT=115;
    public static final int Self=66;
    public static final int GreaterThanSignLessThanSign=89;
    public static final int Comma=102;
    public static final int As=91;
    public static final int HyphenMinus=103;
    public static final int LessThanSignEqualsSign=87;
    public static final int Solidus=105;
    public static final int Upto=70;
    public static final int Refines=36;
    public static final int Bus=74;
    public static final int FullStop=104;
    public static final int Abstract=22;
    public static final int Use=81;
    public static final int Connection=10;
    public static final int Constants=17;
    public static final int Conflicts=16;
    public static final int Section=37;
    public static final int Thread=47;
    public static final int Flow=61;
    public static final int Div=75;
    public static final int RULE_EXPONENT=113;
    public static final int When=71;
    public static final int Delta=49;
    public static final int Model=55;
    public static final int Else=60;
    public static final int RULE_EXTENDED_DIGIT=116;
    public static final int ExclamationMarkEqualsSign=83;
    public static final int Precedence=12;
    public static final int Typeof=48;
    public static final int Include=33;
    public static final int True=69;
    public static final int Process=35;
    public static final int Requirements=4;
    public static final int Global=41;
    public static final int Predicate=19;
    public static final int RULE_INT_EXPONENT=114;
    public static final int PercentSign=97;
    public static final int Stakeholder=8;
    public static final int FullStopFullStop=85;
    public static final int Real=64;
    public static final int This=68;
    public static final int RULE_BASED_INTEGER=117;
    public static final int RightSquareBracket=111;
    public static final int Dropped=29;
    public static final int Impact=42;
    public static final int Img=77;
    public static final int Device=39;
    public static final int Inherits=26;
    public static final int For=76;
    public static final int RightParenthesis=99;
    public static final int Units=57;
    public static final int Not=79;
    public static final int State=56;
    public static final int And=73;
    public static final int NumberSign=96;
    public static final int Value=58;
    public static final int Subprogram=13;
    public static final int Goals=53;
    public static final int Uncertainty=9;
    public static final int Category=23;
    public static final int Volatility=14;
    public static final int Issues=43;
    public static final int Element=30;
    public static final int RULE_STRING=120;
    public static final int Evolves=31;
    public static final int With=72;
    public static final int RULE_SL_COMMENT=122;
    public static final int EqualsSign=108;
    public static final int AmpersandAmpersand=84;
    public static final int Rationale=21;
    public static final int Colon=106;
    public static final int Component=15;
    public static final int EOF=-1;
    public static final int Asterisk=100;
    public static final int Downto=40;
    public static final int Mod=78;
    public static final int RULE_WS=123;
    public static final int Endif=50;
    public static final int Mode=63;
    public static final int Error=51;
    public static final int Virtual=38;
    public static final int Data=59;
    public static final int RULE_ANY_OTHER=124;
    public static final int Integer=34;
    public static final int Informal=25;
    public static final int Compute=28;

    // delegates
    // delegators


        public InternalReqSpecParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalReqSpecParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalReqSpecParser.tokenNames; }
    public String getGrammarFileName() { return "InternalReqSpecParser.g"; }




    	private ReqSpecGrammarAccess grammarAccess;
    	 	
    	public InternalReqSpecParser(TokenStream input, ReqSpecGrammarAccess grammarAccess) {
    		this(input);
    		this.grammarAccess = grammarAccess;
    		registerRules(grammarAccess.getGrammar());
    	}
    	
    	@Override
    	protected String getFirstRuleName() {
    		return "ReqSpec";	
    	} 
    	   	   	
    	@Override
    	protected ReqSpecGrammarAccess getGrammarAccess() {
    		return grammarAccess;
    	}



    // $ANTLR start "entryRuleReqSpec"
    // InternalReqSpecParser.g:82:1: entryRuleReqSpec returns [EObject current=null] : iv_ruleReqSpec= ruleReqSpec EOF ;
    public final EObject entryRuleReqSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReqSpec = null;


        try {
            // InternalReqSpecParser.g:83:2: (iv_ruleReqSpec= ruleReqSpec EOF )
            // InternalReqSpecParser.g:84:2: iv_ruleReqSpec= ruleReqSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReqSpecRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReqSpec=ruleReqSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReqSpec; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReqSpec"


    // $ANTLR start "ruleReqSpec"
    // InternalReqSpecParser.g:91:1: ruleReqSpec returns [EObject current=null] : ( ( (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants ) ) )+ ;
    public final EObject ruleReqSpec() throws RecognitionException {
        EObject current = null;

        EObject lv_parts_0_1 = null;

        EObject lv_parts_0_2 = null;

        EObject lv_parts_0_3 = null;

        EObject lv_parts_0_4 = null;

        EObject lv_parts_0_5 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:94:28: ( ( ( (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants ) ) )+ )
            // InternalReqSpecParser.g:95:1: ( ( (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants ) ) )+
            {
            // InternalReqSpecParser.g:95:1: ( ( (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants ) ) )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==Stakeholder||LA2_0==Constants||LA2_0==Document||LA2_0==Global||LA2_0==KW_System) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalReqSpecParser.g:96:1: ( (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants ) )
            	    {
            	    // InternalReqSpecParser.g:96:1: ( (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants ) )
            	    // InternalReqSpecParser.g:97:1: (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants )
            	    {
            	    // InternalReqSpecParser.g:97:1: (lv_parts_0_1= ruleSystemRequirementSet | lv_parts_0_2= ruleGlobalRequirementSet | lv_parts_0_3= ruleStakeholderGoals | lv_parts_0_4= ruleReqDocument | lv_parts_0_5= ruleGlobalConstants )
            	    int alt1=5;
            	    switch ( input.LA(1) ) {
            	    case KW_System:
            	        {
            	        alt1=1;
            	        }
            	        break;
            	    case Global:
            	        {
            	        alt1=2;
            	        }
            	        break;
            	    case Stakeholder:
            	        {
            	        alt1=3;
            	        }
            	        break;
            	    case Document:
            	        {
            	        alt1=4;
            	        }
            	        break;
            	    case Constants:
            	        {
            	        alt1=5;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 1, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt1) {
            	        case 1 :
            	            // InternalReqSpecParser.g:98:3: lv_parts_0_1= ruleSystemRequirementSet
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getReqSpecAccess().getPartsSystemRequirementSetParserRuleCall_0_0()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_3);
            	            lv_parts_0_1=ruleSystemRequirementSet();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getReqSpecRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"parts",
            	                      		lv_parts_0_1, 
            	                      		"org.osate.reqspec.ReqSpec.SystemRequirementSet");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalReqSpecParser.g:113:8: lv_parts_0_2= ruleGlobalRequirementSet
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getReqSpecAccess().getPartsGlobalRequirementSetParserRuleCall_0_1()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_3);
            	            lv_parts_0_2=ruleGlobalRequirementSet();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getReqSpecRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"parts",
            	                      		lv_parts_0_2, 
            	                      		"org.osate.reqspec.ReqSpec.GlobalRequirementSet");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalReqSpecParser.g:128:8: lv_parts_0_3= ruleStakeholderGoals
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getReqSpecAccess().getPartsStakeholderGoalsParserRuleCall_0_2()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_3);
            	            lv_parts_0_3=ruleStakeholderGoals();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getReqSpecRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"parts",
            	                      		lv_parts_0_3, 
            	                      		"org.osate.reqspec.ReqSpec.StakeholderGoals");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalReqSpecParser.g:143:8: lv_parts_0_4= ruleReqDocument
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getReqSpecAccess().getPartsReqDocumentParserRuleCall_0_3()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_3);
            	            lv_parts_0_4=ruleReqDocument();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getReqSpecRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"parts",
            	                      		lv_parts_0_4, 
            	                      		"org.osate.reqspec.ReqSpec.ReqDocument");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;
            	        case 5 :
            	            // InternalReqSpecParser.g:158:8: lv_parts_0_5= ruleGlobalConstants
            	            {
            	            if ( state.backtracking==0 ) {
            	               
            	              	        newCompositeNode(grammarAccess.getReqSpecAccess().getPartsGlobalConstantsParserRuleCall_0_4()); 
            	              	    
            	            }
            	            pushFollow(FollowSets000.FOLLOW_3);
            	            lv_parts_0_5=ruleGlobalConstants();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElementForParent(grammarAccess.getReqSpecRule());
            	              	        }
            	                     		add(
            	                     			current, 
            	                     			"parts",
            	                      		lv_parts_0_5, 
            	                      		"org.osate.reqspec.ReqSpec.GlobalConstants");
            	              	        afterParserOrEnumRuleCall();
            	              	    
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReqSpec"


    // $ANTLR start "entryRuleGlobalConstants"
    // InternalReqSpecParser.g:184:1: entryRuleGlobalConstants returns [EObject current=null] : iv_ruleGlobalConstants= ruleGlobalConstants EOF ;
    public final EObject entryRuleGlobalConstants() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalConstants = null;


        try {
            // InternalReqSpecParser.g:185:2: (iv_ruleGlobalConstants= ruleGlobalConstants EOF )
            // InternalReqSpecParser.g:186:2: iv_ruleGlobalConstants= ruleGlobalConstants EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalConstantsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGlobalConstants=ruleGlobalConstants();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalConstants; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalConstants"


    // $ANTLR start "ruleGlobalConstants"
    // InternalReqSpecParser.g:193:1: ruleGlobalConstants returns [EObject current=null] : (otherlv_0= Constants ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= LeftSquareBracket ( (lv_constants_3_0= ruleValDeclaration ) )* otherlv_4= RightSquareBracket ) ;
    public final EObject ruleGlobalConstants() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_constants_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:196:28: ( (otherlv_0= Constants ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= LeftSquareBracket ( (lv_constants_3_0= ruleValDeclaration ) )* otherlv_4= RightSquareBracket ) )
            // InternalReqSpecParser.g:197:1: (otherlv_0= Constants ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= LeftSquareBracket ( (lv_constants_3_0= ruleValDeclaration ) )* otherlv_4= RightSquareBracket )
            {
            // InternalReqSpecParser.g:197:1: (otherlv_0= Constants ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= LeftSquareBracket ( (lv_constants_3_0= ruleValDeclaration ) )* otherlv_4= RightSquareBracket )
            // InternalReqSpecParser.g:198:2: otherlv_0= Constants ( (lv_name_1_0= ruleQualifiedName ) ) otherlv_2= LeftSquareBracket ( (lv_constants_3_0= ruleValDeclaration ) )* otherlv_4= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Constants,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGlobalConstantsAccess().getConstantsKeyword_0());
                  
            }
            // InternalReqSpecParser.g:202:1: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalReqSpecParser.g:203:1: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalReqSpecParser.g:203:1: (lv_name_1_0= ruleQualifiedName )
            // InternalReqSpecParser.g:204:3: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobalConstantsAccess().getNameQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_5);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobalConstantsRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.osate.alisa.common.Common.QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getGlobalConstantsAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalReqSpecParser.g:225:1: ( (lv_constants_3_0= ruleValDeclaration ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==Val) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalReqSpecParser.g:226:1: (lv_constants_3_0= ruleValDeclaration )
            	    {
            	    // InternalReqSpecParser.g:226:1: (lv_constants_3_0= ruleValDeclaration )
            	    // InternalReqSpecParser.g:227:3: lv_constants_3_0= ruleValDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalConstantsAccess().getConstantsValDeclarationParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_constants_3_0=ruleValDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalConstantsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"constants",
            	              		lv_constants_3_0, 
            	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_4=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getGlobalConstantsAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalConstants"


    // $ANTLR start "entryRuleStakeholderGoals"
    // InternalReqSpecParser.g:260:1: entryRuleStakeholderGoals returns [EObject current=null] : iv_ruleStakeholderGoals= ruleStakeholderGoals EOF ;
    public final EObject entryRuleStakeholderGoals() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStakeholderGoals = null;


        try {
            // InternalReqSpecParser.g:261:2: (iv_ruleStakeholderGoals= ruleStakeholderGoals EOF )
            // InternalReqSpecParser.g:262:2: iv_ruleStakeholderGoals= ruleStakeholderGoals EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStakeholderGoalsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStakeholderGoals=ruleStakeholderGoals();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStakeholderGoals; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStakeholderGoals"


    // $ANTLR start "ruleStakeholderGoals"
    // InternalReqSpecParser.g:269:1: ruleStakeholderGoals returns [EObject current=null] : (otherlv_0= Stakeholder otherlv_1= Goals ( (lv_name_2_0= ruleQualifiedName ) ) (otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) ) )? (otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_21= RightSquareBracket ) ;
    public final EObject ruleStakeholderGoals() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_title_4_0=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_issues_20_0=null;
        Token otherlv_21=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        AntlrDatatypeRuleToken lv_componentCategory_7_0 = null;

        EObject lv_description_13_0 = null;

        EObject lv_constants_14_0 = null;

        EObject lv_goals_15_0 = null;

        EObject lv_docReference_18_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:272:28: ( (otherlv_0= Stakeholder otherlv_1= Goals ( (lv_name_2_0= ruleQualifiedName ) ) (otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) ) )? (otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_21= RightSquareBracket ) )
            // InternalReqSpecParser.g:273:1: (otherlv_0= Stakeholder otherlv_1= Goals ( (lv_name_2_0= ruleQualifiedName ) ) (otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) ) )? (otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_21= RightSquareBracket )
            {
            // InternalReqSpecParser.g:273:1: (otherlv_0= Stakeholder otherlv_1= Goals ( (lv_name_2_0= ruleQualifiedName ) ) (otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) ) )? (otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_21= RightSquareBracket )
            // InternalReqSpecParser.g:274:2: otherlv_0= Stakeholder otherlv_1= Goals ( (lv_name_2_0= ruleQualifiedName ) ) (otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) ) )? (otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_21= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Stakeholder,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStakeholderGoalsAccess().getStakeholderKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,Goals,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStakeholderGoalsAccess().getGoalsKeyword_1());
                  
            }
            // InternalReqSpecParser.g:283:1: ( (lv_name_2_0= ruleQualifiedName ) )
            // InternalReqSpecParser.g:284:1: (lv_name_2_0= ruleQualifiedName )
            {
            // InternalReqSpecParser.g:284:1: (lv_name_2_0= ruleQualifiedName )
            // InternalReqSpecParser.g:285:3: lv_name_2_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getNameQualifiedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_8);
            lv_name_2_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStakeholderGoalsRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.osate.alisa.common.Common.QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:301:2: (otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==Colon) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalReqSpecParser.g:302:2: otherlv_3= Colon ( (lv_title_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getStakeholderGoalsAccess().getColonKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:306:1: ( (lv_title_4_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:307:1: (lv_title_4_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:307:1: (lv_title_4_0= RULE_STRING )
                    // InternalReqSpecParser.g:308:3: lv_title_4_0= RULE_STRING
                    {
                    lv_title_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_4_0, grammarAccess.getStakeholderGoalsAccess().getTitleSTRINGTerminalRuleCall_3_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStakeholderGoalsRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_4_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:324:4: (otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ ) )
            // InternalReqSpecParser.g:325:2: otherlv_5= For ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ )
            {
            otherlv_5=(Token)match(input,For,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStakeholderGoalsAccess().getForKeyword_4_0());
                  
            }
            // InternalReqSpecParser.g:329:1: ( ( ( ruleAadlClassifierReference ) ) | ( (lv_componentCategory_7_0= ruleComponentCategory ) )+ )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ID) ) {
                alt6=1;
            }
            else if ( (LA6_0==Subprogram||LA6_0==Processor||LA6_0==Abstract||LA6_0==Process||(LA6_0>=Virtual && LA6_0<=Device)||LA6_0==Memory||(LA6_0>=KW_System && LA6_0<=Thread)||LA6_0==Data||LA6_0==Bus) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalReqSpecParser.g:329:2: ( ( ruleAadlClassifierReference ) )
                    {
                    // InternalReqSpecParser.g:329:2: ( ( ruleAadlClassifierReference ) )
                    // InternalReqSpecParser.g:330:1: ( ruleAadlClassifierReference )
                    {
                    // InternalReqSpecParser.g:330:1: ( ruleAadlClassifierReference )
                    // InternalReqSpecParser.g:331:3: ruleAadlClassifierReference
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getStakeholderGoalsRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getTargetComponentClassifierCrossReference_4_1_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    ruleAadlClassifierReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:346:6: ( (lv_componentCategory_7_0= ruleComponentCategory ) )+
                    {
                    // InternalReqSpecParser.g:346:6: ( (lv_componentCategory_7_0= ruleComponentCategory ) )+
                    int cnt5=0;
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==Subprogram||LA5_0==Processor||LA5_0==Abstract||LA5_0==Process||(LA5_0>=Virtual && LA5_0<=Device)||LA5_0==Memory||(LA5_0>=KW_System && LA5_0<=Thread)||LA5_0==Data||LA5_0==Bus) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:347:1: (lv_componentCategory_7_0= ruleComponentCategory )
                    	    {
                    	    // InternalReqSpecParser.g:347:1: (lv_componentCategory_7_0= ruleComponentCategory )
                    	    // InternalReqSpecParser.g:348:3: lv_componentCategory_7_0= ruleComponentCategory
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getComponentCategoryComponentCategoryParserRuleCall_4_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_13);
                    	    lv_componentCategory_7_0=ruleComponentCategory();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getStakeholderGoalsRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"componentCategory",
                    	              		lv_componentCategory_7_0, 
                    	              		"org.osate.alisa.common.Common.ComponentCategory");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt5 >= 1 ) break loop5;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(5, input);
                                throw eee;
                        }
                        cnt5++;
                    } while (true);


                    }
                    break;

            }


            }

            // InternalReqSpecParser.g:364:5: (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Use) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalReqSpecParser.g:365:2: otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+
                    {
                    otherlv_8=(Token)match(input,Use,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getStakeholderGoalsAccess().getUseKeyword_5_0());
                          
                    }
                    otherlv_9=(Token)match(input,Constants,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getStakeholderGoalsAccess().getConstantsKeyword_5_1());
                          
                    }
                    // InternalReqSpecParser.g:374:1: ( ( ruleQualifiedName ) )+
                    int cnt7=0;
                    loop7:
                    do {
                        int alt7=2;
                        int LA7_0 = input.LA(1);

                        if ( (LA7_0==RULE_ID) ) {
                            alt7=1;
                        }


                        switch (alt7) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:375:1: ( ruleQualifiedName )
                    	    {
                    	    // InternalReqSpecParser.g:375:1: ( ruleQualifiedName )
                    	    // InternalReqSpecParser.g:376:3: ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getStakeholderGoalsRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getImportConstantsGlobalConstantsCrossReference_5_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_15);
                    	    ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt7 >= 1 ) break loop7;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(7, input);
                                throw eee;
                        }
                        cnt7++;
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getStakeholderGoalsAccess().getLeftSquareBracketKeyword_6());
                  
            }
            // InternalReqSpecParser.g:395:1: ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:397:1: ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:397:1: ( ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            // InternalReqSpecParser.g:398:2: ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());
            // InternalReqSpecParser.g:401:2: ( ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )* )
            // InternalReqSpecParser.g:402:3: ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )*
            {
            // InternalReqSpecParser.g:402:3: ( ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) ) )*
            loop13:
            do {
                int alt13=6;
                int LA13_0 = input.LA(1);

                if ( LA13_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 0) ) {
                    alt13=1;
                }
                else if ( LA13_0 == Val && getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 1) ) {
                    alt13=2;
                }
                else if ( LA13_0 == Goal && getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 2) ) {
                    alt13=3;
                }
                else if ( LA13_0 == See && getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 3) ) {
                    alt13=4;
                }
                else if ( LA13_0 == Issues && getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 4) ) {
                    alt13=5;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalReqSpecParser.g:404:4: ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:404:4: ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:405:5: {...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 0)");
            	    }
            	    // InternalReqSpecParser.g:405:113: ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:406:6: ({...}? => ( (lv_description_13_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 0);
            	    // InternalReqSpecParser.g:409:6: ({...}? => ( (lv_description_13_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:409:7: {...}? => ( (lv_description_13_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "true");
            	    }
            	    // InternalReqSpecParser.g:409:16: ( (lv_description_13_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:410:1: (lv_description_13_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:410:1: (lv_description_13_0= ruleDescription )
            	    // InternalReqSpecParser.g:411:3: lv_description_13_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getDescriptionDescriptionParserRuleCall_7_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_16);
            	    lv_description_13_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStakeholderGoalsRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_13_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:434:4: ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:434:4: ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:435:5: {...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 1)");
            	    }
            	    // InternalReqSpecParser.g:435:113: ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:436:6: ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 1);
            	    // InternalReqSpecParser.g:439:6: ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+
            	    int cnt9=0;
            	    loop9:
            	    do {
            	        int alt9=2;
            	        int LA9_0 = input.LA(1);

            	        if ( (LA9_0==Val) ) {
            	            int LA9_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt9=1;
            	            }


            	        }


            	        switch (alt9) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:439:7: {...}? => ( (lv_constants_14_0= ruleValDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:439:16: ( (lv_constants_14_0= ruleValDeclaration ) )
            	    	    // InternalReqSpecParser.g:440:1: (lv_constants_14_0= ruleValDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:440:1: (lv_constants_14_0= ruleValDeclaration )
            	    	    // InternalReqSpecParser.g:441:3: lv_constants_14_0= ruleValDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getConstantsValDeclarationParserRuleCall_7_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_16);
            	    	    lv_constants_14_0=ruleValDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getStakeholderGoalsRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"constants",
            	    	              		lv_constants_14_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt9 >= 1 ) break loop9;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(9, input);
            	                throw eee;
            	        }
            	        cnt9++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:464:4: ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:464:4: ({...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ ) )
            	    // InternalReqSpecParser.g:465:5: {...}? => ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 2)");
            	    }
            	    // InternalReqSpecParser.g:465:113: ( ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+ )
            	    // InternalReqSpecParser.g:466:6: ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 2);
            	    // InternalReqSpecParser.g:469:6: ({...}? => ( (lv_goals_15_0= ruleGoal ) ) )+
            	    int cnt10=0;
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==Goal) ) {
            	            int LA10_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt10=1;
            	            }


            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:469:7: {...}? => ( (lv_goals_15_0= ruleGoal ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:469:16: ( (lv_goals_15_0= ruleGoal ) )
            	    	    // InternalReqSpecParser.g:470:1: (lv_goals_15_0= ruleGoal )
            	    	    {
            	    	    // InternalReqSpecParser.g:470:1: (lv_goals_15_0= ruleGoal )
            	    	    // InternalReqSpecParser.g:471:3: lv_goals_15_0= ruleGoal
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getGoalsGoalParserRuleCall_7_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_16);
            	    	    lv_goals_15_0=ruleGoal();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getStakeholderGoalsRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"goals",
            	    	              		lv_goals_15_0, 
            	    	              		"org.osate.reqspec.ReqSpec.Goal");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt10 >= 1 ) break loop10;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(10, input);
            	                throw eee;
            	        }
            	        cnt10++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:494:4: ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:494:4: ({...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:495:5: {...}? => ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 3)");
            	    }
            	    // InternalReqSpecParser.g:495:113: ( ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) ) )
            	    // InternalReqSpecParser.g:496:6: ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 3);
            	    // InternalReqSpecParser.g:499:6: ({...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ ) )
            	    // InternalReqSpecParser.g:499:7: {...}? => (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "true");
            	    }
            	    // InternalReqSpecParser.g:499:16: (otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:500:2: otherlv_16= See otherlv_17= Document ( (lv_docReference_18_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_16=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_16, grammarAccess.getStakeholderGoalsAccess().getSeeKeyword_7_3_0());
            	          
            	    }
            	    otherlv_17=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_17, grammarAccess.getStakeholderGoalsAccess().getDocumentKeyword_7_3_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:509:1: ( (lv_docReference_18_0= ruleExternalDocument ) )+
            	    int cnt11=0;
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==RULE_ID) ) {
            	            alt11=1;
            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:510:1: (lv_docReference_18_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:510:1: (lv_docReference_18_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:511:3: lv_docReference_18_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getStakeholderGoalsAccess().getDocReferenceExternalDocumentParserRuleCall_7_3_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_18);
            	    	    lv_docReference_18_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getStakeholderGoalsRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_18_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt11 >= 1 ) break loop11;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(11, input);
            	                throw eee;
            	        }
            	        cnt11++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:534:4: ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:534:4: ({...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:535:5: {...}? => ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 4)");
            	    }
            	    // InternalReqSpecParser.g:535:113: ( ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) ) )
            	    // InternalReqSpecParser.g:536:6: ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7(), 4);
            	    // InternalReqSpecParser.g:539:6: ({...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ ) )
            	    // InternalReqSpecParser.g:539:7: {...}? => (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleStakeholderGoals", "true");
            	    }
            	    // InternalReqSpecParser.g:539:16: (otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:540:2: otherlv_19= Issues ( (lv_issues_20_0= RULE_STRING ) )+
            	    {
            	    otherlv_19=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_19, grammarAccess.getStakeholderGoalsAccess().getIssuesKeyword_7_4_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:544:1: ( (lv_issues_20_0= RULE_STRING ) )+
            	    int cnt12=0;
            	    loop12:
            	    do {
            	        int alt12=2;
            	        int LA12_0 = input.LA(1);

            	        if ( (LA12_0==RULE_STRING) ) {
            	            alt12=1;
            	        }


            	        switch (alt12) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:545:1: (lv_issues_20_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:545:1: (lv_issues_20_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:546:3: lv_issues_20_0= RULE_STRING
            	    	    {
            	    	    lv_issues_20_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_20_0, grammarAccess.getStakeholderGoalsAccess().getIssuesSTRINGTerminalRuleCall_7_4_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getStakeholderGoalsRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_20_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt12 >= 1 ) break loop12;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(12, input);
            	                throw eee;
            	        }
            	        cnt12++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getStakeholderGoalsAccess().getUnorderedGroup_7());

            }

            otherlv_21=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_21, grammarAccess.getStakeholderGoalsAccess().getRightSquareBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStakeholderGoals"


    // $ANTLR start "entryRuleReqDocument"
    // InternalReqSpecParser.g:589:1: entryRuleReqDocument returns [EObject current=null] : iv_ruleReqDocument= ruleReqDocument EOF ;
    public final EObject entryRuleReqDocument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReqDocument = null;


        try {
            // InternalReqSpecParser.g:590:2: (iv_ruleReqDocument= ruleReqDocument EOF )
            // InternalReqSpecParser.g:591:2: iv_ruleReqDocument= ruleReqDocument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReqDocumentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReqDocument=ruleReqDocument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReqDocument; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReqDocument"


    // $ANTLR start "ruleReqDocument"
    // InternalReqSpecParser.g:598:1: ruleReqDocument returns [EObject current=null] : (otherlv_0= Document ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? otherlv_4= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_13= RightSquareBracket ) ;
    public final EObject ruleReqDocument() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token otherlv_4=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_issues_12_0=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_description_6_0 = null;

        EObject lv_content_7_1 = null;

        EObject lv_content_7_2 = null;

        EObject lv_content_7_3 = null;

        EObject lv_docReference_10_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:601:28: ( (otherlv_0= Document ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? otherlv_4= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_13= RightSquareBracket ) )
            // InternalReqSpecParser.g:602:1: (otherlv_0= Document ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? otherlv_4= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_13= RightSquareBracket )
            {
            // InternalReqSpecParser.g:602:1: (otherlv_0= Document ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? otherlv_4= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_13= RightSquareBracket )
            // InternalReqSpecParser.g:603:2: otherlv_0= Document ( (lv_name_1_0= ruleQualifiedName ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? otherlv_4= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_13= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getReqDocumentAccess().getDocumentKeyword_0());
                  
            }
            // InternalReqSpecParser.g:607:1: ( (lv_name_1_0= ruleQualifiedName ) )
            // InternalReqSpecParser.g:608:1: (lv_name_1_0= ruleQualifiedName )
            {
            // InternalReqSpecParser.g:608:1: (lv_name_1_0= ruleQualifiedName )
            // InternalReqSpecParser.g:609:3: lv_name_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReqDocumentAccess().getNameQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_20);
            lv_name_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReqDocumentRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.osate.alisa.common.Common.QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:625:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==Colon) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalReqSpecParser.g:626:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getReqDocumentAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:630:1: ( (lv_title_3_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:631:1: (lv_title_3_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:631:1: (lv_title_3_0= RULE_STRING )
                    // InternalReqSpecParser.g:632:3: lv_title_3_0= RULE_STRING
                    {
                    lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_3_0, grammarAccess.getReqDocumentAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getReqDocumentRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_3_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getReqDocumentAccess().getLeftSquareBracketKeyword_3());
                  
            }
            // InternalReqSpecParser.g:653:1: ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:655:1: ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:655:1: ( ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            // InternalReqSpecParser.g:656:2: ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4());
            // InternalReqSpecParser.g:659:2: ( ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )* )
            // InternalReqSpecParser.g:660:3: ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )*
            {
            // InternalReqSpecParser.g:660:3: ( ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) ) )*
            loop19:
            do {
                int alt19=5;
                int LA19_0 = input.LA(1);

                if ( LA19_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 0) ) {
                    alt19=1;
                }
                else if ( ( LA19_0 == Requirement || LA19_0 == Section || LA19_0 == Goal ) && getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 1) ) {
                    alt19=2;
                }
                else if ( LA19_0 == See && getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 2) ) {
                    alt19=3;
                }
                else if ( LA19_0 == Issues && getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 3) ) {
                    alt19=4;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalReqSpecParser.g:662:4: ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:662:4: ({...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:663:5: {...}? => ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalReqSpecParser.g:663:108: ( ({...}? => ( (lv_description_6_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:664:6: ({...}? => ( (lv_description_6_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 0);
            	    // InternalReqSpecParser.g:667:6: ({...}? => ( (lv_description_6_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:667:7: {...}? => ( (lv_description_6_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "true");
            	    }
            	    // InternalReqSpecParser.g:667:16: ( (lv_description_6_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:668:1: (lv_description_6_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:668:1: (lv_description_6_0= ruleDescription )
            	    // InternalReqSpecParser.g:669:3: lv_description_6_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReqDocumentAccess().getDescriptionDescriptionParserRuleCall_4_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_21);
            	    lv_description_6_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReqDocumentRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_6_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:692:4: ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:692:4: ({...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ ) )
            	    // InternalReqSpecParser.g:693:5: {...}? => ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalReqSpecParser.g:693:108: ( ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+ )
            	    // InternalReqSpecParser.g:694:6: ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 1);
            	    // InternalReqSpecParser.g:697:6: ({...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) ) )+
            	    int cnt16=0;
            	    loop16:
            	    do {
            	        int alt16=2;
            	        switch ( input.LA(1) ) {
            	        case Goal:
            	            {
            	            int LA16_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt16=1;
            	            }


            	            }
            	            break;
            	        case Requirement:
            	            {
            	            int LA16_3 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt16=1;
            	            }


            	            }
            	            break;
            	        case Section:
            	            {
            	            int LA16_4 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt16=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt16) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:697:7: {...}? => ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleReqDocument", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:697:16: ( ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) ) )
            	    	    // InternalReqSpecParser.g:698:1: ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) )
            	    	    {
            	    	    // InternalReqSpecParser.g:698:1: ( (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection ) )
            	    	    // InternalReqSpecParser.g:699:1: (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection )
            	    	    {
            	    	    // InternalReqSpecParser.g:699:1: (lv_content_7_1= ruleDocGoal | lv_content_7_2= ruleDocRequirement | lv_content_7_3= ruleDocumentSection )
            	    	    int alt15=3;
            	    	    switch ( input.LA(1) ) {
            	    	    case Goal:
            	    	        {
            	    	        alt15=1;
            	    	        }
            	    	        break;
            	    	    case Requirement:
            	    	        {
            	    	        alt15=2;
            	    	        }
            	    	        break;
            	    	    case Section:
            	    	        {
            	    	        alt15=3;
            	    	        }
            	    	        break;
            	    	    default:
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        NoViableAltException nvae =
            	    	            new NoViableAltException("", 15, 0, input);

            	    	        throw nvae;
            	    	    }

            	    	    switch (alt15) {
            	    	        case 1 :
            	    	            // InternalReqSpecParser.g:700:3: lv_content_7_1= ruleDocGoal
            	    	            {
            	    	            if ( state.backtracking==0 ) {
            	    	               
            	    	              	        newCompositeNode(grammarAccess.getReqDocumentAccess().getContentDocGoalParserRuleCall_4_1_0_0()); 
            	    	              	    
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_21);
            	    	            lv_content_7_1=ruleDocGoal();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              	        if (current==null) {
            	    	              	            current = createModelElementForParent(grammarAccess.getReqDocumentRule());
            	    	              	        }
            	    	                     		add(
            	    	                     			current, 
            	    	                     			"content",
            	    	                      		lv_content_7_1, 
            	    	                      		"org.osate.reqspec.ReqSpec.DocGoal");
            	    	              	        afterParserOrEnumRuleCall();
            	    	              	    
            	    	            }

            	    	            }
            	    	            break;
            	    	        case 2 :
            	    	            // InternalReqSpecParser.g:715:8: lv_content_7_2= ruleDocRequirement
            	    	            {
            	    	            if ( state.backtracking==0 ) {
            	    	               
            	    	              	        newCompositeNode(grammarAccess.getReqDocumentAccess().getContentDocRequirementParserRuleCall_4_1_0_1()); 
            	    	              	    
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_21);
            	    	            lv_content_7_2=ruleDocRequirement();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              	        if (current==null) {
            	    	              	            current = createModelElementForParent(grammarAccess.getReqDocumentRule());
            	    	              	        }
            	    	                     		add(
            	    	                     			current, 
            	    	                     			"content",
            	    	                      		lv_content_7_2, 
            	    	                      		"org.osate.reqspec.ReqSpec.DocRequirement");
            	    	              	        afterParserOrEnumRuleCall();
            	    	              	    
            	    	            }

            	    	            }
            	    	            break;
            	    	        case 3 :
            	    	            // InternalReqSpecParser.g:730:8: lv_content_7_3= ruleDocumentSection
            	    	            {
            	    	            if ( state.backtracking==0 ) {
            	    	               
            	    	              	        newCompositeNode(grammarAccess.getReqDocumentAccess().getContentDocumentSectionParserRuleCall_4_1_0_2()); 
            	    	              	    
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_21);
            	    	            lv_content_7_3=ruleDocumentSection();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              	        if (current==null) {
            	    	              	            current = createModelElementForParent(grammarAccess.getReqDocumentRule());
            	    	              	        }
            	    	                     		add(
            	    	                     			current, 
            	    	                     			"content",
            	    	                      		lv_content_7_3, 
            	    	                      		"org.osate.reqspec.ReqSpec.DocumentSection");
            	    	              	        afterParserOrEnumRuleCall();
            	    	              	    
            	    	            }

            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt16 >= 1 ) break loop16;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(16, input);
            	                throw eee;
            	        }
            	        cnt16++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:755:4: ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:755:4: ({...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:756:5: {...}? => ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalReqSpecParser.g:756:108: ( ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) ) )
            	    // InternalReqSpecParser.g:757:6: ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 2);
            	    // InternalReqSpecParser.g:760:6: ({...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ ) )
            	    // InternalReqSpecParser.g:760:7: {...}? => (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "true");
            	    }
            	    // InternalReqSpecParser.g:760:16: (otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:761:2: otherlv_8= See otherlv_9= Document ( (lv_docReference_10_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_8=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_8, grammarAccess.getReqDocumentAccess().getSeeKeyword_4_2_0());
            	          
            	    }
            	    otherlv_9=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getReqDocumentAccess().getDocumentKeyword_4_2_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:770:1: ( (lv_docReference_10_0= ruleExternalDocument ) )+
            	    int cnt17=0;
            	    loop17:
            	    do {
            	        int alt17=2;
            	        int LA17_0 = input.LA(1);

            	        if ( (LA17_0==RULE_ID) ) {
            	            alt17=1;
            	        }


            	        switch (alt17) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:771:1: (lv_docReference_10_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:771:1: (lv_docReference_10_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:772:3: lv_docReference_10_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getReqDocumentAccess().getDocReferenceExternalDocumentParserRuleCall_4_2_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_22);
            	    	    lv_docReference_10_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getReqDocumentRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_10_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt17 >= 1 ) break loop17;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(17, input);
            	                throw eee;
            	        }
            	        cnt17++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:795:4: ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:795:4: ({...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:796:5: {...}? => ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "getUnorderedGroupHelper().canSelect(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalReqSpecParser.g:796:108: ( ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) ) )
            	    // InternalReqSpecParser.g:797:6: ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4(), 3);
            	    // InternalReqSpecParser.g:800:6: ({...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ ) )
            	    // InternalReqSpecParser.g:800:7: {...}? => (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleReqDocument", "true");
            	    }
            	    // InternalReqSpecParser.g:800:16: (otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:801:2: otherlv_11= Issues ( (lv_issues_12_0= RULE_STRING ) )+
            	    {
            	    otherlv_11=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_11, grammarAccess.getReqDocumentAccess().getIssuesKeyword_4_3_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:805:1: ( (lv_issues_12_0= RULE_STRING ) )+
            	    int cnt18=0;
            	    loop18:
            	    do {
            	        int alt18=2;
            	        int LA18_0 = input.LA(1);

            	        if ( (LA18_0==RULE_STRING) ) {
            	            alt18=1;
            	        }


            	        switch (alt18) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:806:1: (lv_issues_12_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:806:1: (lv_issues_12_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:807:3: lv_issues_12_0= RULE_STRING
            	    	    {
            	    	    lv_issues_12_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_12_0, grammarAccess.getReqDocumentAccess().getIssuesSTRINGTerminalRuleCall_4_3_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getReqDocumentRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_12_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt18 >= 1 ) break loop18;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(18, input);
            	                throw eee;
            	        }
            	        cnt18++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getReqDocumentAccess().getUnorderedGroup_4());

            }

            otherlv_13=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getReqDocumentAccess().getRightSquareBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReqDocument"


    // $ANTLR start "entryRuleDocumentSection"
    // InternalReqSpecParser.g:850:1: entryRuleDocumentSection returns [EObject current=null] : iv_ruleDocumentSection= ruleDocumentSection EOF ;
    public final EObject entryRuleDocumentSection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentSection = null;


        try {
            // InternalReqSpecParser.g:851:2: (iv_ruleDocumentSection= ruleDocumentSection EOF )
            // InternalReqSpecParser.g:852:2: iv_ruleDocumentSection= ruleDocumentSection EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentSectionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDocumentSection=ruleDocumentSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentSection; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentSection"


    // $ANTLR start "ruleDocumentSection"
    // InternalReqSpecParser.g:859:1: ruleDocumentSection returns [EObject current=null] : (otherlv_0= Section ( ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? ) | ( (lv_title_4_0= RULE_STRING ) ) ) otherlv_5= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) ) ) otherlv_9= RightSquareBracket ) ;
    public final EObject ruleDocumentSection() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_label_1_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token lv_title_4_0=null;
        Token otherlv_5=null;
        Token otherlv_9=null;
        EObject lv_description_7_0 = null;

        EObject lv_content_8_1 = null;

        EObject lv_content_8_2 = null;

        EObject lv_content_8_3 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:862:28: ( (otherlv_0= Section ( ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? ) | ( (lv_title_4_0= RULE_STRING ) ) ) otherlv_5= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) ) ) otherlv_9= RightSquareBracket ) )
            // InternalReqSpecParser.g:863:1: (otherlv_0= Section ( ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? ) | ( (lv_title_4_0= RULE_STRING ) ) ) otherlv_5= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) ) ) otherlv_9= RightSquareBracket )
            {
            // InternalReqSpecParser.g:863:1: (otherlv_0= Section ( ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? ) | ( (lv_title_4_0= RULE_STRING ) ) ) otherlv_5= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) ) ) otherlv_9= RightSquareBracket )
            // InternalReqSpecParser.g:864:2: otherlv_0= Section ( ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? ) | ( (lv_title_4_0= RULE_STRING ) ) ) otherlv_5= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) ) ) otherlv_9= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Section,FollowSets000.FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDocumentSectionAccess().getSectionKeyword_0());
                  
            }
            // InternalReqSpecParser.g:868:1: ( ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? ) | ( (lv_title_4_0= RULE_STRING ) ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_ID) ) {
                alt21=1;
            }
            else if ( (LA21_0==RULE_STRING) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalReqSpecParser.g:868:2: ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? )
                    {
                    // InternalReqSpecParser.g:868:2: ( ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? )
                    // InternalReqSpecParser.g:868:3: ( (lv_label_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
                    {
                    // InternalReqSpecParser.g:868:3: ( (lv_label_1_0= RULE_ID ) )
                    // InternalReqSpecParser.g:869:1: (lv_label_1_0= RULE_ID )
                    {
                    // InternalReqSpecParser.g:869:1: (lv_label_1_0= RULE_ID )
                    // InternalReqSpecParser.g:870:3: lv_label_1_0= RULE_ID
                    {
                    lv_label_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_label_1_0, grammarAccess.getDocumentSectionAccess().getLabelIDTerminalRuleCall_1_0_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDocumentSectionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"label",
                              		lv_label_1_0, 
                              		"org.eclipse.xtext.common.Terminals.ID");
                      	    
                    }

                    }


                    }

                    // InternalReqSpecParser.g:886:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==Colon) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalReqSpecParser.g:887:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                            {
                            otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getDocumentSectionAccess().getColonKeyword_1_0_1_0());
                                  
                            }
                            // InternalReqSpecParser.g:891:1: ( (lv_title_3_0= RULE_STRING ) )
                            // InternalReqSpecParser.g:892:1: (lv_title_3_0= RULE_STRING )
                            {
                            // InternalReqSpecParser.g:892:1: (lv_title_3_0= RULE_STRING )
                            // InternalReqSpecParser.g:893:3: lv_title_3_0= RULE_STRING
                            {
                            lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_title_3_0, grammarAccess.getDocumentSectionAccess().getTitleSTRINGTerminalRuleCall_1_0_1_1_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDocumentSectionRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"title",
                                      		lv_title_3_0, 
                                      		"org.eclipse.xtext.common.Terminals.STRING");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:910:6: ( (lv_title_4_0= RULE_STRING ) )
                    {
                    // InternalReqSpecParser.g:910:6: ( (lv_title_4_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:911:1: (lv_title_4_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:911:1: (lv_title_4_0= RULE_STRING )
                    // InternalReqSpecParser.g:912:3: lv_title_4_0= RULE_STRING
                    {
                    lv_title_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_4_0, grammarAccess.getDocumentSectionAccess().getTitleSTRINGTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDocumentSectionRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_4_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getDocumentSectionAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalReqSpecParser.g:933:1: ( ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) ) )
            // InternalReqSpecParser.g:935:1: ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) )
            {
            // InternalReqSpecParser.g:935:1: ( ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* ) )
            // InternalReqSpecParser.g:936:2: ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3());
            // InternalReqSpecParser.g:939:2: ( ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )* )
            // InternalReqSpecParser.g:940:3: ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )*
            {
            // InternalReqSpecParser.g:940:3: ( ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) ) )*
            loop24:
            do {
                int alt24=3;
                int LA24_0 = input.LA(1);

                if ( LA24_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 0) ) {
                    alt24=1;
                }
                else if ( ( LA24_0 == Requirement || LA24_0 == Section || LA24_0 == Goal ) && getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 1) ) {
                    alt24=2;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalReqSpecParser.g:942:4: ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:942:4: ({...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:943:5: {...}? => ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocumentSection", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalReqSpecParser.g:943:112: ( ({...}? => ( (lv_description_7_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:944:6: ({...}? => ( (lv_description_7_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 0);
            	    // InternalReqSpecParser.g:947:6: ({...}? => ( (lv_description_7_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:947:7: {...}? => ( (lv_description_7_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocumentSection", "true");
            	    }
            	    // InternalReqSpecParser.g:947:16: ( (lv_description_7_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:948:1: (lv_description_7_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:948:1: (lv_description_7_0= ruleDescription )
            	    // InternalReqSpecParser.g:949:3: lv_description_7_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocumentSectionAccess().getDescriptionDescriptionParserRuleCall_3_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    lv_description_7_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocumentSectionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_7_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:972:4: ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:972:4: ({...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ ) )
            	    // InternalReqSpecParser.g:973:5: {...}? => ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocumentSection", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalReqSpecParser.g:973:112: ( ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+ )
            	    // InternalReqSpecParser.g:974:6: ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3(), 1);
            	    // InternalReqSpecParser.g:977:6: ({...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) ) )+
            	    int cnt23=0;
            	    loop23:
            	    do {
            	        int alt23=2;
            	        switch ( input.LA(1) ) {
            	        case Goal:
            	            {
            	            int LA23_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt23=1;
            	            }


            	            }
            	            break;
            	        case Requirement:
            	            {
            	            int LA23_3 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt23=1;
            	            }


            	            }
            	            break;
            	        case Section:
            	            {
            	            int LA23_4 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt23=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt23) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:977:7: {...}? => ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleDocumentSection", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:977:16: ( ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) ) )
            	    	    // InternalReqSpecParser.g:978:1: ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) )
            	    	    {
            	    	    // InternalReqSpecParser.g:978:1: ( (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection ) )
            	    	    // InternalReqSpecParser.g:979:1: (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection )
            	    	    {
            	    	    // InternalReqSpecParser.g:979:1: (lv_content_8_1= ruleDocGoal | lv_content_8_2= ruleDocRequirement | lv_content_8_3= ruleDocumentSection )
            	    	    int alt22=3;
            	    	    switch ( input.LA(1) ) {
            	    	    case Goal:
            	    	        {
            	    	        alt22=1;
            	    	        }
            	    	        break;
            	    	    case Requirement:
            	    	        {
            	    	        alt22=2;
            	    	        }
            	    	        break;
            	    	    case Section:
            	    	        {
            	    	        alt22=3;
            	    	        }
            	    	        break;
            	    	    default:
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        NoViableAltException nvae =
            	    	            new NoViableAltException("", 22, 0, input);

            	    	        throw nvae;
            	    	    }

            	    	    switch (alt22) {
            	    	        case 1 :
            	    	            // InternalReqSpecParser.g:980:3: lv_content_8_1= ruleDocGoal
            	    	            {
            	    	            if ( state.backtracking==0 ) {
            	    	               
            	    	              	        newCompositeNode(grammarAccess.getDocumentSectionAccess().getContentDocGoalParserRuleCall_3_1_0_0()); 
            	    	              	    
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_25);
            	    	            lv_content_8_1=ruleDocGoal();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              	        if (current==null) {
            	    	              	            current = createModelElementForParent(grammarAccess.getDocumentSectionRule());
            	    	              	        }
            	    	                     		add(
            	    	                     			current, 
            	    	                     			"content",
            	    	                      		lv_content_8_1, 
            	    	                      		"org.osate.reqspec.ReqSpec.DocGoal");
            	    	              	        afterParserOrEnumRuleCall();
            	    	              	    
            	    	            }

            	    	            }
            	    	            break;
            	    	        case 2 :
            	    	            // InternalReqSpecParser.g:995:8: lv_content_8_2= ruleDocRequirement
            	    	            {
            	    	            if ( state.backtracking==0 ) {
            	    	               
            	    	              	        newCompositeNode(grammarAccess.getDocumentSectionAccess().getContentDocRequirementParserRuleCall_3_1_0_1()); 
            	    	              	    
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_25);
            	    	            lv_content_8_2=ruleDocRequirement();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              	        if (current==null) {
            	    	              	            current = createModelElementForParent(grammarAccess.getDocumentSectionRule());
            	    	              	        }
            	    	                     		add(
            	    	                     			current, 
            	    	                     			"content",
            	    	                      		lv_content_8_2, 
            	    	                      		"org.osate.reqspec.ReqSpec.DocRequirement");
            	    	              	        afterParserOrEnumRuleCall();
            	    	              	    
            	    	            }

            	    	            }
            	    	            break;
            	    	        case 3 :
            	    	            // InternalReqSpecParser.g:1010:8: lv_content_8_3= ruleDocumentSection
            	    	            {
            	    	            if ( state.backtracking==0 ) {
            	    	               
            	    	              	        newCompositeNode(grammarAccess.getDocumentSectionAccess().getContentDocumentSectionParserRuleCall_3_1_0_2()); 
            	    	              	    
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_25);
            	    	            lv_content_8_3=ruleDocumentSection();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              	        if (current==null) {
            	    	              	            current = createModelElementForParent(grammarAccess.getDocumentSectionRule());
            	    	              	        }
            	    	                     		add(
            	    	                     			current, 
            	    	                     			"content",
            	    	                      		lv_content_8_3, 
            	    	                      		"org.osate.reqspec.ReqSpec.DocumentSection");
            	    	              	        afterParserOrEnumRuleCall();
            	    	              	    
            	    	            }

            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt23 >= 1 ) break loop23;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(23, input);
            	                throw eee;
            	        }
            	        cnt23++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDocumentSectionAccess().getUnorderedGroup_3());

            }

            otherlv_9=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getDocumentSectionAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentSection"


    // $ANTLR start "entryRuleSystemRequirementSet"
    // InternalReqSpecParser.g:1055:1: entryRuleSystemRequirementSet returns [EObject current=null] : iv_ruleSystemRequirementSet= ruleSystemRequirementSet EOF ;
    public final EObject entryRuleSystemRequirementSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSystemRequirementSet = null;


        try {
            // InternalReqSpecParser.g:1056:2: (iv_ruleSystemRequirementSet= ruleSystemRequirementSet EOF )
            // InternalReqSpecParser.g:1057:2: iv_ruleSystemRequirementSet= ruleSystemRequirementSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSystemRequirementSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSystemRequirementSet=ruleSystemRequirementSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSystemRequirementSet; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSystemRequirementSet"


    // $ANTLR start "ruleSystemRequirementSet"
    // InternalReqSpecParser.g:1064:1: ruleSystemRequirementSet returns [EObject current=null] : ( () otherlv_1= KW_System otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? otherlv_6= For ( ( ruleAadlClassifierReference ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )* otherlv_25= RightSquareBracket ) ;
    public final EObject ruleSystemRequirementSet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_title_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_issues_24_0=null;
        Token otherlv_25=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_description_12_0 = null;

        EObject lv_constants_13_0 = null;

        EObject lv_computes_14_0 = null;

        EObject lv_requirements_15_0 = null;

        EObject lv_include_16_0 = null;

        EObject lv_docReference_19_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:1067:28: ( ( () otherlv_1= KW_System otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? otherlv_6= For ( ( ruleAadlClassifierReference ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )* otherlv_25= RightSquareBracket ) )
            // InternalReqSpecParser.g:1068:1: ( () otherlv_1= KW_System otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? otherlv_6= For ( ( ruleAadlClassifierReference ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )* otherlv_25= RightSquareBracket )
            {
            // InternalReqSpecParser.g:1068:1: ( () otherlv_1= KW_System otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? otherlv_6= For ( ( ruleAadlClassifierReference ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )* otherlv_25= RightSquareBracket )
            // InternalReqSpecParser.g:1068:2: () otherlv_1= KW_System otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? otherlv_6= For ( ( ruleAadlClassifierReference ) ) (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )? otherlv_11= LeftSquareBracket ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )* otherlv_25= RightSquareBracket
            {
            // InternalReqSpecParser.g:1068:2: ()
            // InternalReqSpecParser.g:1069:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSystemRequirementSetAccess().getSystemRequirementSetAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,KW_System,FollowSets000.FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSystemRequirementSetAccess().getSystemKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Requirements,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSystemRequirementSetAccess().getRequirementsKeyword_2());
                  
            }
            // InternalReqSpecParser.g:1084:1: ( (lv_name_3_0= ruleQualifiedName ) )
            // InternalReqSpecParser.g:1085:1: (lv_name_3_0= ruleQualifiedName )
            {
            // InternalReqSpecParser.g:1085:1: (lv_name_3_0= ruleQualifiedName )
            // InternalReqSpecParser.g:1086:3: lv_name_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getNameQualifiedNameParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_8);
            lv_name_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"org.osate.alisa.common.Common.QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:1102:2: (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==Colon) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalReqSpecParser.g:1103:2: otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSystemRequirementSetAccess().getColonKeyword_4_0());
                          
                    }
                    // InternalReqSpecParser.g:1107:1: ( (lv_title_5_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:1108:1: (lv_title_5_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:1108:1: (lv_title_5_0= RULE_STRING )
                    // InternalReqSpecParser.g:1109:3: lv_title_5_0= RULE_STRING
                    {
                    lv_title_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_5_0, grammarAccess.getSystemRequirementSetAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSystemRequirementSetRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_5_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,For,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getSystemRequirementSetAccess().getForKeyword_5());
                  
            }
            // InternalReqSpecParser.g:1130:1: ( ( ruleAadlClassifierReference ) )
            // InternalReqSpecParser.g:1131:1: ( ruleAadlClassifierReference )
            {
            // InternalReqSpecParser.g:1131:1: ( ruleAadlClassifierReference )
            // InternalReqSpecParser.g:1132:3: ruleAadlClassifierReference
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getSystemRequirementSetRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getTargetComponentClassifierCrossReference_6_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_12);
            ruleAadlClassifierReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:1146:2: (otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+ )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==Use) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalReqSpecParser.g:1147:2: otherlv_8= Use otherlv_9= Constants ( ( ruleQualifiedName ) )+
                    {
                    otherlv_8=(Token)match(input,Use,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getSystemRequirementSetAccess().getUseKeyword_7_0());
                          
                    }
                    otherlv_9=(Token)match(input,Constants,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getSystemRequirementSetAccess().getConstantsKeyword_7_1());
                          
                    }
                    // InternalReqSpecParser.g:1156:1: ( ( ruleQualifiedName ) )+
                    int cnt26=0;
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==RULE_ID) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:1157:1: ( ruleQualifiedName )
                    	    {
                    	    // InternalReqSpecParser.g:1157:1: ( ruleQualifiedName )
                    	    // InternalReqSpecParser.g:1158:3: ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getSystemRequirementSetRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getImportConstantsGlobalConstantsCrossReference_7_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_15);
                    	    ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt26 >= 1 ) break loop26;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(26, input);
                                throw eee;
                        }
                        cnt26++;
                    } while (true);


                    }
                    break;

            }

            otherlv_11=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getSystemRequirementSetAccess().getLeftSquareBracketKeyword_8());
                  
            }
            // InternalReqSpecParser.g:1177:1: ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )*
            loop31:
            do {
                int alt31=9;
                alt31 = dfa31.predict(input);
                switch (alt31) {
            	case 1 :
            	    // InternalReqSpecParser.g:1177:2: ( (lv_description_12_0= ruleDescription ) )
            	    {
            	    // InternalReqSpecParser.g:1177:2: ( (lv_description_12_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:1178:1: (lv_description_12_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:1178:1: (lv_description_12_0= ruleDescription )
            	    // InternalReqSpecParser.g:1179:3: lv_description_12_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getDescriptionDescriptionParserRuleCall_9_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_description_12_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_12_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:1196:6: ( (lv_constants_13_0= ruleValDeclaration ) )
            	    {
            	    // InternalReqSpecParser.g:1196:6: ( (lv_constants_13_0= ruleValDeclaration ) )
            	    // InternalReqSpecParser.g:1197:1: (lv_constants_13_0= ruleValDeclaration )
            	    {
            	    // InternalReqSpecParser.g:1197:1: (lv_constants_13_0= ruleValDeclaration )
            	    // InternalReqSpecParser.g:1198:3: lv_constants_13_0= ruleValDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getConstantsValDeclarationParserRuleCall_9_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_constants_13_0=ruleValDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"constants",
            	              		lv_constants_13_0, 
            	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:1215:6: ( (lv_computes_14_0= ruleComputeDeclaration ) )
            	    {
            	    // InternalReqSpecParser.g:1215:6: ( (lv_computes_14_0= ruleComputeDeclaration ) )
            	    // InternalReqSpecParser.g:1216:1: (lv_computes_14_0= ruleComputeDeclaration )
            	    {
            	    // InternalReqSpecParser.g:1216:1: (lv_computes_14_0= ruleComputeDeclaration )
            	    // InternalReqSpecParser.g:1217:3: lv_computes_14_0= ruleComputeDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getComputesComputeDeclarationParserRuleCall_9_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_computes_14_0=ruleComputeDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"computes",
            	              		lv_computes_14_0, 
            	              		"org.osate.alisa.common.Common.ComputeDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:1234:6: ( (lv_requirements_15_0= ruleSystemRequirement ) )
            	    {
            	    // InternalReqSpecParser.g:1234:6: ( (lv_requirements_15_0= ruleSystemRequirement ) )
            	    // InternalReqSpecParser.g:1235:1: (lv_requirements_15_0= ruleSystemRequirement )
            	    {
            	    // InternalReqSpecParser.g:1235:1: (lv_requirements_15_0= ruleSystemRequirement )
            	    // InternalReqSpecParser.g:1236:3: lv_requirements_15_0= ruleSystemRequirement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getRequirementsSystemRequirementParserRuleCall_9_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_requirements_15_0=ruleSystemRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"requirements",
            	              		lv_requirements_15_0, 
            	              		"org.osate.reqspec.ReqSpec.SystemRequirement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:1253:6: ( (lv_include_16_0= ruleIncludeGlobalRequirement ) )
            	    {
            	    // InternalReqSpecParser.g:1253:6: ( (lv_include_16_0= ruleIncludeGlobalRequirement ) )
            	    // InternalReqSpecParser.g:1254:1: (lv_include_16_0= ruleIncludeGlobalRequirement )
            	    {
            	    // InternalReqSpecParser.g:1254:1: (lv_include_16_0= ruleIncludeGlobalRequirement )
            	    // InternalReqSpecParser.g:1255:3: lv_include_16_0= ruleIncludeGlobalRequirement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getIncludeIncludeGlobalRequirementParserRuleCall_9_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_include_16_0=ruleIncludeGlobalRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"include",
            	              		lv_include_16_0, 
            	              		"org.osate.reqspec.ReqSpec.IncludeGlobalRequirement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:1272:6: (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ )
            	    {
            	    // InternalReqSpecParser.g:1272:6: (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:1273:2: otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_17=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_17, grammarAccess.getSystemRequirementSetAccess().getSeeKeyword_9_5_0());
            	          
            	    }
            	    otherlv_18=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_18, grammarAccess.getSystemRequirementSetAccess().getDocumentKeyword_9_5_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:1282:1: ( (lv_docReference_19_0= ruleExternalDocument ) )+
            	    int cnt28=0;
            	    loop28:
            	    do {
            	        int alt28=2;
            	        int LA28_0 = input.LA(1);

            	        if ( (LA28_0==RULE_ID) ) {
            	            alt28=1;
            	        }


            	        switch (alt28) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1283:1: (lv_docReference_19_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:1283:1: (lv_docReference_19_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:1284:3: lv_docReference_19_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getDocReferenceExternalDocumentParserRuleCall_9_5_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_28);
            	    	    lv_docReference_19_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementSetRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_19_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt28 >= 1 ) break loop28;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(28, input);
            	                throw eee;
            	        }
            	        cnt28++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:1301:6: (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:1301:6: (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:1302:2: otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_20=(Token)match(input,See,FollowSets000.FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_20, grammarAccess.getSystemRequirementSetAccess().getSeeKeyword_9_6_0());
            	          
            	    }
            	    otherlv_21=(Token)match(input,Goals,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_21, grammarAccess.getSystemRequirementSetAccess().getGoalsKeyword_9_6_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:1311:1: ( ( ruleQualifiedName ) )+
            	    int cnt29=0;
            	    loop29:
            	    do {
            	        int alt29=2;
            	        int LA29_0 = input.LA(1);

            	        if ( (LA29_0==RULE_ID) ) {
            	            alt29=1;
            	        }


            	        switch (alt29) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1312:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:1312:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:1313:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementSetRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementSetAccess().getStakeholderGoalsReqRootCrossReference_9_6_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_28);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt29 >= 1 ) break loop29;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(29, input);
            	                throw eee;
            	        }
            	        cnt29++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalReqSpecParser.g:1328:6: (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ )
            	    {
            	    // InternalReqSpecParser.g:1328:6: (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:1329:2: otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+
            	    {
            	    otherlv_23=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_23, grammarAccess.getSystemRequirementSetAccess().getIssuesKeyword_9_7_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:1333:1: ( (lv_issues_24_0= RULE_STRING ) )+
            	    int cnt30=0;
            	    loop30:
            	    do {
            	        int alt30=2;
            	        int LA30_0 = input.LA(1);

            	        if ( (LA30_0==RULE_STRING) ) {
            	            alt30=1;
            	        }


            	        switch (alt30) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1334:1: (lv_issues_24_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:1334:1: (lv_issues_24_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:1335:3: lv_issues_24_0= RULE_STRING
            	    	    {
            	    	    lv_issues_24_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_29); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_24_0, grammarAccess.getSystemRequirementSetAccess().getIssuesSTRINGTerminalRuleCall_9_7_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementSetRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_24_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt30 >= 1 ) break loop30;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(30, input);
            	                throw eee;
            	        }
            	        cnt30++;
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            otherlv_25=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_25, grammarAccess.getSystemRequirementSetAccess().getRightSquareBracketKeyword_10());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSystemRequirementSet"


    // $ANTLR start "entryRuleGlobalRequirementSet"
    // InternalReqSpecParser.g:1364:1: entryRuleGlobalRequirementSet returns [EObject current=null] : iv_ruleGlobalRequirementSet= ruleGlobalRequirementSet EOF ;
    public final EObject entryRuleGlobalRequirementSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalRequirementSet = null;


        try {
            // InternalReqSpecParser.g:1365:2: (iv_ruleGlobalRequirementSet= ruleGlobalRequirementSet EOF )
            // InternalReqSpecParser.g:1366:2: iv_ruleGlobalRequirementSet= ruleGlobalRequirementSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalRequirementSetRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGlobalRequirementSet=ruleGlobalRequirementSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalRequirementSet; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalRequirementSet"


    // $ANTLR start "ruleGlobalRequirementSet"
    // InternalReqSpecParser.g:1373:1: ruleGlobalRequirementSet returns [EObject current=null] : ( () otherlv_1= Global otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? (otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+ )? otherlv_9= LeftSquareBracket ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )* otherlv_22= RightSquareBracket ) ;
    public final EObject ruleGlobalRequirementSet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_title_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_issues_21_0=null;
        Token otherlv_22=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_description_10_0 = null;

        EObject lv_constants_11_0 = null;

        EObject lv_computes_12_0 = null;

        EObject lv_requirements_13_0 = null;

        EObject lv_docReference_16_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:1376:28: ( ( () otherlv_1= Global otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? (otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+ )? otherlv_9= LeftSquareBracket ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )* otherlv_22= RightSquareBracket ) )
            // InternalReqSpecParser.g:1377:1: ( () otherlv_1= Global otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? (otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+ )? otherlv_9= LeftSquareBracket ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )* otherlv_22= RightSquareBracket )
            {
            // InternalReqSpecParser.g:1377:1: ( () otherlv_1= Global otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? (otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+ )? otherlv_9= LeftSquareBracket ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )* otherlv_22= RightSquareBracket )
            // InternalReqSpecParser.g:1377:2: () otherlv_1= Global otherlv_2= Requirements ( (lv_name_3_0= ruleQualifiedName ) ) (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )? (otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+ )? otherlv_9= LeftSquareBracket ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )* otherlv_22= RightSquareBracket
            {
            // InternalReqSpecParser.g:1377:2: ()
            // InternalReqSpecParser.g:1378:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getGlobalRequirementSetAccess().getGlobalRequirementSetAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Global,FollowSets000.FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getGlobalRequirementSetAccess().getGlobalKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,Requirements,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getGlobalRequirementSetAccess().getRequirementsKeyword_2());
                  
            }
            // InternalReqSpecParser.g:1393:1: ( (lv_name_3_0= ruleQualifiedName ) )
            // InternalReqSpecParser.g:1394:1: (lv_name_3_0= ruleQualifiedName )
            {
            // InternalReqSpecParser.g:1394:1: (lv_name_3_0= ruleQualifiedName )
            // InternalReqSpecParser.g:1395:3: lv_name_3_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getNameQualifiedNameParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_name_3_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getGlobalRequirementSetRule());
              	        }
                     		set(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"org.osate.alisa.common.Common.QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:1411:2: (otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==Colon) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalReqSpecParser.g:1412:2: otherlv_4= Colon ( (lv_title_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getGlobalRequirementSetAccess().getColonKeyword_4_0());
                          
                    }
                    // InternalReqSpecParser.g:1416:1: ( (lv_title_5_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:1417:1: (lv_title_5_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:1417:1: (lv_title_5_0= RULE_STRING )
                    // InternalReqSpecParser.g:1418:3: lv_title_5_0= RULE_STRING
                    {
                    lv_title_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_5_0, grammarAccess.getGlobalRequirementSetAccess().getTitleSTRINGTerminalRuleCall_4_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGlobalRequirementSetRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_5_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:1434:4: (otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+ )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==Use) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalReqSpecParser.g:1435:2: otherlv_6= Use otherlv_7= Constants ( ( ruleQualifiedName ) )+
                    {
                    otherlv_6=(Token)match(input,Use,FollowSets000.FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getGlobalRequirementSetAccess().getUseKeyword_5_0());
                          
                    }
                    otherlv_7=(Token)match(input,Constants,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getGlobalRequirementSetAccess().getConstantsKeyword_5_1());
                          
                    }
                    // InternalReqSpecParser.g:1444:1: ( ( ruleQualifiedName ) )+
                    int cnt33=0;
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==RULE_ID) ) {
                            alt33=1;
                        }


                        switch (alt33) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:1445:1: ( ruleQualifiedName )
                    	    {
                    	    // InternalReqSpecParser.g:1445:1: ( ruleQualifiedName )
                    	    // InternalReqSpecParser.g:1446:3: ruleQualifiedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getGlobalRequirementSetRule());
                    	      	        }
                    	              
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getImportConstantsGlobalConstantsCrossReference_5_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_15);
                    	    ruleQualifiedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt33 >= 1 ) break loop33;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(33, input);
                                throw eee;
                        }
                        cnt33++;
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getGlobalRequirementSetAccess().getLeftSquareBracketKeyword_6());
                  
            }
            // InternalReqSpecParser.g:1465:1: ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )*
            loop38:
            do {
                int alt38=8;
                alt38 = dfa38.predict(input);
                switch (alt38) {
            	case 1 :
            	    // InternalReqSpecParser.g:1465:2: ( (lv_description_10_0= ruleDescription ) )
            	    {
            	    // InternalReqSpecParser.g:1465:2: ( (lv_description_10_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:1466:1: (lv_description_10_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:1466:1: (lv_description_10_0= ruleDescription )
            	    // InternalReqSpecParser.g:1467:3: lv_description_10_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getDescriptionDescriptionParserRuleCall_7_0_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_description_10_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementSetRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_10_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:1484:6: ( (lv_constants_11_0= ruleValDeclaration ) )
            	    {
            	    // InternalReqSpecParser.g:1484:6: ( (lv_constants_11_0= ruleValDeclaration ) )
            	    // InternalReqSpecParser.g:1485:1: (lv_constants_11_0= ruleValDeclaration )
            	    {
            	    // InternalReqSpecParser.g:1485:1: (lv_constants_11_0= ruleValDeclaration )
            	    // InternalReqSpecParser.g:1486:3: lv_constants_11_0= ruleValDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getConstantsValDeclarationParserRuleCall_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_constants_11_0=ruleValDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"constants",
            	              		lv_constants_11_0, 
            	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:1503:6: ( (lv_computes_12_0= ruleComputeDeclaration ) )
            	    {
            	    // InternalReqSpecParser.g:1503:6: ( (lv_computes_12_0= ruleComputeDeclaration ) )
            	    // InternalReqSpecParser.g:1504:1: (lv_computes_12_0= ruleComputeDeclaration )
            	    {
            	    // InternalReqSpecParser.g:1504:1: (lv_computes_12_0= ruleComputeDeclaration )
            	    // InternalReqSpecParser.g:1505:3: lv_computes_12_0= ruleComputeDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getComputesComputeDeclarationParserRuleCall_7_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_computes_12_0=ruleComputeDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"computes",
            	              		lv_computes_12_0, 
            	              		"org.osate.alisa.common.Common.ComputeDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:1522:6: ( (lv_requirements_13_0= ruleGlobalRequirement ) )
            	    {
            	    // InternalReqSpecParser.g:1522:6: ( (lv_requirements_13_0= ruleGlobalRequirement ) )
            	    // InternalReqSpecParser.g:1523:1: (lv_requirements_13_0= ruleGlobalRequirement )
            	    {
            	    // InternalReqSpecParser.g:1523:1: (lv_requirements_13_0= ruleGlobalRequirement )
            	    // InternalReqSpecParser.g:1524:3: lv_requirements_13_0= ruleGlobalRequirement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getRequirementsGlobalRequirementParserRuleCall_7_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_requirements_13_0=ruleGlobalRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementSetRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"requirements",
            	              		lv_requirements_13_0, 
            	              		"org.osate.reqspec.ReqSpec.GlobalRequirement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:1541:6: (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ )
            	    {
            	    // InternalReqSpecParser.g:1541:6: (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:1542:2: otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_14=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_14, grammarAccess.getGlobalRequirementSetAccess().getSeeKeyword_7_4_0());
            	          
            	    }
            	    otherlv_15=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_15, grammarAccess.getGlobalRequirementSetAccess().getDocumentKeyword_7_4_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:1551:1: ( (lv_docReference_16_0= ruleExternalDocument ) )+
            	    int cnt35=0;
            	    loop35:
            	    do {
            	        int alt35=2;
            	        int LA35_0 = input.LA(1);

            	        if ( (LA35_0==RULE_ID) ) {
            	            alt35=1;
            	        }


            	        switch (alt35) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1552:1: (lv_docReference_16_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:1552:1: (lv_docReference_16_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:1553:3: lv_docReference_16_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getDocReferenceExternalDocumentParserRuleCall_7_4_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_32);
            	    	    lv_docReference_16_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementSetRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_16_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt35 >= 1 ) break loop35;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(35, input);
            	                throw eee;
            	        }
            	        cnt35++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:1570:6: (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:1570:6: (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:1571:2: otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_17=(Token)match(input,See,FollowSets000.FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_17, grammarAccess.getGlobalRequirementSetAccess().getSeeKeyword_7_5_0());
            	          
            	    }
            	    otherlv_18=(Token)match(input,Goals,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_18, grammarAccess.getGlobalRequirementSetAccess().getGoalsKeyword_7_5_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:1580:1: ( ( ruleQualifiedName ) )+
            	    int cnt36=0;
            	    loop36:
            	    do {
            	        int alt36=2;
            	        int LA36_0 = input.LA(1);

            	        if ( (LA36_0==RULE_ID) ) {
            	            alt36=1;
            	        }


            	        switch (alt36) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1581:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:1581:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:1582:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementSetRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementSetAccess().getStakeholderGoalsReqRootCrossReference_7_5_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_32);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt36 >= 1 ) break loop36;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(36, input);
            	                throw eee;
            	        }
            	        cnt36++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:1597:6: (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ )
            	    {
            	    // InternalReqSpecParser.g:1597:6: (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:1598:2: otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+
            	    {
            	    otherlv_20=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_20, grammarAccess.getGlobalRequirementSetAccess().getIssuesKeyword_7_6_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:1602:1: ( (lv_issues_21_0= RULE_STRING ) )+
            	    int cnt37=0;
            	    loop37:
            	    do {
            	        int alt37=2;
            	        int LA37_0 = input.LA(1);

            	        if ( (LA37_0==RULE_STRING) ) {
            	            alt37=1;
            	        }


            	        switch (alt37) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1603:1: (lv_issues_21_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:1603:1: (lv_issues_21_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:1604:3: lv_issues_21_0= RULE_STRING
            	    	    {
            	    	    lv_issues_21_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_33); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_21_0, grammarAccess.getGlobalRequirementSetAccess().getIssuesSTRINGTerminalRuleCall_7_6_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementSetRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_21_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt37 >= 1 ) break loop37;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(37, input);
            	                throw eee;
            	        }
            	        cnt37++;
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            otherlv_22=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_22, grammarAccess.getGlobalRequirementSetAccess().getRightSquareBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalRequirementSet"


    // $ANTLR start "entryRuleDocGoal"
    // InternalReqSpecParser.g:1633:1: entryRuleDocGoal returns [EObject current=null] : iv_ruleDocGoal= ruleDocGoal EOF ;
    public final EObject entryRuleDocGoal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocGoal = null;


        try {
            // InternalReqSpecParser.g:1634:2: (iv_ruleDocGoal= ruleDocGoal EOF )
            // InternalReqSpecParser.g:1635:2: iv_ruleDocGoal= ruleDocGoal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocGoalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDocGoal=ruleDocGoal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocGoal; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocGoal"


    // $ANTLR start "ruleDocGoal"
    // InternalReqSpecParser.g:1642:1: ruleDocGoal returns [EObject current=null] : (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) ) )? otherlv_8= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_33= RightSquareBracket ) ;
    public final EObject ruleDocGoal() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token otherlv_4=null;
        Token lv_targetDescription_5_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token lv_dropped_24_0=null;
        Token lv_dropRationale_25_0=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token lv_issues_32_0=null;
        Token otherlv_33=null;
        EObject lv_description_12_0 = null;

        EObject lv_constants_13_0 = null;

        EObject lv_whencondition_14_0 = null;

        EObject lv_rationale_15_0 = null;

        EObject lv_changeUncertainty_16_0 = null;

        EObject lv_docReference_30_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:1645:28: ( (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) ) )? otherlv_8= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_33= RightSquareBracket ) )
            // InternalReqSpecParser.g:1646:1: (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) ) )? otherlv_8= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_33= RightSquareBracket )
            {
            // InternalReqSpecParser.g:1646:1: (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) ) )? otherlv_8= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_33= RightSquareBracket )
            // InternalReqSpecParser.g:1647:2: otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) ) )? otherlv_8= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_33= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Goal,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDocGoalAccess().getGoalKeyword_0());
                  
            }
            // InternalReqSpecParser.g:1651:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalReqSpecParser.g:1652:1: (lv_name_1_0= RULE_ID )
            {
            // InternalReqSpecParser.g:1652:1: (lv_name_1_0= RULE_ID )
            // InternalReqSpecParser.g:1653:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getDocGoalAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDocGoalRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalReqSpecParser.g:1669:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==Colon) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalReqSpecParser.g:1670:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDocGoalAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:1674:1: ( (lv_title_3_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:1675:1: (lv_title_3_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:1675:1: (lv_title_3_0= RULE_STRING )
                    // InternalReqSpecParser.g:1676:3: lv_title_3_0= RULE_STRING
                    {
                    lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_3_0, grammarAccess.getDocGoalAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDocGoalRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_3_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:1692:4: (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==For) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalReqSpecParser.g:1693:2: otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) )
                    {
                    otherlv_4=(Token)match(input,For,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDocGoalAccess().getForKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:1697:1: ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) )
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==RULE_STRING) ) {
                        alt41=1;
                    }
                    else if ( (LA41_0==RULE_ID) ) {
                        alt41=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 41, 0, input);

                        throw nvae;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalReqSpecParser.g:1697:2: ( (lv_targetDescription_5_0= RULE_STRING ) )
                            {
                            // InternalReqSpecParser.g:1697:2: ( (lv_targetDescription_5_0= RULE_STRING ) )
                            // InternalReqSpecParser.g:1698:1: (lv_targetDescription_5_0= RULE_STRING )
                            {
                            // InternalReqSpecParser.g:1698:1: (lv_targetDescription_5_0= RULE_STRING )
                            // InternalReqSpecParser.g:1699:3: lv_targetDescription_5_0= RULE_STRING
                            {
                            lv_targetDescription_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_targetDescription_5_0, grammarAccess.getDocGoalAccess().getTargetDescriptionSTRINGTerminalRuleCall_3_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDocGoalRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"targetDescription",
                                      		lv_targetDescription_5_0, 
                                      		"org.eclipse.xtext.common.Terminals.STRING");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:1716:6: ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? )
                            {
                            // InternalReqSpecParser.g:1716:6: ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? )
                            // InternalReqSpecParser.g:1716:7: ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )?
                            {
                            // InternalReqSpecParser.g:1716:7: ( ( ruleAadlClassifierReference ) )
                            // InternalReqSpecParser.g:1717:1: ( ruleAadlClassifierReference )
                            {
                            // InternalReqSpecParser.g:1717:1: ( ruleAadlClassifierReference )
                            // InternalReqSpecParser.g:1718:3: ruleAadlClassifierReference
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getDocGoalRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDocGoalAccess().getTargetComponentClassifierCrossReference_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_15);
                            ruleAadlClassifierReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalReqSpecParser.g:1732:2: ( (otherlv_7= RULE_ID ) )?
                            int alt40=2;
                            int LA40_0 = input.LA(1);

                            if ( (LA40_0==RULE_ID) ) {
                                alt40=1;
                            }
                            switch (alt40) {
                                case 1 :
                                    // InternalReqSpecParser.g:1733:1: (otherlv_7= RULE_ID )
                                    {
                                    // InternalReqSpecParser.g:1733:1: (otherlv_7= RULE_ID )
                                    // InternalReqSpecParser.g:1734:3: otherlv_7= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getDocGoalRule());
                                      	        }
                                              
                                    }
                                    otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		newLeafNode(otherlv_7, grammarAccess.getDocGoalAccess().getTargetElementNamedElementCrossReference_3_1_1_1_0()); 
                                      	
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getDocGoalAccess().getLeftSquareBracketKeyword_4());
                  
            }
            // InternalReqSpecParser.g:1750:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:1752:1: ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:1752:1: ( ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            // InternalReqSpecParser.g:1753:2: ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());
            // InternalReqSpecParser.g:1756:2: ( ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )* )
            // InternalReqSpecParser.g:1757:3: ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )*
            {
            // InternalReqSpecParser.g:1757:3: ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )*
            loop52:
            do {
                int alt52=14;
                alt52 = dfa52.predict(input);
                switch (alt52) {
            	case 1 :
            	    // InternalReqSpecParser.g:1759:4: ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1759:4: ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:1760:5: {...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalReqSpecParser.g:1760:104: ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:1761:6: ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 0);
            	    // InternalReqSpecParser.g:1764:6: ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:1764:7: {...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1764:16: (otherlv_10= Category ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:1765:2: otherlv_10= Category ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_10=(Token)match(input,Category,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_10, grammarAccess.getDocGoalAccess().getCategoryKeyword_5_0_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:1769:1: ( ( ruleQualifiedName ) )+
            	    int cnt43=0;
            	    loop43:
            	    do {
            	        int alt43=2;
            	        int LA43_0 = input.LA(1);

            	        if ( (LA43_0==RULE_ID) ) {
            	            alt43=1;
            	        }


            	        switch (alt43) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1770:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:1770:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:1771:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getCategoryCategoryCrossReference_5_0_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt43 >= 1 ) break loop43;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(43, input);
            	                throw eee;
            	        }
            	        cnt43++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:1792:4: ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1792:4: ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:1793:5: {...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalReqSpecParser.g:1793:104: ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:1794:6: ({...}? => ( (lv_description_12_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 1);
            	    // InternalReqSpecParser.g:1797:6: ({...}? => ( (lv_description_12_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:1797:7: {...}? => ( (lv_description_12_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1797:16: ( (lv_description_12_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:1798:1: (lv_description_12_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:1798:1: (lv_description_12_0= ruleDescription )
            	    // InternalReqSpecParser.g:1799:3: lv_description_12_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getDescriptionDescriptionParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_description_12_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_12_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:1822:4: ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:1822:4: ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:1823:5: {...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalReqSpecParser.g:1823:104: ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:1824:6: ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 2);
            	    // InternalReqSpecParser.g:1827:6: ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+
            	    int cnt44=0;
            	    loop44:
            	    do {
            	        int alt44=2;
            	        int LA44_0 = input.LA(1);

            	        if ( (LA44_0==Val) ) {
            	            int LA44_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt44=1;
            	            }


            	        }


            	        switch (alt44) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1827:7: {...}? => ( (lv_constants_13_0= ruleValDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:1827:16: ( (lv_constants_13_0= ruleValDeclaration ) )
            	    	    // InternalReqSpecParser.g:1828:1: (lv_constants_13_0= ruleValDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:1828:1: (lv_constants_13_0= ruleValDeclaration )
            	    	    // InternalReqSpecParser.g:1829:3: lv_constants_13_0= ruleValDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getConstantsValDeclarationParserRuleCall_5_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_36);
            	    	    lv_constants_13_0=ruleValDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"constants",
            	    	              		lv_constants_13_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt44 >= 1 ) break loop44;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(44, input);
            	                throw eee;
            	        }
            	        cnt44++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:1852:4: ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1852:4: ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) )
            	    // InternalReqSpecParser.g:1853:5: {...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalReqSpecParser.g:1853:104: ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) )
            	    // InternalReqSpecParser.g:1854:6: ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 3);
            	    // InternalReqSpecParser.g:1857:6: ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) )
            	    // InternalReqSpecParser.g:1857:7: {...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1857:16: ( (lv_whencondition_14_0= ruleWhenCondition ) )
            	    // InternalReqSpecParser.g:1858:1: (lv_whencondition_14_0= ruleWhenCondition )
            	    {
            	    // InternalReqSpecParser.g:1858:1: (lv_whencondition_14_0= ruleWhenCondition )
            	    // InternalReqSpecParser.g:1859:3: lv_whencondition_14_0= ruleWhenCondition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getWhenconditionWhenConditionParserRuleCall_5_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_whencondition_14_0=ruleWhenCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"whencondition",
            	              		lv_whencondition_14_0, 
            	              		"org.osate.reqspec.ReqSpec.WhenCondition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:1882:4: ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1882:4: ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) )
            	    // InternalReqSpecParser.g:1883:5: {...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalReqSpecParser.g:1883:104: ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) )
            	    // InternalReqSpecParser.g:1884:6: ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 4);
            	    // InternalReqSpecParser.g:1887:6: ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) )
            	    // InternalReqSpecParser.g:1887:7: {...}? => ( (lv_rationale_15_0= ruleRationale ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1887:16: ( (lv_rationale_15_0= ruleRationale ) )
            	    // InternalReqSpecParser.g:1888:1: (lv_rationale_15_0= ruleRationale )
            	    {
            	    // InternalReqSpecParser.g:1888:1: (lv_rationale_15_0= ruleRationale )
            	    // InternalReqSpecParser.g:1889:3: lv_rationale_15_0= ruleRationale
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getRationaleRationaleParserRuleCall_5_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_rationale_15_0=ruleRationale();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rationale",
            	              		lv_rationale_15_0, 
            	              		"org.osate.alisa.common.Common.Rationale");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:1912:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1912:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) )
            	    // InternalReqSpecParser.g:1913:5: {...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalReqSpecParser.g:1913:104: ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) )
            	    // InternalReqSpecParser.g:1914:6: ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 5);
            	    // InternalReqSpecParser.g:1917:6: ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) )
            	    // InternalReqSpecParser.g:1917:7: {...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1917:16: ( (lv_changeUncertainty_16_0= ruleUncertainty ) )
            	    // InternalReqSpecParser.g:1918:1: (lv_changeUncertainty_16_0= ruleUncertainty )
            	    {
            	    // InternalReqSpecParser.g:1918:1: (lv_changeUncertainty_16_0= ruleUncertainty )
            	    // InternalReqSpecParser.g:1919:3: lv_changeUncertainty_16_0= ruleUncertainty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getChangeUncertaintyUncertaintyParserRuleCall_5_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_changeUncertainty_16_0=ruleUncertainty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"changeUncertainty",
            	              		lv_changeUncertainty_16_0, 
            	              		"org.osate.alisa.common.Common.Uncertainty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:1942:4: ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1942:4: ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:1943:5: {...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalReqSpecParser.g:1943:104: ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:1944:6: ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 6);
            	    // InternalReqSpecParser.g:1947:6: ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:1947:7: {...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1947:16: (otherlv_17= Refines ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:1948:2: otherlv_17= Refines ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_17=(Token)match(input,Refines,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_17, grammarAccess.getDocGoalAccess().getRefinesKeyword_5_6_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:1952:1: ( ( ruleQualifiedName ) )+
            	    int cnt45=0;
            	    loop45:
            	    do {
            	        int alt45=2;
            	        int LA45_0 = input.LA(1);

            	        if ( (LA45_0==RULE_ID) ) {
            	            alt45=1;
            	        }


            	        switch (alt45) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1953:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:1953:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:1954:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getRefinesReferenceGoalCrossReference_5_6_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt45 >= 1 ) break loop45;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(45, input);
            	                throw eee;
            	        }
            	        cnt45++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalReqSpecParser.g:1975:4: ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:1975:4: ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:1976:5: {...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalReqSpecParser.g:1976:104: ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:1977:6: ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 7);
            	    // InternalReqSpecParser.g:1980:6: ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:1980:7: {...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:1980:16: (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:1981:2: otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_19=(Token)match(input,Conflicts,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_19, grammarAccess.getDocGoalAccess().getConflictsKeyword_5_7_0());
            	          
            	    }
            	    otherlv_20=(Token)match(input,With,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_20, grammarAccess.getDocGoalAccess().getWithKeyword_5_7_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:1990:1: ( ( ruleQualifiedName ) )+
            	    int cnt46=0;
            	    loop46:
            	    do {
            	        int alt46=2;
            	        int LA46_0 = input.LA(1);

            	        if ( (LA46_0==RULE_ID) ) {
            	            alt46=1;
            	        }


            	        switch (alt46) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:1991:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:1991:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:1992:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getConflictsReferenceGoalCrossReference_5_7_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt46 >= 1 ) break loop46;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(46, input);
            	                throw eee;
            	        }
            	        cnt46++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalReqSpecParser.g:2013:4: ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2013:4: ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2014:5: {...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 8)");
            	    }
            	    // InternalReqSpecParser.g:2014:104: ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2015:6: ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 8);
            	    // InternalReqSpecParser.g:2018:6: ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2018:7: {...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2018:16: (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2019:2: otherlv_22= Evolves ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_22=(Token)match(input,Evolves,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_22, grammarAccess.getDocGoalAccess().getEvolvesKeyword_5_8_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2023:1: ( ( ruleQualifiedName ) )+
            	    int cnt47=0;
            	    loop47:
            	    do {
            	        int alt47=2;
            	        int LA47_0 = input.LA(1);

            	        if ( (LA47_0==RULE_ID) ) {
            	            alt47=1;
            	        }


            	        switch (alt47) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2024:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2024:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2025:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getEvolvesReferenceRequirementCrossReference_5_8_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt47 >= 1 ) break loop47;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(47, input);
            	                throw eee;
            	        }
            	        cnt47++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalReqSpecParser.g:2046:4: ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2046:4: ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) )
            	    // InternalReqSpecParser.g:2047:5: {...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 9)");
            	    }
            	    // InternalReqSpecParser.g:2047:104: ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) )
            	    // InternalReqSpecParser.g:2048:6: ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 9);
            	    // InternalReqSpecParser.g:2051:6: ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) )
            	    // InternalReqSpecParser.g:2051:7: {...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2051:16: ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? )
            	    // InternalReqSpecParser.g:2051:17: ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )?
            	    {
            	    // InternalReqSpecParser.g:2051:17: ( (lv_dropped_24_0= Dropped ) )
            	    // InternalReqSpecParser.g:2052:1: (lv_dropped_24_0= Dropped )
            	    {
            	    // InternalReqSpecParser.g:2052:1: (lv_dropped_24_0= Dropped )
            	    // InternalReqSpecParser.g:2053:3: lv_dropped_24_0= Dropped
            	    {
            	    lv_dropped_24_0=(Token)match(input,Dropped,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dropped_24_0, grammarAccess.getDocGoalAccess().getDroppedDroppedKeyword_5_9_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	      	        }
            	             		setWithLastConsumed(current, "dropped", true, "dropped");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalReqSpecParser.g:2067:2: ( (lv_dropRationale_25_0= RULE_STRING ) )?
            	    int alt48=2;
            	    int LA48_0 = input.LA(1);

            	    if ( (LA48_0==RULE_STRING) ) {
            	        alt48=1;
            	    }
            	    switch (alt48) {
            	        case 1 :
            	            // InternalReqSpecParser.g:2068:1: (lv_dropRationale_25_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:2068:1: (lv_dropRationale_25_0= RULE_STRING )
            	            // InternalReqSpecParser.g:2069:3: lv_dropRationale_25_0= RULE_STRING
            	            {
            	            lv_dropRationale_25_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_dropRationale_25_0, grammarAccess.getDocGoalAccess().getDropRationaleSTRINGTerminalRuleCall_5_9_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDocGoalRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"dropRationale",
            	                      		lv_dropRationale_25_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalReqSpecParser.g:2092:4: ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2092:4: ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2093:5: {...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 10)");
            	    }
            	    // InternalReqSpecParser.g:2093:105: ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2094:6: ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 10);
            	    // InternalReqSpecParser.g:2097:6: ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2097:7: {...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2097:16: (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2098:2: otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_26=(Token)match(input,Stakeholder,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_26, grammarAccess.getDocGoalAccess().getStakeholderKeyword_5_10_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2102:1: ( ( ruleQualifiedName ) )+
            	    int cnt49=0;
            	    loop49:
            	    do {
            	        int alt49=2;
            	        int LA49_0 = input.LA(1);

            	        if ( (LA49_0==RULE_ID) ) {
            	            alt49=1;
            	        }


            	        switch (alt49) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2103:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2103:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2104:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getStakeholderReferenceStakeholderCrossReference_5_10_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt49 >= 1 ) break loop49;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(49, input);
            	                throw eee;
            	        }
            	        cnt49++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalReqSpecParser.g:2125:4: ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2125:4: ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2126:5: {...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 11)");
            	    }
            	    // InternalReqSpecParser.g:2126:105: ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) )
            	    // InternalReqSpecParser.g:2127:6: ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 11);
            	    // InternalReqSpecParser.g:2130:6: ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) )
            	    // InternalReqSpecParser.g:2130:7: {...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2130:16: (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:2131:2: otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_28=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_28, grammarAccess.getDocGoalAccess().getSeeKeyword_5_11_0());
            	          
            	    }
            	    otherlv_29=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_29, grammarAccess.getDocGoalAccess().getDocumentKeyword_5_11_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:2140:1: ( (lv_docReference_30_0= ruleExternalDocument ) )+
            	    int cnt50=0;
            	    loop50:
            	    do {
            	        int alt50=2;
            	        int LA50_0 = input.LA(1);

            	        if ( (LA50_0==RULE_ID) ) {
            	            alt50=1;
            	        }


            	        switch (alt50) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2141:1: (lv_docReference_30_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:2141:1: (lv_docReference_30_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:2142:3: lv_docReference_30_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocGoalAccess().getDocReferenceExternalDocumentParserRuleCall_5_11_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    lv_docReference_30_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_30_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt50 >= 1 ) break loop50;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(50, input);
            	                throw eee;
            	        }
            	        cnt50++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalReqSpecParser.g:2165:4: ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2165:4: ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2166:5: {...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 12)");
            	    }
            	    // InternalReqSpecParser.g:2166:105: ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) )
            	    // InternalReqSpecParser.g:2167:6: ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 12);
            	    // InternalReqSpecParser.g:2170:6: ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) )
            	    // InternalReqSpecParser.g:2170:7: {...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2170:16: (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:2171:2: otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+
            	    {
            	    otherlv_31=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_31, grammarAccess.getDocGoalAccess().getIssuesKeyword_5_12_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2175:1: ( (lv_issues_32_0= RULE_STRING ) )+
            	    int cnt51=0;
            	    loop51:
            	    do {
            	        int alt51=2;
            	        int LA51_0 = input.LA(1);

            	        if ( (LA51_0==RULE_STRING) ) {
            	            alt51=1;
            	        }


            	        switch (alt51) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2176:1: (lv_issues_32_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:2176:1: (lv_issues_32_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:2177:3: lv_issues_32_0= RULE_STRING
            	    	    {
            	    	    lv_issues_32_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_32_0, grammarAccess.getDocGoalAccess().getIssuesSTRINGTerminalRuleCall_5_12_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocGoalRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_32_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt51 >= 1 ) break loop51;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(51, input);
            	                throw eee;
            	        }
            	        cnt51++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDocGoalAccess().getUnorderedGroup_5());

            }

            otherlv_33=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_33, grammarAccess.getDocGoalAccess().getRightSquareBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocGoal"


    // $ANTLR start "entryRuleGoal"
    // InternalReqSpecParser.g:2220:1: entryRuleGoal returns [EObject current=null] : iv_ruleGoal= ruleGoal EOF ;
    public final EObject entryRuleGoal() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoal = null;


        try {
            // InternalReqSpecParser.g:2221:2: (iv_ruleGoal= ruleGoal EOF )
            // InternalReqSpecParser.g:2222:2: iv_ruleGoal= ruleGoal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGoalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGoal=ruleGoal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoal; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoal"


    // $ANTLR start "ruleGoal"
    // InternalReqSpecParser.g:2229:1: ruleGoal returns [EObject current=null] : (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_34= RightSquareBracket ) ;
    public final EObject ruleGoal() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token lv_dropped_22_0=null;
        Token lv_dropRationale_23_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token lv_issues_33_0=null;
        Token otherlv_34=null;
        EObject lv_description_10_0 = null;

        EObject lv_constants_11_0 = null;

        EObject lv_whencondition_12_0 = null;

        EObject lv_rationale_13_0 = null;

        EObject lv_changeUncertainty_14_0 = null;

        EObject lv_docReference_31_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:2232:28: ( (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_34= RightSquareBracket ) )
            // InternalReqSpecParser.g:2233:1: (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_34= RightSquareBracket )
            {
            // InternalReqSpecParser.g:2233:1: (otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_34= RightSquareBracket )
            // InternalReqSpecParser.g:2234:2: otherlv_0= Goal ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_34= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Goal,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0());
                  
            }
            // InternalReqSpecParser.g:2238:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalReqSpecParser.g:2239:1: (lv_name_1_0= RULE_ID )
            {
            // InternalReqSpecParser.g:2239:1: (lv_name_1_0= RULE_ID )
            // InternalReqSpecParser.g:2240:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getGoalRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalReqSpecParser.g:2256:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==Colon) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalReqSpecParser.g:2257:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getGoalAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:2261:1: ( (lv_title_3_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:2262:1: (lv_title_3_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:2262:1: (lv_title_3_0= RULE_STRING )
                    // InternalReqSpecParser.g:2263:3: lv_title_3_0= RULE_STRING
                    {
                    lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_3_0, grammarAccess.getGoalAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGoalRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_3_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:2279:4: (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==For) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalReqSpecParser.g:2280:2: otherlv_4= For ( (otherlv_5= RULE_ID ) )
                    {
                    otherlv_4=(Token)match(input,For,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getGoalAccess().getForKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:2284:1: ( (otherlv_5= RULE_ID ) )
                    // InternalReqSpecParser.g:2285:1: (otherlv_5= RULE_ID )
                    {
                    // InternalReqSpecParser.g:2285:1: (otherlv_5= RULE_ID )
                    // InternalReqSpecParser.g:2286:3: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getGoalRule());
                      	        }
                              
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_5, grammarAccess.getGoalAccess().getTargetElementNamedElementCrossReference_3_1_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getGoalAccess().getLeftSquareBracketKeyword_4());
                  
            }
            // InternalReqSpecParser.g:2302:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:2304:1: ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:2304:1: ( ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            // InternalReqSpecParser.g:2305:2: ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getGoalAccess().getUnorderedGroup_5());
            // InternalReqSpecParser.g:2308:2: ( ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )* )
            // InternalReqSpecParser.g:2309:3: ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )*
            {
            // InternalReqSpecParser.g:2309:3: ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )*
            loop65:
            do {
                int alt65=15;
                alt65 = dfa65.predict(input);
                switch (alt65) {
            	case 1 :
            	    // InternalReqSpecParser.g:2311:4: ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2311:4: ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2312:5: {...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalReqSpecParser.g:2312:101: ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2313:6: ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 0);
            	    // InternalReqSpecParser.g:2316:6: ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2316:7: {...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2316:16: (otherlv_8= Category ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2317:2: otherlv_8= Category ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_8=(Token)match(input,Category,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_8, grammarAccess.getGoalAccess().getCategoryKeyword_5_0_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2321:1: ( ( ruleQualifiedName ) )+
            	    int cnt55=0;
            	    loop55:
            	    do {
            	        int alt55=2;
            	        int LA55_0 = input.LA(1);

            	        if ( (LA55_0==RULE_ID) ) {
            	            alt55=1;
            	        }


            	        switch (alt55) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2322:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2322:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2323:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getCategoryCategoryCrossReference_5_0_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt55 >= 1 ) break loop55;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(55, input);
            	                throw eee;
            	        }
            	        cnt55++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:2344:4: ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2344:4: ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:2345:5: {...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalReqSpecParser.g:2345:101: ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:2346:6: ({...}? => ( (lv_description_10_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 1);
            	    // InternalReqSpecParser.g:2349:6: ({...}? => ( (lv_description_10_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:2349:7: {...}? => ( (lv_description_10_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2349:16: ( (lv_description_10_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:2350:1: (lv_description_10_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:2350:1: (lv_description_10_0= ruleDescription )
            	    // InternalReqSpecParser.g:2351:3: lv_description_10_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGoalAccess().getDescriptionDescriptionParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_description_10_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_10_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:2374:4: ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:2374:4: ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:2375:5: {...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalReqSpecParser.g:2375:101: ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:2376:6: ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 2);
            	    // InternalReqSpecParser.g:2379:6: ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+
            	    int cnt56=0;
            	    loop56:
            	    do {
            	        int alt56=2;
            	        int LA56_0 = input.LA(1);

            	        if ( (LA56_0==Val) ) {
            	            int LA56_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt56=1;
            	            }


            	        }


            	        switch (alt56) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2379:7: {...}? => ( (lv_constants_11_0= ruleValDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:2379:16: ( (lv_constants_11_0= ruleValDeclaration ) )
            	    	    // InternalReqSpecParser.g:2380:1: (lv_constants_11_0= ruleValDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:2380:1: (lv_constants_11_0= ruleValDeclaration )
            	    	    // InternalReqSpecParser.g:2381:3: lv_constants_11_0= ruleValDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getConstantsValDeclarationParserRuleCall_5_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_36);
            	    	    lv_constants_11_0=ruleValDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getGoalRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"constants",
            	    	              		lv_constants_11_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt56 >= 1 ) break loop56;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(56, input);
            	                throw eee;
            	        }
            	        cnt56++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:2404:4: ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2404:4: ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) )
            	    // InternalReqSpecParser.g:2405:5: {...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalReqSpecParser.g:2405:101: ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) )
            	    // InternalReqSpecParser.g:2406:6: ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 3);
            	    // InternalReqSpecParser.g:2409:6: ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) )
            	    // InternalReqSpecParser.g:2409:7: {...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2409:16: ( (lv_whencondition_12_0= ruleWhenCondition ) )
            	    // InternalReqSpecParser.g:2410:1: (lv_whencondition_12_0= ruleWhenCondition )
            	    {
            	    // InternalReqSpecParser.g:2410:1: (lv_whencondition_12_0= ruleWhenCondition )
            	    // InternalReqSpecParser.g:2411:3: lv_whencondition_12_0= ruleWhenCondition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGoalAccess().getWhenconditionWhenConditionParserRuleCall_5_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_whencondition_12_0=ruleWhenCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"whencondition",
            	              		lv_whencondition_12_0, 
            	              		"org.osate.reqspec.ReqSpec.WhenCondition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:2434:4: ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2434:4: ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) )
            	    // InternalReqSpecParser.g:2435:5: {...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalReqSpecParser.g:2435:101: ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) )
            	    // InternalReqSpecParser.g:2436:6: ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 4);
            	    // InternalReqSpecParser.g:2439:6: ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) )
            	    // InternalReqSpecParser.g:2439:7: {...}? => ( (lv_rationale_13_0= ruleRationale ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2439:16: ( (lv_rationale_13_0= ruleRationale ) )
            	    // InternalReqSpecParser.g:2440:1: (lv_rationale_13_0= ruleRationale )
            	    {
            	    // InternalReqSpecParser.g:2440:1: (lv_rationale_13_0= ruleRationale )
            	    // InternalReqSpecParser.g:2441:3: lv_rationale_13_0= ruleRationale
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGoalAccess().getRationaleRationaleParserRuleCall_5_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_rationale_13_0=ruleRationale();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rationale",
            	              		lv_rationale_13_0, 
            	              		"org.osate.alisa.common.Common.Rationale");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:2464:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2464:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) )
            	    // InternalReqSpecParser.g:2465:5: {...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalReqSpecParser.g:2465:101: ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) )
            	    // InternalReqSpecParser.g:2466:6: ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 5);
            	    // InternalReqSpecParser.g:2469:6: ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) )
            	    // InternalReqSpecParser.g:2469:7: {...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2469:16: ( (lv_changeUncertainty_14_0= ruleUncertainty ) )
            	    // InternalReqSpecParser.g:2470:1: (lv_changeUncertainty_14_0= ruleUncertainty )
            	    {
            	    // InternalReqSpecParser.g:2470:1: (lv_changeUncertainty_14_0= ruleUncertainty )
            	    // InternalReqSpecParser.g:2471:3: lv_changeUncertainty_14_0= ruleUncertainty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGoalAccess().getChangeUncertaintyUncertaintyParserRuleCall_5_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_changeUncertainty_14_0=ruleUncertainty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGoalRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"changeUncertainty",
            	              		lv_changeUncertainty_14_0, 
            	              		"org.osate.alisa.common.Common.Uncertainty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:2494:4: ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2494:4: ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2495:5: {...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalReqSpecParser.g:2495:101: ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2496:6: ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 6);
            	    // InternalReqSpecParser.g:2499:6: ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2499:7: {...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2499:16: (otherlv_15= Refines ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2500:2: otherlv_15= Refines ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_15=(Token)match(input,Refines,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_15, grammarAccess.getGoalAccess().getRefinesKeyword_5_6_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2504:1: ( ( ruleQualifiedName ) )+
            	    int cnt57=0;
            	    loop57:
            	    do {
            	        int alt57=2;
            	        int LA57_0 = input.LA(1);

            	        if ( (LA57_0==RULE_ID) ) {
            	            alt57=1;
            	        }


            	        switch (alt57) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2505:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2505:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2506:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getRefinesReferenceGoalCrossReference_5_6_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt57 >= 1 ) break loop57;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(57, input);
            	                throw eee;
            	        }
            	        cnt57++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalReqSpecParser.g:2527:4: ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2527:4: ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2528:5: {...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalReqSpecParser.g:2528:101: ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2529:6: ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 7);
            	    // InternalReqSpecParser.g:2532:6: ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2532:7: {...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2532:16: (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2533:2: otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_17=(Token)match(input,Conflicts,FollowSets000.FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_17, grammarAccess.getGoalAccess().getConflictsKeyword_5_7_0());
            	          
            	    }
            	    otherlv_18=(Token)match(input,With,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_18, grammarAccess.getGoalAccess().getWithKeyword_5_7_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:2542:1: ( ( ruleQualifiedName ) )+
            	    int cnt58=0;
            	    loop58:
            	    do {
            	        int alt58=2;
            	        int LA58_0 = input.LA(1);

            	        if ( (LA58_0==RULE_ID) ) {
            	            alt58=1;
            	        }


            	        switch (alt58) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2543:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2543:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2544:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getConflictsReferenceGoalCrossReference_5_7_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt58 >= 1 ) break loop58;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(58, input);
            	                throw eee;
            	        }
            	        cnt58++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalReqSpecParser.g:2565:4: ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2565:4: ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2566:5: {...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 8)");
            	    }
            	    // InternalReqSpecParser.g:2566:101: ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2567:6: ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 8);
            	    // InternalReqSpecParser.g:2570:6: ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2570:7: {...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2570:16: (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2571:2: otherlv_20= Evolves ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_20=(Token)match(input,Evolves,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_20, grammarAccess.getGoalAccess().getEvolvesKeyword_5_8_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2575:1: ( ( ruleQualifiedName ) )+
            	    int cnt59=0;
            	    loop59:
            	    do {
            	        int alt59=2;
            	        int LA59_0 = input.LA(1);

            	        if ( (LA59_0==RULE_ID) ) {
            	            alt59=1;
            	        }


            	        switch (alt59) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2576:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2576:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2577:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getEvolvesReferenceRequirementCrossReference_5_8_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt59 >= 1 ) break loop59;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(59, input);
            	                throw eee;
            	        }
            	        cnt59++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalReqSpecParser.g:2598:4: ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2598:4: ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) )
            	    // InternalReqSpecParser.g:2599:5: {...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 9)");
            	    }
            	    // InternalReqSpecParser.g:2599:101: ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) )
            	    // InternalReqSpecParser.g:2600:6: ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 9);
            	    // InternalReqSpecParser.g:2603:6: ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) )
            	    // InternalReqSpecParser.g:2603:7: {...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2603:16: ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? )
            	    // InternalReqSpecParser.g:2603:17: ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )?
            	    {
            	    // InternalReqSpecParser.g:2603:17: ( (lv_dropped_22_0= Dropped ) )
            	    // InternalReqSpecParser.g:2604:1: (lv_dropped_22_0= Dropped )
            	    {
            	    // InternalReqSpecParser.g:2604:1: (lv_dropped_22_0= Dropped )
            	    // InternalReqSpecParser.g:2605:3: lv_dropped_22_0= Dropped
            	    {
            	    lv_dropped_22_0=(Token)match(input,Dropped,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dropped_22_0, grammarAccess.getGoalAccess().getDroppedDroppedKeyword_5_9_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getGoalRule());
            	      	        }
            	             		setWithLastConsumed(current, "dropped", true, "dropped");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalReqSpecParser.g:2619:2: ( (lv_dropRationale_23_0= RULE_STRING ) )?
            	    int alt60=2;
            	    int LA60_0 = input.LA(1);

            	    if ( (LA60_0==RULE_STRING) ) {
            	        alt60=1;
            	    }
            	    switch (alt60) {
            	        case 1 :
            	            // InternalReqSpecParser.g:2620:1: (lv_dropRationale_23_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:2620:1: (lv_dropRationale_23_0= RULE_STRING )
            	            // InternalReqSpecParser.g:2621:3: lv_dropRationale_23_0= RULE_STRING
            	            {
            	            lv_dropRationale_23_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_dropRationale_23_0, grammarAccess.getGoalAccess().getDropRationaleSTRINGTerminalRuleCall_5_9_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getGoalRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"dropRationale",
            	                      		lv_dropRationale_23_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalReqSpecParser.g:2644:4: ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2644:4: ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2645:5: {...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 10)");
            	    }
            	    // InternalReqSpecParser.g:2645:102: ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2646:6: ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 10);
            	    // InternalReqSpecParser.g:2649:6: ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2649:7: {...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2649:16: (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2650:2: otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_24=(Token)match(input,Stakeholder,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_24, grammarAccess.getGoalAccess().getStakeholderKeyword_5_10_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2654:1: ( ( ruleQualifiedName ) )+
            	    int cnt61=0;
            	    loop61:
            	    do {
            	        int alt61=2;
            	        int LA61_0 = input.LA(1);

            	        if ( (LA61_0==RULE_ID) ) {
            	            alt61=1;
            	        }


            	        switch (alt61) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2655:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2655:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2656:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderReferenceStakeholderCrossReference_5_10_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt61 >= 1 ) break loop61;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(61, input);
            	                throw eee;
            	        }
            	        cnt61++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalReqSpecParser.g:2677:4: ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2677:4: ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2678:5: {...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 11)");
            	    }
            	    // InternalReqSpecParser.g:2678:102: ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:2679:6: ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 11);
            	    // InternalReqSpecParser.g:2682:6: ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:2682:7: {...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2682:16: (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2683:2: otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_26=(Token)match(input,See,FollowSets000.FOLLOW_40); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_26, grammarAccess.getGoalAccess().getSeeKeyword_5_11_0());
            	          
            	    }
            	    otherlv_27=(Token)match(input,Goal,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_27, grammarAccess.getGoalAccess().getGoalKeyword_5_11_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:2692:1: ( ( ruleQualifiedName ) )+
            	    int cnt62=0;
            	    loop62:
            	    do {
            	        int alt62=2;
            	        int LA62_0 = input.LA(1);

            	        if ( (LA62_0==RULE_ID) ) {
            	            alt62=1;
            	        }


            	        switch (alt62) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2693:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2693:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2694:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getGoalReferenceGoalCrossReference_5_11_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt62 >= 1 ) break loop62;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(62, input);
            	                throw eee;
            	        }
            	        cnt62++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalReqSpecParser.g:2715:4: ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2715:4: ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2716:5: {...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 12)");
            	    }
            	    // InternalReqSpecParser.g:2716:102: ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) )
            	    // InternalReqSpecParser.g:2717:6: ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 12);
            	    // InternalReqSpecParser.g:2720:6: ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) )
            	    // InternalReqSpecParser.g:2720:7: {...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2720:16: (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:2721:2: otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_29=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_29, grammarAccess.getGoalAccess().getSeeKeyword_5_12_0());
            	          
            	    }
            	    otherlv_30=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_30, grammarAccess.getGoalAccess().getDocumentKeyword_5_12_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:2730:1: ( (lv_docReference_31_0= ruleExternalDocument ) )+
            	    int cnt63=0;
            	    loop63:
            	    do {
            	        int alt63=2;
            	        int LA63_0 = input.LA(1);

            	        if ( (LA63_0==RULE_ID) ) {
            	            alt63=1;
            	        }


            	        switch (alt63) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2731:1: (lv_docReference_31_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:2731:1: (lv_docReference_31_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:2732:3: lv_docReference_31_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGoalAccess().getDocReferenceExternalDocumentParserRuleCall_5_12_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_37);
            	    	    lv_docReference_31_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getGoalRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_31_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt63 >= 1 ) break loop63;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(63, input);
            	                throw eee;
            	        }
            	        cnt63++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalReqSpecParser.g:2755:4: ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:2755:4: ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:2756:5: {...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 13)");
            	    }
            	    // InternalReqSpecParser.g:2756:102: ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) )
            	    // InternalReqSpecParser.g:2757:6: ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 13);
            	    // InternalReqSpecParser.g:2760:6: ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) )
            	    // InternalReqSpecParser.g:2760:7: {...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGoal", "true");
            	    }
            	    // InternalReqSpecParser.g:2760:16: (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:2761:2: otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+
            	    {
            	    otherlv_32=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_32, grammarAccess.getGoalAccess().getIssuesKeyword_5_13_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2765:1: ( (lv_issues_33_0= RULE_STRING ) )+
            	    int cnt64=0;
            	    loop64:
            	    do {
            	        int alt64=2;
            	        int LA64_0 = input.LA(1);

            	        if ( (LA64_0==RULE_STRING) ) {
            	            alt64=1;
            	        }


            	        switch (alt64) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2766:1: (lv_issues_33_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:2766:1: (lv_issues_33_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:2767:3: lv_issues_33_0= RULE_STRING
            	    	    {
            	    	    lv_issues_33_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_39); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_33_0, grammarAccess.getGoalAccess().getIssuesSTRINGTerminalRuleCall_5_13_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGoalRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_33_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt64 >= 1 ) break loop64;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(64, input);
            	                throw eee;
            	        }
            	        cnt64++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getGoalAccess().getUnorderedGroup_5());

            }

            otherlv_34=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_34, grammarAccess.getGoalAccess().getRightSquareBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoal"


    // $ANTLR start "entryRuleSystemRequirement"
    // InternalReqSpecParser.g:2810:1: entryRuleSystemRequirement returns [EObject current=null] : iv_ruleSystemRequirement= ruleSystemRequirement EOF ;
    public final EObject entryRuleSystemRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSystemRequirement = null;


        try {
            // InternalReqSpecParser.g:2811:2: (iv_ruleSystemRequirement= ruleSystemRequirement EOF )
            // InternalReqSpecParser.g:2812:2: iv_ruleSystemRequirement= ruleSystemRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSystemRequirementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSystemRequirement=ruleSystemRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSystemRequirement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSystemRequirement"


    // $ANTLR start "ruleSystemRequirement"
    // InternalReqSpecParser.g:2819:1: ruleSystemRequirement returns [EObject current=null] : (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )* otherlv_43= RightSquareBracket ) ;
    public final EObject ruleSystemRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token lv_exceptionText_16_0=null;
        Token otherlv_17=null;
        Token lv_dropped_19_0=null;
        Token lv_dropRationale_20_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token lv_issues_42_0=null;
        Token otherlv_43=null;
        EObject lv_description_9_0 = null;

        EObject lv_whencondition_10_0 = null;

        EObject lv_predicate_11_0 = null;

        EObject lv_rationale_12_0 = null;

        EObject lv_changeUncertainty_13_0 = null;

        EObject lv_constants_21_0 = null;

        EObject lv_computes_22_0 = null;

        EObject lv_docReference_40_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:2822:28: ( (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )* otherlv_43= RightSquareBracket ) )
            // InternalReqSpecParser.g:2823:1: (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )* otherlv_43= RightSquareBracket )
            {
            // InternalReqSpecParser.g:2823:1: (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )* otherlv_43= RightSquareBracket )
            // InternalReqSpecParser.g:2824:2: otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )? otherlv_6= LeftSquareBracket ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )* otherlv_43= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Requirement,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSystemRequirementAccess().getRequirementKeyword_0());
                  
            }
            // InternalReqSpecParser.g:2828:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalReqSpecParser.g:2829:1: (lv_name_1_0= RULE_ID )
            {
            // InternalReqSpecParser.g:2829:1: (lv_name_1_0= RULE_ID )
            // InternalReqSpecParser.g:2830:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getSystemRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSystemRequirementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalReqSpecParser.g:2846:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==Colon) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalReqSpecParser.g:2847:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getSystemRequirementAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:2851:1: ( (lv_title_3_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:2852:1: (lv_title_3_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:2852:1: (lv_title_3_0= RULE_STRING )
                    // InternalReqSpecParser.g:2853:3: lv_title_3_0= RULE_STRING
                    {
                    lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_3_0, grammarAccess.getSystemRequirementAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_3_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:2869:4: (otherlv_4= For ( (otherlv_5= RULE_ID ) ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==For) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalReqSpecParser.g:2870:2: otherlv_4= For ( (otherlv_5= RULE_ID ) )
                    {
                    otherlv_4=(Token)match(input,For,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getSystemRequirementAccess().getForKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:2874:1: ( (otherlv_5= RULE_ID ) )
                    // InternalReqSpecParser.g:2875:1: (otherlv_5= RULE_ID )
                    {
                    // InternalReqSpecParser.g:2875:1: (otherlv_5= RULE_ID )
                    // InternalReqSpecParser.g:2876:3: otherlv_5= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
                      	        }
                              
                    }
                    otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_5, grammarAccess.getSystemRequirementAccess().getTargetElementNamedElementCrossReference_3_1_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getSystemRequirementAccess().getLeftSquareBracketKeyword_4());
                  
            }
            // InternalReqSpecParser.g:2892:1: ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )*
            loop79:
            do {
                int alt79=20;
                alt79 = dfa79.predict(input);
                switch (alt79) {
            	case 1 :
            	    // InternalReqSpecParser.g:2892:2: (otherlv_7= Category ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:2892:2: (otherlv_7= Category ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:2893:2: otherlv_7= Category ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_7=(Token)match(input,Category,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_7, grammarAccess.getSystemRequirementAccess().getCategoryKeyword_5_0_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:2897:1: ( ( ruleQualifiedName ) )+
            	    int cnt68=0;
            	    loop68:
            	    do {
            	        int alt68=2;
            	        int LA68_0 = input.LA(1);

            	        if ( (LA68_0==RULE_ID) ) {
            	            alt68=1;
            	        }


            	        switch (alt68) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:2898:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:2898:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:2899:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getCategoryCategoryCrossReference_5_0_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt68 >= 1 ) break loop68;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(68, input);
            	                throw eee;
            	        }
            	        cnt68++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:2914:6: ( (lv_description_9_0= ruleDescription ) )
            	    {
            	    // InternalReqSpecParser.g:2914:6: ( (lv_description_9_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:2915:1: (lv_description_9_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:2915:1: (lv_description_9_0= ruleDescription )
            	    // InternalReqSpecParser.g:2916:3: lv_description_9_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getDescriptionDescriptionParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_description_9_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_9_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:2933:6: ( (lv_whencondition_10_0= ruleWhenCondition ) )
            	    {
            	    // InternalReqSpecParser.g:2933:6: ( (lv_whencondition_10_0= ruleWhenCondition ) )
            	    // InternalReqSpecParser.g:2934:1: (lv_whencondition_10_0= ruleWhenCondition )
            	    {
            	    // InternalReqSpecParser.g:2934:1: (lv_whencondition_10_0= ruleWhenCondition )
            	    // InternalReqSpecParser.g:2935:3: lv_whencondition_10_0= ruleWhenCondition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getWhenconditionWhenConditionParserRuleCall_5_2_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_whencondition_10_0=ruleWhenCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"whencondition",
            	              		lv_whencondition_10_0, 
            	              		"org.osate.reqspec.ReqSpec.WhenCondition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:2952:6: ( (lv_predicate_11_0= ruleReqPredicate ) )
            	    {
            	    // InternalReqSpecParser.g:2952:6: ( (lv_predicate_11_0= ruleReqPredicate ) )
            	    // InternalReqSpecParser.g:2953:1: (lv_predicate_11_0= ruleReqPredicate )
            	    {
            	    // InternalReqSpecParser.g:2953:1: (lv_predicate_11_0= ruleReqPredicate )
            	    // InternalReqSpecParser.g:2954:3: lv_predicate_11_0= ruleReqPredicate
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getPredicateReqPredicateParserRuleCall_5_3_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_predicate_11_0=ruleReqPredicate();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"predicate",
            	              		lv_predicate_11_0, 
            	              		"org.osate.reqspec.ReqSpec.ReqPredicate");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:2971:6: ( (lv_rationale_12_0= ruleRationale ) )
            	    {
            	    // InternalReqSpecParser.g:2971:6: ( (lv_rationale_12_0= ruleRationale ) )
            	    // InternalReqSpecParser.g:2972:1: (lv_rationale_12_0= ruleRationale )
            	    {
            	    // InternalReqSpecParser.g:2972:1: (lv_rationale_12_0= ruleRationale )
            	    // InternalReqSpecParser.g:2973:3: lv_rationale_12_0= ruleRationale
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getRationaleRationaleParserRuleCall_5_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_rationale_12_0=ruleRationale();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rationale",
            	              		lv_rationale_12_0, 
            	              		"org.osate.alisa.common.Common.Rationale");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:2990:6: ( (lv_changeUncertainty_13_0= ruleUncertainty ) )
            	    {
            	    // InternalReqSpecParser.g:2990:6: ( (lv_changeUncertainty_13_0= ruleUncertainty ) )
            	    // InternalReqSpecParser.g:2991:1: (lv_changeUncertainty_13_0= ruleUncertainty )
            	    {
            	    // InternalReqSpecParser.g:2991:1: (lv_changeUncertainty_13_0= ruleUncertainty )
            	    // InternalReqSpecParser.g:2992:3: lv_changeUncertainty_13_0= ruleUncertainty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getChangeUncertaintyUncertaintyParserRuleCall_5_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_changeUncertainty_13_0=ruleUncertainty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"changeUncertainty",
            	              		lv_changeUncertainty_13_0, 
            	              		"org.osate.alisa.common.Common.Uncertainty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:3009:6: (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3009:6: (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) )
            	    // InternalReqSpecParser.g:3010:2: otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) )
            	    {
            	    otherlv_14=(Token)match(input,Mitigates,FollowSets000.FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_14, grammarAccess.getSystemRequirementAccess().getMitigatesKeyword_5_6_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3014:1: ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) )
            	    int alt69=2;
            	    int LA69_0 = input.LA(1);

            	    if ( (LA69_0==RULE_ID) ) {
            	        alt69=1;
            	    }
            	    else if ( (LA69_0==RULE_STRING) ) {
            	        alt69=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 69, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt69) {
            	        case 1 :
            	            // InternalReqSpecParser.g:3014:2: ( (otherlv_15= RULE_ID ) )
            	            {
            	            // InternalReqSpecParser.g:3014:2: ( (otherlv_15= RULE_ID ) )
            	            // InternalReqSpecParser.g:3015:1: (otherlv_15= RULE_ID )
            	            {
            	            // InternalReqSpecParser.g:3015:1: (otherlv_15= RULE_ID )
            	            // InternalReqSpecParser.g:3016:3: otherlv_15= RULE_ID
            	            {
            	            if ( state.backtracking==0 ) {

            	              			if (current==null) {
            	              	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	              	        }
            	                      
            	            }
            	            otherlv_15=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		newLeafNode(otherlv_15, grammarAccess.getSystemRequirementAccess().getExceptionEObjectCrossReference_5_6_1_0_0()); 
            	              	
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalReqSpecParser.g:3028:6: ( (lv_exceptionText_16_0= RULE_STRING ) )
            	            {
            	            // InternalReqSpecParser.g:3028:6: ( (lv_exceptionText_16_0= RULE_STRING ) )
            	            // InternalReqSpecParser.g:3029:1: (lv_exceptionText_16_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:3029:1: (lv_exceptionText_16_0= RULE_STRING )
            	            // InternalReqSpecParser.g:3030:3: lv_exceptionText_16_0= RULE_STRING
            	            {
            	            lv_exceptionText_16_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_exceptionText_16_0, grammarAccess.getSystemRequirementAccess().getExceptionTextSTRINGTerminalRuleCall_5_6_1_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"exceptionText",
            	                      		lv_exceptionText_16_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalReqSpecParser.g:3047:6: (otherlv_17= Inherits ( ( ruleQualifiedName ) ) )
            	    {
            	    // InternalReqSpecParser.g:3047:6: (otherlv_17= Inherits ( ( ruleQualifiedName ) ) )
            	    // InternalReqSpecParser.g:3048:2: otherlv_17= Inherits ( ( ruleQualifiedName ) )
            	    {
            	    otherlv_17=(Token)match(input,Inherits,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_17, grammarAccess.getSystemRequirementAccess().getInheritsKeyword_5_7_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3052:1: ( ( ruleQualifiedName ) )
            	    // InternalReqSpecParser.g:3053:1: ( ruleQualifiedName )
            	    {
            	    // InternalReqSpecParser.g:3053:1: ( ruleQualifiedName )
            	    // InternalReqSpecParser.g:3054:3: ruleQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getInheritsReferenceRequirementCrossReference_5_7_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    ruleQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalReqSpecParser.g:3069:6: ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? )
            	    {
            	    // InternalReqSpecParser.g:3069:6: ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? )
            	    // InternalReqSpecParser.g:3069:7: ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )?
            	    {
            	    // InternalReqSpecParser.g:3069:7: ( (lv_dropped_19_0= Dropped ) )
            	    // InternalReqSpecParser.g:3070:1: (lv_dropped_19_0= Dropped )
            	    {
            	    // InternalReqSpecParser.g:3070:1: (lv_dropped_19_0= Dropped )
            	    // InternalReqSpecParser.g:3071:3: lv_dropped_19_0= Dropped
            	    {
            	    lv_dropped_19_0=(Token)match(input,Dropped,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dropped_19_0, grammarAccess.getSystemRequirementAccess().getDroppedDroppedKeyword_5_8_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		setWithLastConsumed(current, "dropped", true, "dropped");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalReqSpecParser.g:3085:2: ( (lv_dropRationale_20_0= RULE_STRING ) )?
            	    int alt70=2;
            	    int LA70_0 = input.LA(1);

            	    if ( (LA70_0==RULE_STRING) ) {
            	        alt70=1;
            	    }
            	    switch (alt70) {
            	        case 1 :
            	            // InternalReqSpecParser.g:3086:1: (lv_dropRationale_20_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:3086:1: (lv_dropRationale_20_0= RULE_STRING )
            	            // InternalReqSpecParser.g:3087:3: lv_dropRationale_20_0= RULE_STRING
            	            {
            	            lv_dropRationale_20_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_dropRationale_20_0, grammarAccess.getSystemRequirementAccess().getDropRationaleSTRINGTerminalRuleCall_5_8_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"dropRationale",
            	                      		lv_dropRationale_20_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalReqSpecParser.g:3104:6: ( (lv_constants_21_0= ruleValDeclaration ) )
            	    {
            	    // InternalReqSpecParser.g:3104:6: ( (lv_constants_21_0= ruleValDeclaration ) )
            	    // InternalReqSpecParser.g:3105:1: (lv_constants_21_0= ruleValDeclaration )
            	    {
            	    // InternalReqSpecParser.g:3105:1: (lv_constants_21_0= ruleValDeclaration )
            	    // InternalReqSpecParser.g:3106:3: lv_constants_21_0= ruleValDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getConstantsValDeclarationParserRuleCall_5_9_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_constants_21_0=ruleValDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"constants",
            	              		lv_constants_21_0, 
            	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalReqSpecParser.g:3123:6: ( (lv_computes_22_0= ruleComputeDeclaration ) )
            	    {
            	    // InternalReqSpecParser.g:3123:6: ( (lv_computes_22_0= ruleComputeDeclaration ) )
            	    // InternalReqSpecParser.g:3124:1: (lv_computes_22_0= ruleComputeDeclaration )
            	    {
            	    // InternalReqSpecParser.g:3124:1: (lv_computes_22_0= ruleComputeDeclaration )
            	    // InternalReqSpecParser.g:3125:3: lv_computes_22_0= ruleComputeDeclaration
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getComputesComputeDeclarationParserRuleCall_5_10_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_computes_22_0=ruleComputeDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"computes",
            	              		lv_computes_22_0, 
            	              		"org.osate.alisa.common.Common.ComputeDeclaration");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalReqSpecParser.g:3142:6: (otherlv_23= Refines ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3142:6: (otherlv_23= Refines ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3143:2: otherlv_23= Refines ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_23=(Token)match(input,Refines,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_23, grammarAccess.getSystemRequirementAccess().getRefinesKeyword_5_11_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3147:1: ( ( ruleQualifiedName ) )+
            	    int cnt71=0;
            	    loop71:
            	    do {
            	        int alt71=2;
            	        int LA71_0 = input.LA(1);

            	        if ( (LA71_0==RULE_ID) ) {
            	            alt71=1;
            	        }


            	        switch (alt71) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3148:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3148:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3149:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getRefinesReferenceRequirementCrossReference_5_11_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt71 >= 1 ) break loop71;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(71, input);
            	                throw eee;
            	        }
            	        cnt71++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalReqSpecParser.g:3164:6: (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3164:6: (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3165:2: otherlv_25= Decomposes ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_25=(Token)match(input,Decomposes,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_25, grammarAccess.getSystemRequirementAccess().getDecomposesKeyword_5_12_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3169:1: ( ( ruleQualifiedName ) )+
            	    int cnt72=0;
            	    loop72:
            	    do {
            	        int alt72=2;
            	        int LA72_0 = input.LA(1);

            	        if ( (LA72_0==RULE_ID) ) {
            	            alt72=1;
            	        }


            	        switch (alt72) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3170:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3170:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3171:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getDecomposesReferenceRequirementCrossReference_5_12_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt72 >= 1 ) break loop72;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(72, input);
            	                throw eee;
            	        }
            	        cnt72++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalReqSpecParser.g:3186:6: (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3186:6: (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3187:2: otherlv_27= Evolves ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_27=(Token)match(input,Evolves,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_27, grammarAccess.getSystemRequirementAccess().getEvolvesKeyword_5_13_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3191:1: ( ( ruleQualifiedName ) )+
            	    int cnt73=0;
            	    loop73:
            	    do {
            	        int alt73=2;
            	        int LA73_0 = input.LA(1);

            	        if ( (LA73_0==RULE_ID) ) {
            	            alt73=1;
            	        }


            	        switch (alt73) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3192:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3192:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3193:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getEvolvesReferenceRequirementCrossReference_5_13_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt73 >= 1 ) break loop73;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(73, input);
            	                throw eee;
            	        }
            	        cnt73++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalReqSpecParser.g:3208:6: (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3208:6: (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3209:2: otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_29=(Token)match(input,Development,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_29, grammarAccess.getSystemRequirementAccess().getDevelopmentKeyword_5_14_0());
            	          
            	    }
            	    otherlv_30=(Token)match(input,Stakeholder,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_30, grammarAccess.getSystemRequirementAccess().getStakeholderKeyword_5_14_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3218:1: ( ( ruleQualifiedName ) )+
            	    int cnt74=0;
            	    loop74:
            	    do {
            	        int alt74=2;
            	        int LA74_0 = input.LA(1);

            	        if ( (LA74_0==RULE_ID) ) {
            	            alt74=1;
            	        }


            	        switch (alt74) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3219:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3219:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3220:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getDevelopmentStakeholderStakeholderCrossReference_5_14_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt74 >= 1 ) break loop74;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(74, input);
            	                throw eee;
            	        }
            	        cnt74++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalReqSpecParser.g:3235:6: (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3235:6: (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3236:2: otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_32=(Token)match(input,See,FollowSets000.FOLLOW_40); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_32, grammarAccess.getSystemRequirementAccess().getSeeKeyword_5_15_0());
            	          
            	    }
            	    otherlv_33=(Token)match(input,Goal,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_33, grammarAccess.getSystemRequirementAccess().getGoalKeyword_5_15_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3245:1: ( ( ruleQualifiedName ) )+
            	    int cnt75=0;
            	    loop75:
            	    do {
            	        int alt75=2;
            	        int LA75_0 = input.LA(1);

            	        if ( (LA75_0==RULE_ID) ) {
            	            alt75=1;
            	        }


            	        switch (alt75) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3246:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3246:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3247:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getGoalReferenceGoalCrossReference_5_15_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt75 >= 1 ) break loop75;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(75, input);
            	                throw eee;
            	        }
            	        cnt75++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalReqSpecParser.g:3262:6: (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3262:6: (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3263:2: otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_35=(Token)match(input,See,FollowSets000.FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_35, grammarAccess.getSystemRequirementAccess().getSeeKeyword_5_16_0());
            	          
            	    }
            	    otherlv_36=(Token)match(input,Requirement,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_36, grammarAccess.getSystemRequirementAccess().getRequirementKeyword_5_16_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3272:1: ( ( ruleQualifiedName ) )+
            	    int cnt76=0;
            	    loop76:
            	    do {
            	        int alt76=2;
            	        int LA76_0 = input.LA(1);

            	        if ( (LA76_0==RULE_ID) ) {
            	            alt76=1;
            	        }


            	        switch (alt76) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3273:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3273:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3274:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getRequirementReferenceRequirementCrossReference_5_16_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt76 >= 1 ) break loop76;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(76, input);
            	                throw eee;
            	        }
            	        cnt76++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalReqSpecParser.g:3289:6: (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3289:6: (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:3290:2: otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_38=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_38, grammarAccess.getSystemRequirementAccess().getSeeKeyword_5_17_0());
            	          
            	    }
            	    otherlv_39=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_39, grammarAccess.getSystemRequirementAccess().getDocumentKeyword_5_17_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3299:1: ( (lv_docReference_40_0= ruleExternalDocument ) )+
            	    int cnt77=0;
            	    loop77:
            	    do {
            	        int alt77=2;
            	        int LA77_0 = input.LA(1);

            	        if ( (LA77_0==RULE_ID) ) {
            	            alt77=1;
            	        }


            	        switch (alt77) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3300:1: (lv_docReference_40_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:3300:1: (lv_docReference_40_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:3301:3: lv_docReference_40_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getSystemRequirementAccess().getDocReferenceExternalDocumentParserRuleCall_5_17_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    lv_docReference_40_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_40_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt77 >= 1 ) break loop77;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(77, input);
            	                throw eee;
            	        }
            	        cnt77++;
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalReqSpecParser.g:3318:6: (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ )
            	    {
            	    // InternalReqSpecParser.g:3318:6: (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:3319:2: otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+
            	    {
            	    otherlv_41=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_41, grammarAccess.getSystemRequirementAccess().getIssuesKeyword_5_18_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3323:1: ( (lv_issues_42_0= RULE_STRING ) )+
            	    int cnt78=0;
            	    loop78:
            	    do {
            	        int alt78=2;
            	        int LA78_0 = input.LA(1);

            	        if ( (LA78_0==RULE_STRING) ) {
            	            alt78=1;
            	        }


            	        switch (alt78) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3324:1: (lv_issues_42_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:3324:1: (lv_issues_42_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:3325:3: lv_issues_42_0= RULE_STRING
            	    	    {
            	    	    lv_issues_42_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_42_0, grammarAccess.getSystemRequirementAccess().getIssuesSTRINGTerminalRuleCall_5_18_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getSystemRequirementRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_42_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt78 >= 1 ) break loop78;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(78, input);
            	                throw eee;
            	        }
            	        cnt78++;
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            otherlv_43=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_43, grammarAccess.getSystemRequirementAccess().getRightSquareBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSystemRequirement"


    // $ANTLR start "entryRuleGlobalRequirement"
    // InternalReqSpecParser.g:3354:1: entryRuleGlobalRequirement returns [EObject current=null] : iv_ruleGlobalRequirement= ruleGlobalRequirement EOF ;
    public final EObject entryRuleGlobalRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGlobalRequirement = null;


        try {
            // InternalReqSpecParser.g:3355:2: (iv_ruleGlobalRequirement= ruleGlobalRequirement EOF )
            // InternalReqSpecParser.g:3356:2: iv_ruleGlobalRequirement= ruleGlobalRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGlobalRequirementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGlobalRequirement=ruleGlobalRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGlobalRequirement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGlobalRequirement"


    // $ANTLR start "ruleGlobalRequirement"
    // InternalReqSpecParser.g:3363:1: ruleGlobalRequirement returns [EObject current=null] : (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) ) )? otherlv_7= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_43= RightSquareBracket ) ;
    public final EObject ruleGlobalRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token lv_exceptionText_20_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_dropped_27_0=null;
        Token lv_dropRationale_28_0=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        Token otherlv_38=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token lv_issues_42_0=null;
        Token otherlv_43=null;
        AntlrDatatypeRuleToken lv_componentCategory_5_0 = null;

        Enumerator lv_targetType_6_0 = null;

        EObject lv_description_11_0 = null;

        EObject lv_constants_12_0 = null;

        EObject lv_computes_13_0 = null;

        EObject lv_whencondition_14_0 = null;

        EObject lv_predicate_15_0 = null;

        EObject lv_rationale_16_0 = null;

        EObject lv_changeUncertainty_17_0 = null;

        EObject lv_docReference_40_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:3366:28: ( (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) ) )? otherlv_7= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_43= RightSquareBracket ) )
            // InternalReqSpecParser.g:3367:1: (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) ) )? otherlv_7= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_43= RightSquareBracket )
            {
            // InternalReqSpecParser.g:3367:1: (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) ) )? otherlv_7= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_43= RightSquareBracket )
            // InternalReqSpecParser.g:3368:2: otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) ) )? otherlv_7= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_43= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Requirement,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getGlobalRequirementAccess().getRequirementKeyword_0());
                  
            }
            // InternalReqSpecParser.g:3372:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalReqSpecParser.g:3373:1: (lv_name_1_0= RULE_ID )
            {
            // InternalReqSpecParser.g:3373:1: (lv_name_1_0= RULE_ID )
            // InternalReqSpecParser.g:3374:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getGlobalRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalReqSpecParser.g:3390:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Colon) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalReqSpecParser.g:3391:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getGlobalRequirementAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:3395:1: ( (lv_title_3_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:3396:1: (lv_title_3_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:3396:1: (lv_title_3_0= RULE_STRING )
                    // InternalReqSpecParser.g:3397:3: lv_title_3_0= RULE_STRING
                    {
                    lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_3_0, grammarAccess.getGlobalRequirementAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_3_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:3413:4: (otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==For) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalReqSpecParser.g:3414:2: otherlv_4= For ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) )
                    {
                    otherlv_4=(Token)match(input,For,FollowSets000.FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getGlobalRequirementAccess().getForKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:3418:1: ( ( (lv_componentCategory_5_0= ruleComponentCategory ) )+ | ( (lv_targetType_6_0= ruleTargetType ) ) )
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==Subprogram||LA82_0==Processor||LA82_0==Abstract||LA82_0==Process||(LA82_0>=Virtual && LA82_0<=Device)||LA82_0==Memory||(LA82_0>=KW_System && LA82_0<=Thread)||LA82_0==Data||LA82_0==Bus) ) {
                        alt82=1;
                    }
                    else if ( (LA82_0==Connection||LA82_0==Component||LA82_0==Element||LA82_0==Feature||LA82_0==Flow||LA82_0==Mode||LA82_0==Root) ) {
                        alt82=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 82, 0, input);

                        throw nvae;
                    }
                    switch (alt82) {
                        case 1 :
                            // InternalReqSpecParser.g:3418:2: ( (lv_componentCategory_5_0= ruleComponentCategory ) )+
                            {
                            // InternalReqSpecParser.g:3418:2: ( (lv_componentCategory_5_0= ruleComponentCategory ) )+
                            int cnt81=0;
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==Subprogram||LA81_0==Processor||LA81_0==Abstract||LA81_0==Process||(LA81_0>=Virtual && LA81_0<=Device)||LA81_0==Memory||(LA81_0>=KW_System && LA81_0<=Thread)||LA81_0==Data||LA81_0==Bus) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    // InternalReqSpecParser.g:3419:1: (lv_componentCategory_5_0= ruleComponentCategory )
                            	    {
                            	    // InternalReqSpecParser.g:3419:1: (lv_componentCategory_5_0= ruleComponentCategory )
                            	    // InternalReqSpecParser.g:3420:3: lv_componentCategory_5_0= ruleComponentCategory
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getComponentCategoryComponentCategoryParserRuleCall_3_1_0_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_47);
                            	    lv_componentCategory_5_0=ruleComponentCategory();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"componentCategory",
                            	              		lv_componentCategory_5_0, 
                            	              		"org.osate.alisa.common.Common.ComponentCategory");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt81 >= 1 ) break loop81;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(81, input);
                                        throw eee;
                                }
                                cnt81++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:3437:6: ( (lv_targetType_6_0= ruleTargetType ) )
                            {
                            // InternalReqSpecParser.g:3437:6: ( (lv_targetType_6_0= ruleTargetType ) )
                            // InternalReqSpecParser.g:3438:1: (lv_targetType_6_0= ruleTargetType )
                            {
                            // InternalReqSpecParser.g:3438:1: (lv_targetType_6_0= ruleTargetType )
                            // InternalReqSpecParser.g:3439:3: lv_targetType_6_0= ruleTargetType
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getTargetTypeTargetTypeEnumRuleCall_3_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_5);
                            lv_targetType_6_0=ruleTargetType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"targetType",
                                      		lv_targetType_6_0, 
                                      		"org.osate.alisa.common.Common.TargetType");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getGlobalRequirementAccess().getLeftSquareBracketKeyword_4());
                  
            }
            // InternalReqSpecParser.g:3460:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:3462:1: ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:3462:1: ( ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            // InternalReqSpecParser.g:3463:2: ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());
            // InternalReqSpecParser.g:3466:2: ( ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )* )
            // InternalReqSpecParser.g:3467:3: ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )*
            {
            // InternalReqSpecParser.g:3467:3: ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )*
            loop97:
            do {
                int alt97=19;
                alt97 = dfa97.predict(input);
                switch (alt97) {
            	case 1 :
            	    // InternalReqSpecParser.g:3469:4: ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3469:4: ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3470:5: {...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalReqSpecParser.g:3470:114: ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3471:6: ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 0);
            	    // InternalReqSpecParser.g:3474:6: ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3474:7: {...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3474:16: (otherlv_9= Category ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3475:2: otherlv_9= Category ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_9=(Token)match(input,Category,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_9, grammarAccess.getGlobalRequirementAccess().getCategoryKeyword_5_0_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3479:1: ( ( ruleQualifiedName ) )+
            	    int cnt84=0;
            	    loop84:
            	    do {
            	        int alt84=2;
            	        int LA84_0 = input.LA(1);

            	        if ( (LA84_0==RULE_ID) ) {
            	            alt84=1;
            	        }


            	        switch (alt84) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3480:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3480:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3481:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getCategoryCategoryCrossReference_5_0_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt84 >= 1 ) break loop84;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(84, input);
            	                throw eee;
            	        }
            	        cnt84++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:3502:4: ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3502:4: ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:3503:5: {...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalReqSpecParser.g:3503:114: ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:3504:6: ({...}? => ( (lv_description_11_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 1);
            	    // InternalReqSpecParser.g:3507:6: ({...}? => ( (lv_description_11_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:3507:7: {...}? => ( (lv_description_11_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3507:16: ( (lv_description_11_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:3508:1: (lv_description_11_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:3508:1: (lv_description_11_0= ruleDescription )
            	    // InternalReqSpecParser.g:3509:3: lv_description_11_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getDescriptionDescriptionParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_description_11_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_11_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:3532:4: ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:3532:4: ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:3533:5: {...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalReqSpecParser.g:3533:114: ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:3534:6: ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 2);
            	    // InternalReqSpecParser.g:3537:6: ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+
            	    int cnt85=0;
            	    loop85:
            	    do {
            	        int alt85=2;
            	        int LA85_0 = input.LA(1);

            	        if ( (LA85_0==Val) ) {
            	            int LA85_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt85=1;
            	            }


            	        }


            	        switch (alt85) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3537:7: {...}? => ( (lv_constants_12_0= ruleValDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:3537:16: ( (lv_constants_12_0= ruleValDeclaration ) )
            	    	    // InternalReqSpecParser.g:3538:1: (lv_constants_12_0= ruleValDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:3538:1: (lv_constants_12_0= ruleValDeclaration )
            	    	    // InternalReqSpecParser.g:3539:3: lv_constants_12_0= ruleValDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getConstantsValDeclarationParserRuleCall_5_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_48);
            	    	    lv_constants_12_0=ruleValDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"constants",
            	    	              		lv_constants_12_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt85 >= 1 ) break loop85;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(85, input);
            	                throw eee;
            	        }
            	        cnt85++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:3562:4: ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:3562:4: ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:3563:5: {...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalReqSpecParser.g:3563:114: ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:3564:6: ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 3);
            	    // InternalReqSpecParser.g:3567:6: ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+
            	    int cnt86=0;
            	    loop86:
            	    do {
            	        int alt86=2;
            	        int LA86_0 = input.LA(1);

            	        if ( (LA86_0==Compute) ) {
            	            int LA86_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt86=1;
            	            }


            	        }


            	        switch (alt86) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3567:7: {...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:3567:16: ( (lv_computes_13_0= ruleComputeDeclaration ) )
            	    	    // InternalReqSpecParser.g:3568:1: (lv_computes_13_0= ruleComputeDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:3568:1: (lv_computes_13_0= ruleComputeDeclaration )
            	    	    // InternalReqSpecParser.g:3569:3: lv_computes_13_0= ruleComputeDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getComputesComputeDeclarationParserRuleCall_5_3_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_48);
            	    	    lv_computes_13_0=ruleComputeDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"computes",
            	    	              		lv_computes_13_0, 
            	    	              		"org.osate.alisa.common.Common.ComputeDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt86 >= 1 ) break loop86;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(86, input);
            	                throw eee;
            	        }
            	        cnt86++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:3592:4: ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3592:4: ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) )
            	    // InternalReqSpecParser.g:3593:5: {...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalReqSpecParser.g:3593:114: ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) )
            	    // InternalReqSpecParser.g:3594:6: ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 4);
            	    // InternalReqSpecParser.g:3597:6: ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) )
            	    // InternalReqSpecParser.g:3597:7: {...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3597:16: ( (lv_whencondition_14_0= ruleWhenCondition ) )
            	    // InternalReqSpecParser.g:3598:1: (lv_whencondition_14_0= ruleWhenCondition )
            	    {
            	    // InternalReqSpecParser.g:3598:1: (lv_whencondition_14_0= ruleWhenCondition )
            	    // InternalReqSpecParser.g:3599:3: lv_whencondition_14_0= ruleWhenCondition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getWhenconditionWhenConditionParserRuleCall_5_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_whencondition_14_0=ruleWhenCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"whencondition",
            	              		lv_whencondition_14_0, 
            	              		"org.osate.reqspec.ReqSpec.WhenCondition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:3622:4: ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3622:4: ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) )
            	    // InternalReqSpecParser.g:3623:5: {...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalReqSpecParser.g:3623:114: ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) )
            	    // InternalReqSpecParser.g:3624:6: ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 5);
            	    // InternalReqSpecParser.g:3627:6: ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) )
            	    // InternalReqSpecParser.g:3627:7: {...}? => ( (lv_predicate_15_0= ruleReqPredicate ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3627:16: ( (lv_predicate_15_0= ruleReqPredicate ) )
            	    // InternalReqSpecParser.g:3628:1: (lv_predicate_15_0= ruleReqPredicate )
            	    {
            	    // InternalReqSpecParser.g:3628:1: (lv_predicate_15_0= ruleReqPredicate )
            	    // InternalReqSpecParser.g:3629:3: lv_predicate_15_0= ruleReqPredicate
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getPredicateReqPredicateParserRuleCall_5_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_predicate_15_0=ruleReqPredicate();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"predicate",
            	              		lv_predicate_15_0, 
            	              		"org.osate.reqspec.ReqSpec.ReqPredicate");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:3652:4: ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3652:4: ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) )
            	    // InternalReqSpecParser.g:3653:5: {...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalReqSpecParser.g:3653:114: ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) )
            	    // InternalReqSpecParser.g:3654:6: ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 6);
            	    // InternalReqSpecParser.g:3657:6: ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) )
            	    // InternalReqSpecParser.g:3657:7: {...}? => ( (lv_rationale_16_0= ruleRationale ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3657:16: ( (lv_rationale_16_0= ruleRationale ) )
            	    // InternalReqSpecParser.g:3658:1: (lv_rationale_16_0= ruleRationale )
            	    {
            	    // InternalReqSpecParser.g:3658:1: (lv_rationale_16_0= ruleRationale )
            	    // InternalReqSpecParser.g:3659:3: lv_rationale_16_0= ruleRationale
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getRationaleRationaleParserRuleCall_5_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_rationale_16_0=ruleRationale();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rationale",
            	              		lv_rationale_16_0, 
            	              		"org.osate.alisa.common.Common.Rationale");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalReqSpecParser.g:3682:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3682:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) )
            	    // InternalReqSpecParser.g:3683:5: {...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalReqSpecParser.g:3683:114: ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) )
            	    // InternalReqSpecParser.g:3684:6: ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 7);
            	    // InternalReqSpecParser.g:3687:6: ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) )
            	    // InternalReqSpecParser.g:3687:7: {...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3687:16: ( (lv_changeUncertainty_17_0= ruleUncertainty ) )
            	    // InternalReqSpecParser.g:3688:1: (lv_changeUncertainty_17_0= ruleUncertainty )
            	    {
            	    // InternalReqSpecParser.g:3688:1: (lv_changeUncertainty_17_0= ruleUncertainty )
            	    // InternalReqSpecParser.g:3689:3: lv_changeUncertainty_17_0= ruleUncertainty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getChangeUncertaintyUncertaintyParserRuleCall_5_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_changeUncertainty_17_0=ruleUncertainty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"changeUncertainty",
            	              		lv_changeUncertainty_17_0, 
            	              		"org.osate.alisa.common.Common.Uncertainty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalReqSpecParser.g:3712:4: ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3712:4: ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) )
            	    // InternalReqSpecParser.g:3713:5: {...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 8)");
            	    }
            	    // InternalReqSpecParser.g:3713:114: ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) )
            	    // InternalReqSpecParser.g:3714:6: ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 8);
            	    // InternalReqSpecParser.g:3717:6: ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) )
            	    // InternalReqSpecParser.g:3717:7: {...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3717:16: (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) )
            	    // InternalReqSpecParser.g:3718:2: otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) )
            	    {
            	    otherlv_18=(Token)match(input,Mitigates,FollowSets000.FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_18, grammarAccess.getGlobalRequirementAccess().getMitigatesKeyword_5_8_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3722:1: ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) )
            	    int alt87=2;
            	    int LA87_0 = input.LA(1);

            	    if ( (LA87_0==RULE_ID) ) {
            	        alt87=1;
            	    }
            	    else if ( (LA87_0==RULE_STRING) ) {
            	        alt87=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 87, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt87) {
            	        case 1 :
            	            // InternalReqSpecParser.g:3722:2: ( (otherlv_19= RULE_ID ) )
            	            {
            	            // InternalReqSpecParser.g:3722:2: ( (otherlv_19= RULE_ID ) )
            	            // InternalReqSpecParser.g:3723:1: (otherlv_19= RULE_ID )
            	            {
            	            // InternalReqSpecParser.g:3723:1: (otherlv_19= RULE_ID )
            	            // InternalReqSpecParser.g:3724:3: otherlv_19= RULE_ID
            	            {
            	            if ( state.backtracking==0 ) {

            	              			if (current==null) {
            	              	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	              	        }
            	                      
            	            }
            	            otherlv_19=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		newLeafNode(otherlv_19, grammarAccess.getGlobalRequirementAccess().getExceptionEObjectCrossReference_5_8_1_0_0()); 
            	              	
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalReqSpecParser.g:3736:6: ( (lv_exceptionText_20_0= RULE_STRING ) )
            	            {
            	            // InternalReqSpecParser.g:3736:6: ( (lv_exceptionText_20_0= RULE_STRING ) )
            	            // InternalReqSpecParser.g:3737:1: (lv_exceptionText_20_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:3737:1: (lv_exceptionText_20_0= RULE_STRING )
            	            // InternalReqSpecParser.g:3738:3: lv_exceptionText_20_0= RULE_STRING
            	            {
            	            lv_exceptionText_20_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_exceptionText_20_0, grammarAccess.getGlobalRequirementAccess().getExceptionTextSTRINGTerminalRuleCall_5_8_1_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"exceptionText",
            	                      		lv_exceptionText_20_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalReqSpecParser.g:3761:4: ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3761:4: ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3762:5: {...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 9)");
            	    }
            	    // InternalReqSpecParser.g:3762:114: ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3763:6: ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 9);
            	    // InternalReqSpecParser.g:3766:6: ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3766:7: {...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3766:16: (otherlv_21= Refines ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3767:2: otherlv_21= Refines ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_21=(Token)match(input,Refines,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_21, grammarAccess.getGlobalRequirementAccess().getRefinesKeyword_5_9_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3771:1: ( ( ruleQualifiedName ) )+
            	    int cnt88=0;
            	    loop88:
            	    do {
            	        int alt88=2;
            	        int LA88_0 = input.LA(1);

            	        if ( (LA88_0==RULE_ID) ) {
            	            alt88=1;
            	        }


            	        switch (alt88) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3772:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3772:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3773:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getRefinesReferenceRequirementCrossReference_5_9_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt88 >= 1 ) break loop88;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(88, input);
            	                throw eee;
            	        }
            	        cnt88++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalReqSpecParser.g:3794:4: ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3794:4: ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3795:5: {...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 10)");
            	    }
            	    // InternalReqSpecParser.g:3795:115: ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3796:6: ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 10);
            	    // InternalReqSpecParser.g:3799:6: ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3799:7: {...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3799:16: (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3800:2: otherlv_23= Decomposes ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_23=(Token)match(input,Decomposes,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_23, grammarAccess.getGlobalRequirementAccess().getDecomposesKeyword_5_10_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3804:1: ( ( ruleQualifiedName ) )+
            	    int cnt89=0;
            	    loop89:
            	    do {
            	        int alt89=2;
            	        int LA89_0 = input.LA(1);

            	        if ( (LA89_0==RULE_ID) ) {
            	            alt89=1;
            	        }


            	        switch (alt89) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3805:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3805:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3806:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getDecomposesReferenceRequirementCrossReference_5_10_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt89 >= 1 ) break loop89;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(89, input);
            	                throw eee;
            	        }
            	        cnt89++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalReqSpecParser.g:3827:4: ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3827:4: ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3828:5: {...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 11)");
            	    }
            	    // InternalReqSpecParser.g:3828:115: ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3829:6: ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 11);
            	    // InternalReqSpecParser.g:3832:6: ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3832:7: {...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3832:16: (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3833:2: otherlv_25= Evolves ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_25=(Token)match(input,Evolves,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_25, grammarAccess.getGlobalRequirementAccess().getEvolvesKeyword_5_11_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:3837:1: ( ( ruleQualifiedName ) )+
            	    int cnt90=0;
            	    loop90:
            	    do {
            	        int alt90=2;
            	        int LA90_0 = input.LA(1);

            	        if ( (LA90_0==RULE_ID) ) {
            	            alt90=1;
            	        }


            	        switch (alt90) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3838:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3838:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3839:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getEvolvesReferenceRequirementCrossReference_5_11_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt90 >= 1 ) break loop90;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(90, input);
            	                throw eee;
            	        }
            	        cnt90++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalReqSpecParser.g:3860:4: ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3860:4: ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) )
            	    // InternalReqSpecParser.g:3861:5: {...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 12)");
            	    }
            	    // InternalReqSpecParser.g:3861:115: ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) )
            	    // InternalReqSpecParser.g:3862:6: ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 12);
            	    // InternalReqSpecParser.g:3865:6: ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) )
            	    // InternalReqSpecParser.g:3865:7: {...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3865:16: ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? )
            	    // InternalReqSpecParser.g:3865:17: ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )?
            	    {
            	    // InternalReqSpecParser.g:3865:17: ( (lv_dropped_27_0= Dropped ) )
            	    // InternalReqSpecParser.g:3866:1: (lv_dropped_27_0= Dropped )
            	    {
            	    // InternalReqSpecParser.g:3866:1: (lv_dropped_27_0= Dropped )
            	    // InternalReqSpecParser.g:3867:3: lv_dropped_27_0= Dropped
            	    {
            	    lv_dropped_27_0=(Token)match(input,Dropped,FollowSets000.FOLLOW_50); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dropped_27_0, grammarAccess.getGlobalRequirementAccess().getDroppedDroppedKeyword_5_12_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	      	        }
            	             		setWithLastConsumed(current, "dropped", true, "dropped");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalReqSpecParser.g:3881:2: ( (lv_dropRationale_28_0= RULE_STRING ) )?
            	    int alt91=2;
            	    int LA91_0 = input.LA(1);

            	    if ( (LA91_0==RULE_STRING) ) {
            	        alt91=1;
            	    }
            	    switch (alt91) {
            	        case 1 :
            	            // InternalReqSpecParser.g:3882:1: (lv_dropRationale_28_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:3882:1: (lv_dropRationale_28_0= RULE_STRING )
            	            // InternalReqSpecParser.g:3883:3: lv_dropRationale_28_0= RULE_STRING
            	            {
            	            lv_dropRationale_28_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_48); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_dropRationale_28_0, grammarAccess.getGlobalRequirementAccess().getDropRationaleSTRINGTerminalRuleCall_5_12_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"dropRationale",
            	                      		lv_dropRationale_28_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalReqSpecParser.g:3906:4: ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3906:4: ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3907:5: {...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 13)");
            	    }
            	    // InternalReqSpecParser.g:3907:115: ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3908:6: ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 13);
            	    // InternalReqSpecParser.g:3911:6: ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3911:7: {...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3911:16: (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3912:2: otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_29=(Token)match(input,Development,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_29, grammarAccess.getGlobalRequirementAccess().getDevelopmentKeyword_5_13_0());
            	          
            	    }
            	    otherlv_30=(Token)match(input,Stakeholder,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_30, grammarAccess.getGlobalRequirementAccess().getStakeholderKeyword_5_13_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3921:1: ( ( ruleQualifiedName ) )+
            	    int cnt92=0;
            	    loop92:
            	    do {
            	        int alt92=2;
            	        int LA92_0 = input.LA(1);

            	        if ( (LA92_0==RULE_ID) ) {
            	            alt92=1;
            	        }


            	        switch (alt92) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3922:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3922:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3923:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getDevelopmentStakeholderStakeholderCrossReference_5_13_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt92 >= 1 ) break loop92;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(92, input);
            	                throw eee;
            	        }
            	        cnt92++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalReqSpecParser.g:3944:4: ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3944:4: ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3945:5: {...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 14)");
            	    }
            	    // InternalReqSpecParser.g:3945:115: ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3946:6: ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 14);
            	    // InternalReqSpecParser.g:3949:6: ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3949:7: {...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3949:16: (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3950:2: otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_32=(Token)match(input,See,FollowSets000.FOLLOW_40); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_32, grammarAccess.getGlobalRequirementAccess().getSeeKeyword_5_14_0());
            	          
            	    }
            	    otherlv_33=(Token)match(input,Goal,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_33, grammarAccess.getGlobalRequirementAccess().getGoalKeyword_5_14_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3959:1: ( ( ruleQualifiedName ) )+
            	    int cnt93=0;
            	    loop93:
            	    do {
            	        int alt93=2;
            	        int LA93_0 = input.LA(1);

            	        if ( (LA93_0==RULE_ID) ) {
            	            alt93=1;
            	        }


            	        switch (alt93) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3960:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3960:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3961:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getGoalReferenceGoalCrossReference_5_14_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt93 >= 1 ) break loop93;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(93, input);
            	                throw eee;
            	        }
            	        cnt93++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalReqSpecParser.g:3982:4: ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:3982:4: ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:3983:5: {...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 15)");
            	    }
            	    // InternalReqSpecParser.g:3983:115: ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:3984:6: ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 15);
            	    // InternalReqSpecParser.g:3987:6: ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:3987:7: {...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:3987:16: (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:3988:2: otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_35=(Token)match(input,See,FollowSets000.FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_35, grammarAccess.getGlobalRequirementAccess().getSeeKeyword_5_15_0());
            	          
            	    }
            	    otherlv_36=(Token)match(input,Requirement,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_36, grammarAccess.getGlobalRequirementAccess().getRequirementKeyword_5_15_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:3997:1: ( ( ruleQualifiedName ) )+
            	    int cnt94=0;
            	    loop94:
            	    do {
            	        int alt94=2;
            	        int LA94_0 = input.LA(1);

            	        if ( (LA94_0==RULE_ID) ) {
            	            alt94=1;
            	        }


            	        switch (alt94) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:3998:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:3998:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:3999:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getRequirementReferenceRequirementCrossReference_5_15_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt94 >= 1 ) break loop94;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(94, input);
            	                throw eee;
            	        }
            	        cnt94++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalReqSpecParser.g:4020:4: ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4020:4: ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4021:5: {...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 16)");
            	    }
            	    // InternalReqSpecParser.g:4021:115: ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) )
            	    // InternalReqSpecParser.g:4022:6: ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 16);
            	    // InternalReqSpecParser.g:4025:6: ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) )
            	    // InternalReqSpecParser.g:4025:7: {...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4025:16: (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:4026:2: otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_38=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_38, grammarAccess.getGlobalRequirementAccess().getSeeKeyword_5_16_0());
            	          
            	    }
            	    otherlv_39=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_39, grammarAccess.getGlobalRequirementAccess().getDocumentKeyword_5_16_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:4035:1: ( (lv_docReference_40_0= ruleExternalDocument ) )+
            	    int cnt95=0;
            	    loop95:
            	    do {
            	        int alt95=2;
            	        int LA95_0 = input.LA(1);

            	        if ( (LA95_0==RULE_ID) ) {
            	            alt95=1;
            	        }


            	        switch (alt95) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4036:1: (lv_docReference_40_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:4036:1: (lv_docReference_40_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:4037:3: lv_docReference_40_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getGlobalRequirementAccess().getDocReferenceExternalDocumentParserRuleCall_5_16_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_49);
            	    	    lv_docReference_40_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_40_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt95 >= 1 ) break loop95;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(95, input);
            	                throw eee;
            	        }
            	        cnt95++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalReqSpecParser.g:4060:4: ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4060:4: ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4061:5: {...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 17)");
            	    }
            	    // InternalReqSpecParser.g:4061:115: ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) )
            	    // InternalReqSpecParser.g:4062:6: ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 17);
            	    // InternalReqSpecParser.g:4065:6: ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )
            	    // InternalReqSpecParser.g:4065:7: {...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleGlobalRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4065:16: (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:4066:2: otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+
            	    {
            	    otherlv_41=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_41, grammarAccess.getGlobalRequirementAccess().getIssuesKeyword_5_17_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4070:1: ( (lv_issues_42_0= RULE_STRING ) )+
            	    int cnt96=0;
            	    loop96:
            	    do {
            	        int alt96=2;
            	        int LA96_0 = input.LA(1);

            	        if ( (LA96_0==RULE_STRING) ) {
            	            alt96=1;
            	        }


            	        switch (alt96) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4071:1: (lv_issues_42_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:4071:1: (lv_issues_42_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:4072:3: lv_issues_42_0= RULE_STRING
            	    	    {
            	    	    lv_issues_42_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_50); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_42_0, grammarAccess.getGlobalRequirementAccess().getIssuesSTRINGTerminalRuleCall_5_17_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getGlobalRequirementRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_42_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt96 >= 1 ) break loop96;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(96, input);
            	                throw eee;
            	        }
            	        cnt96++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5());

            }

            otherlv_43=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_43, grammarAccess.getGlobalRequirementAccess().getRightSquareBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGlobalRequirement"


    // $ANTLR start "entryRuleDocRequirement"
    // InternalReqSpecParser.g:4115:1: entryRuleDocRequirement returns [EObject current=null] : iv_ruleDocRequirement= ruleDocRequirement EOF ;
    public final EObject entryRuleDocRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocRequirement = null;


        try {
            // InternalReqSpecParser.g:4116:2: (iv_ruleDocRequirement= ruleDocRequirement EOF )
            // InternalReqSpecParser.g:4117:2: iv_ruleDocRequirement= ruleDocRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocRequirementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDocRequirement=ruleDocRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocRequirement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocRequirement"


    // $ANTLR start "ruleDocRequirement"
    // InternalReqSpecParser.g:4124:1: ruleDocRequirement returns [EObject current=null] : (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ ) )? otherlv_9= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_44= RightSquareBracket ) ;
    public final EObject ruleDocRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_title_3_0=null;
        Token otherlv_4=null;
        Token lv_targetDescription_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token lv_exceptionText_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token lv_dropped_31_0=null;
        Token lv_dropRationale_32_0=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token lv_issues_43_0=null;
        Token otherlv_44=null;
        AntlrDatatypeRuleToken lv_componentCategory_8_0 = null;

        EObject lv_description_13_0 = null;

        EObject lv_constants_14_0 = null;

        EObject lv_computes_15_0 = null;

        EObject lv_whencondition_16_0 = null;

        EObject lv_predicate_17_0 = null;

        EObject lv_rationale_18_0 = null;

        EObject lv_changeUncertainty_19_0 = null;

        EObject lv_docReference_41_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:4127:28: ( (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ ) )? otherlv_9= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_44= RightSquareBracket ) )
            // InternalReqSpecParser.g:4128:1: (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ ) )? otherlv_9= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_44= RightSquareBracket )
            {
            // InternalReqSpecParser.g:4128:1: (otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ ) )? otherlv_9= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_44= RightSquareBracket )
            // InternalReqSpecParser.g:4129:2: otherlv_0= Requirement ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )? (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ ) )? otherlv_9= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) ) ) otherlv_44= RightSquareBracket
            {
            otherlv_0=(Token)match(input,Requirement,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDocRequirementAccess().getRequirementKeyword_0());
                  
            }
            // InternalReqSpecParser.g:4133:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalReqSpecParser.g:4134:1: (lv_name_1_0= RULE_ID )
            {
            // InternalReqSpecParser.g:4134:1: (lv_name_1_0= RULE_ID )
            // InternalReqSpecParser.g:4135:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getDocRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getDocRequirementRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalReqSpecParser.g:4151:2: (otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==Colon) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalReqSpecParser.g:4152:2: otherlv_2= Colon ( (lv_title_3_0= RULE_STRING ) )
                    {
                    otherlv_2=(Token)match(input,Colon,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDocRequirementAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:4156:1: ( (lv_title_3_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:4157:1: (lv_title_3_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:4157:1: (lv_title_3_0= RULE_STRING )
                    // InternalReqSpecParser.g:4158:3: lv_title_3_0= RULE_STRING
                    {
                    lv_title_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_title_3_0, grammarAccess.getDocRequirementAccess().getTitleSTRINGTerminalRuleCall_2_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDocRequirementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"title",
                              		lv_title_3_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalReqSpecParser.g:4174:4: (otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==For) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalReqSpecParser.g:4175:2: otherlv_4= For ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ )
                    {
                    otherlv_4=(Token)match(input,For,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getDocRequirementAccess().getForKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:4179:1: ( ( (lv_targetDescription_5_0= RULE_STRING ) ) | ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? ) | ( (lv_componentCategory_8_0= ruleComponentCategory ) )+ )
                    int alt101=3;
                    switch ( input.LA(1) ) {
                    case RULE_STRING:
                        {
                        alt101=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt101=2;
                        }
                        break;
                    case Subprogram:
                    case Processor:
                    case Abstract:
                    case Process:
                    case Virtual:
                    case Device:
                    case Memory:
                    case KW_System:
                    case Thread:
                    case Data:
                    case Bus:
                        {
                        alt101=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }

                    switch (alt101) {
                        case 1 :
                            // InternalReqSpecParser.g:4179:2: ( (lv_targetDescription_5_0= RULE_STRING ) )
                            {
                            // InternalReqSpecParser.g:4179:2: ( (lv_targetDescription_5_0= RULE_STRING ) )
                            // InternalReqSpecParser.g:4180:1: (lv_targetDescription_5_0= RULE_STRING )
                            {
                            // InternalReqSpecParser.g:4180:1: (lv_targetDescription_5_0= RULE_STRING )
                            // InternalReqSpecParser.g:4181:3: lv_targetDescription_5_0= RULE_STRING
                            {
                            lv_targetDescription_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              			newLeafNode(lv_targetDescription_5_0, grammarAccess.getDocRequirementAccess().getTargetDescriptionSTRINGTerminalRuleCall_3_1_0_0()); 
                              		
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getDocRequirementRule());
                              	        }
                                     		setWithLastConsumed(
                                     			current, 
                                     			"targetDescription",
                                      		lv_targetDescription_5_0, 
                                      		"org.eclipse.xtext.common.Terminals.STRING");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:4198:6: ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? )
                            {
                            // InternalReqSpecParser.g:4198:6: ( ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )? )
                            // InternalReqSpecParser.g:4198:7: ( ( ruleAadlClassifierReference ) ) ( (otherlv_7= RULE_ID ) )?
                            {
                            // InternalReqSpecParser.g:4198:7: ( ( ruleAadlClassifierReference ) )
                            // InternalReqSpecParser.g:4199:1: ( ruleAadlClassifierReference )
                            {
                            // InternalReqSpecParser.g:4199:1: ( ruleAadlClassifierReference )
                            // InternalReqSpecParser.g:4200:3: ruleAadlClassifierReference
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getDocRequirementRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getDocRequirementAccess().getTargetComponentClassifierCrossReference_3_1_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_15);
                            ruleAadlClassifierReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }

                            // InternalReqSpecParser.g:4214:2: ( (otherlv_7= RULE_ID ) )?
                            int alt99=2;
                            int LA99_0 = input.LA(1);

                            if ( (LA99_0==RULE_ID) ) {
                                alt99=1;
                            }
                            switch (alt99) {
                                case 1 :
                                    // InternalReqSpecParser.g:4215:1: (otherlv_7= RULE_ID )
                                    {
                                    // InternalReqSpecParser.g:4215:1: (otherlv_7= RULE_ID )
                                    // InternalReqSpecParser.g:4216:3: otherlv_7= RULE_ID
                                    {
                                    if ( state.backtracking==0 ) {

                                      			if (current==null) {
                                      	            current = createModelElement(grammarAccess.getDocRequirementRule());
                                      	        }
                                              
                                    }
                                    otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      		newLeafNode(otherlv_7, grammarAccess.getDocRequirementAccess().getTargetElementNamedElementCrossReference_3_1_1_1_0()); 
                                      	
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalReqSpecParser.g:4228:6: ( (lv_componentCategory_8_0= ruleComponentCategory ) )+
                            {
                            // InternalReqSpecParser.g:4228:6: ( (lv_componentCategory_8_0= ruleComponentCategory ) )+
                            int cnt100=0;
                            loop100:
                            do {
                                int alt100=2;
                                int LA100_0 = input.LA(1);

                                if ( (LA100_0==Subprogram||LA100_0==Processor||LA100_0==Abstract||LA100_0==Process||(LA100_0>=Virtual && LA100_0<=Device)||LA100_0==Memory||(LA100_0>=KW_System && LA100_0<=Thread)||LA100_0==Data||LA100_0==Bus) ) {
                                    alt100=1;
                                }


                                switch (alt100) {
                            	case 1 :
                            	    // InternalReqSpecParser.g:4229:1: (lv_componentCategory_8_0= ruleComponentCategory )
                            	    {
                            	    // InternalReqSpecParser.g:4229:1: (lv_componentCategory_8_0= ruleComponentCategory )
                            	    // InternalReqSpecParser.g:4230:3: lv_componentCategory_8_0= ruleComponentCategory
                            	    {
                            	    if ( state.backtracking==0 ) {
                            	       
                            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getComponentCategoryComponentCategoryParserRuleCall_3_1_2_0()); 
                            	      	    
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_47);
                            	    lv_componentCategory_8_0=ruleComponentCategory();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      	        if (current==null) {
                            	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
                            	      	        }
                            	             		add(
                            	             			current, 
                            	             			"componentCategory",
                            	              		lv_componentCategory_8_0, 
                            	              		"org.osate.alisa.common.Common.ComponentCategory");
                            	      	        afterParserOrEnumRuleCall();
                            	      	    
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt100 >= 1 ) break loop100;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(100, input);
                                        throw eee;
                                }
                                cnt100++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getDocRequirementAccess().getLeftSquareBracketKeyword_4());
                  
            }
            // InternalReqSpecParser.g:4251:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:4253:1: ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:4253:1: ( ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* ) )
            // InternalReqSpecParser.g:4254:2: ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());
            // InternalReqSpecParser.g:4257:2: ( ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )* )
            // InternalReqSpecParser.g:4258:3: ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )*
            {
            // InternalReqSpecParser.g:4258:3: ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )*
            loop115:
            do {
                int alt115=19;
                alt115 = dfa115.predict(input);
                switch (alt115) {
            	case 1 :
            	    // InternalReqSpecParser.g:4260:4: ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4260:4: ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4261:5: {...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalReqSpecParser.g:4261:111: ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:4262:6: ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 0);
            	    // InternalReqSpecParser.g:4265:6: ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:4265:7: {...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4265:16: (otherlv_11= Category ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:4266:2: otherlv_11= Category ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_11=(Token)match(input,Category,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_11, grammarAccess.getDocRequirementAccess().getCategoryKeyword_5_0_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4270:1: ( ( ruleQualifiedName ) )+
            	    int cnt103=0;
            	    loop103:
            	    do {
            	        int alt103=2;
            	        int LA103_0 = input.LA(1);

            	        if ( (LA103_0==RULE_ID) ) {
            	            alt103=1;
            	        }


            	        switch (alt103) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4271:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:4271:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:4272:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getCategoryCategoryCrossReference_5_0_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt103 >= 1 ) break loop103;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(103, input);
            	                throw eee;
            	        }
            	        cnt103++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:4293:4: ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4293:4: ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) )
            	    // InternalReqSpecParser.g:4294:5: {...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalReqSpecParser.g:4294:111: ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) )
            	    // InternalReqSpecParser.g:4295:6: ({...}? => ( (lv_description_13_0= ruleDescription ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 1);
            	    // InternalReqSpecParser.g:4298:6: ({...}? => ( (lv_description_13_0= ruleDescription ) ) )
            	    // InternalReqSpecParser.g:4298:7: {...}? => ( (lv_description_13_0= ruleDescription ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4298:16: ( (lv_description_13_0= ruleDescription ) )
            	    // InternalReqSpecParser.g:4299:1: (lv_description_13_0= ruleDescription )
            	    {
            	    // InternalReqSpecParser.g:4299:1: (lv_description_13_0= ruleDescription )
            	    // InternalReqSpecParser.g:4300:3: lv_description_13_0= ruleDescription
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getDescriptionDescriptionParserRuleCall_5_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_description_13_0=ruleDescription();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"description",
            	              		lv_description_13_0, 
            	              		"org.osate.alisa.common.Common.Description");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:4323:4: ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:4323:4: ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:4324:5: {...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalReqSpecParser.g:4324:111: ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:4325:6: ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 2);
            	    // InternalReqSpecParser.g:4328:6: ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+
            	    int cnt104=0;
            	    loop104:
            	    do {
            	        int alt104=2;
            	        int LA104_0 = input.LA(1);

            	        if ( (LA104_0==Val) ) {
            	            int LA104_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt104=1;
            	            }


            	        }


            	        switch (alt104) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4328:7: {...}? => ( (lv_constants_14_0= ruleValDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:4328:16: ( (lv_constants_14_0= ruleValDeclaration ) )
            	    	    // InternalReqSpecParser.g:4329:1: (lv_constants_14_0= ruleValDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:4329:1: (lv_constants_14_0= ruleValDeclaration )
            	    	    // InternalReqSpecParser.g:4330:3: lv_constants_14_0= ruleValDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getConstantsValDeclarationParserRuleCall_5_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_41);
            	    	    lv_constants_14_0=ruleValDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"constants",
            	    	              		lv_constants_14_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ValDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt104 >= 1 ) break loop104;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(104, input);
            	                throw eee;
            	        }
            	        cnt104++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalReqSpecParser.g:4353:4: ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) )
            	    {
            	    // InternalReqSpecParser.g:4353:4: ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) )
            	    // InternalReqSpecParser.g:4354:5: {...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalReqSpecParser.g:4354:111: ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ )
            	    // InternalReqSpecParser.g:4355:6: ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 3);
            	    // InternalReqSpecParser.g:4358:6: ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+
            	    int cnt105=0;
            	    loop105:
            	    do {
            	        int alt105=2;
            	        int LA105_0 = input.LA(1);

            	        if ( (LA105_0==Compute) ) {
            	            int LA105_2 = input.LA(2);

            	            if ( ((true)) ) {
            	                alt105=1;
            	            }


            	        }


            	        switch (alt105) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4358:7: {...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    	    }
            	    	    // InternalReqSpecParser.g:4358:16: ( (lv_computes_15_0= ruleComputeDeclaration ) )
            	    	    // InternalReqSpecParser.g:4359:1: (lv_computes_15_0= ruleComputeDeclaration )
            	    	    {
            	    	    // InternalReqSpecParser.g:4359:1: (lv_computes_15_0= ruleComputeDeclaration )
            	    	    // InternalReqSpecParser.g:4360:3: lv_computes_15_0= ruleComputeDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getComputesComputeDeclarationParserRuleCall_5_3_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_41);
            	    	    lv_computes_15_0=ruleComputeDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"computes",
            	    	              		lv_computes_15_0, 
            	    	              		"org.osate.alisa.common.Common.ComputeDeclaration");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt105 >= 1 ) break loop105;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(105, input);
            	                throw eee;
            	        }
            	        cnt105++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalReqSpecParser.g:4383:4: ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4383:4: ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) )
            	    // InternalReqSpecParser.g:4384:5: {...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalReqSpecParser.g:4384:111: ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) )
            	    // InternalReqSpecParser.g:4385:6: ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 4);
            	    // InternalReqSpecParser.g:4388:6: ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) )
            	    // InternalReqSpecParser.g:4388:7: {...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4388:16: ( (lv_whencondition_16_0= ruleWhenCondition ) )
            	    // InternalReqSpecParser.g:4389:1: (lv_whencondition_16_0= ruleWhenCondition )
            	    {
            	    // InternalReqSpecParser.g:4389:1: (lv_whencondition_16_0= ruleWhenCondition )
            	    // InternalReqSpecParser.g:4390:3: lv_whencondition_16_0= ruleWhenCondition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getWhenconditionWhenConditionParserRuleCall_5_4_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_whencondition_16_0=ruleWhenCondition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"whencondition",
            	              		lv_whencondition_16_0, 
            	              		"org.osate.reqspec.ReqSpec.WhenCondition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalReqSpecParser.g:4413:4: ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4413:4: ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) )
            	    // InternalReqSpecParser.g:4414:5: {...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalReqSpecParser.g:4414:111: ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) )
            	    // InternalReqSpecParser.g:4415:6: ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 5);
            	    // InternalReqSpecParser.g:4418:6: ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) )
            	    // InternalReqSpecParser.g:4418:7: {...}? => ( (lv_predicate_17_0= ruleReqPredicate ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4418:16: ( (lv_predicate_17_0= ruleReqPredicate ) )
            	    // InternalReqSpecParser.g:4419:1: (lv_predicate_17_0= ruleReqPredicate )
            	    {
            	    // InternalReqSpecParser.g:4419:1: (lv_predicate_17_0= ruleReqPredicate )
            	    // InternalReqSpecParser.g:4420:3: lv_predicate_17_0= ruleReqPredicate
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getPredicateReqPredicateParserRuleCall_5_5_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_predicate_17_0=ruleReqPredicate();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"predicate",
            	              		lv_predicate_17_0, 
            	              		"org.osate.reqspec.ReqSpec.ReqPredicate");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalReqSpecParser.g:4443:4: ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4443:4: ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) )
            	    // InternalReqSpecParser.g:4444:5: {...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalReqSpecParser.g:4444:111: ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) )
            	    // InternalReqSpecParser.g:4445:6: ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 6);
            	    // InternalReqSpecParser.g:4448:6: ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) )
            	    // InternalReqSpecParser.g:4448:7: {...}? => ( (lv_rationale_18_0= ruleRationale ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4448:16: ( (lv_rationale_18_0= ruleRationale ) )
            	    // InternalReqSpecParser.g:4449:1: (lv_rationale_18_0= ruleRationale )
            	    {
            	    // InternalReqSpecParser.g:4449:1: (lv_rationale_18_0= ruleRationale )
            	    // InternalReqSpecParser.g:4450:3: lv_rationale_18_0= ruleRationale
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getRationaleRationaleParserRuleCall_5_6_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_rationale_18_0=ruleRationale();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rationale",
            	              		lv_rationale_18_0, 
            	              		"org.osate.alisa.common.Common.Rationale");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalReqSpecParser.g:4473:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4473:4: ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) )
            	    // InternalReqSpecParser.g:4474:5: {...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalReqSpecParser.g:4474:111: ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) )
            	    // InternalReqSpecParser.g:4475:6: ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 7);
            	    // InternalReqSpecParser.g:4478:6: ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) )
            	    // InternalReqSpecParser.g:4478:7: {...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4478:16: ( (lv_changeUncertainty_19_0= ruleUncertainty ) )
            	    // InternalReqSpecParser.g:4479:1: (lv_changeUncertainty_19_0= ruleUncertainty )
            	    {
            	    // InternalReqSpecParser.g:4479:1: (lv_changeUncertainty_19_0= ruleUncertainty )
            	    // InternalReqSpecParser.g:4480:3: lv_changeUncertainty_19_0= ruleUncertainty
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getChangeUncertaintyUncertaintyParserRuleCall_5_7_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_changeUncertainty_19_0=ruleUncertainty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"changeUncertainty",
            	              		lv_changeUncertainty_19_0, 
            	              		"org.osate.alisa.common.Common.Uncertainty");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalReqSpecParser.g:4503:4: ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4503:4: ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) )
            	    // InternalReqSpecParser.g:4504:5: {...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 8)");
            	    }
            	    // InternalReqSpecParser.g:4504:111: ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) )
            	    // InternalReqSpecParser.g:4505:6: ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 8);
            	    // InternalReqSpecParser.g:4508:6: ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) )
            	    // InternalReqSpecParser.g:4508:7: {...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4508:16: (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) )
            	    // InternalReqSpecParser.g:4509:2: otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) )
            	    {
            	    otherlv_20=(Token)match(input,Mitigates,FollowSets000.FOLLOW_24); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_20, grammarAccess.getDocRequirementAccess().getMitigatesKeyword_5_8_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4513:1: ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) )
            	    int alt106=2;
            	    int LA106_0 = input.LA(1);

            	    if ( (LA106_0==RULE_ID) ) {
            	        alt106=1;
            	    }
            	    else if ( (LA106_0==RULE_STRING) ) {
            	        alt106=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 106, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt106) {
            	        case 1 :
            	            // InternalReqSpecParser.g:4513:2: ( (otherlv_21= RULE_ID ) )
            	            {
            	            // InternalReqSpecParser.g:4513:2: ( (otherlv_21= RULE_ID ) )
            	            // InternalReqSpecParser.g:4514:1: (otherlv_21= RULE_ID )
            	            {
            	            // InternalReqSpecParser.g:4514:1: (otherlv_21= RULE_ID )
            	            // InternalReqSpecParser.g:4515:3: otherlv_21= RULE_ID
            	            {
            	            if ( state.backtracking==0 ) {

            	              			if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	              	        }
            	                      
            	            }
            	            otherlv_21=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              		newLeafNode(otherlv_21, grammarAccess.getDocRequirementAccess().getExceptionEObjectCrossReference_5_8_1_0_0()); 
            	              	
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalReqSpecParser.g:4527:6: ( (lv_exceptionText_22_0= RULE_STRING ) )
            	            {
            	            // InternalReqSpecParser.g:4527:6: ( (lv_exceptionText_22_0= RULE_STRING ) )
            	            // InternalReqSpecParser.g:4528:1: (lv_exceptionText_22_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:4528:1: (lv_exceptionText_22_0= RULE_STRING )
            	            // InternalReqSpecParser.g:4529:3: lv_exceptionText_22_0= RULE_STRING
            	            {
            	            lv_exceptionText_22_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_exceptionText_22_0, grammarAccess.getDocRequirementAccess().getExceptionTextSTRINGTerminalRuleCall_5_8_1_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"exceptionText",
            	                      		lv_exceptionText_22_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalReqSpecParser.g:4552:4: ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4552:4: ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4553:5: {...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 9)");
            	    }
            	    // InternalReqSpecParser.g:4553:111: ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:4554:6: ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 9);
            	    // InternalReqSpecParser.g:4557:6: ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:4557:7: {...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4557:16: (otherlv_23= Refines ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:4558:2: otherlv_23= Refines ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_23=(Token)match(input,Refines,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_23, grammarAccess.getDocRequirementAccess().getRefinesKeyword_5_9_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4562:1: ( ( ruleQualifiedName ) )+
            	    int cnt107=0;
            	    loop107:
            	    do {
            	        int alt107=2;
            	        int LA107_0 = input.LA(1);

            	        if ( (LA107_0==RULE_ID) ) {
            	            alt107=1;
            	        }


            	        switch (alt107) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4563:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:4563:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:4564:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getRefinesReferenceRequirementCrossReference_5_9_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt107 >= 1 ) break loop107;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(107, input);
            	                throw eee;
            	        }
            	        cnt107++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalReqSpecParser.g:4585:4: ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4585:4: ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4586:5: {...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 10)");
            	    }
            	    // InternalReqSpecParser.g:4586:112: ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:4587:6: ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 10);
            	    // InternalReqSpecParser.g:4590:6: ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:4590:7: {...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4590:16: (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:4591:2: otherlv_25= Decomposes ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_25=(Token)match(input,Decomposes,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_25, grammarAccess.getDocRequirementAccess().getDecomposesKeyword_5_10_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4595:1: ( ( ruleQualifiedName ) )+
            	    int cnt108=0;
            	    loop108:
            	    do {
            	        int alt108=2;
            	        int LA108_0 = input.LA(1);

            	        if ( (LA108_0==RULE_ID) ) {
            	            alt108=1;
            	        }


            	        switch (alt108) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4596:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:4596:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:4597:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getDecomposesReferenceRequirementCrossReference_5_10_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt108 >= 1 ) break loop108;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(108, input);
            	                throw eee;
            	        }
            	        cnt108++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalReqSpecParser.g:4618:4: ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4618:4: ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) )
            	    // InternalReqSpecParser.g:4619:5: {...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 11)");
            	    }
            	    // InternalReqSpecParser.g:4619:112: ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) )
            	    // InternalReqSpecParser.g:4620:6: ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 11);
            	    // InternalReqSpecParser.g:4623:6: ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) )
            	    // InternalReqSpecParser.g:4623:7: {...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4623:16: (otherlv_27= Inherits ( ( ruleQualifiedName ) ) )
            	    // InternalReqSpecParser.g:4624:2: otherlv_27= Inherits ( ( ruleQualifiedName ) )
            	    {
            	    otherlv_27=(Token)match(input,Inherits,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_27, grammarAccess.getDocRequirementAccess().getInheritsKeyword_5_11_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4628:1: ( ( ruleQualifiedName ) )
            	    // InternalReqSpecParser.g:4629:1: ( ruleQualifiedName )
            	    {
            	    // InternalReqSpecParser.g:4629:1: ( ruleQualifiedName )
            	    // InternalReqSpecParser.g:4630:3: ruleQualifiedName
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	      	        }
            	              
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getInheritsReferenceRequirementCrossReference_5_11_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    ruleQualifiedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalReqSpecParser.g:4651:4: ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4651:4: ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4652:5: {...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 12)");
            	    }
            	    // InternalReqSpecParser.g:4652:112: ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:4653:6: ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 12);
            	    // InternalReqSpecParser.g:4656:6: ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:4656:7: {...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4656:16: (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:4657:2: otherlv_29= Evolves ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_29=(Token)match(input,Evolves,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_29, grammarAccess.getDocRequirementAccess().getEvolvesKeyword_5_12_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4661:1: ( ( ruleQualifiedName ) )+
            	    int cnt109=0;
            	    loop109:
            	    do {
            	        int alt109=2;
            	        int LA109_0 = input.LA(1);

            	        if ( (LA109_0==RULE_ID) ) {
            	            alt109=1;
            	        }


            	        switch (alt109) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4662:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:4662:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:4663:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getEvolvesReferenceRequirementCrossReference_5_12_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt109 >= 1 ) break loop109;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(109, input);
            	                throw eee;
            	        }
            	        cnt109++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalReqSpecParser.g:4684:4: ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4684:4: ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) )
            	    // InternalReqSpecParser.g:4685:5: {...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 13)");
            	    }
            	    // InternalReqSpecParser.g:4685:112: ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) )
            	    // InternalReqSpecParser.g:4686:6: ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 13);
            	    // InternalReqSpecParser.g:4689:6: ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) )
            	    // InternalReqSpecParser.g:4689:7: {...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4689:16: ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? )
            	    // InternalReqSpecParser.g:4689:17: ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )?
            	    {
            	    // InternalReqSpecParser.g:4689:17: ( (lv_dropped_31_0= Dropped ) )
            	    // InternalReqSpecParser.g:4690:1: (lv_dropped_31_0= Dropped )
            	    {
            	    // InternalReqSpecParser.g:4690:1: (lv_dropped_31_0= Dropped )
            	    // InternalReqSpecParser.g:4691:3: lv_dropped_31_0= Dropped
            	    {
            	    lv_dropped_31_0=(Token)match(input,Dropped,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_dropped_31_0, grammarAccess.getDocRequirementAccess().getDroppedDroppedKeyword_5_13_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	      	        }
            	             		setWithLastConsumed(current, "dropped", true, "dropped");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalReqSpecParser.g:4705:2: ( (lv_dropRationale_32_0= RULE_STRING ) )?
            	    int alt110=2;
            	    int LA110_0 = input.LA(1);

            	    if ( (LA110_0==RULE_STRING) ) {
            	        alt110=1;
            	    }
            	    switch (alt110) {
            	        case 1 :
            	            // InternalReqSpecParser.g:4706:1: (lv_dropRationale_32_0= RULE_STRING )
            	            {
            	            // InternalReqSpecParser.g:4706:1: (lv_dropRationale_32_0= RULE_STRING )
            	            // InternalReqSpecParser.g:4707:3: lv_dropRationale_32_0= RULE_STRING
            	            {
            	            lv_dropRationale_32_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              			newLeafNode(lv_dropRationale_32_0, grammarAccess.getDocRequirementAccess().getDropRationaleSTRINGTerminalRuleCall_5_13_1_0()); 
            	              		
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	              	        }
            	                     		setWithLastConsumed(
            	                     			current, 
            	                     			"dropRationale",
            	                      		lv_dropRationale_32_0, 
            	                      		"org.eclipse.xtext.common.Terminals.STRING");
            	              	    
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalReqSpecParser.g:4730:4: ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4730:4: ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4731:5: {...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 14)");
            	    }
            	    // InternalReqSpecParser.g:4731:112: ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:4732:6: ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 14);
            	    // InternalReqSpecParser.g:4735:6: ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:4735:7: {...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4735:16: (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:4736:2: otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_33=(Token)match(input,Development,FollowSets000.FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_33, grammarAccess.getDocRequirementAccess().getDevelopmentKeyword_5_14_0());
            	          
            	    }
            	    otherlv_34=(Token)match(input,Stakeholder,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_34, grammarAccess.getDocRequirementAccess().getStakeholderKeyword_5_14_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:4745:1: ( ( ruleQualifiedName ) )+
            	    int cnt111=0;
            	    loop111:
            	    do {
            	        int alt111=2;
            	        int LA111_0 = input.LA(1);

            	        if ( (LA111_0==RULE_ID) ) {
            	            alt111=1;
            	        }


            	        switch (alt111) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4746:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:4746:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:4747:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getDevelopmentStakeholderStakeholderCrossReference_5_14_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt111 >= 1 ) break loop111;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(111, input);
            	                throw eee;
            	        }
            	        cnt111++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalReqSpecParser.g:4768:4: ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4768:4: ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4769:5: {...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 15)");
            	    }
            	    // InternalReqSpecParser.g:4769:112: ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) )
            	    // InternalReqSpecParser.g:4770:6: ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 15);
            	    // InternalReqSpecParser.g:4773:6: ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) )
            	    // InternalReqSpecParser.g:4773:7: {...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4773:16: (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ )
            	    // InternalReqSpecParser.g:4774:2: otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+
            	    {
            	    otherlv_36=(Token)match(input,See,FollowSets000.FOLLOW_40); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_36, grammarAccess.getDocRequirementAccess().getSeeKeyword_5_15_0());
            	          
            	    }
            	    otherlv_37=(Token)match(input,Goal,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_37, grammarAccess.getDocRequirementAccess().getGoalKeyword_5_15_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:4783:1: ( ( ruleQualifiedName ) )+
            	    int cnt112=0;
            	    loop112:
            	    do {
            	        int alt112=2;
            	        int LA112_0 = input.LA(1);

            	        if ( (LA112_0==RULE_ID) ) {
            	            alt112=1;
            	        }


            	        switch (alt112) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4784:1: ( ruleQualifiedName )
            	    	    {
            	    	    // InternalReqSpecParser.g:4784:1: ( ruleQualifiedName )
            	    	    // InternalReqSpecParser.g:4785:3: ruleQualifiedName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      			if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	              
            	    	    }
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getGoalReferenceGoalCrossReference_5_15_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    ruleQualifiedName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt112 >= 1 ) break loop112;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(112, input);
            	                throw eee;
            	        }
            	        cnt112++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalReqSpecParser.g:4806:4: ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4806:4: ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4807:5: {...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 16)");
            	    }
            	    // InternalReqSpecParser.g:4807:112: ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) )
            	    // InternalReqSpecParser.g:4808:6: ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 16);
            	    // InternalReqSpecParser.g:4811:6: ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) )
            	    // InternalReqSpecParser.g:4811:7: {...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4811:16: (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ )
            	    // InternalReqSpecParser.g:4812:2: otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+
            	    {
            	    otherlv_39=(Token)match(input,See,FollowSets000.FOLLOW_17); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_39, grammarAccess.getDocRequirementAccess().getSeeKeyword_5_16_0());
            	          
            	    }
            	    otherlv_40=(Token)match(input,Document,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_40, grammarAccess.getDocRequirementAccess().getDocumentKeyword_5_16_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:4821:1: ( (lv_docReference_41_0= ruleExternalDocument ) )+
            	    int cnt113=0;
            	    loop113:
            	    do {
            	        int alt113=2;
            	        int LA113_0 = input.LA(1);

            	        if ( (LA113_0==RULE_ID) ) {
            	            alt113=1;
            	        }


            	        switch (alt113) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4822:1: (lv_docReference_41_0= ruleExternalDocument )
            	    	    {
            	    	    // InternalReqSpecParser.g:4822:1: (lv_docReference_41_0= ruleExternalDocument )
            	    	    // InternalReqSpecParser.g:4823:3: lv_docReference_41_0= ruleExternalDocument
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getDocRequirementAccess().getDocReferenceExternalDocumentParserRuleCall_5_16_2_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_42);
            	    	    lv_docReference_41_0=ruleExternalDocument();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"docReference",
            	    	              		lv_docReference_41_0, 
            	    	              		"org.osate.reqspec.ReqSpec.ExternalDocument");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt113 >= 1 ) break loop113;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(113, input);
            	                throw eee;
            	        }
            	        cnt113++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalReqSpecParser.g:4846:4: ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:4846:4: ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) )
            	    // InternalReqSpecParser.g:4847:5: {...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 17)");
            	    }
            	    // InternalReqSpecParser.g:4847:112: ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) )
            	    // InternalReqSpecParser.g:4848:6: ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 17);
            	    // InternalReqSpecParser.g:4851:6: ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) )
            	    // InternalReqSpecParser.g:4851:7: {...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDocRequirement", "true");
            	    }
            	    // InternalReqSpecParser.g:4851:16: (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ )
            	    // InternalReqSpecParser.g:4852:2: otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+
            	    {
            	    otherlv_42=(Token)match(input,Issues,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_42, grammarAccess.getDocRequirementAccess().getIssuesKeyword_5_17_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:4856:1: ( (lv_issues_43_0= RULE_STRING ) )+
            	    int cnt114=0;
            	    loop114:
            	    do {
            	        int alt114=2;
            	        int LA114_0 = input.LA(1);

            	        if ( (LA114_0==RULE_STRING) ) {
            	            alt114=1;
            	        }


            	        switch (alt114) {
            	    	case 1 :
            	    	    // InternalReqSpecParser.g:4857:1: (lv_issues_43_0= RULE_STRING )
            	    	    {
            	    	    // InternalReqSpecParser.g:4857:1: (lv_issues_43_0= RULE_STRING )
            	    	    // InternalReqSpecParser.g:4858:3: lv_issues_43_0= RULE_STRING
            	    	    {
            	    	    lv_issues_43_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_43); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      			newLeafNode(lv_issues_43_0, grammarAccess.getDocRequirementAccess().getIssuesSTRINGTerminalRuleCall_5_17_1_0()); 
            	    	      		
            	    	    }
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElement(grammarAccess.getDocRequirementRule());
            	    	      	        }
            	    	             		addWithLastConsumed(
            	    	             			current, 
            	    	             			"issues",
            	    	              		lv_issues_43_0, 
            	    	              		"org.eclipse.xtext.common.Terminals.STRING");
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt114 >= 1 ) break loop114;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(114, input);
            	                throw eee;
            	        }
            	        cnt114++;
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5());

            }

            otherlv_44=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_44, grammarAccess.getDocRequirementAccess().getRightSquareBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocRequirement"


    // $ANTLR start "entryRuleIncludeGlobalRequirement"
    // InternalReqSpecParser.g:4901:1: entryRuleIncludeGlobalRequirement returns [EObject current=null] : iv_ruleIncludeGlobalRequirement= ruleIncludeGlobalRequirement EOF ;
    public final EObject entryRuleIncludeGlobalRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIncludeGlobalRequirement = null;


        try {
            // InternalReqSpecParser.g:4902:2: (iv_ruleIncludeGlobalRequirement= ruleIncludeGlobalRequirement EOF )
            // InternalReqSpecParser.g:4903:2: iv_ruleIncludeGlobalRequirement= ruleIncludeGlobalRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIncludeGlobalRequirementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIncludeGlobalRequirement=ruleIncludeGlobalRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIncludeGlobalRequirement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIncludeGlobalRequirement"


    // $ANTLR start "ruleIncludeGlobalRequirement"
    // InternalReqSpecParser.g:4910:1: ruleIncludeGlobalRequirement returns [EObject current=null] : (otherlv_0= Include ( ( ruleQualifiedName ) ) (otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) ) )? ) ;
    public final EObject ruleIncludeGlobalRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_local_3_0=null;
        Token otherlv_4=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:4913:28: ( (otherlv_0= Include ( ( ruleQualifiedName ) ) (otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) ) )? ) )
            // InternalReqSpecParser.g:4914:1: (otherlv_0= Include ( ( ruleQualifiedName ) ) (otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) ) )? )
            {
            // InternalReqSpecParser.g:4914:1: (otherlv_0= Include ( ( ruleQualifiedName ) ) (otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) ) )? )
            // InternalReqSpecParser.g:4915:2: otherlv_0= Include ( ( ruleQualifiedName ) ) (otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) ) )?
            {
            otherlv_0=(Token)match(input,Include,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getIncludeGlobalRequirementAccess().getIncludeKeyword_0());
                  
            }
            // InternalReqSpecParser.g:4919:1: ( ( ruleQualifiedName ) )
            // InternalReqSpecParser.g:4920:1: ( ruleQualifiedName )
            {
            // InternalReqSpecParser.g:4920:1: ( ruleQualifiedName )
            // InternalReqSpecParser.g:4921:3: ruleQualifiedName
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getIncludeGlobalRequirementRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getIncludeGlobalRequirementAccess().getIncludeEObjectCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_52);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:4935:2: (otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==For) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalReqSpecParser.g:4936:2: otherlv_2= For ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) )
                    {
                    otherlv_2=(Token)match(input,For,FollowSets000.FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getIncludeGlobalRequirementAccess().getForKeyword_2_0());
                          
                    }
                    // InternalReqSpecParser.g:4940:1: ( ( (lv_local_3_0= Self ) ) | ( (otherlv_4= RULE_ID ) ) )
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==Self) ) {
                        alt116=1;
                    }
                    else if ( (LA116_0==RULE_ID) ) {
                        alt116=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 116, 0, input);

                        throw nvae;
                    }
                    switch (alt116) {
                        case 1 :
                            // InternalReqSpecParser.g:4940:2: ( (lv_local_3_0= Self ) )
                            {
                            // InternalReqSpecParser.g:4940:2: ( (lv_local_3_0= Self ) )
                            // InternalReqSpecParser.g:4941:1: (lv_local_3_0= Self )
                            {
                            // InternalReqSpecParser.g:4941:1: (lv_local_3_0= Self )
                            // InternalReqSpecParser.g:4942:3: lv_local_3_0= Self
                            {
                            lv_local_3_0=(Token)match(input,Self,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_local_3_0, grammarAccess.getIncludeGlobalRequirementAccess().getLocalSelfKeyword_2_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getIncludeGlobalRequirementRule());
                              	        }
                                     		setWithLastConsumed(current, "local", true, "self");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:4957:6: ( (otherlv_4= RULE_ID ) )
                            {
                            // InternalReqSpecParser.g:4957:6: ( (otherlv_4= RULE_ID ) )
                            // InternalReqSpecParser.g:4958:1: (otherlv_4= RULE_ID )
                            {
                            // InternalReqSpecParser.g:4958:1: (otherlv_4= RULE_ID )
                            // InternalReqSpecParser.g:4959:3: otherlv_4= RULE_ID
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getIncludeGlobalRequirementRule());
                              	        }
                                      
                            }
                            otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              		newLeafNode(otherlv_4, grammarAccess.getIncludeGlobalRequirementAccess().getTargetElementNamedElementCrossReference_2_1_1_0()); 
                              	
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIncludeGlobalRequirement"


    // $ANTLR start "entryRuleWhenCondition"
    // InternalReqSpecParser.g:4978:1: entryRuleWhenCondition returns [EObject current=null] : iv_ruleWhenCondition= ruleWhenCondition EOF ;
    public final EObject entryRuleWhenCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhenCondition = null;


        try {
            // InternalReqSpecParser.g:4979:2: (iv_ruleWhenCondition= ruleWhenCondition EOF )
            // InternalReqSpecParser.g:4980:2: iv_ruleWhenCondition= ruleWhenCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhenConditionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhenCondition=ruleWhenCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhenCondition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhenCondition"


    // $ANTLR start "ruleWhenCondition"
    // InternalReqSpecParser.g:4987:1: ruleWhenCondition returns [EObject current=null] : (otherlv_0= When ( (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* ) | (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* ) | ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis ) ) ) ;
    public final EObject ruleWhenCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_condition_12_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:4990:28: ( (otherlv_0= When ( (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* ) | (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* ) | ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis ) ) ) )
            // InternalReqSpecParser.g:4991:1: (otherlv_0= When ( (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* ) | (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* ) | ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis ) ) )
            {
            // InternalReqSpecParser.g:4991:1: (otherlv_0= When ( (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* ) | (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* ) | ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis ) ) )
            // InternalReqSpecParser.g:4992:2: otherlv_0= When ( (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* ) | (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* ) | ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis ) )
            {
            otherlv_0=(Token)match(input,When,FollowSets000.FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getWhenConditionAccess().getWhenKeyword_0());
                  
            }
            // InternalReqSpecParser.g:4996:1: ( (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* ) | (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* ) | ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis ) )
            int alt120=3;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==In) ) {
                int LA120_1 = input.LA(2);

                if ( (LA120_1==Mode) ) {
                    alt120=1;
                }
                else if ( (LA120_1==Error) ) {
                    alt120=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 120, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA120_0==RULE_ID) ) {
                alt120=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalReqSpecParser.g:4996:2: (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* )
                    {
                    // InternalReqSpecParser.g:4996:2: (otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )* )
                    // InternalReqSpecParser.g:4997:2: otherlv_1= In otherlv_2= Mode ( (otherlv_3= RULE_ID ) ) (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )*
                    {
                    otherlv_1=(Token)match(input,In,FollowSets000.FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getWhenConditionAccess().getInKeyword_1_0_0());
                          
                    }
                    otherlv_2=(Token)match(input,Mode,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWhenConditionAccess().getModeKeyword_1_0_1());
                          
                    }
                    // InternalReqSpecParser.g:5006:1: ( (otherlv_3= RULE_ID ) )
                    // InternalReqSpecParser.g:5007:1: (otherlv_3= RULE_ID )
                    {
                    // InternalReqSpecParser.g:5007:1: (otherlv_3= RULE_ID )
                    // InternalReqSpecParser.g:5008:3: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getWhenConditionRule());
                      	        }
                              
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_3, grammarAccess.getWhenConditionAccess().getInModeModeCrossReference_1_0_2_0()); 
                      	
                    }

                    }


                    }

                    // InternalReqSpecParser.g:5019:2: (otherlv_4= Comma ( (otherlv_5= RULE_ID ) ) )*
                    loop118:
                    do {
                        int alt118=2;
                        int LA118_0 = input.LA(1);

                        if ( (LA118_0==Comma) ) {
                            alt118=1;
                        }


                        switch (alt118) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:5020:2: otherlv_4= Comma ( (otherlv_5= RULE_ID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getWhenConditionAccess().getCommaKeyword_1_0_3_0());
                    	          
                    	    }
                    	    // InternalReqSpecParser.g:5024:1: ( (otherlv_5= RULE_ID ) )
                    	    // InternalReqSpecParser.g:5025:1: (otherlv_5= RULE_ID )
                    	    {
                    	    // InternalReqSpecParser.g:5025:1: (otherlv_5= RULE_ID )
                    	    // InternalReqSpecParser.g:5026:3: otherlv_5= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getWhenConditionRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_5=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_5, grammarAccess.getWhenConditionAccess().getInModeModeCrossReference_1_0_3_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop118;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:5038:6: (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* )
                    {
                    // InternalReqSpecParser.g:5038:6: (otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )* )
                    // InternalReqSpecParser.g:5039:2: otherlv_6= In otherlv_7= Error otherlv_8= State ( (otherlv_9= RULE_ID ) ) (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )*
                    {
                    otherlv_6=(Token)match(input,In,FollowSets000.FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_6, grammarAccess.getWhenConditionAccess().getInKeyword_1_1_0());
                          
                    }
                    otherlv_7=(Token)match(input,Error,FollowSets000.FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getWhenConditionAccess().getErrorKeyword_1_1_1());
                          
                    }
                    otherlv_8=(Token)match(input,State,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_8, grammarAccess.getWhenConditionAccess().getStateKeyword_1_1_2());
                          
                    }
                    // InternalReqSpecParser.g:5053:1: ( (otherlv_9= RULE_ID ) )
                    // InternalReqSpecParser.g:5054:1: (otherlv_9= RULE_ID )
                    {
                    // InternalReqSpecParser.g:5054:1: (otherlv_9= RULE_ID )
                    // InternalReqSpecParser.g:5055:3: otherlv_9= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getWhenConditionRule());
                      	        }
                              
                    }
                    otherlv_9=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_9, grammarAccess.getWhenConditionAccess().getInErrorStateEObjectCrossReference_1_1_3_0()); 
                      	
                    }

                    }


                    }

                    // InternalReqSpecParser.g:5066:2: (otherlv_10= Comma ( (otherlv_11= RULE_ID ) ) )*
                    loop119:
                    do {
                        int alt119=2;
                        int LA119_0 = input.LA(1);

                        if ( (LA119_0==Comma) ) {
                            alt119=1;
                        }


                        switch (alt119) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:5067:2: otherlv_10= Comma ( (otherlv_11= RULE_ID ) )
                    	    {
                    	    otherlv_10=(Token)match(input,Comma,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_10, grammarAccess.getWhenConditionAccess().getCommaKeyword_1_1_4_0());
                    	          
                    	    }
                    	    // InternalReqSpecParser.g:5071:1: ( (otherlv_11= RULE_ID ) )
                    	    // InternalReqSpecParser.g:5072:1: (otherlv_11= RULE_ID )
                    	    {
                    	    // InternalReqSpecParser.g:5072:1: (otherlv_11= RULE_ID )
                    	    // InternalReqSpecParser.g:5073:3: otherlv_11= RULE_ID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      			if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getWhenConditionRule());
                    	      	        }
                    	              
                    	    }
                    	    otherlv_11=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      		newLeafNode(otherlv_11, grammarAccess.getWhenConditionAccess().getInErrorStateEObjectCrossReference_1_1_4_1_0()); 
                    	      	
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop119;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:5085:6: ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis )
                    {
                    // InternalReqSpecParser.g:5085:6: ( ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis )
                    // InternalReqSpecParser.g:5085:7: ( (lv_condition_12_0= ruleQualifiedName ) ) otherlv_13= LeftParenthesis otherlv_14= RightParenthesis
                    {
                    // InternalReqSpecParser.g:5085:7: ( (lv_condition_12_0= ruleQualifiedName ) )
                    // InternalReqSpecParser.g:5086:1: (lv_condition_12_0= ruleQualifiedName )
                    {
                    // InternalReqSpecParser.g:5086:1: (lv_condition_12_0= ruleQualifiedName )
                    // InternalReqSpecParser.g:5087:3: lv_condition_12_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWhenConditionAccess().getConditionQualifiedNameParserRuleCall_1_2_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    lv_condition_12_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWhenConditionRule());
                      	        }
                             		set(
                             			current, 
                             			"condition",
                              		lv_condition_12_0, 
                              		"org.osate.alisa.common.Common.QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_13=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getWhenConditionAccess().getLeftParenthesisKeyword_1_2_1());
                          
                    }
                    otherlv_14=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getWhenConditionAccess().getRightParenthesisKeyword_1_2_2());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenCondition"


    // $ANTLR start "entryRuleReqPredicate"
    // InternalReqSpecParser.g:5121:1: entryRuleReqPredicate returns [EObject current=null] : iv_ruleReqPredicate= ruleReqPredicate EOF ;
    public final EObject entryRuleReqPredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReqPredicate = null;


        try {
            // InternalReqSpecParser.g:5122:2: (iv_ruleReqPredicate= ruleReqPredicate EOF )
            // InternalReqSpecParser.g:5123:2: iv_ruleReqPredicate= ruleReqPredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReqPredicateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReqPredicate=ruleReqPredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReqPredicate; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReqPredicate"


    // $ANTLR start "ruleReqPredicate"
    // InternalReqSpecParser.g:5130:1: ruleReqPredicate returns [EObject current=null] : (this_InformalPredicate_0= ruleInformalPredicate | this_ValuePredicate_1= ruleValuePredicate ) ;
    public final EObject ruleReqPredicate() throws RecognitionException {
        EObject current = null;

        EObject this_InformalPredicate_0 = null;

        EObject this_ValuePredicate_1 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5133:28: ( (this_InformalPredicate_0= ruleInformalPredicate | this_ValuePredicate_1= ruleValuePredicate ) )
            // InternalReqSpecParser.g:5134:1: (this_InformalPredicate_0= ruleInformalPredicate | this_ValuePredicate_1= ruleValuePredicate )
            {
            // InternalReqSpecParser.g:5134:1: (this_InformalPredicate_0= ruleInformalPredicate | this_ValuePredicate_1= ruleValuePredicate )
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==Informal) ) {
                alt121=1;
            }
            else if ( (LA121_0==Value) ) {
                alt121=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }
            switch (alt121) {
                case 1 :
                    // InternalReqSpecParser.g:5135:5: this_InformalPredicate_0= ruleInformalPredicate
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getReqPredicateAccess().getInformalPredicateParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_InformalPredicate_0=ruleInformalPredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_InformalPredicate_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:5145:5: this_ValuePredicate_1= ruleValuePredicate
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getReqPredicateAccess().getValuePredicateParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuePredicate_1=ruleValuePredicate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ValuePredicate_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReqPredicate"


    // $ANTLR start "entryRuleInformalPredicate"
    // InternalReqSpecParser.g:5161:1: entryRuleInformalPredicate returns [EObject current=null] : iv_ruleInformalPredicate= ruleInformalPredicate EOF ;
    public final EObject entryRuleInformalPredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInformalPredicate = null;


        try {
            // InternalReqSpecParser.g:5162:2: (iv_ruleInformalPredicate= ruleInformalPredicate EOF )
            // InternalReqSpecParser.g:5163:2: iv_ruleInformalPredicate= ruleInformalPredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInformalPredicateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInformalPredicate=ruleInformalPredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInformalPredicate; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInformalPredicate"


    // $ANTLR start "ruleInformalPredicate"
    // InternalReqSpecParser.g:5170:1: ruleInformalPredicate returns [EObject current=null] : (otherlv_0= Informal otherlv_1= Predicate ( (lv_description_2_0= RULE_STRING ) ) ) ;
    public final EObject ruleInformalPredicate() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_description_2_0=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5173:28: ( (otherlv_0= Informal otherlv_1= Predicate ( (lv_description_2_0= RULE_STRING ) ) ) )
            // InternalReqSpecParser.g:5174:1: (otherlv_0= Informal otherlv_1= Predicate ( (lv_description_2_0= RULE_STRING ) ) )
            {
            // InternalReqSpecParser.g:5174:1: (otherlv_0= Informal otherlv_1= Predicate ( (lv_description_2_0= RULE_STRING ) ) )
            // InternalReqSpecParser.g:5175:2: otherlv_0= Informal otherlv_1= Predicate ( (lv_description_2_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,Informal,FollowSets000.FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getInformalPredicateAccess().getInformalKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,Predicate,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInformalPredicateAccess().getPredicateKeyword_1());
                  
            }
            // InternalReqSpecParser.g:5184:1: ( (lv_description_2_0= RULE_STRING ) )
            // InternalReqSpecParser.g:5185:1: (lv_description_2_0= RULE_STRING )
            {
            // InternalReqSpecParser.g:5185:1: (lv_description_2_0= RULE_STRING )
            // InternalReqSpecParser.g:5186:3: lv_description_2_0= RULE_STRING
            {
            lv_description_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_description_2_0, grammarAccess.getInformalPredicateAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInformalPredicateRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"description",
                      		lv_description_2_0, 
                      		"org.eclipse.xtext.common.Terminals.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInformalPredicate"


    // $ANTLR start "entryRuleValuePredicate"
    // InternalReqSpecParser.g:5210:1: entryRuleValuePredicate returns [EObject current=null] : iv_ruleValuePredicate= ruleValuePredicate EOF ;
    public final EObject entryRuleValuePredicate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuePredicate = null;


        try {
            // InternalReqSpecParser.g:5211:2: (iv_ruleValuePredicate= ruleValuePredicate EOF )
            // InternalReqSpecParser.g:5212:2: iv_ruleValuePredicate= ruleValuePredicate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuePredicateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuePredicate=ruleValuePredicate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuePredicate; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuePredicate"


    // $ANTLR start "ruleValuePredicate"
    // InternalReqSpecParser.g:5219:1: ruleValuePredicate returns [EObject current=null] : (otherlv_0= Value otherlv_1= Predicate ( (lv_xpression_2_0= ruleAAndExpression ) ) (otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+ )? ) ;
    public final EObject ruleValuePredicate() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_xpression_2_0 = null;

        EObject lv_desiredValue_4_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5222:28: ( (otherlv_0= Value otherlv_1= Predicate ( (lv_xpression_2_0= ruleAAndExpression ) ) (otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+ )? ) )
            // InternalReqSpecParser.g:5223:1: (otherlv_0= Value otherlv_1= Predicate ( (lv_xpression_2_0= ruleAAndExpression ) ) (otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+ )? )
            {
            // InternalReqSpecParser.g:5223:1: (otherlv_0= Value otherlv_1= Predicate ( (lv_xpression_2_0= ruleAAndExpression ) ) (otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+ )? )
            // InternalReqSpecParser.g:5224:2: otherlv_0= Value otherlv_1= Predicate ( (lv_xpression_2_0= ruleAAndExpression ) ) (otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+ )?
            {
            otherlv_0=(Token)match(input,Value,FollowSets000.FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getValuePredicateAccess().getValueKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,Predicate,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getValuePredicateAccess().getPredicateKeyword_1());
                  
            }
            // InternalReqSpecParser.g:5233:1: ( (lv_xpression_2_0= ruleAAndExpression ) )
            // InternalReqSpecParser.g:5234:1: (lv_xpression_2_0= ruleAAndExpression )
            {
            // InternalReqSpecParser.g:5234:1: (lv_xpression_2_0= ruleAAndExpression )
            // InternalReqSpecParser.g:5235:3: lv_xpression_2_0= ruleAAndExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValuePredicateAccess().getXpressionAAndExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_63);
            lv_xpression_2_0=ruleAAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getValuePredicateRule());
              	        }
                     		set(
                     			current, 
                     			"xpression",
                      		lv_xpression_2_0, 
                      		"org.osate.alisa.common.Common.AAndExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:5251:2: (otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+ )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==With) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalReqSpecParser.g:5252:2: otherlv_3= With ( (lv_desiredValue_4_0= ruleDesiredValue ) )+
                    {
                    otherlv_3=(Token)match(input,With,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getValuePredicateAccess().getWithKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:5256:1: ( (lv_desiredValue_4_0= ruleDesiredValue ) )+
                    int cnt122=0;
                    loop122:
                    do {
                        int alt122=2;
                        int LA122_0 = input.LA(1);

                        if ( (LA122_0==RULE_ID) ) {
                            alt122=1;
                        }


                        switch (alt122) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:5257:1: (lv_desiredValue_4_0= ruleDesiredValue )
                    	    {
                    	    // InternalReqSpecParser.g:5257:1: (lv_desiredValue_4_0= ruleDesiredValue )
                    	    // InternalReqSpecParser.g:5258:3: lv_desiredValue_4_0= ruleDesiredValue
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getValuePredicateAccess().getDesiredValueDesiredValueParserRuleCall_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_64);
                    	    lv_desiredValue_4_0=ruleDesiredValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getValuePredicateRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"desiredValue",
                    	              		lv_desiredValue_4_0, 
                    	              		"org.osate.reqspec.ReqSpec.DesiredValue");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt122 >= 1 ) break loop122;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(122, input);
                                throw eee;
                        }
                        cnt122++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuePredicate"


    // $ANTLR start "entryRuleDesiredValue"
    // InternalReqSpecParser.g:5282:1: entryRuleDesiredValue returns [EObject current=null] : iv_ruleDesiredValue= ruleDesiredValue EOF ;
    public final EObject entryRuleDesiredValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDesiredValue = null;


        try {
            // InternalReqSpecParser.g:5283:2: (iv_ruleDesiredValue= ruleDesiredValue EOF )
            // InternalReqSpecParser.g:5284:2: iv_ruleDesiredValue= ruleDesiredValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDesiredValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDesiredValue=ruleDesiredValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDesiredValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDesiredValue"


    // $ANTLR start "ruleDesiredValue"
    // InternalReqSpecParser.g:5291:1: ruleDesiredValue returns [EObject current=null] : ( ( (lv_desired_0_0= ruleAVariableReference ) ) ( ( (lv_upto_1_0= Upto ) ) | otherlv_2= Downto ) ( (lv_value_3_0= ruleAExpression ) ) ) ;
    public final EObject ruleDesiredValue() throws RecognitionException {
        EObject current = null;

        Token lv_upto_1_0=null;
        Token otherlv_2=null;
        EObject lv_desired_0_0 = null;

        EObject lv_value_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5294:28: ( ( ( (lv_desired_0_0= ruleAVariableReference ) ) ( ( (lv_upto_1_0= Upto ) ) | otherlv_2= Downto ) ( (lv_value_3_0= ruleAExpression ) ) ) )
            // InternalReqSpecParser.g:5295:1: ( ( (lv_desired_0_0= ruleAVariableReference ) ) ( ( (lv_upto_1_0= Upto ) ) | otherlv_2= Downto ) ( (lv_value_3_0= ruleAExpression ) ) )
            {
            // InternalReqSpecParser.g:5295:1: ( ( (lv_desired_0_0= ruleAVariableReference ) ) ( ( (lv_upto_1_0= Upto ) ) | otherlv_2= Downto ) ( (lv_value_3_0= ruleAExpression ) ) )
            // InternalReqSpecParser.g:5295:2: ( (lv_desired_0_0= ruleAVariableReference ) ) ( ( (lv_upto_1_0= Upto ) ) | otherlv_2= Downto ) ( (lv_value_3_0= ruleAExpression ) )
            {
            // InternalReqSpecParser.g:5295:2: ( (lv_desired_0_0= ruleAVariableReference ) )
            // InternalReqSpecParser.g:5296:1: (lv_desired_0_0= ruleAVariableReference )
            {
            // InternalReqSpecParser.g:5296:1: (lv_desired_0_0= ruleAVariableReference )
            // InternalReqSpecParser.g:5297:3: lv_desired_0_0= ruleAVariableReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDesiredValueAccess().getDesiredAVariableReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_65);
            lv_desired_0_0=ruleAVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDesiredValueRule());
              	        }
                     		set(
                     			current, 
                     			"desired",
                      		lv_desired_0_0, 
                      		"org.osate.alisa.common.Common.AVariableReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:5313:2: ( ( (lv_upto_1_0= Upto ) ) | otherlv_2= Downto )
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( (LA124_0==Upto) ) {
                alt124=1;
            }
            else if ( (LA124_0==Downto) ) {
                alt124=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }
            switch (alt124) {
                case 1 :
                    // InternalReqSpecParser.g:5313:3: ( (lv_upto_1_0= Upto ) )
                    {
                    // InternalReqSpecParser.g:5313:3: ( (lv_upto_1_0= Upto ) )
                    // InternalReqSpecParser.g:5314:1: (lv_upto_1_0= Upto )
                    {
                    // InternalReqSpecParser.g:5314:1: (lv_upto_1_0= Upto )
                    // InternalReqSpecParser.g:5315:3: lv_upto_1_0= Upto
                    {
                    lv_upto_1_0=(Token)match(input,Upto,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_upto_1_0, grammarAccess.getDesiredValueAccess().getUptoUptoKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDesiredValueRule());
                      	        }
                             		setWithLastConsumed(current, "upto", true, "upto");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:5331:2: otherlv_2= Downto
                    {
                    otherlv_2=(Token)match(input,Downto,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getDesiredValueAccess().getDowntoKeyword_1_1());
                          
                    }

                    }
                    break;

            }

            // InternalReqSpecParser.g:5335:2: ( (lv_value_3_0= ruleAExpression ) )
            // InternalReqSpecParser.g:5336:1: (lv_value_3_0= ruleAExpression )
            {
            // InternalReqSpecParser.g:5336:1: (lv_value_3_0= ruleAExpression )
            // InternalReqSpecParser.g:5337:3: lv_value_3_0= ruleAExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getDesiredValueAccess().getValueAExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_3_0=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getDesiredValueRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"org.osate.alisa.common.Common.AExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDesiredValue"


    // $ANTLR start "entryRuleExternalDocument"
    // InternalReqSpecParser.g:5361:1: entryRuleExternalDocument returns [EObject current=null] : iv_ruleExternalDocument= ruleExternalDocument EOF ;
    public final EObject entryRuleExternalDocument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalDocument = null;


        try {
            // InternalReqSpecParser.g:5362:2: (iv_ruleExternalDocument= ruleExternalDocument EOF )
            // InternalReqSpecParser.g:5363:2: iv_ruleExternalDocument= ruleExternalDocument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalDocumentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternalDocument=ruleExternalDocument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalDocument; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalDocument"


    // $ANTLR start "ruleExternalDocument"
    // InternalReqSpecParser.g:5370:1: ruleExternalDocument returns [EObject current=null] : ( ( (lv_docReference_0_0= ruleDOCPATH ) ) (otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) ) )? ) ;
    public final EObject ruleExternalDocument() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_docReference_0_0 = null;

        AntlrDatatypeRuleToken lv_docFragment_2_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5373:28: ( ( ( (lv_docReference_0_0= ruleDOCPATH ) ) (otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) ) )? ) )
            // InternalReqSpecParser.g:5374:1: ( ( (lv_docReference_0_0= ruleDOCPATH ) ) (otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) ) )? )
            {
            // InternalReqSpecParser.g:5374:1: ( ( (lv_docReference_0_0= ruleDOCPATH ) ) (otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) ) )? )
            // InternalReqSpecParser.g:5374:2: ( (lv_docReference_0_0= ruleDOCPATH ) ) (otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) ) )?
            {
            // InternalReqSpecParser.g:5374:2: ( (lv_docReference_0_0= ruleDOCPATH ) )
            // InternalReqSpecParser.g:5375:1: (lv_docReference_0_0= ruleDOCPATH )
            {
            // InternalReqSpecParser.g:5375:1: (lv_docReference_0_0= ruleDOCPATH )
            // InternalReqSpecParser.g:5376:3: lv_docReference_0_0= ruleDOCPATH
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExternalDocumentAccess().getDocReferenceDOCPATHParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_66);
            lv_docReference_0_0=ruleDOCPATH();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExternalDocumentRule());
              	        }
                     		set(
                     			current, 
                     			"docReference",
                      		lv_docReference_0_0, 
                      		"org.osate.reqspec.ReqSpec.DOCPATH");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:5392:2: (otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==NumberSign) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalReqSpecParser.g:5393:2: otherlv_1= NumberSign ( (lv_docFragment_2_0= ruleQualifiedName ) )
                    {
                    otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExternalDocumentAccess().getNumberSignKeyword_1_0());
                          
                    }
                    // InternalReqSpecParser.g:5397:1: ( (lv_docFragment_2_0= ruleQualifiedName ) )
                    // InternalReqSpecParser.g:5398:1: (lv_docFragment_2_0= ruleQualifiedName )
                    {
                    // InternalReqSpecParser.g:5398:1: (lv_docFragment_2_0= ruleQualifiedName )
                    // InternalReqSpecParser.g:5399:3: lv_docFragment_2_0= ruleQualifiedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getExternalDocumentAccess().getDocFragmentQualifiedNameParserRuleCall_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_docFragment_2_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getExternalDocumentRule());
                      	        }
                             		set(
                             			current, 
                             			"docFragment",
                              		lv_docFragment_2_0, 
                              		"org.osate.alisa.common.Common.QualifiedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalDocument"


    // $ANTLR start "entryRuleValDeclaration"
    // InternalReqSpecParser.g:5423:1: entryRuleValDeclaration returns [EObject current=null] : iv_ruleValDeclaration= ruleValDeclaration EOF ;
    public final EObject entryRuleValDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValDeclaration = null;


        try {
            // InternalReqSpecParser.g:5424:2: (iv_ruleValDeclaration= ruleValDeclaration EOF )
            // InternalReqSpecParser.g:5425:2: iv_ruleValDeclaration= ruleValDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValDeclaration=ruleValDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValDeclaration"


    // $ANTLR start "ruleValDeclaration"
    // InternalReqSpecParser.g:5432:1: ruleValDeclaration returns [EObject current=null] : ( () otherlv_1= Val ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )? otherlv_12= EqualsSign ( (lv_value_13_0= ruleAExpression ) ) (otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) ) )? ) ;
    public final EObject ruleValDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_range_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_type_4_0 = null;

        EObject lv_type_6_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_type_10_0 = null;

        EObject lv_value_13_0 = null;

        EObject lv_property_15_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5435:28: ( ( () otherlv_1= Val ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )? otherlv_12= EqualsSign ( (lv_value_13_0= ruleAExpression ) ) (otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) ) )? ) )
            // InternalReqSpecParser.g:5436:1: ( () otherlv_1= Val ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )? otherlv_12= EqualsSign ( (lv_value_13_0= ruleAExpression ) ) (otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) ) )? )
            {
            // InternalReqSpecParser.g:5436:1: ( () otherlv_1= Val ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )? otherlv_12= EqualsSign ( (lv_value_13_0= ruleAExpression ) ) (otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) ) )? )
            // InternalReqSpecParser.g:5436:2: () otherlv_1= Val ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )? otherlv_12= EqualsSign ( (lv_value_13_0= ruleAExpression ) ) (otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) ) )?
            {
            // InternalReqSpecParser.g:5436:2: ()
            // InternalReqSpecParser.g:5437:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getValDeclarationAccess().getReqValDeclarationAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Val,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getValDeclarationAccess().getValKeyword_1());
                  
            }
            // InternalReqSpecParser.g:5447:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalReqSpecParser.g:5448:1: (lv_name_2_0= RULE_ID )
            {
            // InternalReqSpecParser.g:5448:1: (lv_name_2_0= RULE_ID )
            // InternalReqSpecParser.g:5449:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getValDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getValDeclarationRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            // InternalReqSpecParser.g:5465:2: (otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==Colon) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalReqSpecParser.g:5466:2: otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) )
                    {
                    otherlv_3=(Token)match(input,Colon,FollowSets000.FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getValDeclarationAccess().getColonKeyword_3_0());
                          
                    }
                    // InternalReqSpecParser.g:5470:1: ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) )
                    int alt127=3;
                    switch ( input.LA(1) ) {
                    case Boolean:
                    case Integer:
                    case String:
                    case Model:
                    case Real:
                    case RULE_ID:
                        {
                        alt127=1;
                        }
                        break;
                    case Typeof:
                        {
                        alt127=2;
                        }
                        break;
                    case LeftSquareBracket:
                        {
                        alt127=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 127, 0, input);

                        throw nvae;
                    }

                    switch (alt127) {
                        case 1 :
                            // InternalReqSpecParser.g:5470:2: ( (lv_type_4_0= ruleTypeRef ) )
                            {
                            // InternalReqSpecParser.g:5470:2: ( (lv_type_4_0= ruleTypeRef ) )
                            // InternalReqSpecParser.g:5471:1: (lv_type_4_0= ruleTypeRef )
                            {
                            // InternalReqSpecParser.g:5471:1: (lv_type_4_0= ruleTypeRef )
                            // InternalReqSpecParser.g:5472:3: lv_type_4_0= ruleTypeRef
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_69);
                            lv_type_4_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_4_0, 
                                      		"org.osate.alisa.common.Common.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:5489:6: (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) )
                            {
                            // InternalReqSpecParser.g:5489:6: (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) )
                            // InternalReqSpecParser.g:5490:2: otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) )
                            {
                            otherlv_5=(Token)match(input,Typeof,FollowSets000.FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_5, grammarAccess.getValDeclarationAccess().getTypeofKeyword_3_1_1_0());
                                  
                            }
                            // InternalReqSpecParser.g:5494:1: ( (lv_type_6_0= rulePropertyRef ) )
                            // InternalReqSpecParser.g:5495:1: (lv_type_6_0= rulePropertyRef )
                            {
                            // InternalReqSpecParser.g:5495:1: (lv_type_6_0= rulePropertyRef )
                            // InternalReqSpecParser.g:5496:3: lv_type_6_0= rulePropertyRef
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getValDeclarationAccess().getTypePropertyRefParserRuleCall_3_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_69);
                            lv_type_6_0=rulePropertyRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getValDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_6_0, 
                                      		"org.osate.alisa.common.Common.PropertyRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalReqSpecParser.g:5513:6: ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket )
                            {
                            // InternalReqSpecParser.g:5513:6: ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket )
                            // InternalReqSpecParser.g:5513:7: ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket
                            {
                            // InternalReqSpecParser.g:5513:7: ( (lv_range_7_0= LeftSquareBracket ) )
                            // InternalReqSpecParser.g:5514:1: (lv_range_7_0= LeftSquareBracket )
                            {
                            // InternalReqSpecParser.g:5514:1: (lv_range_7_0= LeftSquareBracket )
                            // InternalReqSpecParser.g:5515:3: lv_range_7_0= LeftSquareBracket
                            {
                            lv_range_7_0=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_range_7_0, grammarAccess.getValDeclarationAccess().getRangeLeftSquareBracketKeyword_3_1_2_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getValDeclarationRule());
                              	        }
                                     		setWithLastConsumed(current, "range", true, "[");
                              	    
                            }

                            }


                            }

                            // InternalReqSpecParser.g:5529:2: ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) )
                            int alt126=2;
                            int LA126_0 = input.LA(1);

                            if ( (LA126_0==Boolean||LA126_0==Integer||LA126_0==String||LA126_0==Model||LA126_0==Real||LA126_0==RULE_ID) ) {
                                alt126=1;
                            }
                            else if ( (LA126_0==Typeof) ) {
                                alt126=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 126, 0, input);

                                throw nvae;
                            }
                            switch (alt126) {
                                case 1 :
                                    // InternalReqSpecParser.g:5529:3: ( (lv_type_8_0= ruleTypeRef ) )
                                    {
                                    // InternalReqSpecParser.g:5529:3: ( (lv_type_8_0= ruleTypeRef ) )
                                    // InternalReqSpecParser.g:5530:1: (lv_type_8_0= ruleTypeRef )
                                    {
                                    // InternalReqSpecParser.g:5530:1: (lv_type_8_0= ruleTypeRef )
                                    // InternalReqSpecParser.g:5531:3: lv_type_8_0= ruleTypeRef
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getValDeclarationAccess().getTypeTypeRefParserRuleCall_3_1_2_1_0_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_72);
                                    lv_type_8_0=ruleTypeRef();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getValDeclarationRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"type",
                                              		lv_type_8_0, 
                                              		"org.osate.alisa.common.Common.TypeRef");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalReqSpecParser.g:5548:6: (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) )
                                    {
                                    // InternalReqSpecParser.g:5548:6: (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) )
                                    // InternalReqSpecParser.g:5549:2: otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) )
                                    {
                                    otherlv_9=(Token)match(input,Typeof,FollowSets000.FOLLOW_70); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                          	newLeafNode(otherlv_9, grammarAccess.getValDeclarationAccess().getTypeofKeyword_3_1_2_1_1_0());
                                          
                                    }
                                    // InternalReqSpecParser.g:5553:1: ( (lv_type_10_0= rulePropertyRef ) )
                                    // InternalReqSpecParser.g:5554:1: (lv_type_10_0= rulePropertyRef )
                                    {
                                    // InternalReqSpecParser.g:5554:1: (lv_type_10_0= rulePropertyRef )
                                    // InternalReqSpecParser.g:5555:3: lv_type_10_0= rulePropertyRef
                                    {
                                    if ( state.backtracking==0 ) {
                                       
                                      	        newCompositeNode(grammarAccess.getValDeclarationAccess().getTypePropertyRefParserRuleCall_3_1_2_1_1_1_0()); 
                                      	    
                                    }
                                    pushFollow(FollowSets000.FOLLOW_72);
                                    lv_type_10_0=rulePropertyRef();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      	        if (current==null) {
                                      	            current = createModelElementForParent(grammarAccess.getValDeclarationRule());
                                      	        }
                                             		set(
                                             			current, 
                                             			"type",
                                              		lv_type_10_0, 
                                              		"org.osate.alisa.common.Common.PropertyRef");
                                      	        afterParserOrEnumRuleCall();
                                      	    
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_11=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_69); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_11, grammarAccess.getValDeclarationAccess().getRightSquareBracketKeyword_3_1_2_2());
                                  
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,EqualsSign,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getValDeclarationAccess().getEqualsSignKeyword_4());
                  
            }
            // InternalReqSpecParser.g:5581:1: ( (lv_value_13_0= ruleAExpression ) )
            // InternalReqSpecParser.g:5582:1: (lv_value_13_0= ruleAExpression )
            {
            // InternalReqSpecParser.g:5582:1: (lv_value_13_0= ruleAExpression )
            // InternalReqSpecParser.g:5583:3: lv_value_13_0= ruleAExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getValDeclarationAccess().getValueAExpressionParserRuleCall_5_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_73);
            lv_value_13_0=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getValDeclarationRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_13_0, 
                      		"org.osate.alisa.common.Common.AExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:5599:2: (otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==As) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalReqSpecParser.g:5600:2: otherlv_14= As ( (lv_property_15_0= rulePropertyRef ) )
                    {
                    otherlv_14=(Token)match(input,As,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getValDeclarationAccess().getAsKeyword_6_0());
                          
                    }
                    // InternalReqSpecParser.g:5604:1: ( (lv_property_15_0= rulePropertyRef ) )
                    // InternalReqSpecParser.g:5605:1: (lv_property_15_0= rulePropertyRef )
                    {
                    // InternalReqSpecParser.g:5605:1: (lv_property_15_0= rulePropertyRef )
                    // InternalReqSpecParser.g:5606:3: lv_property_15_0= rulePropertyRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getValDeclarationAccess().getPropertyPropertyRefParserRuleCall_6_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_property_15_0=rulePropertyRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getValDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"property",
                              		lv_property_15_0, 
                              		"org.osate.alisa.common.Common.PropertyRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValDeclaration"


    // $ANTLR start "entryRuleDOCPATH"
    // InternalReqSpecParser.g:5630:1: entryRuleDOCPATH returns [String current=null] : iv_ruleDOCPATH= ruleDOCPATH EOF ;
    public final String entryRuleDOCPATH() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDOCPATH = null;


        try {
            // InternalReqSpecParser.g:5631:1: (iv_ruleDOCPATH= ruleDOCPATH EOF )
            // InternalReqSpecParser.g:5632:2: iv_ruleDOCPATH= ruleDOCPATH EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDOCPATHRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDOCPATH=ruleDOCPATH();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDOCPATH.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDOCPATH"


    // $ANTLR start "ruleDOCPATH"
    // InternalReqSpecParser.g:5639:1: ruleDOCPATH returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleDOCPATH() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;
        Token this_ID_4=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5643:6: ( ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID ) )
            // InternalReqSpecParser.g:5644:1: ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID )
            {
            // InternalReqSpecParser.g:5644:1: ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID )
            // InternalReqSpecParser.g:5644:2: (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID
            {
            // InternalReqSpecParser.g:5644:2: (this_ID_0= RULE_ID kw= Solidus )*
            loop130:
            do {
                int alt130=2;
                int LA130_0 = input.LA(1);

                if ( (LA130_0==RULE_ID) ) {
                    int LA130_1 = input.LA(2);

                    if ( (LA130_1==Solidus) ) {
                        alt130=1;
                    }


                }


                switch (alt130) {
            	case 1 :
            	    // InternalReqSpecParser.g:5644:7: this_ID_0= RULE_ID kw= Solidus
            	    {
            	    this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_0, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_0_0()); 
            	          
            	    }
            	    kw=(Token)match(input,Solidus,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getDOCPATHAccess().getSolidusKeyword_0_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop130;
                }
            } while (true);

            this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_2);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_2, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_1()); 
                  
            }
            kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getDOCPATHAccess().getFullStopKeyword_2()); 
                  
            }
            this_ID_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_4);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_4, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDOCPATH"


    // $ANTLR start "entryRuleDescription"
    // InternalReqSpecParser.g:5685:1: entryRuleDescription returns [EObject current=null] : iv_ruleDescription= ruleDescription EOF ;
    public final EObject entryRuleDescription() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDescription = null;


        try {
            // InternalReqSpecParser.g:5686:2: (iv_ruleDescription= ruleDescription EOF )
            // InternalReqSpecParser.g:5687:2: iv_ruleDescription= ruleDescription EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDescriptionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDescription=ruleDescription();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDescription; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDescription"


    // $ANTLR start "ruleDescription"
    // InternalReqSpecParser.g:5694:1: ruleDescription returns [EObject current=null] : (otherlv_0= Description ( (lv_description_1_0= ruleDescriptionElement ) )+ ) ;
    public final EObject ruleDescription() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_description_1_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5697:28: ( (otherlv_0= Description ( (lv_description_1_0= ruleDescriptionElement ) )+ ) )
            // InternalReqSpecParser.g:5698:1: (otherlv_0= Description ( (lv_description_1_0= ruleDescriptionElement ) )+ )
            {
            // InternalReqSpecParser.g:5698:1: (otherlv_0= Description ( (lv_description_1_0= ruleDescriptionElement ) )+ )
            // InternalReqSpecParser.g:5699:2: otherlv_0= Description ( (lv_description_1_0= ruleDescriptionElement ) )+
            {
            otherlv_0=(Token)match(input,Description,FollowSets000.FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getDescriptionAccess().getDescriptionKeyword_0());
                  
            }
            // InternalReqSpecParser.g:5703:1: ( (lv_description_1_0= ruleDescriptionElement ) )+
            int cnt131=0;
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==This||LA131_0==Img||LA131_0==RULE_ID||LA131_0==RULE_STRING) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalReqSpecParser.g:5704:1: (lv_description_1_0= ruleDescriptionElement )
            	    {
            	    // InternalReqSpecParser.g:5704:1: (lv_description_1_0= ruleDescriptionElement )
            	    // InternalReqSpecParser.g:5705:3: lv_description_1_0= ruleDescriptionElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    lv_description_1_0=ruleDescriptionElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getDescriptionRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"description",
            	              		lv_description_1_0, 
            	              		"org.osate.alisa.common.Common.DescriptionElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt131 >= 1 ) break loop131;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(131, input);
                        throw eee;
                }
                cnt131++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDescription"


    // $ANTLR start "entryRuleDescriptionElement"
    // InternalReqSpecParser.g:5729:1: entryRuleDescriptionElement returns [EObject current=null] : iv_ruleDescriptionElement= ruleDescriptionElement EOF ;
    public final EObject entryRuleDescriptionElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDescriptionElement = null;


        try {
            // InternalReqSpecParser.g:5730:2: (iv_ruleDescriptionElement= ruleDescriptionElement EOF )
            // InternalReqSpecParser.g:5731:2: iv_ruleDescriptionElement= ruleDescriptionElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDescriptionElementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDescriptionElement=ruleDescriptionElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDescriptionElement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDescriptionElement"


    // $ANTLR start "ruleDescriptionElement"
    // InternalReqSpecParser.g:5738:1: ruleDescriptionElement returns [EObject current=null] : ( ( (lv_text_0_0= RULE_STRING ) ) | ( ( ( This ) )=> (lv_thisTarget_1_0= This ) ) | ( ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference ) ) | ( (lv_showValue_3_0= ruleShowValue ) ) ) ;
    public final EObject ruleDescriptionElement() throws RecognitionException {
        EObject current = null;

        Token lv_text_0_0=null;
        Token lv_thisTarget_1_0=null;
        EObject lv_image_2_0 = null;

        EObject lv_showValue_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5741:28: ( ( ( (lv_text_0_0= RULE_STRING ) ) | ( ( ( This ) )=> (lv_thisTarget_1_0= This ) ) | ( ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference ) ) | ( (lv_showValue_3_0= ruleShowValue ) ) ) )
            // InternalReqSpecParser.g:5742:1: ( ( (lv_text_0_0= RULE_STRING ) ) | ( ( ( This ) )=> (lv_thisTarget_1_0= This ) ) | ( ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference ) ) | ( (lv_showValue_3_0= ruleShowValue ) ) )
            {
            // InternalReqSpecParser.g:5742:1: ( ( (lv_text_0_0= RULE_STRING ) ) | ( ( ( This ) )=> (lv_thisTarget_1_0= This ) ) | ( ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference ) ) | ( (lv_showValue_3_0= ruleShowValue ) ) )
            int alt132=4;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==RULE_STRING) ) {
                alt132=1;
            }
            else if ( (LA132_0==This) && (synpred1_InternalReqSpecParser())) {
                alt132=2;
            }
            else if ( (LA132_0==Img) && (synpred2_InternalReqSpecParser())) {
                alt132=3;
            }
            else if ( (LA132_0==RULE_ID) ) {
                alt132=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 132, 0, input);

                throw nvae;
            }
            switch (alt132) {
                case 1 :
                    // InternalReqSpecParser.g:5742:2: ( (lv_text_0_0= RULE_STRING ) )
                    {
                    // InternalReqSpecParser.g:5742:2: ( (lv_text_0_0= RULE_STRING ) )
                    // InternalReqSpecParser.g:5743:1: (lv_text_0_0= RULE_STRING )
                    {
                    // InternalReqSpecParser.g:5743:1: (lv_text_0_0= RULE_STRING )
                    // InternalReqSpecParser.g:5744:3: lv_text_0_0= RULE_STRING
                    {
                    lv_text_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_text_0_0, grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDescriptionElementRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"text",
                              		lv_text_0_0, 
                              		"org.eclipse.xtext.common.Terminals.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:5761:6: ( ( ( This ) )=> (lv_thisTarget_1_0= This ) )
                    {
                    // InternalReqSpecParser.g:5761:6: ( ( ( This ) )=> (lv_thisTarget_1_0= This ) )
                    // InternalReqSpecParser.g:5761:7: ( ( This ) )=> (lv_thisTarget_1_0= This )
                    {
                    // InternalReqSpecParser.g:5769:1: (lv_thisTarget_1_0= This )
                    // InternalReqSpecParser.g:5770:3: lv_thisTarget_1_0= This
                    {
                    lv_thisTarget_1_0=(Token)match(input,This,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_thisTarget_1_0, grammarAccess.getDescriptionElementAccess().getThisTargetThisKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getDescriptionElementRule());
                      	        }
                             		setWithLastConsumed(current, "thisTarget", true, "this");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:5785:6: ( ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference ) )
                    {
                    // InternalReqSpecParser.g:5785:6: ( ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference ) )
                    // InternalReqSpecParser.g:5785:7: ( ( ruleImageReference ) )=> (lv_image_2_0= ruleImageReference )
                    {
                    // InternalReqSpecParser.g:5790:1: (lv_image_2_0= ruleImageReference )
                    // InternalReqSpecParser.g:5791:3: lv_image_2_0= ruleImageReference
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDescriptionElementAccess().getImageImageReferenceParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_image_2_0=ruleImageReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDescriptionElementRule());
                      	        }
                             		set(
                             			current, 
                             			"image",
                              		lv_image_2_0, 
                              		"org.osate.alisa.common.Common.ImageReference");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:5808:6: ( (lv_showValue_3_0= ruleShowValue ) )
                    {
                    // InternalReqSpecParser.g:5808:6: ( (lv_showValue_3_0= ruleShowValue ) )
                    // InternalReqSpecParser.g:5809:1: (lv_showValue_3_0= ruleShowValue )
                    {
                    // InternalReqSpecParser.g:5809:1: (lv_showValue_3_0= ruleShowValue )
                    // InternalReqSpecParser.g:5810:3: lv_showValue_3_0= ruleShowValue
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getDescriptionElementAccess().getShowValueShowValueParserRuleCall_3_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_showValue_3_0=ruleShowValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getDescriptionElementRule());
                      	        }
                             		set(
                             			current, 
                             			"showValue",
                              		lv_showValue_3_0, 
                              		"org.osate.alisa.common.Common.ShowValue");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDescriptionElement"


    // $ANTLR start "entryRuleRationale"
    // InternalReqSpecParser.g:5834:1: entryRuleRationale returns [EObject current=null] : iv_ruleRationale= ruleRationale EOF ;
    public final EObject entryRuleRationale() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRationale = null;


        try {
            // InternalReqSpecParser.g:5835:2: (iv_ruleRationale= ruleRationale EOF )
            // InternalReqSpecParser.g:5836:2: iv_ruleRationale= ruleRationale EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRationaleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRationale=ruleRationale();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRationale; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRationale"


    // $ANTLR start "ruleRationale"
    // InternalReqSpecParser.g:5843:1: ruleRationale returns [EObject current=null] : (otherlv_0= Rationale ( (lv_description_1_0= ruleDescriptionElement ) )+ ) ;
    public final EObject ruleRationale() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_description_1_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5846:28: ( (otherlv_0= Rationale ( (lv_description_1_0= ruleDescriptionElement ) )+ ) )
            // InternalReqSpecParser.g:5847:1: (otherlv_0= Rationale ( (lv_description_1_0= ruleDescriptionElement ) )+ )
            {
            // InternalReqSpecParser.g:5847:1: (otherlv_0= Rationale ( (lv_description_1_0= ruleDescriptionElement ) )+ )
            // InternalReqSpecParser.g:5848:2: otherlv_0= Rationale ( (lv_description_1_0= ruleDescriptionElement ) )+
            {
            otherlv_0=(Token)match(input,Rationale,FollowSets000.FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getRationaleAccess().getRationaleKeyword_0());
                  
            }
            // InternalReqSpecParser.g:5852:1: ( (lv_description_1_0= ruleDescriptionElement ) )+
            int cnt133=0;
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==This||LA133_0==Img||LA133_0==RULE_ID||LA133_0==RULE_STRING) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalReqSpecParser.g:5853:1: (lv_description_1_0= ruleDescriptionElement )
            	    {
            	    // InternalReqSpecParser.g:5853:1: (lv_description_1_0= ruleDescriptionElement )
            	    // InternalReqSpecParser.g:5854:3: lv_description_1_0= ruleDescriptionElement
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getRationaleAccess().getDescriptionDescriptionElementParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_77);
            	    lv_description_1_0=ruleDescriptionElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getRationaleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"description",
            	              		lv_description_1_0, 
            	              		"org.osate.alisa.common.Common.DescriptionElement");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt133 >= 1 ) break loop133;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(133, input);
                        throw eee;
                }
                cnt133++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRationale"


    // $ANTLR start "entryRuleUncertainty"
    // InternalReqSpecParser.g:5878:1: entryRuleUncertainty returns [EObject current=null] : iv_ruleUncertainty= ruleUncertainty EOF ;
    public final EObject entryRuleUncertainty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUncertainty = null;


        try {
            // InternalReqSpecParser.g:5879:2: (iv_ruleUncertainty= ruleUncertainty EOF )
            // InternalReqSpecParser.g:5880:2: iv_ruleUncertainty= ruleUncertainty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUncertaintyRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleUncertainty=ruleUncertainty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUncertainty; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUncertainty"


    // $ANTLR start "ruleUncertainty"
    // InternalReqSpecParser.g:5887:1: ruleUncertainty returns [EObject current=null] : ( () otherlv_1= Uncertainty otherlv_2= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) ) ) otherlv_10= RightSquareBracket ) ;
    public final EObject ruleUncertainty() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_volatility_5_0=null;
        Token otherlv_6=null;
        Token lv_precedence_7_0=null;
        Token otherlv_8=null;
        Token lv_impact_9_0=null;
        Token otherlv_10=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:5890:28: ( ( () otherlv_1= Uncertainty otherlv_2= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) ) ) otherlv_10= RightSquareBracket ) )
            // InternalReqSpecParser.g:5891:1: ( () otherlv_1= Uncertainty otherlv_2= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) ) ) otherlv_10= RightSquareBracket )
            {
            // InternalReqSpecParser.g:5891:1: ( () otherlv_1= Uncertainty otherlv_2= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) ) ) otherlv_10= RightSquareBracket )
            // InternalReqSpecParser.g:5891:2: () otherlv_1= Uncertainty otherlv_2= LeftSquareBracket ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) ) ) otherlv_10= RightSquareBracket
            {
            // InternalReqSpecParser.g:5891:2: ()
            // InternalReqSpecParser.g:5892:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUncertaintyAccess().getUncertaintyAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Uncertainty,FollowSets000.FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUncertaintyAccess().getUncertaintyKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUncertaintyAccess().getLeftSquareBracketKeyword_2());
                  
            }
            // InternalReqSpecParser.g:5907:1: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) ) )
            // InternalReqSpecParser.g:5909:1: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) )
            {
            // InternalReqSpecParser.g:5909:1: ( ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* ) )
            // InternalReqSpecParser.g:5910:2: ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3());
            // InternalReqSpecParser.g:5913:2: ( ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )* )
            // InternalReqSpecParser.g:5914:3: ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )*
            {
            // InternalReqSpecParser.g:5914:3: ( ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) ) )*
            loop134:
            do {
                int alt134=4;
                int LA134_0 = input.LA(1);

                if ( LA134_0 == Volatility && getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 0) ) {
                    alt134=1;
                }
                else if ( LA134_0 == Precedence && getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 1) ) {
                    alt134=2;
                }
                else if ( LA134_0 == Impact && getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 2) ) {
                    alt134=3;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalReqSpecParser.g:5916:4: ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:5916:4: ({...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) ) )
            	    // InternalReqSpecParser.g:5917:5: {...}? => ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUncertainty", "getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalReqSpecParser.g:5917:108: ( ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) ) )
            	    // InternalReqSpecParser.g:5918:6: ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 0);
            	    // InternalReqSpecParser.g:5921:6: ({...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) ) )
            	    // InternalReqSpecParser.g:5921:7: {...}? => (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUncertainty", "true");
            	    }
            	    // InternalReqSpecParser.g:5921:16: (otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) ) )
            	    // InternalReqSpecParser.g:5922:2: otherlv_4= Volatility ( (lv_volatility_5_0= RULE_INT ) )
            	    {
            	    otherlv_4=(Token)match(input,Volatility,FollowSets000.FOLLOW_79); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getUncertaintyAccess().getVolatilityKeyword_3_0_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:5926:1: ( (lv_volatility_5_0= RULE_INT ) )
            	    // InternalReqSpecParser.g:5927:1: (lv_volatility_5_0= RULE_INT )
            	    {
            	    // InternalReqSpecParser.g:5927:1: (lv_volatility_5_0= RULE_INT )
            	    // InternalReqSpecParser.g:5928:3: lv_volatility_5_0= RULE_INT
            	    {
            	    lv_volatility_5_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_volatility_5_0, grammarAccess.getUncertaintyAccess().getVolatilityINTTerminalRuleCall_3_0_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getUncertaintyRule());
            	      	        }
            	             		setWithLastConsumed(
            	             			current, 
            	             			"volatility",
            	              		lv_volatility_5_0, 
            	              		"org.eclipse.xtext.common.Terminals.INT");
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalReqSpecParser.g:5951:4: ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:5951:4: ({...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) ) )
            	    // InternalReqSpecParser.g:5952:5: {...}? => ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUncertainty", "getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalReqSpecParser.g:5952:108: ( ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) ) )
            	    // InternalReqSpecParser.g:5953:6: ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 1);
            	    // InternalReqSpecParser.g:5956:6: ({...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) ) )
            	    // InternalReqSpecParser.g:5956:7: {...}? => (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUncertainty", "true");
            	    }
            	    // InternalReqSpecParser.g:5956:16: (otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) ) )
            	    // InternalReqSpecParser.g:5957:2: otherlv_6= Precedence ( (lv_precedence_7_0= RULE_INT ) )
            	    {
            	    otherlv_6=(Token)match(input,Precedence,FollowSets000.FOLLOW_79); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getUncertaintyAccess().getPrecedenceKeyword_3_1_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:5961:1: ( (lv_precedence_7_0= RULE_INT ) )
            	    // InternalReqSpecParser.g:5962:1: (lv_precedence_7_0= RULE_INT )
            	    {
            	    // InternalReqSpecParser.g:5962:1: (lv_precedence_7_0= RULE_INT )
            	    // InternalReqSpecParser.g:5963:3: lv_precedence_7_0= RULE_INT
            	    {
            	    lv_precedence_7_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_precedence_7_0, grammarAccess.getUncertaintyAccess().getPrecedenceINTTerminalRuleCall_3_1_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getUncertaintyRule());
            	      	        }
            	             		setWithLastConsumed(
            	             			current, 
            	             			"precedence",
            	              		lv_precedence_7_0, 
            	              		"org.eclipse.xtext.common.Terminals.INT");
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalReqSpecParser.g:5986:4: ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) )
            	    {
            	    // InternalReqSpecParser.g:5986:4: ({...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) ) )
            	    // InternalReqSpecParser.g:5987:5: {...}? => ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUncertainty", "getUnorderedGroupHelper().canSelect(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalReqSpecParser.g:5987:108: ( ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) ) )
            	    // InternalReqSpecParser.g:5988:6: ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3(), 2);
            	    // InternalReqSpecParser.g:5991:6: ({...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) ) )
            	    // InternalReqSpecParser.g:5991:7: {...}? => (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleUncertainty", "true");
            	    }
            	    // InternalReqSpecParser.g:5991:16: (otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) ) )
            	    // InternalReqSpecParser.g:5992:2: otherlv_8= Impact ( (lv_impact_9_0= RULE_INT ) )
            	    {
            	    otherlv_8=(Token)match(input,Impact,FollowSets000.FOLLOW_79); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_8, grammarAccess.getUncertaintyAccess().getImpactKeyword_3_2_0());
            	          
            	    }
            	    // InternalReqSpecParser.g:5996:1: ( (lv_impact_9_0= RULE_INT ) )
            	    // InternalReqSpecParser.g:5997:1: (lv_impact_9_0= RULE_INT )
            	    {
            	    // InternalReqSpecParser.g:5997:1: (lv_impact_9_0= RULE_INT )
            	    // InternalReqSpecParser.g:5998:3: lv_impact_9_0= RULE_INT
            	    {
            	    lv_impact_9_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_impact_9_0, grammarAccess.getUncertaintyAccess().getImpactINTTerminalRuleCall_3_2_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getUncertaintyRule());
            	      	        }
            	             		setWithLastConsumed(
            	             			current, 
            	             			"impact",
            	              		lv_impact_9_0, 
            	              		"org.eclipse.xtext.common.Terminals.INT");
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getUncertaintyAccess().getUnorderedGroup_3());

            }

            otherlv_10=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getUncertaintyAccess().getRightSquareBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUncertainty"


    // $ANTLR start "entryRuleTypeRef"
    // InternalReqSpecParser.g:6041:1: entryRuleTypeRef returns [EObject current=null] : iv_ruleTypeRef= ruleTypeRef EOF ;
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;


        try {
            // InternalReqSpecParser.g:6042:2: (iv_ruleTypeRef= ruleTypeRef EOF )
            // InternalReqSpecParser.g:6043:2: iv_ruleTypeRef= ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeRef=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalReqSpecParser.g:6050:1: ruleTypeRef returns [EObject current=null] : ( ( () otherlv_1= Boolean ) | ( () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_11= String ) | ( () otherlv_13= Model otherlv_14= Element ) | ( () ( ( ruleAADLPROPERTYREFERENCE ) ) ) ) ;
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6053:28: ( ( ( () otherlv_1= Boolean ) | ( () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_11= String ) | ( () otherlv_13= Model otherlv_14= Element ) | ( () ( ( ruleAADLPROPERTYREFERENCE ) ) ) ) )
            // InternalReqSpecParser.g:6054:1: ( ( () otherlv_1= Boolean ) | ( () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_11= String ) | ( () otherlv_13= Model otherlv_14= Element ) | ( () ( ( ruleAADLPROPERTYREFERENCE ) ) ) )
            {
            // InternalReqSpecParser.g:6054:1: ( ( () otherlv_1= Boolean ) | ( () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | ( () otherlv_11= String ) | ( () otherlv_13= Model otherlv_14= Element ) | ( () ( ( ruleAADLPROPERTYREFERENCE ) ) ) )
            int alt137=6;
            switch ( input.LA(1) ) {
            case Boolean:
                {
                alt137=1;
                }
                break;
            case Integer:
                {
                alt137=2;
                }
                break;
            case Real:
                {
                alt137=3;
                }
                break;
            case String:
                {
                alt137=4;
                }
                break;
            case Model:
                {
                alt137=5;
                }
                break;
            case RULE_ID:
                {
                alt137=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }

            switch (alt137) {
                case 1 :
                    // InternalReqSpecParser.g:6054:2: ( () otherlv_1= Boolean )
                    {
                    // InternalReqSpecParser.g:6054:2: ( () otherlv_1= Boolean )
                    // InternalReqSpecParser.g:6054:3: () otherlv_1= Boolean
                    {
                    // InternalReqSpecParser.g:6054:3: ()
                    // InternalReqSpecParser.g:6055:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefAccess().getAadlBooleanAction_0_0(),
                                  current);
                          
                    }

                    }

                    otherlv_1=(Token)match(input,Boolean,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTypeRefAccess().getBooleanKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:6066:6: ( () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? )
                    {
                    // InternalReqSpecParser.g:6066:6: ( () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? )
                    // InternalReqSpecParser.g:6066:7: () otherlv_3= Integer (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )?
                    {
                    // InternalReqSpecParser.g:6066:7: ()
                    // InternalReqSpecParser.g:6067:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefAccess().getAadlIntegerAction_1_0(),
                                  current);
                          
                    }

                    }

                    otherlv_3=(Token)match(input,Integer,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTypeRefAccess().getIntegerKeyword_1_1());
                          
                    }
                    // InternalReqSpecParser.g:6077:1: (otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )?
                    int alt135=2;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==Units) ) {
                        alt135=1;
                    }
                    switch (alt135) {
                        case 1 :
                            // InternalReqSpecParser.g:6078:2: otherlv_4= Units ( ( ruleAADLPROPERTYREFERENCE ) )
                            {
                            otherlv_4=(Token)match(input,Units,FollowSets000.FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getTypeRefAccess().getUnitsKeyword_1_2_0());
                                  
                            }
                            // InternalReqSpecParser.g:6082:1: ( ( ruleAADLPROPERTYREFERENCE ) )
                            // InternalReqSpecParser.g:6083:1: ( ruleAADLPROPERTYREFERENCE )
                            {
                            // InternalReqSpecParser.g:6083:1: ( ruleAADLPROPERTYREFERENCE )
                            // InternalReqSpecParser.g:6084:3: ruleAADLPROPERTYREFERENCE
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getTypeRefRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeRefAccess().getReferencedUnitsTypeUnitsTypeCrossReference_1_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            ruleAADLPROPERTYREFERENCE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:6099:6: ( () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? )
                    {
                    // InternalReqSpecParser.g:6099:6: ( () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )? )
                    // InternalReqSpecParser.g:6099:7: () otherlv_7= Real (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )?
                    {
                    // InternalReqSpecParser.g:6099:7: ()
                    // InternalReqSpecParser.g:6100:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefAccess().getAadlRealAction_2_0(),
                                  current);
                          
                    }

                    }

                    otherlv_7=(Token)match(input,Real,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getTypeRefAccess().getRealKeyword_2_1());
                          
                    }
                    // InternalReqSpecParser.g:6110:1: (otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) ) )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==Units) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalReqSpecParser.g:6111:2: otherlv_8= Units ( ( ruleAADLPROPERTYREFERENCE ) )
                            {
                            otherlv_8=(Token)match(input,Units,FollowSets000.FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_8, grammarAccess.getTypeRefAccess().getUnitsKeyword_2_2_0());
                                  
                            }
                            // InternalReqSpecParser.g:6115:1: ( ( ruleAADLPROPERTYREFERENCE ) )
                            // InternalReqSpecParser.g:6116:1: ( ruleAADLPROPERTYREFERENCE )
                            {
                            // InternalReqSpecParser.g:6116:1: ( ruleAADLPROPERTYREFERENCE )
                            // InternalReqSpecParser.g:6117:3: ruleAADLPROPERTYREFERENCE
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getTypeRefRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getTypeRefAccess().getReferencedUnitsTypeUnitsTypeCrossReference_2_2_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            ruleAADLPROPERTYREFERENCE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:6132:6: ( () otherlv_11= String )
                    {
                    // InternalReqSpecParser.g:6132:6: ( () otherlv_11= String )
                    // InternalReqSpecParser.g:6132:7: () otherlv_11= String
                    {
                    // InternalReqSpecParser.g:6132:7: ()
                    // InternalReqSpecParser.g:6133:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefAccess().getAadlStringAction_3_0(),
                                  current);
                          
                    }

                    }

                    otherlv_11=(Token)match(input,String,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getTypeRefAccess().getStringKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReqSpecParser.g:6144:6: ( () otherlv_13= Model otherlv_14= Element )
                    {
                    // InternalReqSpecParser.g:6144:6: ( () otherlv_13= Model otherlv_14= Element )
                    // InternalReqSpecParser.g:6144:7: () otherlv_13= Model otherlv_14= Element
                    {
                    // InternalReqSpecParser.g:6144:7: ()
                    // InternalReqSpecParser.g:6145:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefAccess().getModelRefAction_4_0(),
                                  current);
                          
                    }

                    }

                    otherlv_13=(Token)match(input,Model,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getTypeRefAccess().getModelKeyword_4_1());
                          
                    }
                    otherlv_14=(Token)match(input,Element,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_14, grammarAccess.getTypeRefAccess().getElementKeyword_4_2());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReqSpecParser.g:6161:6: ( () ( ( ruleAADLPROPERTYREFERENCE ) ) )
                    {
                    // InternalReqSpecParser.g:6161:6: ( () ( ( ruleAADLPROPERTYREFERENCE ) ) )
                    // InternalReqSpecParser.g:6161:7: () ( ( ruleAADLPROPERTYREFERENCE ) )
                    {
                    // InternalReqSpecParser.g:6161:7: ()
                    // InternalReqSpecParser.g:6162:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getTypeRefAccess().getTypeRefAction_5_0(),
                                  current);
                          
                    }

                    }

                    // InternalReqSpecParser.g:6167:2: ( ( ruleAADLPROPERTYREFERENCE ) )
                    // InternalReqSpecParser.g:6168:1: ( ruleAADLPROPERTYREFERENCE )
                    {
                    // InternalReqSpecParser.g:6168:1: ( ruleAADLPROPERTYREFERENCE )
                    // InternalReqSpecParser.g:6169:3: ruleAADLPROPERTYREFERENCE
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getTypeRefRule());
                      	        }
                              
                    }
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getTypeRefAccess().getRefPropertyTypeCrossReference_5_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    ruleAADLPROPERTYREFERENCE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRulePropertyRef"
    // InternalReqSpecParser.g:6191:1: entryRulePropertyRef returns [EObject current=null] : iv_rulePropertyRef= rulePropertyRef EOF ;
    public final EObject entryRulePropertyRef() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyRef = null;


        try {
            // InternalReqSpecParser.g:6192:2: (iv_rulePropertyRef= rulePropertyRef EOF )
            // InternalReqSpecParser.g:6193:2: iv_rulePropertyRef= rulePropertyRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyRefRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePropertyRef=rulePropertyRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyRef; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyRef"


    // $ANTLR start "rulePropertyRef"
    // InternalReqSpecParser.g:6200:1: rulePropertyRef returns [EObject current=null] : ( () ( ( ruleAADLPROPERTYREFERENCE ) ) ) ;
    public final EObject rulePropertyRef() throws RecognitionException {
        EObject current = null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6203:28: ( ( () ( ( ruleAADLPROPERTYREFERENCE ) ) ) )
            // InternalReqSpecParser.g:6204:1: ( () ( ( ruleAADLPROPERTYREFERENCE ) ) )
            {
            // InternalReqSpecParser.g:6204:1: ( () ( ( ruleAADLPROPERTYREFERENCE ) ) )
            // InternalReqSpecParser.g:6204:2: () ( ( ruleAADLPROPERTYREFERENCE ) )
            {
            // InternalReqSpecParser.g:6204:2: ()
            // InternalReqSpecParser.g:6205:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPropertyRefAccess().getPropertyRefAction_0(),
                          current);
                  
            }

            }

            // InternalReqSpecParser.g:6210:2: ( ( ruleAADLPROPERTYREFERENCE ) )
            // InternalReqSpecParser.g:6211:1: ( ruleAADLPROPERTYREFERENCE )
            {
            // InternalReqSpecParser.g:6211:1: ( ruleAADLPROPERTYREFERENCE )
            // InternalReqSpecParser.g:6212:3: ruleAADLPROPERTYREFERENCE
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getPropertyRefRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPropertyRefAccess().getRefPropertyCrossReference_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAADLPROPERTYREFERENCE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyRef"


    // $ANTLR start "entryRuleComputeDeclaration"
    // InternalReqSpecParser.g:6234:1: entryRuleComputeDeclaration returns [EObject current=null] : iv_ruleComputeDeclaration= ruleComputeDeclaration EOF ;
    public final EObject entryRuleComputeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputeDeclaration = null;


        try {
            // InternalReqSpecParser.g:6235:2: (iv_ruleComputeDeclaration= ruleComputeDeclaration EOF )
            // InternalReqSpecParser.g:6236:2: iv_ruleComputeDeclaration= ruleComputeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleComputeDeclaration=ruleComputeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputeDeclaration"


    // $ANTLR start "ruleComputeDeclaration"
    // InternalReqSpecParser.g:6243:1: ruleComputeDeclaration returns [EObject current=null] : ( () otherlv_1= Compute ( (lv_name_2_0= RULE_ID ) ) otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) ) ;
    public final EObject ruleComputeDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_range_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_type_4_0 = null;

        EObject lv_type_6_0 = null;

        EObject lv_type_8_0 = null;

        EObject lv_type_10_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6246:28: ( ( () otherlv_1= Compute ( (lv_name_2_0= RULE_ID ) ) otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) ) )
            // InternalReqSpecParser.g:6247:1: ( () otherlv_1= Compute ( (lv_name_2_0= RULE_ID ) ) otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )
            {
            // InternalReqSpecParser.g:6247:1: ( () otherlv_1= Compute ( (lv_name_2_0= RULE_ID ) ) otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) ) )
            // InternalReqSpecParser.g:6247:2: () otherlv_1= Compute ( (lv_name_2_0= RULE_ID ) ) otherlv_3= Colon ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) )
            {
            // InternalReqSpecParser.g:6247:2: ()
            // InternalReqSpecParser.g:6248:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getComputeDeclarationAccess().getComputeDeclarationAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,Compute,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getComputeDeclarationAccess().getComputeKeyword_1());
                  
            }
            // InternalReqSpecParser.g:6258:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalReqSpecParser.g:6259:1: (lv_name_2_0= RULE_ID )
            {
            // InternalReqSpecParser.g:6259:1: (lv_name_2_0= RULE_ID )
            // InternalReqSpecParser.g:6260:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getComputeDeclarationAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getComputeDeclarationRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"org.eclipse.xtext.common.Terminals.ID");
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Colon,FollowSets000.FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getComputeDeclarationAccess().getColonKeyword_3());
                  
            }
            // InternalReqSpecParser.g:6281:1: ( ( (lv_type_4_0= ruleTypeRef ) ) | (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) ) | ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket ) )
            int alt139=3;
            switch ( input.LA(1) ) {
            case Boolean:
            case Integer:
            case String:
            case Model:
            case Real:
            case RULE_ID:
                {
                alt139=1;
                }
                break;
            case Typeof:
                {
                alt139=2;
                }
                break;
            case LeftSquareBracket:
                {
                alt139=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }

            switch (alt139) {
                case 1 :
                    // InternalReqSpecParser.g:6281:2: ( (lv_type_4_0= ruleTypeRef ) )
                    {
                    // InternalReqSpecParser.g:6281:2: ( (lv_type_4_0= ruleTypeRef ) )
                    // InternalReqSpecParser.g:6282:1: (lv_type_4_0= ruleTypeRef )
                    {
                    // InternalReqSpecParser.g:6282:1: (lv_type_4_0= ruleTypeRef )
                    // InternalReqSpecParser.g:6283:3: lv_type_4_0= ruleTypeRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getComputeDeclarationAccess().getTypeTypeRefParserRuleCall_4_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_4_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getComputeDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_4_0, 
                              		"org.osate.alisa.common.Common.TypeRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:6300:6: (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) )
                    {
                    // InternalReqSpecParser.g:6300:6: (otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) ) )
                    // InternalReqSpecParser.g:6301:2: otherlv_5= Typeof ( (lv_type_6_0= rulePropertyRef ) )
                    {
                    otherlv_5=(Token)match(input,Typeof,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getComputeDeclarationAccess().getTypeofKeyword_4_1_0());
                          
                    }
                    // InternalReqSpecParser.g:6305:1: ( (lv_type_6_0= rulePropertyRef ) )
                    // InternalReqSpecParser.g:6306:1: (lv_type_6_0= rulePropertyRef )
                    {
                    // InternalReqSpecParser.g:6306:1: (lv_type_6_0= rulePropertyRef )
                    // InternalReqSpecParser.g:6307:3: lv_type_6_0= rulePropertyRef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getComputeDeclarationAccess().getTypePropertyRefParserRuleCall_4_1_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_type_6_0=rulePropertyRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getComputeDeclarationRule());
                      	        }
                             		set(
                             			current, 
                             			"type",
                              		lv_type_6_0, 
                              		"org.osate.alisa.common.Common.PropertyRef");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:6324:6: ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket )
                    {
                    // InternalReqSpecParser.g:6324:6: ( ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket )
                    // InternalReqSpecParser.g:6324:7: ( (lv_range_7_0= LeftSquareBracket ) ) ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) ) otherlv_11= RightSquareBracket
                    {
                    // InternalReqSpecParser.g:6324:7: ( (lv_range_7_0= LeftSquareBracket ) )
                    // InternalReqSpecParser.g:6325:1: (lv_range_7_0= LeftSquareBracket )
                    {
                    // InternalReqSpecParser.g:6325:1: (lv_range_7_0= LeftSquareBracket )
                    // InternalReqSpecParser.g:6326:3: lv_range_7_0= LeftSquareBracket
                    {
                    lv_range_7_0=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_range_7_0, grammarAccess.getComputeDeclarationAccess().getRangeLeftSquareBracketKeyword_4_2_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getComputeDeclarationRule());
                      	        }
                             		setWithLastConsumed(current, "range", true, "[");
                      	    
                    }

                    }


                    }

                    // InternalReqSpecParser.g:6340:2: ( ( (lv_type_8_0= ruleTypeRef ) ) | (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) ) )
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==Boolean||LA138_0==Integer||LA138_0==String||LA138_0==Model||LA138_0==Real||LA138_0==RULE_ID) ) {
                        alt138=1;
                    }
                    else if ( (LA138_0==Typeof) ) {
                        alt138=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 138, 0, input);

                        throw nvae;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalReqSpecParser.g:6340:3: ( (lv_type_8_0= ruleTypeRef ) )
                            {
                            // InternalReqSpecParser.g:6340:3: ( (lv_type_8_0= ruleTypeRef ) )
                            // InternalReqSpecParser.g:6341:1: (lv_type_8_0= ruleTypeRef )
                            {
                            // InternalReqSpecParser.g:6341:1: (lv_type_8_0= ruleTypeRef )
                            // InternalReqSpecParser.g:6342:3: lv_type_8_0= ruleTypeRef
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getComputeDeclarationAccess().getTypeTypeRefParserRuleCall_4_2_1_0_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_72);
                            lv_type_8_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getComputeDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_8_0, 
                                      		"org.osate.alisa.common.Common.TypeRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:6359:6: (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) )
                            {
                            // InternalReqSpecParser.g:6359:6: (otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) ) )
                            // InternalReqSpecParser.g:6360:2: otherlv_9= Typeof ( (lv_type_10_0= rulePropertyRef ) )
                            {
                            otherlv_9=(Token)match(input,Typeof,FollowSets000.FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_9, grammarAccess.getComputeDeclarationAccess().getTypeofKeyword_4_2_1_1_0());
                                  
                            }
                            // InternalReqSpecParser.g:6364:1: ( (lv_type_10_0= rulePropertyRef ) )
                            // InternalReqSpecParser.g:6365:1: (lv_type_10_0= rulePropertyRef )
                            {
                            // InternalReqSpecParser.g:6365:1: (lv_type_10_0= rulePropertyRef )
                            // InternalReqSpecParser.g:6366:3: lv_type_10_0= rulePropertyRef
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getComputeDeclarationAccess().getTypePropertyRefParserRuleCall_4_2_1_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_72);
                            lv_type_10_0=rulePropertyRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getComputeDeclarationRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"type",
                                      		lv_type_10_0, 
                                      		"org.osate.alisa.common.Common.PropertyRef");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getComputeDeclarationAccess().getRightSquareBracketKeyword_4_2_2());
                          
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputeDeclaration"


    // $ANTLR start "entryRuleAModelOrPropertyReference"
    // InternalReqSpecParser.g:6395:1: entryRuleAModelOrPropertyReference returns [EObject current=null] : iv_ruleAModelOrPropertyReference= ruleAModelOrPropertyReference EOF ;
    public final EObject entryRuleAModelOrPropertyReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAModelOrPropertyReference = null;


        try {
            // InternalReqSpecParser.g:6396:2: (iv_ruleAModelOrPropertyReference= ruleAModelOrPropertyReference EOF )
            // InternalReqSpecParser.g:6397:2: iv_ruleAModelOrPropertyReference= ruleAModelOrPropertyReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAModelOrPropertyReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAModelOrPropertyReference=ruleAModelOrPropertyReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAModelOrPropertyReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAModelOrPropertyReference"


    // $ANTLR start "ruleAModelOrPropertyReference"
    // InternalReqSpecParser.g:6404:1: ruleAModelOrPropertyReference returns [EObject current=null] : ( (this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | this_APropertyReference_4= ruleAPropertyReference ) ;
    public final EObject ruleAModelOrPropertyReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_AModelReference_0 = null;

        EObject this_APropertyReference_4 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6407:28: ( ( (this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | this_APropertyReference_4= ruleAPropertyReference ) )
            // InternalReqSpecParser.g:6408:1: ( (this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | this_APropertyReference_4= ruleAPropertyReference )
            {
            // InternalReqSpecParser.g:6408:1: ( (this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )? ) | this_APropertyReference_4= ruleAPropertyReference )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==This) ) {
                alt141=1;
            }
            else if ( (LA141_0==NumberSign) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalReqSpecParser.g:6408:2: (this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )? )
                    {
                    // InternalReqSpecParser.g:6408:2: (this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )? )
                    // InternalReqSpecParser.g:6409:5: this_AModelReference_0= ruleAModelReference ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )?
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAModelOrPropertyReferenceAccess().getAModelReferenceParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_66);
                    this_AModelReference_0=ruleAModelReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AModelReference_0;
                              afterParserOrEnumRuleCall();
                          
                    }
                    // InternalReqSpecParser.g:6417:1: ( ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) ) )?
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==NumberSign) && (synpred3_InternalReqSpecParser())) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalReqSpecParser.g:6417:2: ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) ) ( ( ruleAADLPROPERTYREFERENCE ) )
                            {
                            // InternalReqSpecParser.g:6417:2: ( ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign ) )
                            // InternalReqSpecParser.g:6417:3: ( ( () NumberSign ) )=> ( () otherlv_2= NumberSign )
                            {
                            // InternalReqSpecParser.g:6420:5: ( () otherlv_2= NumberSign )
                            // InternalReqSpecParser.g:6420:6: () otherlv_2= NumberSign
                            {
                            // InternalReqSpecParser.g:6420:6: ()
                            // InternalReqSpecParser.g:6421:5: 
                            {
                            if ( state.backtracking==0 ) {

                                      current = forceCreateModelElementAndSet(
                                          grammarAccess.getAModelOrPropertyReferenceAccess().getAPropertyReferenceModelElementReferenceAction_0_1_0_0_0(),
                                          current);
                                  
                            }

                            }

                            otherlv_2=(Token)match(input,NumberSign,FollowSets000.FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_2, grammarAccess.getAModelOrPropertyReferenceAccess().getNumberSignKeyword_0_1_0_0_1());
                                  
                            }

                            }


                            }

                            // InternalReqSpecParser.g:6431:3: ( ( ruleAADLPROPERTYREFERENCE ) )
                            // InternalReqSpecParser.g:6432:1: ( ruleAADLPROPERTYREFERENCE )
                            {
                            // InternalReqSpecParser.g:6432:1: ( ruleAADLPROPERTYREFERENCE )
                            // InternalReqSpecParser.g:6433:3: ruleAADLPROPERTYREFERENCE
                            {
                            if ( state.backtracking==0 ) {

                              			if (current==null) {
                              	            current = createModelElement(grammarAccess.getAModelOrPropertyReferenceRule());
                              	        }
                                      
                            }
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAModelOrPropertyReferenceAccess().getPropertyAbstractNamedValueCrossReference_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            ruleAADLPROPERTYREFERENCE();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {
                               
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:6449:5: this_APropertyReference_4= ruleAPropertyReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAModelOrPropertyReferenceAccess().getAPropertyReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_APropertyReference_4=ruleAPropertyReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_APropertyReference_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAModelOrPropertyReference"


    // $ANTLR start "entryRuleAModelReference"
    // InternalReqSpecParser.g:6465:1: entryRuleAModelReference returns [EObject current=null] : iv_ruleAModelReference= ruleAModelReference EOF ;
    public final EObject entryRuleAModelReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAModelReference = null;


        try {
            // InternalReqSpecParser.g:6466:2: (iv_ruleAModelReference= ruleAModelReference EOF )
            // InternalReqSpecParser.g:6467:2: iv_ruleAModelReference= ruleAModelReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAModelReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAModelReference=ruleAModelReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAModelReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAModelReference"


    // $ANTLR start "ruleAModelReference"
    // InternalReqSpecParser.g:6474:1: ruleAModelReference returns [EObject current=null] : ( ( ( ruleThisKeyword ) ) ( () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) ) )* ) ;
    public final EObject ruleAModelReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6477:28: ( ( ( ( ruleThisKeyword ) ) ( () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) ) )* ) )
            // InternalReqSpecParser.g:6478:1: ( ( ( ruleThisKeyword ) ) ( () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) ) )* )
            {
            // InternalReqSpecParser.g:6478:1: ( ( ( ruleThisKeyword ) ) ( () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) ) )* )
            // InternalReqSpecParser.g:6478:2: ( ( ruleThisKeyword ) ) ( () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) ) )*
            {
            // InternalReqSpecParser.g:6478:2: ( ( ruleThisKeyword ) )
            // InternalReqSpecParser.g:6479:1: ( ruleThisKeyword )
            {
            // InternalReqSpecParser.g:6479:1: ( ruleThisKeyword )
            // InternalReqSpecParser.g:6480:3: ruleThisKeyword
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAModelReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAModelReferenceAccess().getModelElementNamedElementCrossReference_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_83);
            ruleThisKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:6494:2: ( () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) ) )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==FullStop) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalReqSpecParser.g:6494:3: () otherlv_2= FullStop ( (otherlv_3= RULE_ID ) )
            	    {
            	    // InternalReqSpecParser.g:6494:3: ()
            	    // InternalReqSpecParser.g:6495:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAModelReferenceAccess().getAModelReferencePrevAction_1_0(),
            	                  current);
            	          
            	    }

            	    }

            	    otherlv_2=(Token)match(input,FullStop,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getAModelReferenceAccess().getFullStopKeyword_1_1());
            	          
            	    }
            	    // InternalReqSpecParser.g:6505:1: ( (otherlv_3= RULE_ID ) )
            	    // InternalReqSpecParser.g:6506:1: (otherlv_3= RULE_ID )
            	    {
            	    // InternalReqSpecParser.g:6506:1: (otherlv_3= RULE_ID )
            	    // InternalReqSpecParser.g:6507:3: otherlv_3= RULE_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      			if (current==null) {
            	      	            current = createModelElement(grammarAccess.getAModelReferenceRule());
            	      	        }
            	              
            	    }
            	    otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_83); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		newLeafNode(otherlv_3, grammarAccess.getAModelReferenceAccess().getModelElementNamedElementCrossReference_1_2_0()); 
            	      	
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAModelReference"


    // $ANTLR start "entryRuleAPropertyReference"
    // InternalReqSpecParser.g:6526:1: entryRuleAPropertyReference returns [EObject current=null] : iv_ruleAPropertyReference= ruleAPropertyReference EOF ;
    public final EObject entryRuleAPropertyReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAPropertyReference = null;


        try {
            // InternalReqSpecParser.g:6527:2: (iv_ruleAPropertyReference= ruleAPropertyReference EOF )
            // InternalReqSpecParser.g:6528:2: iv_ruleAPropertyReference= ruleAPropertyReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAPropertyReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAPropertyReference=ruleAPropertyReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAPropertyReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAPropertyReference"


    // $ANTLR start "ruleAPropertyReference"
    // InternalReqSpecParser.g:6535:1: ruleAPropertyReference returns [EObject current=null] : ( () otherlv_1= NumberSign ( ( ruleAADLPROPERTYREFERENCE ) ) ) ;
    public final EObject ruleAPropertyReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6538:28: ( ( () otherlv_1= NumberSign ( ( ruleAADLPROPERTYREFERENCE ) ) ) )
            // InternalReqSpecParser.g:6539:1: ( () otherlv_1= NumberSign ( ( ruleAADLPROPERTYREFERENCE ) ) )
            {
            // InternalReqSpecParser.g:6539:1: ( () otherlv_1= NumberSign ( ( ruleAADLPROPERTYREFERENCE ) ) )
            // InternalReqSpecParser.g:6539:2: () otherlv_1= NumberSign ( ( ruleAADLPROPERTYREFERENCE ) )
            {
            // InternalReqSpecParser.g:6539:2: ()
            // InternalReqSpecParser.g:6540:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAPropertyReferenceAccess().getAPropertyReferenceAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,NumberSign,FollowSets000.FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAPropertyReferenceAccess().getNumberSignKeyword_1());
                  
            }
            // InternalReqSpecParser.g:6550:1: ( ( ruleAADLPROPERTYREFERENCE ) )
            // InternalReqSpecParser.g:6551:1: ( ruleAADLPROPERTYREFERENCE )
            {
            // InternalReqSpecParser.g:6551:1: ( ruleAADLPROPERTYREFERENCE )
            // InternalReqSpecParser.g:6552:3: ruleAADLPROPERTYREFERENCE
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAPropertyReferenceRule());
              	        }
                      
            }
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAPropertyReferenceAccess().getPropertyAbstractNamedValueCrossReference_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            ruleAADLPROPERTYREFERENCE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAPropertyReference"


    // $ANTLR start "entryRuleAVariableReference"
    // InternalReqSpecParser.g:6574:1: entryRuleAVariableReference returns [EObject current=null] : iv_ruleAVariableReference= ruleAVariableReference EOF ;
    public final EObject entryRuleAVariableReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAVariableReference = null;


        try {
            // InternalReqSpecParser.g:6575:2: (iv_ruleAVariableReference= ruleAVariableReference EOF )
            // InternalReqSpecParser.g:6576:2: iv_ruleAVariableReference= ruleAVariableReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAVariableReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAVariableReference=ruleAVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAVariableReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAVariableReference"


    // $ANTLR start "ruleAVariableReference"
    // InternalReqSpecParser.g:6583:1: ruleAVariableReference returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleAVariableReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6586:28: ( ( () ( (otherlv_1= RULE_ID ) ) ) )
            // InternalReqSpecParser.g:6587:1: ( () ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalReqSpecParser.g:6587:1: ( () ( (otherlv_1= RULE_ID ) ) )
            // InternalReqSpecParser.g:6587:2: () ( (otherlv_1= RULE_ID ) )
            {
            // InternalReqSpecParser.g:6587:2: ()
            // InternalReqSpecParser.g:6588:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAVariableReferenceAccess().getAVariableReferenceAction_0(),
                          current);
                  
            }

            }

            // InternalReqSpecParser.g:6593:2: ( (otherlv_1= RULE_ID ) )
            // InternalReqSpecParser.g:6594:1: (otherlv_1= RULE_ID )
            {
            // InternalReqSpecParser.g:6594:1: (otherlv_1= RULE_ID )
            // InternalReqSpecParser.g:6595:3: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              			if (current==null) {
              	            current = createModelElement(grammarAccess.getAVariableReferenceRule());
              	        }
                      
            }
            otherlv_1=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		newLeafNode(otherlv_1, grammarAccess.getAVariableReferenceAccess().getVariableAVariableDeclarationCrossReference_1_0()); 
              	
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAVariableReference"


    // $ANTLR start "entryRuleShowValue"
    // InternalReqSpecParser.g:6614:1: entryRuleShowValue returns [EObject current=null] : iv_ruleShowValue= ruleShowValue EOF ;
    public final EObject entryRuleShowValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShowValue = null;


        try {
            // InternalReqSpecParser.g:6615:2: (iv_ruleShowValue= ruleShowValue EOF )
            // InternalReqSpecParser.g:6616:2: iv_ruleShowValue= ruleShowValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShowValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShowValue=ruleShowValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShowValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShowValue"


    // $ANTLR start "ruleShowValue"
    // InternalReqSpecParser.g:6623:1: ruleShowValue returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAVariableReference ) ) ( ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) ) )? ) ;
    public final EObject ruleShowValue() throws RecognitionException {
        EObject current = null;

        Token lv_convert_1_0=null;
        Token lv_drop_2_0=null;
        Token otherlv_3=null;
        EObject lv_expression_0_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6626:28: ( ( ( (lv_expression_0_0= ruleAVariableReference ) ) ( ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) ) )? ) )
            // InternalReqSpecParser.g:6627:1: ( ( (lv_expression_0_0= ruleAVariableReference ) ) ( ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) ) )? )
            {
            // InternalReqSpecParser.g:6627:1: ( ( (lv_expression_0_0= ruleAVariableReference ) ) ( ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) ) )? )
            // InternalReqSpecParser.g:6627:2: ( (lv_expression_0_0= ruleAVariableReference ) ) ( ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) ) )?
            {
            // InternalReqSpecParser.g:6627:2: ( (lv_expression_0_0= ruleAVariableReference ) )
            // InternalReqSpecParser.g:6628:1: (lv_expression_0_0= ruleAVariableReference )
            {
            // InternalReqSpecParser.g:6628:1: (lv_expression_0_0= ruleAVariableReference )
            // InternalReqSpecParser.g:6629:3: lv_expression_0_0= ruleAVariableReference
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShowValueAccess().getExpressionAVariableReferenceParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_84);
            lv_expression_0_0=ruleAVariableReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShowValueRule());
              	        }
                     		set(
                     			current, 
                     			"expression",
                      		lv_expression_0_0, 
                      		"org.osate.alisa.common.Common.AVariableReference");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:6645:2: ( ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==In||LA144_0==PercentSign) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalReqSpecParser.g:6645:3: ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) ) ( (otherlv_3= RULE_ID ) )
                    {
                    // InternalReqSpecParser.g:6645:3: ( ( (lv_convert_1_0= PercentSign ) ) | ( (lv_drop_2_0= In ) ) )
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==PercentSign) ) {
                        alt143=1;
                    }
                    else if ( (LA143_0==In) ) {
                        alt143=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 143, 0, input);

                        throw nvae;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalReqSpecParser.g:6645:4: ( (lv_convert_1_0= PercentSign ) )
                            {
                            // InternalReqSpecParser.g:6645:4: ( (lv_convert_1_0= PercentSign ) )
                            // InternalReqSpecParser.g:6646:1: (lv_convert_1_0= PercentSign )
                            {
                            // InternalReqSpecParser.g:6646:1: (lv_convert_1_0= PercentSign )
                            // InternalReqSpecParser.g:6647:3: lv_convert_1_0= PercentSign
                            {
                            lv_convert_1_0=(Token)match(input,PercentSign,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_convert_1_0, grammarAccess.getShowValueAccess().getConvertPercentSignKeyword_1_0_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getShowValueRule());
                              	        }
                                     		setWithLastConsumed(current, "convert", true, "%");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:6662:6: ( (lv_drop_2_0= In ) )
                            {
                            // InternalReqSpecParser.g:6662:6: ( (lv_drop_2_0= In ) )
                            // InternalReqSpecParser.g:6663:1: (lv_drop_2_0= In )
                            {
                            // InternalReqSpecParser.g:6663:1: (lv_drop_2_0= In )
                            // InternalReqSpecParser.g:6664:3: lv_drop_2_0= In
                            {
                            lv_drop_2_0=(Token)match(input,In,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_drop_2_0, grammarAccess.getShowValueAccess().getDropInKeyword_1_0_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getShowValueRule());
                              	        }
                                     		setWithLastConsumed(current, "drop", true, "in");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalReqSpecParser.g:6678:3: ( (otherlv_3= RULE_ID ) )
                    // InternalReqSpecParser.g:6679:1: (otherlv_3= RULE_ID )
                    {
                    // InternalReqSpecParser.g:6679:1: (otherlv_3= RULE_ID )
                    // InternalReqSpecParser.g:6680:3: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getShowValueRule());
                      	        }
                              
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_3, grammarAccess.getShowValueAccess().getUnitUnitLiteralCrossReference_1_1_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShowValue"


    // $ANTLR start "entryRuleImageReference"
    // InternalReqSpecParser.g:6699:1: entryRuleImageReference returns [EObject current=null] : iv_ruleImageReference= ruleImageReference EOF ;
    public final EObject entryRuleImageReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImageReference = null;


        try {
            // InternalReqSpecParser.g:6700:2: (iv_ruleImageReference= ruleImageReference EOF )
            // InternalReqSpecParser.g:6701:2: iv_ruleImageReference= ruleImageReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImageReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImageReference=ruleImageReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImageReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImageReference"


    // $ANTLR start "ruleImageReference"
    // InternalReqSpecParser.g:6708:1: ruleImageReference returns [EObject current=null] : (otherlv_0= Img ( (lv_imgfile_1_0= ruleIMGREF ) ) ) ;
    public final EObject ruleImageReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_imgfile_1_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6711:28: ( (otherlv_0= Img ( (lv_imgfile_1_0= ruleIMGREF ) ) ) )
            // InternalReqSpecParser.g:6712:1: (otherlv_0= Img ( (lv_imgfile_1_0= ruleIMGREF ) ) )
            {
            // InternalReqSpecParser.g:6712:1: (otherlv_0= Img ( (lv_imgfile_1_0= ruleIMGREF ) ) )
            // InternalReqSpecParser.g:6713:2: otherlv_0= Img ( (lv_imgfile_1_0= ruleIMGREF ) )
            {
            otherlv_0=(Token)match(input,Img,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImageReferenceAccess().getImgKeyword_0());
                  
            }
            // InternalReqSpecParser.g:6717:1: ( (lv_imgfile_1_0= ruleIMGREF ) )
            // InternalReqSpecParser.g:6718:1: (lv_imgfile_1_0= ruleIMGREF )
            {
            // InternalReqSpecParser.g:6718:1: (lv_imgfile_1_0= ruleIMGREF )
            // InternalReqSpecParser.g:6719:3: lv_imgfile_1_0= ruleIMGREF
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getImageReferenceAccess().getImgfileIMGREFParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_imgfile_1_0=ruleIMGREF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getImageReferenceRule());
              	        }
                     		set(
                     			current, 
                     			"imgfile",
                      		lv_imgfile_1_0, 
                      		"org.osate.alisa.common.Common.IMGREF");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImageReference"


    // $ANTLR start "entryRuleIMGREF"
    // InternalReqSpecParser.g:6743:1: entryRuleIMGREF returns [String current=null] : iv_ruleIMGREF= ruleIMGREF EOF ;
    public final String entryRuleIMGREF() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIMGREF = null;


        try {
            // InternalReqSpecParser.g:6744:1: (iv_ruleIMGREF= ruleIMGREF EOF )
            // InternalReqSpecParser.g:6745:2: iv_ruleIMGREF= ruleIMGREF EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIMGREFRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIMGREF=ruleIMGREF();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIMGREF.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIMGREF"


    // $ANTLR start "ruleIMGREF"
    // InternalReqSpecParser.g:6752:1: ruleIMGREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleIMGREF() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;
        Token this_ID_4=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6756:6: ( ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID ) )
            // InternalReqSpecParser.g:6757:1: ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID )
            {
            // InternalReqSpecParser.g:6757:1: ( (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID )
            // InternalReqSpecParser.g:6757:2: (this_ID_0= RULE_ID kw= Solidus )* this_ID_2= RULE_ID kw= FullStop this_ID_4= RULE_ID
            {
            // InternalReqSpecParser.g:6757:2: (this_ID_0= RULE_ID kw= Solidus )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==RULE_ID) ) {
                    int LA145_1 = input.LA(2);

                    if ( (LA145_1==Solidus) ) {
                        alt145=1;
                    }


                }


                switch (alt145) {
            	case 1 :
            	    // InternalReqSpecParser.g:6757:7: this_ID_0= RULE_ID kw= Solidus
            	    {
            	    this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_0);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_0, grammarAccess.getIMGREFAccess().getIDTerminalRuleCall_0_0()); 
            	          
            	    }
            	    kw=(Token)match(input,Solidus,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getIMGREFAccess().getSolidusKeyword_0_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);

            this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_2);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_2, grammarAccess.getIMGREFAccess().getIDTerminalRuleCall_1()); 
                  
            }
            kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getIMGREFAccess().getFullStopKeyword_2()); 
                  
            }
            this_ID_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_4);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_4, grammarAccess.getIMGREFAccess().getIDTerminalRuleCall_3()); 
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIMGREF"


    // $ANTLR start "entryRuleAExpression"
    // InternalReqSpecParser.g:6798:1: entryRuleAExpression returns [EObject current=null] : iv_ruleAExpression= ruleAExpression EOF ;
    public final EObject entryRuleAExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAExpression = null;


        try {
            // InternalReqSpecParser.g:6799:2: (iv_ruleAExpression= ruleAExpression EOF )
            // InternalReqSpecParser.g:6800:2: iv_ruleAExpression= ruleAExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAExpression=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAExpression"


    // $ANTLR start "ruleAExpression"
    // InternalReqSpecParser.g:6807:1: ruleAExpression returns [EObject current=null] : this_AOrExpression_0= ruleAOrExpression ;
    public final EObject ruleAExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AOrExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6810:28: (this_AOrExpression_0= ruleAOrExpression )
            // InternalReqSpecParser.g:6812:5: this_AOrExpression_0= ruleAOrExpression
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAExpressionAccess().getAOrExpressionParserRuleCall()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_AOrExpression_0=ruleAOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AOrExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAExpression"


    // $ANTLR start "entryRuleAOrExpression"
    // InternalReqSpecParser.g:6828:1: entryRuleAOrExpression returns [EObject current=null] : iv_ruleAOrExpression= ruleAOrExpression EOF ;
    public final EObject entryRuleAOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAOrExpression = null;


        try {
            // InternalReqSpecParser.g:6829:2: (iv_ruleAOrExpression= ruleAOrExpression EOF )
            // InternalReqSpecParser.g:6830:2: iv_ruleAOrExpression= ruleAOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAOrExpression=ruleAOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAOrExpression"


    // $ANTLR start "ruleAOrExpression"
    // InternalReqSpecParser.g:6837:1: ruleAOrExpression returns [EObject current=null] : (this_AAndExpression_0= ruleAAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) ) )* ) ;
    public final EObject ruleAOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AAndExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6840:28: ( (this_AAndExpression_0= ruleAAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) ) )* ) )
            // InternalReqSpecParser.g:6841:1: (this_AAndExpression_0= ruleAAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) ) )* )
            {
            // InternalReqSpecParser.g:6841:1: (this_AAndExpression_0= ruleAAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) ) )* )
            // InternalReqSpecParser.g:6842:5: this_AAndExpression_0= ruleAAndExpression ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAOrExpressionAccess().getAAndExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_85);
            this_AAndExpression_0=ruleAAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AAndExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:6850:1: ( ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==Or) && (synpred4_InternalReqSpecParser())) {
                    alt146=1;
                }
                else if ( (LA146_0==VerticalLineVerticalLine) && (synpred4_InternalReqSpecParser())) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalReqSpecParser.g:6850:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) ) ( (lv_right_3_0= ruleAAndExpression ) )
            	    {
            	    // InternalReqSpecParser.g:6850:2: ( ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) ) )
            	    // InternalReqSpecParser.g:6850:3: ( ( () ( ( ruleOpOr ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpOr ) ) )
            	    {
            	    // InternalReqSpecParser.g:6855:6: ( () ( (lv_operator_2_0= ruleOpOr ) ) )
            	    // InternalReqSpecParser.g:6855:7: () ( (lv_operator_2_0= ruleOpOr ) )
            	    {
            	    // InternalReqSpecParser.g:6855:7: ()
            	    // InternalReqSpecParser.g:6856:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAOrExpressionAccess().getABinaryOperationLeftAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalReqSpecParser.g:6861:2: ( (lv_operator_2_0= ruleOpOr ) )
            	    // InternalReqSpecParser.g:6862:1: (lv_operator_2_0= ruleOpOr )
            	    {
            	    // InternalReqSpecParser.g:6862:1: (lv_operator_2_0= ruleOpOr )
            	    // InternalReqSpecParser.g:6863:3: lv_operator_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAOrExpressionAccess().getOperatorOpOrParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_operator_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"org.osate.alisa.common.Common.OpOr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalReqSpecParser.g:6879:4: ( (lv_right_3_0= ruleAAndExpression ) )
            	    // InternalReqSpecParser.g:6880:1: (lv_right_3_0= ruleAAndExpression )
            	    {
            	    // InternalReqSpecParser.g:6880:1: (lv_right_3_0= ruleAAndExpression )
            	    // InternalReqSpecParser.g:6881:3: lv_right_3_0= ruleAAndExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAOrExpressionAccess().getRightAAndExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_85);
            	    lv_right_3_0=ruleAAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAOrExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"org.osate.alisa.common.Common.AAndExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAOrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalReqSpecParser.g:6905:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalReqSpecParser.g:6906:1: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalReqSpecParser.g:6907:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalReqSpecParser.g:6914:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Or | kw= VerticalLineVerticalLine ) ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6918:6: ( (kw= Or | kw= VerticalLineVerticalLine ) )
            // InternalReqSpecParser.g:6919:1: (kw= Or | kw= VerticalLineVerticalLine )
            {
            // InternalReqSpecParser.g:6919:1: (kw= Or | kw= VerticalLineVerticalLine )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==Or) ) {
                alt147=1;
            }
            else if ( (LA147_0==VerticalLineVerticalLine) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalReqSpecParser.g:6920:2: kw= Or
                    {
                    kw=(Token)match(input,Or,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOrAccess().getOrKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:6927:2: kw= VerticalLineVerticalLine
                    {
                    kw=(Token)match(input,VerticalLineVerticalLine,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleAAndExpression"
    // InternalReqSpecParser.g:6940:1: entryRuleAAndExpression returns [EObject current=null] : iv_ruleAAndExpression= ruleAAndExpression EOF ;
    public final EObject entryRuleAAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAAndExpression = null;


        try {
            // InternalReqSpecParser.g:6941:2: (iv_ruleAAndExpression= ruleAAndExpression EOF )
            // InternalReqSpecParser.g:6942:2: iv_ruleAAndExpression= ruleAAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAAndExpression=ruleAAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAAndExpression"


    // $ANTLR start "ruleAAndExpression"
    // InternalReqSpecParser.g:6949:1: ruleAAndExpression returns [EObject current=null] : (this_AEqualityExpression_0= ruleAEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) ) )* ) ;
    public final EObject ruleAAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AEqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:6952:28: ( (this_AEqualityExpression_0= ruleAEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) ) )* ) )
            // InternalReqSpecParser.g:6953:1: (this_AEqualityExpression_0= ruleAEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) ) )* )
            {
            // InternalReqSpecParser.g:6953:1: (this_AEqualityExpression_0= ruleAEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) ) )* )
            // InternalReqSpecParser.g:6954:5: this_AEqualityExpression_0= ruleAEqualityExpression ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAAndExpressionAccess().getAEqualityExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_86);
            this_AEqualityExpression_0=ruleAEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AEqualityExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:6962:1: ( ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) ) )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==And) && (synpred5_InternalReqSpecParser())) {
                    alt148=1;
                }
                else if ( (LA148_0==AmpersandAmpersand) && (synpred5_InternalReqSpecParser())) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalReqSpecParser.g:6962:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) ) ( (lv_right_3_0= ruleAEqualityExpression ) )
            	    {
            	    // InternalReqSpecParser.g:6962:2: ( ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) ) )
            	    // InternalReqSpecParser.g:6962:3: ( ( () ( ( ruleOpAnd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAnd ) ) )
            	    {
            	    // InternalReqSpecParser.g:6967:6: ( () ( (lv_operator_2_0= ruleOpAnd ) ) )
            	    // InternalReqSpecParser.g:6967:7: () ( (lv_operator_2_0= ruleOpAnd ) )
            	    {
            	    // InternalReqSpecParser.g:6967:7: ()
            	    // InternalReqSpecParser.g:6968:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAAndExpressionAccess().getABinaryOperationLeftAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalReqSpecParser.g:6973:2: ( (lv_operator_2_0= ruleOpAnd ) )
            	    // InternalReqSpecParser.g:6974:1: (lv_operator_2_0= ruleOpAnd )
            	    {
            	    // InternalReqSpecParser.g:6974:1: (lv_operator_2_0= ruleOpAnd )
            	    // InternalReqSpecParser.g:6975:3: lv_operator_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAAndExpressionAccess().getOperatorOpAndParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_operator_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"org.osate.alisa.common.Common.OpAnd");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalReqSpecParser.g:6991:4: ( (lv_right_3_0= ruleAEqualityExpression ) )
            	    // InternalReqSpecParser.g:6992:1: (lv_right_3_0= ruleAEqualityExpression )
            	    {
            	    // InternalReqSpecParser.g:6992:1: (lv_right_3_0= ruleAEqualityExpression )
            	    // InternalReqSpecParser.g:6993:3: lv_right_3_0= ruleAEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAAndExpressionAccess().getRightAEqualityExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_86);
            	    lv_right_3_0=ruleAEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAAndExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"org.osate.alisa.common.Common.AEqualityExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAAndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalReqSpecParser.g:7017:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalReqSpecParser.g:7018:1: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalReqSpecParser.g:7019:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalReqSpecParser.g:7026:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= And | kw= AmpersandAmpersand ) ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7030:6: ( (kw= And | kw= AmpersandAmpersand ) )
            // InternalReqSpecParser.g:7031:1: (kw= And | kw= AmpersandAmpersand )
            {
            // InternalReqSpecParser.g:7031:1: (kw= And | kw= AmpersandAmpersand )
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==And) ) {
                alt149=1;
            }
            else if ( (LA149_0==AmpersandAmpersand) ) {
                alt149=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }
            switch (alt149) {
                case 1 :
                    // InternalReqSpecParser.g:7032:2: kw= And
                    {
                    kw=(Token)match(input,And,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAndAccess().getAndKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7039:2: kw= AmpersandAmpersand
                    {
                    kw=(Token)match(input,AmpersandAmpersand,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleAEqualityExpression"
    // InternalReqSpecParser.g:7052:1: entryRuleAEqualityExpression returns [EObject current=null] : iv_ruleAEqualityExpression= ruleAEqualityExpression EOF ;
    public final EObject entryRuleAEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAEqualityExpression = null;


        try {
            // InternalReqSpecParser.g:7053:2: (iv_ruleAEqualityExpression= ruleAEqualityExpression EOF )
            // InternalReqSpecParser.g:7054:2: iv_ruleAEqualityExpression= ruleAEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAEqualityExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAEqualityExpression=ruleAEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAEqualityExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAEqualityExpression"


    // $ANTLR start "ruleAEqualityExpression"
    // InternalReqSpecParser.g:7061:1: ruleAEqualityExpression returns [EObject current=null] : (this_ARelationalExpression_0= ruleARelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) ) )* ) ;
    public final EObject ruleAEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ARelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7064:28: ( (this_ARelationalExpression_0= ruleARelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) ) )* ) )
            // InternalReqSpecParser.g:7065:1: (this_ARelationalExpression_0= ruleARelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) ) )* )
            {
            // InternalReqSpecParser.g:7065:1: (this_ARelationalExpression_0= ruleARelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) ) )* )
            // InternalReqSpecParser.g:7066:5: this_ARelationalExpression_0= ruleARelationalExpression ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAEqualityExpressionAccess().getARelationalExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_87);
            this_ARelationalExpression_0=ruleARelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_ARelationalExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:7074:1: ( ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==EqualsSignEqualsSign) && (synpred6_InternalReqSpecParser())) {
                    alt150=1;
                }
                else if ( (LA150_0==ExclamationMarkEqualsSign) && (synpred6_InternalReqSpecParser())) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalReqSpecParser.g:7074:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) ) ( (lv_right_3_0= ruleARelationalExpression ) )
            	    {
            	    // InternalReqSpecParser.g:7074:2: ( ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) ) )
            	    // InternalReqSpecParser.g:7074:3: ( ( () ( ( ruleOpEquality ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpEquality ) ) )
            	    {
            	    // InternalReqSpecParser.g:7079:6: ( () ( (lv_operator_2_0= ruleOpEquality ) ) )
            	    // InternalReqSpecParser.g:7079:7: () ( (lv_operator_2_0= ruleOpEquality ) )
            	    {
            	    // InternalReqSpecParser.g:7079:7: ()
            	    // InternalReqSpecParser.g:7080:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAEqualityExpressionAccess().getABinaryOperationLeftAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalReqSpecParser.g:7085:2: ( (lv_operator_2_0= ruleOpEquality ) )
            	    // InternalReqSpecParser.g:7086:1: (lv_operator_2_0= ruleOpEquality )
            	    {
            	    // InternalReqSpecParser.g:7086:1: (lv_operator_2_0= ruleOpEquality )
            	    // InternalReqSpecParser.g:7087:3: lv_operator_2_0= ruleOpEquality
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAEqualityExpressionAccess().getOperatorOpEqualityParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_operator_2_0=ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"org.osate.alisa.common.Common.OpEquality");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalReqSpecParser.g:7103:4: ( (lv_right_3_0= ruleARelationalExpression ) )
            	    // InternalReqSpecParser.g:7104:1: (lv_right_3_0= ruleARelationalExpression )
            	    {
            	    // InternalReqSpecParser.g:7104:1: (lv_right_3_0= ruleARelationalExpression )
            	    // InternalReqSpecParser.g:7105:3: lv_right_3_0= ruleARelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAEqualityExpressionAccess().getRightARelationalExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_87);
            	    lv_right_3_0=ruleARelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAEqualityExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"org.osate.alisa.common.Common.ARelationalExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAEqualityExpression"


    // $ANTLR start "entryRuleOpEquality"
    // InternalReqSpecParser.g:7129:1: entryRuleOpEquality returns [String current=null] : iv_ruleOpEquality= ruleOpEquality EOF ;
    public final String entryRuleOpEquality() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpEquality = null;


        try {
            // InternalReqSpecParser.g:7130:1: (iv_ruleOpEquality= ruleOpEquality EOF )
            // InternalReqSpecParser.g:7131:2: iv_ruleOpEquality= ruleOpEquality EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpEqualityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpEquality"


    // $ANTLR start "ruleOpEquality"
    // InternalReqSpecParser.g:7138:1: ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign ) ;
    public final AntlrDatatypeRuleToken ruleOpEquality() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7142:6: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign ) )
            // InternalReqSpecParser.g:7143:1: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign )
            {
            // InternalReqSpecParser.g:7143:1: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign )
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==EqualsSignEqualsSign) ) {
                alt151=1;
            }
            else if ( (LA151_0==ExclamationMarkEqualsSign) ) {
                alt151=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }
            switch (alt151) {
                case 1 :
                    // InternalReqSpecParser.g:7144:2: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7151:2: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpEquality"


    // $ANTLR start "entryRuleARelationalExpression"
    // InternalReqSpecParser.g:7164:1: entryRuleARelationalExpression returns [EObject current=null] : iv_ruleARelationalExpression= ruleARelationalExpression EOF ;
    public final EObject entryRuleARelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleARelationalExpression = null;


        try {
            // InternalReqSpecParser.g:7165:2: (iv_ruleARelationalExpression= ruleARelationalExpression EOF )
            // InternalReqSpecParser.g:7166:2: iv_ruleARelationalExpression= ruleARelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getARelationalExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleARelationalExpression=ruleARelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleARelationalExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleARelationalExpression"


    // $ANTLR start "ruleARelationalExpression"
    // InternalReqSpecParser.g:7173:1: ruleARelationalExpression returns [EObject current=null] : (this_AAdditiveExpression_0= ruleAAdditiveExpression ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) ) )* ) ;
    public final EObject ruleARelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AAdditiveExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7176:28: ( (this_AAdditiveExpression_0= ruleAAdditiveExpression ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) ) )* ) )
            // InternalReqSpecParser.g:7177:1: (this_AAdditiveExpression_0= ruleAAdditiveExpression ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) ) )* )
            {
            // InternalReqSpecParser.g:7177:1: (this_AAdditiveExpression_0= ruleAAdditiveExpression ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) ) )* )
            // InternalReqSpecParser.g:7178:5: this_AAdditiveExpression_0= ruleAAdditiveExpression ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getARelationalExpressionAccess().getAAdditiveExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_88);
            this_AAdditiveExpression_0=ruleAAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AAdditiveExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:7186:1: ( ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==GreaterThanSignEqualsSign) && (synpred7_InternalReqSpecParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==LessThanSignEqualsSign) && (synpred7_InternalReqSpecParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==GreaterThanSign) && (synpred7_InternalReqSpecParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==LessThanSign) && (synpred7_InternalReqSpecParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==GreaterThanSignLessThanSign) && (synpred7_InternalReqSpecParser())) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalReqSpecParser.g:7186:2: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) ) ( (lv_right_3_0= ruleAAdditiveExpression ) )
            	    {
            	    // InternalReqSpecParser.g:7186:2: ( ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) ) )
            	    // InternalReqSpecParser.g:7186:3: ( ( () ( ( ruleOpCompare ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpCompare ) ) )
            	    {
            	    // InternalReqSpecParser.g:7191:6: ( () ( (lv_operator_2_0= ruleOpCompare ) ) )
            	    // InternalReqSpecParser.g:7191:7: () ( (lv_operator_2_0= ruleOpCompare ) )
            	    {
            	    // InternalReqSpecParser.g:7191:7: ()
            	    // InternalReqSpecParser.g:7192:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getARelationalExpressionAccess().getABinaryOperationLeftAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalReqSpecParser.g:7197:2: ( (lv_operator_2_0= ruleOpCompare ) )
            	    // InternalReqSpecParser.g:7198:1: (lv_operator_2_0= ruleOpCompare )
            	    {
            	    // InternalReqSpecParser.g:7198:1: (lv_operator_2_0= ruleOpCompare )
            	    // InternalReqSpecParser.g:7199:3: lv_operator_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getARelationalExpressionAccess().getOperatorOpCompareParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_operator_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getARelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"org.osate.alisa.common.Common.OpCompare");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalReqSpecParser.g:7215:4: ( (lv_right_3_0= ruleAAdditiveExpression ) )
            	    // InternalReqSpecParser.g:7216:1: (lv_right_3_0= ruleAAdditiveExpression )
            	    {
            	    // InternalReqSpecParser.g:7216:1: (lv_right_3_0= ruleAAdditiveExpression )
            	    // InternalReqSpecParser.g:7217:3: lv_right_3_0= ruleAAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getARelationalExpressionAccess().getRightAAdditiveExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_88);
            	    lv_right_3_0=ruleAAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getARelationalExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"org.osate.alisa.common.Common.AAdditiveExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleARelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalReqSpecParser.g:7241:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalReqSpecParser.g:7242:1: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalReqSpecParser.g:7243:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalReqSpecParser.g:7250:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignLessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7254:6: ( (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignLessThanSign ) )
            // InternalReqSpecParser.g:7255:1: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignLessThanSign )
            {
            // InternalReqSpecParser.g:7255:1: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign | kw= GreaterThanSignLessThanSign )
            int alt153=5;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt153=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt153=2;
                }
                break;
            case GreaterThanSign:
                {
                alt153=3;
                }
                break;
            case LessThanSign:
                {
                alt153=4;
                }
                break;
            case GreaterThanSignLessThanSign:
                {
                alt153=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }

            switch (alt153) {
                case 1 :
                    // InternalReqSpecParser.g:7256:2: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7263:2: kw= LessThanSignEqualsSign
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:7270:2: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:7277:2: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalReqSpecParser.g:7284:2: kw= GreaterThanSignLessThanSign
                    {
                    kw=(Token)match(input,GreaterThanSignLessThanSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignLessThanSignKeyword_4()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleAAdditiveExpression"
    // InternalReqSpecParser.g:7297:1: entryRuleAAdditiveExpression returns [EObject current=null] : iv_ruleAAdditiveExpression= ruleAAdditiveExpression EOF ;
    public final EObject entryRuleAAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAAdditiveExpression = null;


        try {
            // InternalReqSpecParser.g:7298:2: (iv_ruleAAdditiveExpression= ruleAAdditiveExpression EOF )
            // InternalReqSpecParser.g:7299:2: iv_ruleAAdditiveExpression= ruleAAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAAdditiveExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAAdditiveExpression=ruleAAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAAdditiveExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAAdditiveExpression"


    // $ANTLR start "ruleAAdditiveExpression"
    // InternalReqSpecParser.g:7306:1: ruleAAdditiveExpression returns [EObject current=null] : (this_AMultiplicativeExpression_0= ruleAMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AMultiplicativeExpression_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7309:28: ( (this_AMultiplicativeExpression_0= ruleAMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) ) )* ) )
            // InternalReqSpecParser.g:7310:1: (this_AMultiplicativeExpression_0= ruleAMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) ) )* )
            {
            // InternalReqSpecParser.g:7310:1: (this_AMultiplicativeExpression_0= ruleAMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) ) )* )
            // InternalReqSpecParser.g:7311:5: this_AMultiplicativeExpression_0= ruleAMultiplicativeExpression ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAAdditiveExpressionAccess().getAMultiplicativeExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_89);
            this_AMultiplicativeExpression_0=ruleAMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AMultiplicativeExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:7319:1: ( ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) ) )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==PlusSign) && (synpred8_InternalReqSpecParser())) {
                    alt154=1;
                }
                else if ( (LA154_0==HyphenMinus) && (synpred8_InternalReqSpecParser())) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalReqSpecParser.g:7319:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) ) ( (lv_right_3_0= ruleAMultiplicativeExpression ) )
            	    {
            	    // InternalReqSpecParser.g:7319:2: ( ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) ) )
            	    // InternalReqSpecParser.g:7319:3: ( ( () ( ( ruleOpAdd ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpAdd ) ) )
            	    {
            	    // InternalReqSpecParser.g:7324:6: ( () ( (lv_operator_2_0= ruleOpAdd ) ) )
            	    // InternalReqSpecParser.g:7324:7: () ( (lv_operator_2_0= ruleOpAdd ) )
            	    {
            	    // InternalReqSpecParser.g:7324:7: ()
            	    // InternalReqSpecParser.g:7325:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAAdditiveExpressionAccess().getABinaryOperationLeftAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalReqSpecParser.g:7330:2: ( (lv_operator_2_0= ruleOpAdd ) )
            	    // InternalReqSpecParser.g:7331:1: (lv_operator_2_0= ruleOpAdd )
            	    {
            	    // InternalReqSpecParser.g:7331:1: (lv_operator_2_0= ruleOpAdd )
            	    // InternalReqSpecParser.g:7332:3: lv_operator_2_0= ruleOpAdd
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAAdditiveExpressionAccess().getOperatorOpAddParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_operator_2_0=ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"org.osate.alisa.common.Common.OpAdd");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalReqSpecParser.g:7348:4: ( (lv_right_3_0= ruleAMultiplicativeExpression ) )
            	    // InternalReqSpecParser.g:7349:1: (lv_right_3_0= ruleAMultiplicativeExpression )
            	    {
            	    // InternalReqSpecParser.g:7349:1: (lv_right_3_0= ruleAMultiplicativeExpression )
            	    // InternalReqSpecParser.g:7350:3: lv_right_3_0= ruleAMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAAdditiveExpressionAccess().getRightAMultiplicativeExpressionParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_89);
            	    lv_right_3_0=ruleAMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAAdditiveExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"org.osate.alisa.common.Common.AMultiplicativeExpression");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAAdditiveExpression"


    // $ANTLR start "entryRuleOpAdd"
    // InternalReqSpecParser.g:7374:1: entryRuleOpAdd returns [String current=null] : iv_ruleOpAdd= ruleOpAdd EOF ;
    public final String entryRuleOpAdd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAdd = null;


        try {
            // InternalReqSpecParser.g:7375:1: (iv_ruleOpAdd= ruleOpAdd EOF )
            // InternalReqSpecParser.g:7376:2: iv_ruleOpAdd= ruleOpAdd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAddRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAdd"


    // $ANTLR start "ruleOpAdd"
    // InternalReqSpecParser.g:7383:1: ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleOpAdd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7387:6: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalReqSpecParser.g:7388:1: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalReqSpecParser.g:7388:1: (kw= PlusSign | kw= HyphenMinus )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==PlusSign) ) {
                alt155=1;
            }
            else if ( (LA155_0==HyphenMinus) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalReqSpecParser.g:7389:2: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7396:2: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAdd"


    // $ANTLR start "entryRuleAMultiplicativeExpression"
    // InternalReqSpecParser.g:7409:1: entryRuleAMultiplicativeExpression returns [EObject current=null] : iv_ruleAMultiplicativeExpression= ruleAMultiplicativeExpression EOF ;
    public final EObject entryRuleAMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAMultiplicativeExpression = null;


        try {
            // InternalReqSpecParser.g:7410:2: (iv_ruleAMultiplicativeExpression= ruleAMultiplicativeExpression EOF )
            // InternalReqSpecParser.g:7411:2: iv_ruleAMultiplicativeExpression= ruleAMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAMultiplicativeExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAMultiplicativeExpression=ruleAMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAMultiplicativeExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAMultiplicativeExpression"


    // $ANTLR start "ruleAMultiplicativeExpression"
    // InternalReqSpecParser.g:7418:1: ruleAMultiplicativeExpression returns [EObject current=null] : (this_AUnaryOperation_0= ruleAUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) ) )* ) ;
    public final EObject ruleAMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AUnaryOperation_0 = null;

        AntlrDatatypeRuleToken lv_operator_2_0 = null;

        EObject lv_right_3_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7421:28: ( (this_AUnaryOperation_0= ruleAUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) ) )* ) )
            // InternalReqSpecParser.g:7422:1: (this_AUnaryOperation_0= ruleAUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) ) )* )
            {
            // InternalReqSpecParser.g:7422:1: (this_AUnaryOperation_0= ruleAUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) ) )* )
            // InternalReqSpecParser.g:7423:5: this_AUnaryOperation_0= ruleAUnaryOperation ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAMultiplicativeExpressionAccess().getAUnaryOperationParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_90);
            this_AUnaryOperation_0=ruleAUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AUnaryOperation_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:7431:1: ( ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==Asterisk) && (synpred9_InternalReqSpecParser())) {
                    alt156=1;
                }
                else if ( (LA156_0==Solidus) && (synpred9_InternalReqSpecParser())) {
                    alt156=1;
                }
                else if ( (LA156_0==Div) && (synpred9_InternalReqSpecParser())) {
                    alt156=1;
                }
                else if ( (LA156_0==Mod) && (synpred9_InternalReqSpecParser())) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalReqSpecParser.g:7431:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) ) ( (lv_right_3_0= ruleAUnaryOperation ) )
            	    {
            	    // InternalReqSpecParser.g:7431:2: ( ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) ) )
            	    // InternalReqSpecParser.g:7431:3: ( ( () ( ( ruleOpMulti ) ) ) )=> ( () ( (lv_operator_2_0= ruleOpMulti ) ) )
            	    {
            	    // InternalReqSpecParser.g:7436:6: ( () ( (lv_operator_2_0= ruleOpMulti ) ) )
            	    // InternalReqSpecParser.g:7436:7: () ( (lv_operator_2_0= ruleOpMulti ) )
            	    {
            	    // InternalReqSpecParser.g:7436:7: ()
            	    // InternalReqSpecParser.g:7437:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	              current = forceCreateModelElementAndSet(
            	                  grammarAccess.getAMultiplicativeExpressionAccess().getABinaryOperationLeftAction_1_0_0_0(),
            	                  current);
            	          
            	    }

            	    }

            	    // InternalReqSpecParser.g:7442:2: ( (lv_operator_2_0= ruleOpMulti ) )
            	    // InternalReqSpecParser.g:7443:1: (lv_operator_2_0= ruleOpMulti )
            	    {
            	    // InternalReqSpecParser.g:7443:1: (lv_operator_2_0= ruleOpMulti )
            	    // InternalReqSpecParser.g:7444:3: lv_operator_2_0= ruleOpMulti
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAMultiplicativeExpressionAccess().getOperatorOpMultiParserRuleCall_1_0_0_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_operator_2_0=ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"operator",
            	              		lv_operator_2_0, 
            	              		"org.osate.alisa.common.Common.OpMulti");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalReqSpecParser.g:7460:4: ( (lv_right_3_0= ruleAUnaryOperation ) )
            	    // InternalReqSpecParser.g:7461:1: (lv_right_3_0= ruleAUnaryOperation )
            	    {
            	    // InternalReqSpecParser.g:7461:1: (lv_right_3_0= ruleAUnaryOperation )
            	    // InternalReqSpecParser.g:7462:3: lv_right_3_0= ruleAUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAMultiplicativeExpressionAccess().getRightAUnaryOperationParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FollowSets000.FOLLOW_90);
            	    lv_right_3_0=ruleAUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAMultiplicativeExpressionRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"right",
            	              		lv_right_3_0, 
            	              		"org.osate.alisa.common.Common.AUnaryOperation");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAMultiplicativeExpression"


    // $ANTLR start "entryRuleOpMulti"
    // InternalReqSpecParser.g:7486:1: entryRuleOpMulti returns [String current=null] : iv_ruleOpMulti= ruleOpMulti EOF ;
    public final String entryRuleOpMulti() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpMulti = null;


        try {
            // InternalReqSpecParser.g:7487:1: (iv_ruleOpMulti= ruleOpMulti EOF )
            // InternalReqSpecParser.g:7488:2: iv_ruleOpMulti= ruleOpMulti EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpMultiRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpMulti"


    // $ANTLR start "ruleOpMulti"
    // InternalReqSpecParser.g:7495:1: ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= Solidus | kw= Div | kw= Mod ) ;
    public final AntlrDatatypeRuleToken ruleOpMulti() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7499:6: ( (kw= Asterisk | kw= Solidus | kw= Div | kw= Mod ) )
            // InternalReqSpecParser.g:7500:1: (kw= Asterisk | kw= Solidus | kw= Div | kw= Mod )
            {
            // InternalReqSpecParser.g:7500:1: (kw= Asterisk | kw= Solidus | kw= Div | kw= Mod )
            int alt157=4;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt157=1;
                }
                break;
            case Solidus:
                {
                alt157=2;
                }
                break;
            case Div:
                {
                alt157=3;
                }
                break;
            case Mod:
                {
                alt157=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 157, 0, input);

                throw nvae;
            }

            switch (alt157) {
                case 1 :
                    // InternalReqSpecParser.g:7501:2: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7508:2: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:7515:2: kw= Div
                    {
                    kw=(Token)match(input,Div,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getDivKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:7522:2: kw= Mod
                    {
                    kw=(Token)match(input,Mod,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpMultiAccess().getModKeyword_3()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpMulti"


    // $ANTLR start "entryRuleAUnaryOperation"
    // InternalReqSpecParser.g:7535:1: entryRuleAUnaryOperation returns [EObject current=null] : iv_ruleAUnaryOperation= ruleAUnaryOperation EOF ;
    public final EObject entryRuleAUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAUnaryOperation = null;


        try {
            // InternalReqSpecParser.g:7536:2: (iv_ruleAUnaryOperation= ruleAUnaryOperation EOF )
            // InternalReqSpecParser.g:7537:2: iv_ruleAUnaryOperation= ruleAUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAUnaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAUnaryOperation=ruleAUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAUnaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAUnaryOperation"


    // $ANTLR start "ruleAUnaryOperation"
    // InternalReqSpecParser.g:7544:1: ruleAUnaryOperation returns [EObject current=null] : ( ( () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) ) ) | this_AUnitExpression_3= ruleAUnitExpression ) ;
    public final EObject ruleAUnaryOperation() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_operator_1_0 = null;

        EObject lv_operand_2_0 = null;

        EObject this_AUnitExpression_3 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7547:28: ( ( ( () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) ) ) | this_AUnitExpression_3= ruleAUnitExpression ) )
            // InternalReqSpecParser.g:7548:1: ( ( () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) ) ) | this_AUnitExpression_3= ruleAUnitExpression )
            {
            // InternalReqSpecParser.g:7548:1: ( ( () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) ) ) | this_AUnitExpression_3= ruleAUnitExpression )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==Not||LA158_0==PlusSign||LA158_0==HyphenMinus) ) {
                alt158=1;
            }
            else if ( (LA158_0==False||(LA158_0>=This && LA158_0<=True)||LA158_0==If||LA158_0==NumberSign||LA158_0==LeftParenthesis||LA158_0==LeftSquareBracket||LA158_0==RULE_REAL_LIT||(LA158_0>=RULE_ID && LA158_0<=RULE_STRING)) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // InternalReqSpecParser.g:7548:2: ( () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) ) )
                    {
                    // InternalReqSpecParser.g:7548:2: ( () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) ) )
                    // InternalReqSpecParser.g:7548:3: () ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) ) ( (lv_operand_2_0= ruleAUnaryOperation ) )
                    {
                    // InternalReqSpecParser.g:7548:3: ()
                    // InternalReqSpecParser.g:7549:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElement(
                                  grammarAccess.getAUnaryOperationAccess().getAUnaryOperationAction_0_0(),
                                  current);
                          
                    }

                    }

                    // InternalReqSpecParser.g:7554:2: ( ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary ) )
                    // InternalReqSpecParser.g:7554:3: ( ( ruleOpUnary ) )=> (lv_operator_1_0= ruleOpUnary )
                    {
                    // InternalReqSpecParser.g:7559:1: (lv_operator_1_0= ruleOpUnary )
                    // InternalReqSpecParser.g:7560:3: lv_operator_1_0= ruleOpUnary
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAUnaryOperationAccess().getOperatorOpUnaryParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    lv_operator_1_0=ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operator",
                              		lv_operator_1_0, 
                              		"org.osate.alisa.common.Common.OpUnary");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalReqSpecParser.g:7576:2: ( (lv_operand_2_0= ruleAUnaryOperation ) )
                    // InternalReqSpecParser.g:7577:1: (lv_operand_2_0= ruleAUnaryOperation )
                    {
                    // InternalReqSpecParser.g:7577:1: (lv_operand_2_0= ruleAUnaryOperation )
                    // InternalReqSpecParser.g:7578:3: lv_operand_2_0= ruleAUnaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAUnaryOperationAccess().getOperandAUnaryOperationParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_operand_2_0=ruleAUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAUnaryOperationRule());
                      	        }
                             		set(
                             			current, 
                             			"operand",
                              		lv_operand_2_0, 
                              		"org.osate.alisa.common.Common.AUnaryOperation");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7596:5: this_AUnitExpression_3= ruleAUnitExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAUnaryOperationAccess().getAUnitExpressionParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AUnitExpression_3=ruleAUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AUnitExpression_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAUnaryOperation"


    // $ANTLR start "entryRuleOpUnary"
    // InternalReqSpecParser.g:7612:1: entryRuleOpUnary returns [String current=null] : iv_ruleOpUnary= ruleOpUnary EOF ;
    public final String entryRuleOpUnary() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpUnary = null;


        try {
            // InternalReqSpecParser.g:7613:1: (iv_ruleOpUnary= ruleOpUnary EOF )
            // InternalReqSpecParser.g:7614:2: iv_ruleOpUnary= ruleOpUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpUnaryRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpUnary"


    // $ANTLR start "ruleOpUnary"
    // InternalReqSpecParser.g:7621:1: ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Not | kw= HyphenMinus | kw= PlusSign ) ;
    public final AntlrDatatypeRuleToken ruleOpUnary() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7625:6: ( (kw= Not | kw= HyphenMinus | kw= PlusSign ) )
            // InternalReqSpecParser.g:7626:1: (kw= Not | kw= HyphenMinus | kw= PlusSign )
            {
            // InternalReqSpecParser.g:7626:1: (kw= Not | kw= HyphenMinus | kw= PlusSign )
            int alt159=3;
            switch ( input.LA(1) ) {
            case Not:
                {
                alt159=1;
                }
                break;
            case HyphenMinus:
                {
                alt159=2;
                }
                break;
            case PlusSign:
                {
                alt159=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }

            switch (alt159) {
                case 1 :
                    // InternalReqSpecParser.g:7627:2: kw= Not
                    {
                    kw=(Token)match(input,Not,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getNotKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7634:2: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:7641:2: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpUnary"


    // $ANTLR start "entryRuleAUnitExpression"
    // InternalReqSpecParser.g:7654:1: entryRuleAUnitExpression returns [EObject current=null] : iv_ruleAUnitExpression= ruleAUnitExpression EOF ;
    public final EObject entryRuleAUnitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAUnitExpression = null;


        try {
            // InternalReqSpecParser.g:7655:2: (iv_ruleAUnitExpression= ruleAUnitExpression EOF )
            // InternalReqSpecParser.g:7656:2: iv_ruleAUnitExpression= ruleAUnitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAUnitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAUnitExpression=ruleAUnitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAUnitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAUnitExpression"


    // $ANTLR start "ruleAUnitExpression"
    // InternalReqSpecParser.g:7663:1: ruleAUnitExpression returns [EObject current=null] : (this_APrimaryExpression_0= ruleAPrimaryExpression ( () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) ) )? ) ;
    public final EObject ruleAUnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_convert_2_0=null;
        Token lv_drop_3_0=null;
        Token otherlv_4=null;
        EObject this_APrimaryExpression_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7666:28: ( (this_APrimaryExpression_0= ruleAPrimaryExpression ( () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) ) )? ) )
            // InternalReqSpecParser.g:7667:1: (this_APrimaryExpression_0= ruleAPrimaryExpression ( () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) ) )? )
            {
            // InternalReqSpecParser.g:7667:1: (this_APrimaryExpression_0= ruleAPrimaryExpression ( () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) ) )? )
            // InternalReqSpecParser.g:7668:5: this_APrimaryExpression_0= ruleAPrimaryExpression ( () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) ) )?
            {
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAUnitExpressionAccess().getAPrimaryExpressionParserRuleCall_0()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_91);
            this_APrimaryExpression_0=ruleAPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_APrimaryExpression_0;
                      afterParserOrEnumRuleCall();
                  
            }
            // InternalReqSpecParser.g:7676:1: ( () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==In||LA161_0==PercentSign) ) {
                alt161=1;
            }
            else if ( (LA161_0==RULE_ID) ) {
                int LA161_2 = input.LA(2);

                if ( (LA161_2==EOF||(LA161_2>=Description && LA161_2<=Uncertainty)||LA161_2==Decomposes||LA161_2==Conflicts||LA161_2==Mitigates||LA161_2==Rationale||LA161_2==Category||(LA161_2>=Informal && LA161_2<=Inherits)||(LA161_2>=Compute && LA161_2<=Dropped)||LA161_2==Evolves||LA161_2==Include||LA161_2==Refines||LA161_2==Issues||(LA161_2>=Delta && LA161_2<=Endif)||LA161_2==Value||LA161_2==Else||LA161_2==Goal||LA161_2==Then||(LA161_2>=When && LA161_2<=And)||LA161_2==Div||LA161_2==Mod||LA161_2==See||(LA161_2>=Val && LA161_2<=FullStopFullStop)||(LA161_2>=LessThanSignEqualsSign && LA161_2<=As)||(LA161_2>=Or && LA161_2<=VerticalLineVerticalLine)||(LA161_2>=RightParenthesis && LA161_2<=HyphenMinus)||LA161_2==Solidus||LA161_2==LessThanSign||LA161_2==GreaterThanSign||LA161_2==RightSquareBracket||LA161_2==RULE_ID) ) {
                    alt161=1;
                }
            }
            switch (alt161) {
                case 1 :
                    // InternalReqSpecParser.g:7676:2: () ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )? ( (otherlv_4= RULE_ID ) )
                    {
                    // InternalReqSpecParser.g:7676:2: ()
                    // InternalReqSpecParser.g:7677:5: 
                    {
                    if ( state.backtracking==0 ) {

                              current = forceCreateModelElementAndSet(
                                  grammarAccess.getAUnitExpressionAccess().getAUnitExpressionExpressionAction_1_0(),
                                  current);
                          
                    }

                    }

                    // InternalReqSpecParser.g:7682:2: ( ( (lv_convert_2_0= PercentSign ) ) | ( (lv_drop_3_0= In ) ) )?
                    int alt160=3;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==PercentSign) ) {
                        alt160=1;
                    }
                    else if ( (LA160_0==In) ) {
                        alt160=2;
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalReqSpecParser.g:7682:3: ( (lv_convert_2_0= PercentSign ) )
                            {
                            // InternalReqSpecParser.g:7682:3: ( (lv_convert_2_0= PercentSign ) )
                            // InternalReqSpecParser.g:7683:1: (lv_convert_2_0= PercentSign )
                            {
                            // InternalReqSpecParser.g:7683:1: (lv_convert_2_0= PercentSign )
                            // InternalReqSpecParser.g:7684:3: lv_convert_2_0= PercentSign
                            {
                            lv_convert_2_0=(Token)match(input,PercentSign,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_convert_2_0, grammarAccess.getAUnitExpressionAccess().getConvertPercentSignKeyword_1_1_0_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAUnitExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "convert", true, "%");
                              	    
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalReqSpecParser.g:7699:6: ( (lv_drop_3_0= In ) )
                            {
                            // InternalReqSpecParser.g:7699:6: ( (lv_drop_3_0= In ) )
                            // InternalReqSpecParser.g:7700:1: (lv_drop_3_0= In )
                            {
                            // InternalReqSpecParser.g:7700:1: (lv_drop_3_0= In )
                            // InternalReqSpecParser.g:7701:3: lv_drop_3_0= In
                            {
                            lv_drop_3_0=(Token)match(input,In,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_drop_3_0, grammarAccess.getAUnitExpressionAccess().getDropInKeyword_1_1_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getAUnitExpressionRule());
                              	        }
                                     		setWithLastConsumed(current, "drop", true, "in");
                              	    
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalReqSpecParser.g:7715:4: ( (otherlv_4= RULE_ID ) )
                    // InternalReqSpecParser.g:7716:1: (otherlv_4= RULE_ID )
                    {
                    // InternalReqSpecParser.g:7716:1: (otherlv_4= RULE_ID )
                    // InternalReqSpecParser.g:7717:3: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      			if (current==null) {
                      	            current = createModelElement(grammarAccess.getAUnitExpressionRule());
                      	        }
                              
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		newLeafNode(otherlv_4, grammarAccess.getAUnitExpressionAccess().getUnitUnitLiteralCrossReference_1_2_0()); 
                      	
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAUnitExpression"


    // $ANTLR start "entryRuleAPrimaryExpression"
    // InternalReqSpecParser.g:7736:1: entryRuleAPrimaryExpression returns [EObject current=null] : iv_ruleAPrimaryExpression= ruleAPrimaryExpression EOF ;
    public final EObject entryRuleAPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAPrimaryExpression = null;


        try {
            // InternalReqSpecParser.g:7737:2: (iv_ruleAPrimaryExpression= ruleAPrimaryExpression EOF )
            // InternalReqSpecParser.g:7738:2: iv_ruleAPrimaryExpression= ruleAPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAPrimaryExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAPrimaryExpression=ruleAPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAPrimaryExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAPrimaryExpression"


    // $ANTLR start "ruleAPrimaryExpression"
    // InternalReqSpecParser.g:7745:1: ruleAPrimaryExpression returns [EObject current=null] : (this_ALiteral_0= ruleALiteral | this_AVariableReference_1= ruleAVariableReference | this_AModelOrPropertyReference_2= ruleAModelOrPropertyReference | this_AFunctionCall_3= ruleAFunctionCall | this_ARangeExpression_4= ruleARangeExpression | this_AIfExpression_5= ruleAIfExpression | this_AParenthesizedExpression_6= ruleAParenthesizedExpression ) ;
    public final EObject ruleAPrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ALiteral_0 = null;

        EObject this_AVariableReference_1 = null;

        EObject this_AModelOrPropertyReference_2 = null;

        EObject this_AFunctionCall_3 = null;

        EObject this_ARangeExpression_4 = null;

        EObject this_AIfExpression_5 = null;

        EObject this_AParenthesizedExpression_6 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7748:28: ( (this_ALiteral_0= ruleALiteral | this_AVariableReference_1= ruleAVariableReference | this_AModelOrPropertyReference_2= ruleAModelOrPropertyReference | this_AFunctionCall_3= ruleAFunctionCall | this_ARangeExpression_4= ruleARangeExpression | this_AIfExpression_5= ruleAIfExpression | this_AParenthesizedExpression_6= ruleAParenthesizedExpression ) )
            // InternalReqSpecParser.g:7749:1: (this_ALiteral_0= ruleALiteral | this_AVariableReference_1= ruleAVariableReference | this_AModelOrPropertyReference_2= ruleAModelOrPropertyReference | this_AFunctionCall_3= ruleAFunctionCall | this_ARangeExpression_4= ruleARangeExpression | this_AIfExpression_5= ruleAIfExpression | this_AParenthesizedExpression_6= ruleAParenthesizedExpression )
            {
            // InternalReqSpecParser.g:7749:1: (this_ALiteral_0= ruleALiteral | this_AVariableReference_1= ruleAVariableReference | this_AModelOrPropertyReference_2= ruleAModelOrPropertyReference | this_AFunctionCall_3= ruleAFunctionCall | this_ARangeExpression_4= ruleARangeExpression | this_AIfExpression_5= ruleAIfExpression | this_AParenthesizedExpression_6= ruleAParenthesizedExpression )
            int alt162=7;
            switch ( input.LA(1) ) {
            case False:
            case True:
            case RULE_REAL_LIT:
            case RULE_INT:
            case RULE_STRING:
                {
                alt162=1;
                }
                break;
            case RULE_ID:
                {
                int LA162_2 = input.LA(2);

                if ( (LA162_2==EOF||(LA162_2>=Description && LA162_2<=Uncertainty)||LA162_2==Decomposes||LA162_2==Conflicts||LA162_2==Mitigates||LA162_2==Rationale||LA162_2==Category||(LA162_2>=Informal && LA162_2<=Inherits)||(LA162_2>=Compute && LA162_2<=Dropped)||LA162_2==Evolves||LA162_2==Include||LA162_2==Refines||LA162_2==Issues||(LA162_2>=Delta && LA162_2<=Endif)||LA162_2==Value||LA162_2==Else||LA162_2==Goal||LA162_2==Then||(LA162_2>=When && LA162_2<=And)||LA162_2==Div||LA162_2==Mod||LA162_2==See||(LA162_2>=Val && LA162_2<=FullStopFullStop)||(LA162_2>=LessThanSignEqualsSign && LA162_2<=As)||(LA162_2>=In && LA162_2<=VerticalLineVerticalLine)||LA162_2==PercentSign||(LA162_2>=RightParenthesis && LA162_2<=HyphenMinus)||LA162_2==Solidus||LA162_2==LessThanSign||LA162_2==GreaterThanSign||LA162_2==RightSquareBracket||LA162_2==RULE_ID) ) {
                    alt162=2;
                }
                else if ( (LA162_2==LeftParenthesis||LA162_2==FullStop) ) {
                    alt162=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 162, 2, input);

                    throw nvae;
                }
                }
                break;
            case This:
            case NumberSign:
                {
                alt162=3;
                }
                break;
            case LeftSquareBracket:
                {
                alt162=5;
                }
                break;
            case If:
                {
                alt162=6;
                }
                break;
            case LeftParenthesis:
                {
                alt162=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }

            switch (alt162) {
                case 1 :
                    // InternalReqSpecParser.g:7750:5: this_ALiteral_0= ruleALiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getALiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ALiteral_0=ruleALiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ALiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:7760:5: this_AVariableReference_1= ruleAVariableReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getAVariableReferenceParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AVariableReference_1=ruleAVariableReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AVariableReference_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:7770:5: this_AModelOrPropertyReference_2= ruleAModelOrPropertyReference
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getAModelOrPropertyReferenceParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AModelOrPropertyReference_2=ruleAModelOrPropertyReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AModelOrPropertyReference_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:7780:5: this_AFunctionCall_3= ruleAFunctionCall
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getAFunctionCallParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AFunctionCall_3=ruleAFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AFunctionCall_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalReqSpecParser.g:7790:5: this_ARangeExpression_4= ruleARangeExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getARangeExpressionParserRuleCall_4()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ARangeExpression_4=ruleARangeExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ARangeExpression_4;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalReqSpecParser.g:7800:5: this_AIfExpression_5= ruleAIfExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getAIfExpressionParserRuleCall_5()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AIfExpression_5=ruleAIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AIfExpression_5;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalReqSpecParser.g:7810:5: this_AParenthesizedExpression_6= ruleAParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAPrimaryExpressionAccess().getAParenthesizedExpressionParserRuleCall_6()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AParenthesizedExpression_6=ruleAParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AParenthesizedExpression_6;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAPrimaryExpression"


    // $ANTLR start "entryRuleAFunctionCall"
    // InternalReqSpecParser.g:7826:1: entryRuleAFunctionCall returns [EObject current=null] : iv_ruleAFunctionCall= ruleAFunctionCall EOF ;
    public final EObject entryRuleAFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAFunctionCall = null;


        try {
            // InternalReqSpecParser.g:7827:2: (iv_ruleAFunctionCall= ruleAFunctionCall EOF )
            // InternalReqSpecParser.g:7828:2: iv_ruleAFunctionCall= ruleAFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAFunctionCall=ruleAFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAFunctionCall"


    // $ANTLR start "ruleAFunctionCall"
    // InternalReqSpecParser.g:7835:1: ruleAFunctionCall returns [EObject current=null] : ( () ( (lv_function_1_0= ruleQualifiedName ) ) otherlv_2= LeftParenthesis ( ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )* )? otherlv_6= RightParenthesis ) ;
    public final EObject ruleAFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_function_1_0 = null;

        EObject lv_arguments_3_0 = null;

        EObject lv_arguments_5_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7838:28: ( ( () ( (lv_function_1_0= ruleQualifiedName ) ) otherlv_2= LeftParenthesis ( ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )* )? otherlv_6= RightParenthesis ) )
            // InternalReqSpecParser.g:7839:1: ( () ( (lv_function_1_0= ruleQualifiedName ) ) otherlv_2= LeftParenthesis ( ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )* )? otherlv_6= RightParenthesis )
            {
            // InternalReqSpecParser.g:7839:1: ( () ( (lv_function_1_0= ruleQualifiedName ) ) otherlv_2= LeftParenthesis ( ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )* )? otherlv_6= RightParenthesis )
            // InternalReqSpecParser.g:7839:2: () ( (lv_function_1_0= ruleQualifiedName ) ) otherlv_2= LeftParenthesis ( ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )* )? otherlv_6= RightParenthesis
            {
            // InternalReqSpecParser.g:7839:2: ()
            // InternalReqSpecParser.g:7840:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAFunctionCallAccess().getAFunctionCallAction_0(),
                          current);
                  
            }

            }

            // InternalReqSpecParser.g:7845:2: ( (lv_function_1_0= ruleQualifiedName ) )
            // InternalReqSpecParser.g:7846:1: (lv_function_1_0= ruleQualifiedName )
            {
            // InternalReqSpecParser.g:7846:1: (lv_function_1_0= ruleQualifiedName )
            // InternalReqSpecParser.g:7847:3: lv_function_1_0= ruleQualifiedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAFunctionCallAccess().getFunctionQualifiedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_59);
            lv_function_1_0=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAFunctionCallRule());
              	        }
                     		set(
                     			current, 
                     			"function",
                      		lv_function_1_0, 
                      		"org.osate.alisa.common.Common.QualifiedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAFunctionCallAccess().getLeftParenthesisKeyword_2());
                  
            }
            // InternalReqSpecParser.g:7868:1: ( ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )* )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==False||(LA164_0>=This && LA164_0<=True)||LA164_0==Not||LA164_0==If||LA164_0==NumberSign||LA164_0==LeftParenthesis||LA164_0==PlusSign||LA164_0==HyphenMinus||LA164_0==LeftSquareBracket||LA164_0==RULE_REAL_LIT||(LA164_0>=RULE_ID && LA164_0<=RULE_STRING)) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalReqSpecParser.g:7868:2: ( (lv_arguments_3_0= ruleAExpression ) ) (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )*
                    {
                    // InternalReqSpecParser.g:7868:2: ( (lv_arguments_3_0= ruleAExpression ) )
                    // InternalReqSpecParser.g:7869:1: (lv_arguments_3_0= ruleAExpression )
                    {
                    // InternalReqSpecParser.g:7869:1: (lv_arguments_3_0= ruleAExpression )
                    // InternalReqSpecParser.g:7870:3: lv_arguments_3_0= ruleAExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAFunctionCallAccess().getArgumentsAExpressionParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_arguments_3_0=ruleAExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAFunctionCallRule());
                      	        }
                             		add(
                             			current, 
                             			"arguments",
                              		lv_arguments_3_0, 
                              		"org.osate.alisa.common.Common.AExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalReqSpecParser.g:7886:2: (otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) ) )*
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==Comma) ) {
                            alt163=1;
                        }


                        switch (alt163) {
                    	case 1 :
                    	    // InternalReqSpecParser.g:7887:2: otherlv_4= Comma ( (lv_arguments_5_0= ruleAExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getAFunctionCallAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalReqSpecParser.g:7891:1: ( (lv_arguments_5_0= ruleAExpression ) )
                    	    // InternalReqSpecParser.g:7892:1: (lv_arguments_5_0= ruleAExpression )
                    	    {
                    	    // InternalReqSpecParser.g:7892:1: (lv_arguments_5_0= ruleAExpression )
                    	    // InternalReqSpecParser.g:7893:3: lv_arguments_5_0= ruleAExpression
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getAFunctionCallAccess().getArgumentsAExpressionParserRuleCall_3_1_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_93);
                    	    lv_arguments_5_0=ruleAExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getAFunctionCallRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"arguments",
                    	              		lv_arguments_5_0, 
                    	              		"org.osate.alisa.common.Common.AExpression");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop163;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_6=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getAFunctionCallAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAFunctionCall"


    // $ANTLR start "entryRuleARangeExpression"
    // InternalReqSpecParser.g:7922:1: entryRuleARangeExpression returns [EObject current=null] : iv_ruleARangeExpression= ruleARangeExpression EOF ;
    public final EObject entryRuleARangeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleARangeExpression = null;


        try {
            // InternalReqSpecParser.g:7923:2: (iv_ruleARangeExpression= ruleARangeExpression EOF )
            // InternalReqSpecParser.g:7924:2: iv_ruleARangeExpression= ruleARangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getARangeExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleARangeExpression=ruleARangeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleARangeExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleARangeExpression"


    // $ANTLR start "ruleARangeExpression"
    // InternalReqSpecParser.g:7931:1: ruleARangeExpression returns [EObject current=null] : ( () otherlv_1= LeftSquareBracket ( (lv_minimum_2_0= ruleAExpression ) ) otherlv_3= FullStopFullStop ( (lv_maximum_4_0= ruleAExpression ) ) ( ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) ) )? otherlv_7= RightSquareBracket ) ;
    public final EObject ruleARangeExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_minimum_2_0 = null;

        EObject lv_maximum_4_0 = null;

        EObject lv_delta_6_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:7934:28: ( ( () otherlv_1= LeftSquareBracket ( (lv_minimum_2_0= ruleAExpression ) ) otherlv_3= FullStopFullStop ( (lv_maximum_4_0= ruleAExpression ) ) ( ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) ) )? otherlv_7= RightSquareBracket ) )
            // InternalReqSpecParser.g:7935:1: ( () otherlv_1= LeftSquareBracket ( (lv_minimum_2_0= ruleAExpression ) ) otherlv_3= FullStopFullStop ( (lv_maximum_4_0= ruleAExpression ) ) ( ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) ) )? otherlv_7= RightSquareBracket )
            {
            // InternalReqSpecParser.g:7935:1: ( () otherlv_1= LeftSquareBracket ( (lv_minimum_2_0= ruleAExpression ) ) otherlv_3= FullStopFullStop ( (lv_maximum_4_0= ruleAExpression ) ) ( ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) ) )? otherlv_7= RightSquareBracket )
            // InternalReqSpecParser.g:7935:2: () otherlv_1= LeftSquareBracket ( (lv_minimum_2_0= ruleAExpression ) ) otherlv_3= FullStopFullStop ( (lv_maximum_4_0= ruleAExpression ) ) ( ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) ) )? otherlv_7= RightSquareBracket
            {
            // InternalReqSpecParser.g:7935:2: ()
            // InternalReqSpecParser.g:7936:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getARangeExpressionAccess().getARangeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getARangeExpressionAccess().getLeftSquareBracketKeyword_1());
                  
            }
            // InternalReqSpecParser.g:7946:1: ( (lv_minimum_2_0= ruleAExpression ) )
            // InternalReqSpecParser.g:7947:1: (lv_minimum_2_0= ruleAExpression )
            {
            // InternalReqSpecParser.g:7947:1: (lv_minimum_2_0= ruleAExpression )
            // InternalReqSpecParser.g:7948:3: lv_minimum_2_0= ruleAExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getARangeExpressionAccess().getMinimumAExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_94);
            lv_minimum_2_0=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getARangeExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"minimum",
                      		lv_minimum_2_0, 
                      		"org.osate.alisa.common.Common.AExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,FullStopFullStop,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getARangeExpressionAccess().getFullStopFullStopKeyword_3());
                  
            }
            // InternalReqSpecParser.g:7969:1: ( (lv_maximum_4_0= ruleAExpression ) )
            // InternalReqSpecParser.g:7970:1: (lv_maximum_4_0= ruleAExpression )
            {
            // InternalReqSpecParser.g:7970:1: (lv_maximum_4_0= ruleAExpression )
            // InternalReqSpecParser.g:7971:3: lv_maximum_4_0= ruleAExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getARangeExpressionAccess().getMaximumAExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_95);
            lv_maximum_4_0=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getARangeExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"maximum",
                      		lv_maximum_4_0, 
                      		"org.osate.alisa.common.Common.AExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:7987:2: ( ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==Delta) && (synpred11_InternalReqSpecParser())) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalReqSpecParser.g:7987:3: ( ( Delta )=>otherlv_5= Delta ) ( (lv_delta_6_0= ruleAExpression ) )
                    {
                    // InternalReqSpecParser.g:7987:3: ( ( Delta )=>otherlv_5= Delta )
                    // InternalReqSpecParser.g:7987:4: ( Delta )=>otherlv_5= Delta
                    {
                    otherlv_5=(Token)match(input,Delta,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getARangeExpressionAccess().getDeltaKeyword_5_0());
                          
                    }

                    }

                    // InternalReqSpecParser.g:7994:2: ( (lv_delta_6_0= ruleAExpression ) )
                    // InternalReqSpecParser.g:7995:1: (lv_delta_6_0= ruleAExpression )
                    {
                    // InternalReqSpecParser.g:7995:1: (lv_delta_6_0= ruleAExpression )
                    // InternalReqSpecParser.g:7996:3: lv_delta_6_0= ruleAExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getARangeExpressionAccess().getDeltaAExpressionParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_delta_6_0=ruleAExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getARangeExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"delta",
                              		lv_delta_6_0, 
                              		"org.osate.alisa.common.Common.AExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,RightSquareBracket,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getARangeExpressionAccess().getRightSquareBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleARangeExpression"


    // $ANTLR start "entryRuleAIfExpression"
    // InternalReqSpecParser.g:8025:1: entryRuleAIfExpression returns [EObject current=null] : iv_ruleAIfExpression= ruleAIfExpression EOF ;
    public final EObject entryRuleAIfExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAIfExpression = null;


        try {
            // InternalReqSpecParser.g:8026:2: (iv_ruleAIfExpression= ruleAIfExpression EOF )
            // InternalReqSpecParser.g:8027:2: iv_ruleAIfExpression= ruleAIfExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAIfExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAIfExpression=ruleAIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAIfExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAIfExpression"


    // $ANTLR start "ruleAIfExpression"
    // InternalReqSpecParser.g:8034:1: ruleAIfExpression returns [EObject current=null] : ( () otherlv_1= If ( (lv_if_2_0= ruleAExpression ) ) otherlv_3= Then ( (lv_then_4_0= ruleAExpression ) ) (otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) ) )? otherlv_7= Endif ) ;
    public final EObject ruleAIfExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_if_2_0 = null;

        EObject lv_then_4_0 = null;

        EObject lv_else_6_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8037:28: ( ( () otherlv_1= If ( (lv_if_2_0= ruleAExpression ) ) otherlv_3= Then ( (lv_then_4_0= ruleAExpression ) ) (otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) ) )? otherlv_7= Endif ) )
            // InternalReqSpecParser.g:8038:1: ( () otherlv_1= If ( (lv_if_2_0= ruleAExpression ) ) otherlv_3= Then ( (lv_then_4_0= ruleAExpression ) ) (otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) ) )? otherlv_7= Endif )
            {
            // InternalReqSpecParser.g:8038:1: ( () otherlv_1= If ( (lv_if_2_0= ruleAExpression ) ) otherlv_3= Then ( (lv_then_4_0= ruleAExpression ) ) (otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) ) )? otherlv_7= Endif )
            // InternalReqSpecParser.g:8038:2: () otherlv_1= If ( (lv_if_2_0= ruleAExpression ) ) otherlv_3= Then ( (lv_then_4_0= ruleAExpression ) ) (otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) ) )? otherlv_7= Endif
            {
            // InternalReqSpecParser.g:8038:2: ()
            // InternalReqSpecParser.g:8039:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAIfExpressionAccess().getAConditionalAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,If,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAIfExpressionAccess().getIfKeyword_1());
                  
            }
            // InternalReqSpecParser.g:8049:1: ( (lv_if_2_0= ruleAExpression ) )
            // InternalReqSpecParser.g:8050:1: (lv_if_2_0= ruleAExpression )
            {
            // InternalReqSpecParser.g:8050:1: (lv_if_2_0= ruleAExpression )
            // InternalReqSpecParser.g:8051:3: lv_if_2_0= ruleAExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAIfExpressionAccess().getIfAExpressionParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_96);
            lv_if_2_0=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"if",
                      		lv_if_2_0, 
                      		"org.osate.alisa.common.Common.AExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,Then,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getAIfExpressionAccess().getThenKeyword_3());
                  
            }
            // InternalReqSpecParser.g:8072:1: ( (lv_then_4_0= ruleAExpression ) )
            // InternalReqSpecParser.g:8073:1: (lv_then_4_0= ruleAExpression )
            {
            // InternalReqSpecParser.g:8073:1: (lv_then_4_0= ruleAExpression )
            // InternalReqSpecParser.g:8074:3: lv_then_4_0= ruleAExpression
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAIfExpressionAccess().getThenAExpressionParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_97);
            lv_then_4_0=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAIfExpressionRule());
              	        }
                     		set(
                     			current, 
                     			"then",
                      		lv_then_4_0, 
                      		"org.osate.alisa.common.Common.AExpression");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalReqSpecParser.g:8090:2: (otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==Else) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalReqSpecParser.g:8091:2: otherlv_5= Else ( (lv_else_6_0= ruleAExpression ) )
                    {
                    otherlv_5=(Token)match(input,Else,FollowSets000.FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getAIfExpressionAccess().getElseKeyword_5_0());
                          
                    }
                    // InternalReqSpecParser.g:8095:1: ( (lv_else_6_0= ruleAExpression ) )
                    // InternalReqSpecParser.g:8096:1: (lv_else_6_0= ruleAExpression )
                    {
                    // InternalReqSpecParser.g:8096:1: (lv_else_6_0= ruleAExpression )
                    // InternalReqSpecParser.g:8097:3: lv_else_6_0= ruleAExpression
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getAIfExpressionAccess().getElseAExpressionParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_else_6_0=ruleAExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getAIfExpressionRule());
                      	        }
                             		set(
                             			current, 
                             			"else",
                              		lv_else_6_0, 
                              		"org.osate.alisa.common.Common.AExpression");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,Endif,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getAIfExpressionAccess().getEndifKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAIfExpression"


    // $ANTLR start "entryRuleALiteral"
    // InternalReqSpecParser.g:8126:1: entryRuleALiteral returns [EObject current=null] : iv_ruleALiteral= ruleALiteral EOF ;
    public final EObject entryRuleALiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleALiteral = null;


        try {
            // InternalReqSpecParser.g:8127:2: (iv_ruleALiteral= ruleALiteral EOF )
            // InternalReqSpecParser.g:8128:2: iv_ruleALiteral= ruleALiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getALiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleALiteral=ruleALiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleALiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleALiteral"


    // $ANTLR start "ruleALiteral"
    // InternalReqSpecParser.g:8135:1: ruleALiteral returns [EObject current=null] : (this_ABooleanLiteral_0= ruleABooleanLiteral | this_ARealTerm_1= ruleARealTerm | this_AIntegerTerm_2= ruleAIntegerTerm | this_StringTerm_3= ruleStringTerm ) ;
    public final EObject ruleALiteral() throws RecognitionException {
        EObject current = null;

        EObject this_ABooleanLiteral_0 = null;

        EObject this_ARealTerm_1 = null;

        EObject this_AIntegerTerm_2 = null;

        EObject this_StringTerm_3 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8138:28: ( (this_ABooleanLiteral_0= ruleABooleanLiteral | this_ARealTerm_1= ruleARealTerm | this_AIntegerTerm_2= ruleAIntegerTerm | this_StringTerm_3= ruleStringTerm ) )
            // InternalReqSpecParser.g:8139:1: (this_ABooleanLiteral_0= ruleABooleanLiteral | this_ARealTerm_1= ruleARealTerm | this_AIntegerTerm_2= ruleAIntegerTerm | this_StringTerm_3= ruleStringTerm )
            {
            // InternalReqSpecParser.g:8139:1: (this_ABooleanLiteral_0= ruleABooleanLiteral | this_ARealTerm_1= ruleARealTerm | this_AIntegerTerm_2= ruleAIntegerTerm | this_StringTerm_3= ruleStringTerm )
            int alt167=4;
            switch ( input.LA(1) ) {
            case False:
            case True:
                {
                alt167=1;
                }
                break;
            case RULE_REAL_LIT:
                {
                alt167=2;
                }
                break;
            case RULE_INT:
                {
                alt167=3;
                }
                break;
            case RULE_STRING:
                {
                alt167=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }

            switch (alt167) {
                case 1 :
                    // InternalReqSpecParser.g:8140:5: this_ABooleanLiteral_0= ruleABooleanLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getALiteralAccess().getABooleanLiteralParserRuleCall_0()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ABooleanLiteral_0=ruleABooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ABooleanLiteral_0;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:8150:5: this_ARealTerm_1= ruleARealTerm
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getALiteralAccess().getARealTermParserRuleCall_1()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ARealTerm_1=ruleARealTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_ARealTerm_1;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:8160:5: this_AIntegerTerm_2= ruleAIntegerTerm
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getALiteralAccess().getAIntegerTermParserRuleCall_2()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AIntegerTerm_2=ruleAIntegerTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_AIntegerTerm_2;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:8170:5: this_StringTerm_3= ruleStringTerm
                    {
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getALiteralAccess().getStringTermParserRuleCall_3()); 
                          
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringTerm_3=ruleStringTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = this_StringTerm_3;
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleALiteral"


    // $ANTLR start "entryRuleAIntegerTerm"
    // InternalReqSpecParser.g:8186:1: entryRuleAIntegerTerm returns [EObject current=null] : iv_ruleAIntegerTerm= ruleAIntegerTerm EOF ;
    public final EObject entryRuleAIntegerTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAIntegerTerm = null;


        try {
            // InternalReqSpecParser.g:8187:2: (iv_ruleAIntegerTerm= ruleAIntegerTerm EOF )
            // InternalReqSpecParser.g:8188:2: iv_ruleAIntegerTerm= ruleAIntegerTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAIntegerTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAIntegerTerm=ruleAIntegerTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAIntegerTerm; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAIntegerTerm"


    // $ANTLR start "ruleAIntegerTerm"
    // InternalReqSpecParser.g:8195:1: ruleAIntegerTerm returns [EObject current=null] : ( (lv_value_0_0= ruleAInt ) ) ;
    public final EObject ruleAIntegerTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8198:28: ( ( (lv_value_0_0= ruleAInt ) ) )
            // InternalReqSpecParser.g:8199:1: ( (lv_value_0_0= ruleAInt ) )
            {
            // InternalReqSpecParser.g:8199:1: ( (lv_value_0_0= ruleAInt ) )
            // InternalReqSpecParser.g:8200:1: (lv_value_0_0= ruleAInt )
            {
            // InternalReqSpecParser.g:8200:1: (lv_value_0_0= ruleAInt )
            // InternalReqSpecParser.g:8201:3: lv_value_0_0= ruleAInt
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAIntegerTermAccess().getValueAIntParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_0_0=ruleAInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAIntegerTermRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"org.osate.alisa.common.Common.AInt");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAIntegerTerm"


    // $ANTLR start "entryRuleAInt"
    // InternalReqSpecParser.g:8225:1: entryRuleAInt returns [String current=null] : iv_ruleAInt= ruleAInt EOF ;
    public final String entryRuleAInt() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAInt = null;


        try {
            // InternalReqSpecParser.g:8226:1: (iv_ruleAInt= ruleAInt EOF )
            // InternalReqSpecParser.g:8227:2: iv_ruleAInt= ruleAInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAIntRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAInt=ruleAInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAInt.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAInt"


    // $ANTLR start "ruleAInt"
    // InternalReqSpecParser.g:8234:1: ruleAInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_INT_0= RULE_INT ;
    public final AntlrDatatypeRuleToken ruleAInt() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8238:6: (this_INT_0= RULE_INT )
            // InternalReqSpecParser.g:8239:5: this_INT_0= RULE_INT
            {
            this_INT_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_INT_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_INT_0, grammarAccess.getAIntAccess().getINTTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAInt"


    // $ANTLR start "entryRuleARealTerm"
    // InternalReqSpecParser.g:8254:1: entryRuleARealTerm returns [EObject current=null] : iv_ruleARealTerm= ruleARealTerm EOF ;
    public final EObject entryRuleARealTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleARealTerm = null;


        try {
            // InternalReqSpecParser.g:8255:2: (iv_ruleARealTerm= ruleARealTerm EOF )
            // InternalReqSpecParser.g:8256:2: iv_ruleARealTerm= ruleARealTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getARealTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleARealTerm=ruleARealTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleARealTerm; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleARealTerm"


    // $ANTLR start "ruleARealTerm"
    // InternalReqSpecParser.g:8263:1: ruleARealTerm returns [EObject current=null] : ( (lv_value_0_0= ruleAReal ) ) ;
    public final EObject ruleARealTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8266:28: ( ( (lv_value_0_0= ruleAReal ) ) )
            // InternalReqSpecParser.g:8267:1: ( (lv_value_0_0= ruleAReal ) )
            {
            // InternalReqSpecParser.g:8267:1: ( (lv_value_0_0= ruleAReal ) )
            // InternalReqSpecParser.g:8268:1: (lv_value_0_0= ruleAReal )
            {
            // InternalReqSpecParser.g:8268:1: (lv_value_0_0= ruleAReal )
            // InternalReqSpecParser.g:8269:3: lv_value_0_0= ruleAReal
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getARealTermAccess().getValueARealParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_0_0=ruleAReal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getARealTermRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"org.osate.alisa.common.Common.AReal");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleARealTerm"


    // $ANTLR start "entryRuleAReal"
    // InternalReqSpecParser.g:8293:1: entryRuleAReal returns [String current=null] : iv_ruleAReal= ruleAReal EOF ;
    public final String entryRuleAReal() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAReal = null;


        try {
            // InternalReqSpecParser.g:8294:1: (iv_ruleAReal= ruleAReal EOF )
            // InternalReqSpecParser.g:8295:2: iv_ruleAReal= ruleAReal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getARealRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAReal=ruleAReal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAReal.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAReal"


    // $ANTLR start "ruleAReal"
    // InternalReqSpecParser.g:8302:1: ruleAReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_REAL_LIT_0= RULE_REAL_LIT ;
    public final AntlrDatatypeRuleToken ruleAReal() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_REAL_LIT_0=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8306:6: (this_REAL_LIT_0= RULE_REAL_LIT )
            // InternalReqSpecParser.g:8307:5: this_REAL_LIT_0= RULE_REAL_LIT
            {
            this_REAL_LIT_0=(Token)match(input,RULE_REAL_LIT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_REAL_LIT_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_REAL_LIT_0, grammarAccess.getARealAccess().getREAL_LITTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAReal"


    // $ANTLR start "entryRuleABooleanLiteral"
    // InternalReqSpecParser.g:8322:1: entryRuleABooleanLiteral returns [EObject current=null] : iv_ruleABooleanLiteral= ruleABooleanLiteral EOF ;
    public final EObject entryRuleABooleanLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleABooleanLiteral = null;


        try {
            // InternalReqSpecParser.g:8323:2: (iv_ruleABooleanLiteral= ruleABooleanLiteral EOF )
            // InternalReqSpecParser.g:8324:2: iv_ruleABooleanLiteral= ruleABooleanLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getABooleanLiteralRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleABooleanLiteral=ruleABooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleABooleanLiteral; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleABooleanLiteral"


    // $ANTLR start "ruleABooleanLiteral"
    // InternalReqSpecParser.g:8331:1: ruleABooleanLiteral returns [EObject current=null] : ( () ( ( (lv_value_1_0= True ) ) | otherlv_2= False ) ) ;
    public final EObject ruleABooleanLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_value_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8334:28: ( ( () ( ( (lv_value_1_0= True ) ) | otherlv_2= False ) ) )
            // InternalReqSpecParser.g:8335:1: ( () ( ( (lv_value_1_0= True ) ) | otherlv_2= False ) )
            {
            // InternalReqSpecParser.g:8335:1: ( () ( ( (lv_value_1_0= True ) ) | otherlv_2= False ) )
            // InternalReqSpecParser.g:8335:2: () ( ( (lv_value_1_0= True ) ) | otherlv_2= False )
            {
            // InternalReqSpecParser.g:8335:2: ()
            // InternalReqSpecParser.g:8336:5: 
            {
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getABooleanLiteralAccess().getBooleanLiteralAction_0(),
                          current);
                  
            }

            }

            // InternalReqSpecParser.g:8341:2: ( ( (lv_value_1_0= True ) ) | otherlv_2= False )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==True) ) {
                alt168=1;
            }
            else if ( (LA168_0==False) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalReqSpecParser.g:8341:3: ( (lv_value_1_0= True ) )
                    {
                    // InternalReqSpecParser.g:8341:3: ( (lv_value_1_0= True ) )
                    // InternalReqSpecParser.g:8342:1: (lv_value_1_0= True )
                    {
                    // InternalReqSpecParser.g:8342:1: (lv_value_1_0= True )
                    // InternalReqSpecParser.g:8343:3: lv_value_1_0= True
                    {
                    lv_value_1_0=(Token)match(input,True,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_value_1_0, grammarAccess.getABooleanLiteralAccess().getValueTrueKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getABooleanLiteralRule());
                      	        }
                             		setWithLastConsumed(current, "value", true, "true");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:8359:2: otherlv_2= False
                    {
                    otherlv_2=(Token)match(input,False,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getABooleanLiteralAccess().getFalseKeyword_1_1());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleABooleanLiteral"


    // $ANTLR start "entryRuleStringTerm"
    // InternalReqSpecParser.g:8371:1: entryRuleStringTerm returns [EObject current=null] : iv_ruleStringTerm= ruleStringTerm EOF ;
    public final EObject entryRuleStringTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringTerm = null;


        try {
            // InternalReqSpecParser.g:8372:2: (iv_ruleStringTerm= ruleStringTerm EOF )
            // InternalReqSpecParser.g:8373:2: iv_ruleStringTerm= ruleStringTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringTermRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringTerm=ruleStringTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringTerm; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringTerm"


    // $ANTLR start "ruleStringTerm"
    // InternalReqSpecParser.g:8380:1: ruleStringTerm returns [EObject current=null] : ( (lv_value_0_0= ruleNoQuoteString ) ) ;
    public final EObject ruleStringTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_value_0_0 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8383:28: ( ( (lv_value_0_0= ruleNoQuoteString ) ) )
            // InternalReqSpecParser.g:8384:1: ( (lv_value_0_0= ruleNoQuoteString ) )
            {
            // InternalReqSpecParser.g:8384:1: ( (lv_value_0_0= ruleNoQuoteString ) )
            // InternalReqSpecParser.g:8385:1: (lv_value_0_0= ruleNoQuoteString )
            {
            // InternalReqSpecParser.g:8385:1: (lv_value_0_0= ruleNoQuoteString )
            // InternalReqSpecParser.g:8386:3: lv_value_0_0= ruleNoQuoteString
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); 
              	    
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_0_0=ruleNoQuoteString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStringTermRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"org.osate.alisa.common.Common.NoQuoteString");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringTerm"


    // $ANTLR start "entryRuleNoQuoteString"
    // InternalReqSpecParser.g:8410:1: entryRuleNoQuoteString returns [String current=null] : iv_ruleNoQuoteString= ruleNoQuoteString EOF ;
    public final String entryRuleNoQuoteString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNoQuoteString = null;


        try {
            // InternalReqSpecParser.g:8411:1: (iv_ruleNoQuoteString= ruleNoQuoteString EOF )
            // InternalReqSpecParser.g:8412:2: iv_ruleNoQuoteString= ruleNoQuoteString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNoQuoteStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNoQuoteString=ruleNoQuoteString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNoQuoteString.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNoQuoteString"


    // $ANTLR start "ruleNoQuoteString"
    // InternalReqSpecParser.g:8419:1: ruleNoQuoteString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_STRING_0= RULE_STRING ;
    public final AntlrDatatypeRuleToken ruleNoQuoteString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8423:6: (this_STRING_0= RULE_STRING )
            // InternalReqSpecParser.g:8424:5: this_STRING_0= RULE_STRING
            {
            this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_STRING_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_STRING_0, grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNoQuoteString"


    // $ANTLR start "entryRuleAParenthesizedExpression"
    // InternalReqSpecParser.g:8439:1: entryRuleAParenthesizedExpression returns [EObject current=null] : iv_ruleAParenthesizedExpression= ruleAParenthesizedExpression EOF ;
    public final EObject entryRuleAParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAParenthesizedExpression = null;


        try {
            // InternalReqSpecParser.g:8440:2: (iv_ruleAParenthesizedExpression= ruleAParenthesizedExpression EOF )
            // InternalReqSpecParser.g:8441:2: iv_ruleAParenthesizedExpression= ruleAParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAParenthesizedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAParenthesizedExpression=ruleAParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAParenthesizedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAParenthesizedExpression"


    // $ANTLR start "ruleAParenthesizedExpression"
    // InternalReqSpecParser.g:8448:1: ruleAParenthesizedExpression returns [EObject current=null] : (otherlv_0= LeftParenthesis this_AExpression_1= ruleAExpression otherlv_2= RightParenthesis ) ;
    public final EObject ruleAParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_AExpression_1 = null;


         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8451:28: ( (otherlv_0= LeftParenthesis this_AExpression_1= ruleAExpression otherlv_2= RightParenthesis ) )
            // InternalReqSpecParser.g:8452:1: (otherlv_0= LeftParenthesis this_AExpression_1= ruleAExpression otherlv_2= RightParenthesis )
            {
            // InternalReqSpecParser.g:8452:1: (otherlv_0= LeftParenthesis this_AExpression_1= ruleAExpression otherlv_2= RightParenthesis )
            // InternalReqSpecParser.g:8453:2: otherlv_0= LeftParenthesis this_AExpression_1= ruleAExpression otherlv_2= RightParenthesis
            {
            otherlv_0=(Token)match(input,LeftParenthesis,FollowSets000.FOLLOW_62); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getAParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getAParenthesizedExpressionAccess().getAExpressionParserRuleCall_1()); 
                  
            }
            pushFollow(FollowSets000.FOLLOW_60);
            this_AExpression_1=ruleAExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current = this_AExpression_1;
                      afterParserOrEnumRuleCall();
                  
            }
            otherlv_2=(Token)match(input,RightParenthesis,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getAParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAParenthesizedExpression"


    // $ANTLR start "entryRuleComponentCategory"
    // InternalReqSpecParser.g:8479:1: entryRuleComponentCategory returns [String current=null] : iv_ruleComponentCategory= ruleComponentCategory EOF ;
    public final String entryRuleComponentCategory() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleComponentCategory = null;


        try {
            // InternalReqSpecParser.g:8480:1: (iv_ruleComponentCategory= ruleComponentCategory EOF )
            // InternalReqSpecParser.g:8481:2: iv_ruleComponentCategory= ruleComponentCategory EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentCategoryRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleComponentCategory=ruleComponentCategory();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentCategory.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentCategory"


    // $ANTLR start "ruleComponentCategory"
    // InternalReqSpecParser.g:8488:1: ruleComponentCategory returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Abstract | kw= Bus | kw= Data | kw= Device | kw= Memory | kw= Process | kw= Processor | kw= Subprogram | (kw= Subprogram kw= Group ) | kw= KW_System | (kw= Thread kw= Group ) | kw= Thread | (kw= Virtual kw= Bus ) | (kw= Virtual kw= Processor ) ) ;
    public final AntlrDatatypeRuleToken ruleComponentCategory() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8492:6: ( (kw= Abstract | kw= Bus | kw= Data | kw= Device | kw= Memory | kw= Process | kw= Processor | kw= Subprogram | (kw= Subprogram kw= Group ) | kw= KW_System | (kw= Thread kw= Group ) | kw= Thread | (kw= Virtual kw= Bus ) | (kw= Virtual kw= Processor ) ) )
            // InternalReqSpecParser.g:8493:1: (kw= Abstract | kw= Bus | kw= Data | kw= Device | kw= Memory | kw= Process | kw= Processor | kw= Subprogram | (kw= Subprogram kw= Group ) | kw= KW_System | (kw= Thread kw= Group ) | kw= Thread | (kw= Virtual kw= Bus ) | (kw= Virtual kw= Processor ) )
            {
            // InternalReqSpecParser.g:8493:1: (kw= Abstract | kw= Bus | kw= Data | kw= Device | kw= Memory | kw= Process | kw= Processor | kw= Subprogram | (kw= Subprogram kw= Group ) | kw= KW_System | (kw= Thread kw= Group ) | kw= Thread | (kw= Virtual kw= Bus ) | (kw= Virtual kw= Processor ) )
            int alt169=14;
            alt169 = dfa169.predict(input);
            switch (alt169) {
                case 1 :
                    // InternalReqSpecParser.g:8494:2: kw= Abstract
                    {
                    kw=(Token)match(input,Abstract,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getAbstractKeyword_0()); 
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:8501:2: kw= Bus
                    {
                    kw=(Token)match(input,Bus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getBusKeyword_1()); 
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:8508:2: kw= Data
                    {
                    kw=(Token)match(input,Data,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getDataKeyword_2()); 
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:8515:2: kw= Device
                    {
                    kw=(Token)match(input,Device,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getDeviceKeyword_3()); 
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalReqSpecParser.g:8522:2: kw= Memory
                    {
                    kw=(Token)match(input,Memory,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getMemoryKeyword_4()); 
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalReqSpecParser.g:8529:2: kw= Process
                    {
                    kw=(Token)match(input,Process,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getProcessKeyword_5()); 
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalReqSpecParser.g:8536:2: kw= Processor
                    {
                    kw=(Token)match(input,Processor,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getProcessorKeyword_6()); 
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalReqSpecParser.g:8543:2: kw= Subprogram
                    {
                    kw=(Token)match(input,Subprogram,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getSubprogramKeyword_7()); 
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalReqSpecParser.g:8549:6: (kw= Subprogram kw= Group )
                    {
                    // InternalReqSpecParser.g:8549:6: (kw= Subprogram kw= Group )
                    // InternalReqSpecParser.g:8550:2: kw= Subprogram kw= Group
                    {
                    kw=(Token)match(input,Subprogram,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getSubprogramKeyword_8_0()); 
                          
                    }
                    kw=(Token)match(input,Group,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getGroupKeyword_8_1()); 
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalReqSpecParser.g:8563:2: kw= KW_System
                    {
                    kw=(Token)match(input,KW_System,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getSystemKeyword_9()); 
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalReqSpecParser.g:8569:6: (kw= Thread kw= Group )
                    {
                    // InternalReqSpecParser.g:8569:6: (kw= Thread kw= Group )
                    // InternalReqSpecParser.g:8570:2: kw= Thread kw= Group
                    {
                    kw=(Token)match(input,Thread,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getThreadKeyword_10_0()); 
                          
                    }
                    kw=(Token)match(input,Group,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getGroupKeyword_10_1()); 
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalReqSpecParser.g:8583:2: kw= Thread
                    {
                    kw=(Token)match(input,Thread,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getThreadKeyword_11()); 
                          
                    }

                    }
                    break;
                case 13 :
                    // InternalReqSpecParser.g:8589:6: (kw= Virtual kw= Bus )
                    {
                    // InternalReqSpecParser.g:8589:6: (kw= Virtual kw= Bus )
                    // InternalReqSpecParser.g:8590:2: kw= Virtual kw= Bus
                    {
                    kw=(Token)match(input,Virtual,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getVirtualKeyword_12_0()); 
                          
                    }
                    kw=(Token)match(input,Bus,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getBusKeyword_12_1()); 
                          
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalReqSpecParser.g:8602:6: (kw= Virtual kw= Processor )
                    {
                    // InternalReqSpecParser.g:8602:6: (kw= Virtual kw= Processor )
                    // InternalReqSpecParser.g:8603:2: kw= Virtual kw= Processor
                    {
                    kw=(Token)match(input,Virtual,FollowSets000.FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getVirtualKeyword_13_0()); 
                          
                    }
                    kw=(Token)match(input,Processor,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getComponentCategoryAccess().getProcessorKeyword_13_1()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComponentCategory"


    // $ANTLR start "entryRuleAadlClassifierReference"
    // InternalReqSpecParser.g:8622:1: entryRuleAadlClassifierReference returns [String current=null] : iv_ruleAadlClassifierReference= ruleAadlClassifierReference EOF ;
    public final String entryRuleAadlClassifierReference() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAadlClassifierReference = null;


        try {
            // InternalReqSpecParser.g:8623:1: (iv_ruleAadlClassifierReference= ruleAadlClassifierReference EOF )
            // InternalReqSpecParser.g:8624:2: iv_ruleAadlClassifierReference= ruleAadlClassifierReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAadlClassifierReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAadlClassifierReference=ruleAadlClassifierReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAadlClassifierReference.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAadlClassifierReference"


    // $ANTLR start "ruleAadlClassifierReference"
    // InternalReqSpecParser.g:8631:1: ruleAadlClassifierReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )+ (kw= FullStop this_ID_4= RULE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleAadlClassifierReference() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;
        Token this_ID_4=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8635:6: ( (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )+ (kw= FullStop this_ID_4= RULE_ID )? ) )
            // InternalReqSpecParser.g:8636:1: (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )+ (kw= FullStop this_ID_4= RULE_ID )? )
            {
            // InternalReqSpecParser.g:8636:1: (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )+ (kw= FullStop this_ID_4= RULE_ID )? )
            // InternalReqSpecParser.g:8636:6: this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )+ (kw= FullStop this_ID_4= RULE_ID )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_102); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalReqSpecParser.g:8643:1: (kw= ColonColon this_ID_2= RULE_ID )+
            int cnt170=0;
            loop170:
            do {
                int alt170=2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0==ColonColon) ) {
                    alt170=1;
                }


                switch (alt170) {
            	case 1 :
            	    // InternalReqSpecParser.g:8644:2: kw= ColonColon this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,ColonColon,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getAadlClassifierReferenceAccess().getColonColonKeyword_1_0()); 
            	          
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_103); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_2, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt170 >= 1 ) break loop170;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(170, input);
                        throw eee;
                }
                cnt170++;
            } while (true);

            // InternalReqSpecParser.g:8656:3: (kw= FullStop this_ID_4= RULE_ID )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==FullStop) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalReqSpecParser.g:8657:2: kw= FullStop this_ID_4= RULE_ID
                    {
                    kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAadlClassifierReferenceAccess().getFullStopKeyword_2_0()); 
                          
                    }
                    this_ID_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_4);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_4, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_2_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAadlClassifierReference"


    // $ANTLR start "entryRuleAADLPROPERTYREFERENCE"
    // InternalReqSpecParser.g:8677:1: entryRuleAADLPROPERTYREFERENCE returns [String current=null] : iv_ruleAADLPROPERTYREFERENCE= ruleAADLPROPERTYREFERENCE EOF ;
    public final String entryRuleAADLPROPERTYREFERENCE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAADLPROPERTYREFERENCE = null;


        try {
            // InternalReqSpecParser.g:8678:1: (iv_ruleAADLPROPERTYREFERENCE= ruleAADLPROPERTYREFERENCE EOF )
            // InternalReqSpecParser.g:8679:2: iv_ruleAADLPROPERTYREFERENCE= ruleAADLPROPERTYREFERENCE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAADLPROPERTYREFERENCERule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAADLPROPERTYREFERENCE=ruleAADLPROPERTYREFERENCE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAADLPROPERTYREFERENCE.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAADLPROPERTYREFERENCE"


    // $ANTLR start "ruleAADLPROPERTYREFERENCE"
    // InternalReqSpecParser.g:8686:1: ruleAADLPROPERTYREFERENCE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleAADLPROPERTYREFERENCE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8690:6: ( (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )? ) )
            // InternalReqSpecParser.g:8691:1: (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )? )
            {
            // InternalReqSpecParser.g:8691:1: (this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )? )
            // InternalReqSpecParser.g:8691:6: this_ID_0= RULE_ID (kw= ColonColon this_ID_2= RULE_ID )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_104); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getAADLPROPERTYREFERENCEAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalReqSpecParser.g:8698:1: (kw= ColonColon this_ID_2= RULE_ID )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==ColonColon) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalReqSpecParser.g:8699:2: kw= ColonColon this_ID_2= RULE_ID
                    {
                    kw=(Token)match(input,ColonColon,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current.merge(kw);
                              newLeafNode(kw, grammarAccess.getAADLPROPERTYREFERENCEAccess().getColonColonKeyword_1_0()); 
                          
                    }
                    this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      		current.merge(this_ID_2);
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                          newLeafNode(this_ID_2, grammarAccess.getAADLPROPERTYREFERENCEAccess().getIDTerminalRuleCall_1_1()); 
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAADLPROPERTYREFERENCE"


    // $ANTLR start "entryRuleQualifiedName"
    // InternalReqSpecParser.g:8721:1: entryRuleQualifiedName returns [String current=null] : iv_ruleQualifiedName= ruleQualifiedName EOF ;
    public final String entryRuleQualifiedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualifiedName = null;


        try {
            // InternalReqSpecParser.g:8722:1: (iv_ruleQualifiedName= ruleQualifiedName EOF )
            // InternalReqSpecParser.g:8723:2: iv_ruleQualifiedName= ruleQualifiedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQualifiedNameRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualifiedName"


    // $ANTLR start "ruleQualifiedName"
    // InternalReqSpecParser.g:8730:1: ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )* ) ;
    public final AntlrDatatypeRuleToken ruleQualifiedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_2=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8734:6: ( (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )* ) )
            // InternalReqSpecParser.g:8735:1: (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )* )
            {
            // InternalReqSpecParser.g:8735:1: (this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )* )
            // InternalReqSpecParser.g:8735:6: this_ID_0= RULE_ID (kw= FullStop this_ID_2= RULE_ID )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_ID_0);
                  
            }
            if ( state.backtracking==0 ) {
               
                  newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
                  
            }
            // InternalReqSpecParser.g:8742:1: (kw= FullStop this_ID_2= RULE_ID )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==FullStop) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalReqSpecParser.g:8743:2: kw= FullStop this_ID_2= RULE_ID
            	    {
            	    kw=(Token)match(input,FullStop,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              current.merge(kw);
            	              newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
            	          
            	    }
            	    this_ID_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_83); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      		current.merge(this_ID_2);
            	          
            	    }
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualifiedName"


    // $ANTLR start "entryRuleThisKeyword"
    // InternalReqSpecParser.g:8763:1: entryRuleThisKeyword returns [String current=null] : iv_ruleThisKeyword= ruleThisKeyword EOF ;
    public final String entryRuleThisKeyword() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleThisKeyword = null;


        try {
            // InternalReqSpecParser.g:8764:1: (iv_ruleThisKeyword= ruleThisKeyword EOF )
            // InternalReqSpecParser.g:8765:2: iv_ruleThisKeyword= ruleThisKeyword EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThisKeywordRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleThisKeyword=ruleThisKeyword();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThisKeyword.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThisKeyword"


    // $ANTLR start "ruleThisKeyword"
    // InternalReqSpecParser.g:8772:1: ruleThisKeyword returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= This ;
    public final AntlrDatatypeRuleToken ruleThisKeyword() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;

         enterRule(); 
            
        try {
            // InternalReqSpecParser.g:8776:6: (kw= This )
            // InternalReqSpecParser.g:8778:2: kw= This
            {
            kw=(Token)match(input,This,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                      current.merge(kw);
                      newLeafNode(kw, grammarAccess.getThisKeywordAccess().getThisKeyword()); 
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule();
                  
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThisKeyword"


    // $ANTLR start "ruleTargetType"
    // InternalReqSpecParser.g:8793:1: ruleTargetType returns [Enumerator current=null] : ( (enumLiteral_0= Component ) | (enumLiteral_1= Feature ) | (enumLiteral_2= Connection ) | (enumLiteral_3= Flow ) | (enumLiteral_4= Mode ) | (enumLiteral_5= Element ) | (enumLiteral_6= Root ) ) ;
    public final Enumerator ruleTargetType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;

         enterRule(); 
        try {
            // InternalReqSpecParser.g:8795:28: ( ( (enumLiteral_0= Component ) | (enumLiteral_1= Feature ) | (enumLiteral_2= Connection ) | (enumLiteral_3= Flow ) | (enumLiteral_4= Mode ) | (enumLiteral_5= Element ) | (enumLiteral_6= Root ) ) )
            // InternalReqSpecParser.g:8796:1: ( (enumLiteral_0= Component ) | (enumLiteral_1= Feature ) | (enumLiteral_2= Connection ) | (enumLiteral_3= Flow ) | (enumLiteral_4= Mode ) | (enumLiteral_5= Element ) | (enumLiteral_6= Root ) )
            {
            // InternalReqSpecParser.g:8796:1: ( (enumLiteral_0= Component ) | (enumLiteral_1= Feature ) | (enumLiteral_2= Connection ) | (enumLiteral_3= Flow ) | (enumLiteral_4= Mode ) | (enumLiteral_5= Element ) | (enumLiteral_6= Root ) )
            int alt174=7;
            switch ( input.LA(1) ) {
            case Component:
                {
                alt174=1;
                }
                break;
            case Feature:
                {
                alt174=2;
                }
                break;
            case Connection:
                {
                alt174=3;
                }
                break;
            case Flow:
                {
                alt174=4;
                }
                break;
            case Mode:
                {
                alt174=5;
                }
                break;
            case Element:
                {
                alt174=6;
                }
                break;
            case Root:
                {
                alt174=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }

            switch (alt174) {
                case 1 :
                    // InternalReqSpecParser.g:8796:2: (enumLiteral_0= Component )
                    {
                    // InternalReqSpecParser.g:8796:2: (enumLiteral_0= Component )
                    // InternalReqSpecParser.g:8796:7: enumLiteral_0= Component
                    {
                    enumLiteral_0=(Token)match(input,Component,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getCOMPONENTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getTargetTypeAccess().getCOMPONENTEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalReqSpecParser.g:8802:6: (enumLiteral_1= Feature )
                    {
                    // InternalReqSpecParser.g:8802:6: (enumLiteral_1= Feature )
                    // InternalReqSpecParser.g:8802:11: enumLiteral_1= Feature
                    {
                    enumLiteral_1=(Token)match(input,Feature,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getFEATUREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getTargetTypeAccess().getFEATUREEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalReqSpecParser.g:8808:6: (enumLiteral_2= Connection )
                    {
                    // InternalReqSpecParser.g:8808:6: (enumLiteral_2= Connection )
                    // InternalReqSpecParser.g:8808:11: enumLiteral_2= Connection
                    {
                    enumLiteral_2=(Token)match(input,Connection,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getCONNECTIONEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getTargetTypeAccess().getCONNECTIONEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalReqSpecParser.g:8814:6: (enumLiteral_3= Flow )
                    {
                    // InternalReqSpecParser.g:8814:6: (enumLiteral_3= Flow )
                    // InternalReqSpecParser.g:8814:11: enumLiteral_3= Flow
                    {
                    enumLiteral_3=(Token)match(input,Flow,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getFLOWEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getTargetTypeAccess().getFLOWEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalReqSpecParser.g:8820:6: (enumLiteral_4= Mode )
                    {
                    // InternalReqSpecParser.g:8820:6: (enumLiteral_4= Mode )
                    // InternalReqSpecParser.g:8820:11: enumLiteral_4= Mode
                    {
                    enumLiteral_4=(Token)match(input,Mode,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getMODEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_4, grammarAccess.getTargetTypeAccess().getMODEEnumLiteralDeclaration_4()); 
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalReqSpecParser.g:8826:6: (enumLiteral_5= Element )
                    {
                    // InternalReqSpecParser.g:8826:6: (enumLiteral_5= Element )
                    // InternalReqSpecParser.g:8826:11: enumLiteral_5= Element
                    {
                    enumLiteral_5=(Token)match(input,Element,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getELEMENTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_5, grammarAccess.getTargetTypeAccess().getELEMENTEnumLiteralDeclaration_5()); 
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalReqSpecParser.g:8832:6: (enumLiteral_6= Root )
                    {
                    // InternalReqSpecParser.g:8832:6: (enumLiteral_6= Root )
                    // InternalReqSpecParser.g:8832:11: enumLiteral_6= Root
                    {
                    enumLiteral_6=(Token)match(input,Root,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getTargetTypeAccess().getROOTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_6, grammarAccess.getTargetTypeAccess().getROOTEnumLiteralDeclaration_6()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
        	catch (RecognitionException re) { 
        	    recover(input,re); 
        	    appendSkippedTokens();
        	}
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetType"

    // $ANTLR start synpred1_InternalReqSpecParser
    public final void synpred1_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:5761:7: ( ( This ) )
        // InternalReqSpecParser.g:5762:1: ( This )
        {
        // InternalReqSpecParser.g:5762:1: ( This )
        // InternalReqSpecParser.g:5764:1: This
        {
        match(input,This,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred1_InternalReqSpecParser

    // $ANTLR start synpred2_InternalReqSpecParser
    public final void synpred2_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:5785:7: ( ( ruleImageReference ) )
        // InternalReqSpecParser.g:5786:1: ( ruleImageReference )
        {
        // InternalReqSpecParser.g:5786:1: ( ruleImageReference )
        // InternalReqSpecParser.g:5787:1: ruleImageReference
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleImageReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalReqSpecParser

    // $ANTLR start synpred3_InternalReqSpecParser
    public final void synpred3_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:6417:3: ( ( () NumberSign ) )
        // InternalReqSpecParser.g:6417:4: ( () NumberSign )
        {
        // InternalReqSpecParser.g:6417:4: ( () NumberSign )
        // InternalReqSpecParser.g:6417:5: () NumberSign
        {
        // InternalReqSpecParser.g:6417:5: ()
        // InternalReqSpecParser.g:6418:1: 
        {
        }

        match(input,NumberSign,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred3_InternalReqSpecParser

    // $ANTLR start synpred4_InternalReqSpecParser
    public final void synpred4_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:6850:3: ( ( () ( ( ruleOpOr ) ) ) )
        // InternalReqSpecParser.g:6850:4: ( () ( ( ruleOpOr ) ) )
        {
        // InternalReqSpecParser.g:6850:4: ( () ( ( ruleOpOr ) ) )
        // InternalReqSpecParser.g:6850:5: () ( ( ruleOpOr ) )
        {
        // InternalReqSpecParser.g:6850:5: ()
        // InternalReqSpecParser.g:6851:1: 
        {
        }

        // InternalReqSpecParser.g:6851:2: ( ( ruleOpOr ) )
        // InternalReqSpecParser.g:6852:1: ( ruleOpOr )
        {
        // InternalReqSpecParser.g:6852:1: ( ruleOpOr )
        // InternalReqSpecParser.g:6853:1: ruleOpOr
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred4_InternalReqSpecParser

    // $ANTLR start synpred5_InternalReqSpecParser
    public final void synpred5_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:6962:3: ( ( () ( ( ruleOpAnd ) ) ) )
        // InternalReqSpecParser.g:6962:4: ( () ( ( ruleOpAnd ) ) )
        {
        // InternalReqSpecParser.g:6962:4: ( () ( ( ruleOpAnd ) ) )
        // InternalReqSpecParser.g:6962:5: () ( ( ruleOpAnd ) )
        {
        // InternalReqSpecParser.g:6962:5: ()
        // InternalReqSpecParser.g:6963:1: 
        {
        }

        // InternalReqSpecParser.g:6963:2: ( ( ruleOpAnd ) )
        // InternalReqSpecParser.g:6964:1: ( ruleOpAnd )
        {
        // InternalReqSpecParser.g:6964:1: ( ruleOpAnd )
        // InternalReqSpecParser.g:6965:1: ruleOpAnd
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred5_InternalReqSpecParser

    // $ANTLR start synpred6_InternalReqSpecParser
    public final void synpred6_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:7074:3: ( ( () ( ( ruleOpEquality ) ) ) )
        // InternalReqSpecParser.g:7074:4: ( () ( ( ruleOpEquality ) ) )
        {
        // InternalReqSpecParser.g:7074:4: ( () ( ( ruleOpEquality ) ) )
        // InternalReqSpecParser.g:7074:5: () ( ( ruleOpEquality ) )
        {
        // InternalReqSpecParser.g:7074:5: ()
        // InternalReqSpecParser.g:7075:1: 
        {
        }

        // InternalReqSpecParser.g:7075:2: ( ( ruleOpEquality ) )
        // InternalReqSpecParser.g:7076:1: ( ruleOpEquality )
        {
        // InternalReqSpecParser.g:7076:1: ( ruleOpEquality )
        // InternalReqSpecParser.g:7077:1: ruleOpEquality
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred6_InternalReqSpecParser

    // $ANTLR start synpred7_InternalReqSpecParser
    public final void synpred7_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:7186:3: ( ( () ( ( ruleOpCompare ) ) ) )
        // InternalReqSpecParser.g:7186:4: ( () ( ( ruleOpCompare ) ) )
        {
        // InternalReqSpecParser.g:7186:4: ( () ( ( ruleOpCompare ) ) )
        // InternalReqSpecParser.g:7186:5: () ( ( ruleOpCompare ) )
        {
        // InternalReqSpecParser.g:7186:5: ()
        // InternalReqSpecParser.g:7187:1: 
        {
        }

        // InternalReqSpecParser.g:7187:2: ( ( ruleOpCompare ) )
        // InternalReqSpecParser.g:7188:1: ( ruleOpCompare )
        {
        // InternalReqSpecParser.g:7188:1: ( ruleOpCompare )
        // InternalReqSpecParser.g:7189:1: ruleOpCompare
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred7_InternalReqSpecParser

    // $ANTLR start synpred8_InternalReqSpecParser
    public final void synpred8_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:7319:3: ( ( () ( ( ruleOpAdd ) ) ) )
        // InternalReqSpecParser.g:7319:4: ( () ( ( ruleOpAdd ) ) )
        {
        // InternalReqSpecParser.g:7319:4: ( () ( ( ruleOpAdd ) ) )
        // InternalReqSpecParser.g:7319:5: () ( ( ruleOpAdd ) )
        {
        // InternalReqSpecParser.g:7319:5: ()
        // InternalReqSpecParser.g:7320:1: 
        {
        }

        // InternalReqSpecParser.g:7320:2: ( ( ruleOpAdd ) )
        // InternalReqSpecParser.g:7321:1: ( ruleOpAdd )
        {
        // InternalReqSpecParser.g:7321:1: ( ruleOpAdd )
        // InternalReqSpecParser.g:7322:1: ruleOpAdd
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalReqSpecParser

    // $ANTLR start synpred9_InternalReqSpecParser
    public final void synpred9_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:7431:3: ( ( () ( ( ruleOpMulti ) ) ) )
        // InternalReqSpecParser.g:7431:4: ( () ( ( ruleOpMulti ) ) )
        {
        // InternalReqSpecParser.g:7431:4: ( () ( ( ruleOpMulti ) ) )
        // InternalReqSpecParser.g:7431:5: () ( ( ruleOpMulti ) )
        {
        // InternalReqSpecParser.g:7431:5: ()
        // InternalReqSpecParser.g:7432:1: 
        {
        }

        // InternalReqSpecParser.g:7432:2: ( ( ruleOpMulti ) )
        // InternalReqSpecParser.g:7433:1: ( ruleOpMulti )
        {
        // InternalReqSpecParser.g:7433:1: ( ruleOpMulti )
        // InternalReqSpecParser.g:7434:1: ruleOpMulti
        {
        pushFollow(FollowSets000.FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalReqSpecParser

    // $ANTLR start synpred11_InternalReqSpecParser
    public final void synpred11_InternalReqSpecParser_fragment() throws RecognitionException {   
        // InternalReqSpecParser.g:7987:4: ( Delta )
        // InternalReqSpecParser.g:7988:1: Delta
        {
        match(input,Delta,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalReqSpecParser

    // Delegated rules

    public final boolean synpred7_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalReqSpecParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalReqSpecParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA31 dfa31 = new DFA31(this);
    protected DFA38 dfa38 = new DFA38(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA169 dfa169 = new DFA169(this);
    static final String dfa_1s = "\13\uffff";
    static final String dfa_2s = "\1\5\6\uffff\1\30\3\uffff";
    static final String dfa_3s = "\1\157\6\uffff\1\65\3\uffff";
    static final String dfa_4s = "\1\uffff\1\11\1\1\1\2\1\3\1\4\1\5\1\uffff\1\10\1\6\1\7";
    static final String dfa_5s = "\13\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\1\uffff\1\5\24\uffff\1\4\4\uffff\1\6\11\uffff\1\10\44\uffff\1\7\1\uffff\1\3\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\11\34\uffff\1\12",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "()* loopback of 1177:1: ( ( (lv_description_12_0= ruleDescription ) ) | ( (lv_constants_13_0= ruleValDeclaration ) ) | ( (lv_computes_14_0= ruleComputeDeclaration ) ) | ( (lv_requirements_15_0= ruleSystemRequirement ) ) | ( (lv_include_16_0= ruleIncludeGlobalRequirement ) ) | (otherlv_17= See otherlv_18= Document ( (lv_docReference_19_0= ruleExternalDocument ) )+ ) | (otherlv_20= See otherlv_21= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_23= Issues ( (lv_issues_24_0= RULE_STRING ) )+ ) )*";
        }
    }
    static final String dfa_7s = "\12\uffff";
    static final String dfa_8s = "\1\5\5\uffff\1\30\3\uffff";
    static final String dfa_9s = "\1\157\5\uffff\1\65\3\uffff";
    static final String dfa_10s = "\1\uffff\1\10\1\1\1\2\1\3\1\4\1\uffff\1\7\1\6\1\5";
    static final String dfa_11s = "\12\uffff}>";
    static final String[] dfa_12s = {
            "\1\2\1\uffff\1\5\24\uffff\1\4\16\uffff\1\7\44\uffff\1\6\1\uffff\1\3\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "\1\11\34\uffff\1\10",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA38 extends DFA {

        public DFA38(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 38;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "()* loopback of 1465:1: ( ( (lv_description_10_0= ruleDescription ) ) | ( (lv_constants_11_0= ruleValDeclaration ) ) | ( (lv_computes_12_0= ruleComputeDeclaration ) ) | ( (lv_requirements_13_0= ruleGlobalRequirement ) ) | (otherlv_14= See otherlv_15= Document ( (lv_docReference_16_0= ruleExternalDocument ) )+ ) | (otherlv_17= See otherlv_18= Goals ( ( ruleQualifiedName ) )+ ) | (otherlv_20= Issues ( (lv_issues_21_0= RULE_STRING ) )+ ) )*";
        }
    }
    static final String dfa_13s = "\17\uffff";
    static final String dfa_14s = "\1\5\16\uffff";
    static final String dfa_15s = "\1\157\16\uffff";
    static final String dfa_16s = "\1\uffff\1\16\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15";
    static final String dfa_17s = "\1\0\16\uffff}>";
    static final String[] dfa_18s = {
            "\1\3\2\uffff\1\14\1\7\6\uffff\1\11\4\uffff\1\6\1\uffff\1\2\5\uffff\1\13\1\uffff\1\12\4\uffff\1\10\6\uffff\1\16\33\uffff\1\5\10\uffff\1\15\1\uffff\1\4\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "()* loopback of 1757:3: ( ({...}? => ( ({...}? => (otherlv_10= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_12_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_13_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_15_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_16_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= Conflicts otherlv_20= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_24_0= Dropped ) ) ( (lv_dropRationale_25_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= See otherlv_29= Document ( (lv_docReference_30_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= Issues ( (lv_issues_32_0= RULE_STRING ) )+ ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA52_0 = input.LA(1);

                         
                        int index52_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA52_0==RightSquareBracket) ) {s = 1;}

                        else if ( LA52_0 == Category && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 0) ) {s = 2;}

                        else if ( LA52_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA52_0 == Val && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA52_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA52_0 == Rationale && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( LA52_0 == Uncertainty && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA52_0 == Refines && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA52_0 == Conflicts && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                        else if ( LA52_0 == Evolves && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 8) ) {s = 10;}

                        else if ( LA52_0 == Dropped && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 9) ) {s = 11;}

                        else if ( LA52_0 == Stakeholder && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 10) ) {s = 12;}

                        else if ( LA52_0 == See && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 11) ) {s = 13;}

                        else if ( LA52_0 == Issues && getUnorderedGroupHelper().canSelect(grammarAccess.getDocGoalAccess().getUnorderedGroup_5(), 12) ) {s = 14;}

                         
                        input.seek(index52_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 52, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_19s = "\21\uffff";
    static final String dfa_20s = "\1\5\14\uffff\1\30\3\uffff";
    static final String dfa_21s = "\1\157\14\uffff\1\76\3\uffff";
    static final String dfa_22s = "\1\uffff\1\17\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\16\1\14\1\15";
    static final String dfa_23s = "\1\0\14\uffff\1\1\3\uffff}>";
    static final String[] dfa_24s = {
            "\1\3\2\uffff\1\14\1\7\6\uffff\1\11\4\uffff\1\6\1\uffff\1\2\5\uffff\1\13\1\uffff\1\12\4\uffff\1\10\6\uffff\1\16\33\uffff\1\5\10\uffff\1\15\1\uffff\1\4\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\20\45\uffff\1\17",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "()* loopback of 2309:3: ( ({...}? => ( ({...}? => (otherlv_8= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_10_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_11_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_12_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_13_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_14_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_17= Conflicts otherlv_18= With ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_22_0= Dropped ) ) ( (lv_dropRationale_23_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_24= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= See otherlv_27= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= See otherlv_30= Document ( (lv_docReference_31_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= Issues ( (lv_issues_33_0= RULE_STRING ) )+ ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_0 = input.LA(1);

                         
                        int index65_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA65_0==RightSquareBracket) ) {s = 1;}

                        else if ( LA65_0 == Category && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 0) ) {s = 2;}

                        else if ( LA65_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA65_0 == Val && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA65_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA65_0 == Rationale && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( LA65_0 == Uncertainty && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA65_0 == Refines && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA65_0 == Conflicts && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                        else if ( LA65_0 == Evolves && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 8) ) {s = 10;}

                        else if ( LA65_0 == Dropped && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 9) ) {s = 11;}

                        else if ( LA65_0 == Stakeholder && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 10) ) {s = 12;}

                        else if ( LA65_0 == See && ( getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 12) || getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 11) ) ) {s = 13;}

                        else if ( LA65_0 == Issues && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 13) ) {s = 14;}

                         
                        input.seek(index65_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA65_13 = input.LA(1);

                         
                        int index65_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA65_13 == Goal && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 11) ) {s = 15;}

                        else if ( LA65_13 == Document && getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_5(), 12) ) {s = 16;}

                         
                        input.seek(index65_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\26\uffff";
    static final String dfa_26s = "\1\5\20\uffff\1\7\4\uffff";
    static final String dfa_27s = "\1\157\20\uffff\1\76\4\uffff";
    static final String dfa_28s = "\1\uffff\1\24\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\uffff\1\23\1\22\1\20\1\21";
    static final String dfa_29s = "\26\uffff}>";
    static final String[] dfa_30s = {
            "\1\3\1\20\2\uffff\1\7\1\uffff\1\16\6\uffff\1\10\2\uffff\1\6\1\uffff\1\2\1\uffff\1\5\1\11\1\uffff\1\14\1\12\1\uffff\1\17\4\uffff\1\15\6\uffff\1\22\16\uffff\1\5\14\uffff\1\4\10\uffff\1\21\1\uffff\1\13\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\25\20\uffff\1\23\45\uffff\1\24",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "()* loopback of 2892:1: ( (otherlv_7= Category ( ( ruleQualifiedName ) )+ ) | ( (lv_description_9_0= ruleDescription ) ) | ( (lv_whencondition_10_0= ruleWhenCondition ) ) | ( (lv_predicate_11_0= ruleReqPredicate ) ) | ( (lv_rationale_12_0= ruleRationale ) ) | ( (lv_changeUncertainty_13_0= ruleUncertainty ) ) | (otherlv_14= Mitigates ( ( (otherlv_15= RULE_ID ) ) | ( (lv_exceptionText_16_0= RULE_STRING ) ) ) ) | (otherlv_17= Inherits ( ( ruleQualifiedName ) ) ) | ( ( (lv_dropped_19_0= Dropped ) ) ( (lv_dropRationale_20_0= RULE_STRING ) )? ) | ( (lv_constants_21_0= ruleValDeclaration ) ) | ( (lv_computes_22_0= ruleComputeDeclaration ) ) | (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) | (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) | (otherlv_27= Evolves ( ( ruleQualifiedName ) )+ ) | (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) | (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) | (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) | (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) | (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) )*";
        }
    }
    static final String dfa_31s = "\25\uffff";
    static final String dfa_32s = "\1\5\17\uffff\1\7\4\uffff";
    static final String dfa_33s = "\1\157\17\uffff\1\76\4\uffff";
    static final String dfa_34s = "\1\uffff\1\23\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\uffff\1\22\1\17\1\20\1\21";
    static final String dfa_35s = "\1\0\17\uffff\1\1\4\uffff}>";
    static final String[] dfa_36s = {
            "\1\3\1\17\2\uffff\1\11\1\uffff\1\14\6\uffff\1\12\2\uffff\1\10\1\uffff\1\2\1\uffff\1\7\2\uffff\1\5\1\16\1\uffff\1\15\4\uffff\1\13\6\uffff\1\21\16\uffff\1\7\14\uffff\1\6\10\uffff\1\20\1\uffff\1\4\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\23\20\uffff\1\24\45\uffff\1\22",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final short[][] dfa_36 = unpackEncodedStringArray(dfa_36s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_34;
            this.special = dfa_35;
            this.transition = dfa_36;
        }
        public String getDescription() {
            return "()* loopback of 3467:3: ( ({...}? => ( ({...}? => (otherlv_9= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_11_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_12_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_13_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_14_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_15_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_16_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_17_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= Mitigates ( ( (otherlv_19= RULE_ID ) ) | ( (lv_exceptionText_20_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_27_0= Dropped ) ) ( (lv_dropRationale_28_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Development otherlv_30= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_32= See otherlv_33= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= See otherlv_36= Requirement ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_38= See otherlv_39= Document ( (lv_docReference_40_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= Issues ( (lv_issues_42_0= RULE_STRING ) )+ ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_0 = input.LA(1);

                         
                        int index97_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA97_0==RightSquareBracket) ) {s = 1;}

                        else if ( LA97_0 == Category && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 0) ) {s = 2;}

                        else if ( LA97_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA97_0 == Val && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA97_0 == Compute && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA97_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( ( LA97_0 == Informal || LA97_0 == Value ) && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA97_0 == Rationale && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA97_0 == Uncertainty && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                        else if ( LA97_0 == Mitigates && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 8) ) {s = 10;}

                        else if ( LA97_0 == Refines && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 9) ) {s = 11;}

                        else if ( LA97_0 == Decomposes && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 10) ) {s = 12;}

                        else if ( LA97_0 == Evolves && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 11) ) {s = 13;}

                        else if ( LA97_0 == Dropped && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 12) ) {s = 14;}

                        else if ( LA97_0 == Development && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 13) ) {s = 15;}

                        else if ( LA97_0 == See && ( getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 14) || getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 15) || getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 16) ) ) {s = 16;}

                        else if ( LA97_0 == Issues && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 17) ) {s = 17;}

                         
                        input.seek(index97_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA97_16 = input.LA(1);

                         
                        int index97_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA97_16 == Goal && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 14) ) {s = 18;}

                        else if ( LA97_16 == Requirement && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 15) ) {s = 19;}

                        else if ( LA97_16 == Document && getUnorderedGroupHelper().canSelect(grammarAccess.getGlobalRequirementAccess().getUnorderedGroup_5(), 16) ) {s = 20;}

                         
                        input.seek(index97_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_37s = "\1\5\20\uffff\1\30\3\uffff";
    static final String dfa_38s = "\1\157\20\uffff\1\76\3\uffff";
    static final String dfa_39s = "\1\uffff\1\23\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\uffff\1\22\1\20\1\21";
    static final String dfa_40s = "\1\1\20\uffff\1\0\3\uffff}>";
    static final String[] dfa_41s = {
            "\1\3\1\20\2\uffff\1\11\1\uffff\1\14\6\uffff\1\12\2\uffff\1\10\1\uffff\1\2\1\uffff\1\7\1\15\1\uffff\1\5\1\17\1\uffff\1\16\4\uffff\1\13\6\uffff\1\22\16\uffff\1\7\14\uffff\1\6\10\uffff\1\21\1\uffff\1\4\34\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\24\45\uffff\1\23",
            "",
            "",
            ""
    };
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[][] dfa_41 = unpackEncodedStringArray(dfa_41s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_31;
            this.eof = dfa_31;
            this.min = dfa_37;
            this.max = dfa_38;
            this.accept = dfa_39;
            this.special = dfa_40;
            this.transition = dfa_41;
        }
        public String getDescription() {
            return "()* loopback of 4258:3: ( ({...}? => ( ({...}? => (otherlv_11= Category ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( (lv_description_13_0= ruleDescription ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_constants_14_0= ruleValDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_computes_15_0= ruleComputeDeclaration ) ) )+ ) ) | ({...}? => ( ({...}? => ( (lv_whencondition_16_0= ruleWhenCondition ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_predicate_17_0= ruleReqPredicate ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_rationale_18_0= ruleRationale ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_changeUncertainty_19_0= ruleUncertainty ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= Mitigates ( ( (otherlv_21= RULE_ID ) ) | ( (lv_exceptionText_22_0= RULE_STRING ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= Refines ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= Decomposes ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= Inherits ( ( ruleQualifiedName ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= Evolves ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_dropped_31_0= Dropped ) ) ( (lv_dropRationale_32_0= RULE_STRING ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_33= Development otherlv_34= Stakeholder ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= See otherlv_37= Goal ( ( ruleQualifiedName ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= See otherlv_40= Document ( (lv_docReference_41_0= ruleExternalDocument ) )+ ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= Issues ( (lv_issues_43_0= RULE_STRING ) )+ ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_17 = input.LA(1);

                         
                        int index115_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA115_17 == Goal && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 15) ) {s = 19;}

                        else if ( LA115_17 == Document && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 16) ) {s = 20;}

                         
                        input.seek(index115_17);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_0 = input.LA(1);

                         
                        int index115_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA115_0==RightSquareBracket) ) {s = 1;}

                        else if ( LA115_0 == Category && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 0) ) {s = 2;}

                        else if ( LA115_0 == Description && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA115_0 == Val && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA115_0 == Compute && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA115_0 == When && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( ( LA115_0 == Informal || LA115_0 == Value ) && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA115_0 == Rationale && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA115_0 == Uncertainty && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                        else if ( LA115_0 == Mitigates && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 8) ) {s = 10;}

                        else if ( LA115_0 == Refines && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 9) ) {s = 11;}

                        else if ( LA115_0 == Decomposes && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 10) ) {s = 12;}

                        else if ( LA115_0 == Inherits && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 11) ) {s = 13;}

                        else if ( LA115_0 == Evolves && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 12) ) {s = 14;}

                        else if ( LA115_0 == Dropped && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 13) ) {s = 15;}

                        else if ( LA115_0 == Development && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 14) ) {s = 16;}

                        else if ( LA115_0 == See && ( getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 16) || getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 15) ) ) {s = 17;}

                        else if ( LA115_0 == Issues && getUnorderedGroupHelper().canSelect(grammarAccess.getDocRequirementAccess().getUnorderedGroup_5(), 17) ) {s = 18;}

                         
                        input.seek(index115_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_42s = "\22\uffff";
    static final String dfa_43s = "\10\uffff\1\14\1\uffff\1\17\7\uffff";
    static final String dfa_44s = "\1\15\7\uffff\1\15\1\uffff\1\15\1\24\6\uffff";
    static final String dfa_45s = "\1\112\7\uffff\1\156\1\uffff\1\156\1\112\6\uffff";
    static final String dfa_46s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\12\2\uffff\1\10\1\11\1\13\1\14\1\15\1\16";
    static final String dfa_47s = "\22\uffff}>";
    static final String[] dfa_48s = {
            "\1\10\6\uffff\1\7\1\uffff\1\1\14\uffff\1\6\2\uffff\1\13\1\4\4\uffff\1\5\1\uffff\1\11\1\12\13\uffff\1\3\16\uffff\1\2",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\14\6\uffff\1\14\1\uffff\1\14\14\uffff\1\14\2\uffff\2\14\4\uffff\1\14\1\uffff\2\14\6\uffff\1\15\4\uffff\1\14\16\uffff\1\14\6\uffff\1\14\34\uffff\1\14",
            "",
            "\1\17\6\uffff\1\17\1\uffff\1\17\14\uffff\1\17\2\uffff\2\17\4\uffff\1\17\1\uffff\2\17\6\uffff\1\16\4\uffff\1\17\16\uffff\1\17\6\uffff\1\17\34\uffff\1\17",
            "\1\21\65\uffff\1\20",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_42;
            this.eof = dfa_43;
            this.min = dfa_44;
            this.max = dfa_45;
            this.accept = dfa_46;
            this.special = dfa_47;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "8493:1: (kw= Abstract | kw= Bus | kw= Data | kw= Device | kw= Memory | kw= Process | kw= Processor | kw= Subprogram | (kw= Subprogram kw= Group ) | kw= KW_System | (kw= Thread kw= Group ) | kw= Thread | (kw= Virtual kw= Bus ) | (kw= Virtual kw= Processor ) )";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000420001020102L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000800000040000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0020000000000000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000040000001000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0800D0C800502000L,0x0040000000000400L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000400000020000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0800D0C800502000L,0x0040400000020400L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0040400000000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x4000080000000020L,0x0000800000050000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000001000000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x4000080000000020L,0x0040800000050000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x4000080000000020L,0x0100800000050000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000440000000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x40000820000000A0L,0x0000800000010000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x40000820000000A0L,0x0040800000010000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x40000820000000A0L,0x0100800000010000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0140000000000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x40000020000000A0L,0x0000800000000000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x00000802100000A0L,0x0000800000050000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00000802100000A0L,0x0040800000050000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x00000802100000A0L,0x0100800000050000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000440000020000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x00000800100000A0L,0x0000800000050000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00000800100000A0L,0x0040800000050000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00000800100000A0L,0x0100800000050000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000440000001000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000400000001000L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00000810A0A10320L,0x0000800000050080L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00000810A0A10320L,0x0040800000050080L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00000810A0A10320L,0x0100800000050080L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x4000000000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x04000810B6A40A60L,0x0000800000050080L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x04000810B6A40A60L,0x0040800000050080L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x04000810B6A40A60L,0x0100800000050080L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000100L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0xA800D0C94050A400L,0x0040000000000402L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0800D0C800502000L,0x0040400000000400L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x04000810B2A40A60L,0x0000800000050080L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x04000810B2A40A60L,0x0040800000050080L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x04000810B2A40A60L,0x0100800000050080L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0800D0C800502000L,0x0140000000000400L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000004L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0040000020000000L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x8000000000000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000004000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0008000000000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0100000000000000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0010000000000000L,0x01C840A510008030L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000010000000000L,0x0000000000000040L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000140000000000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0081200408000000L,0x0040400000000001L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0080200408000000L,0x0040000000000001L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0081200408000000L,0x0040000000000001L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0140000000002010L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000002L,0x0140000000002010L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000040000005000L,0x0000800000000000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0200000000000002L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000220000000L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x00000000C0000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100200L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000002L,0x0000000001080000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000002L,0x0000280006800000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000002L,0x000000A000000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000021000004800L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0040000220000000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0010000000000000L,0x01C840AD10008030L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000000L,0x0000004800000000L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0002000000000000L,0x0000800000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x1004000000000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0004000000000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0040000000000000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000010000400000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    }


}