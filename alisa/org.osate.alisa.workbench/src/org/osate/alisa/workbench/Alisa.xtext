/**
 * Copyright (c) 2004-2021 Carnegie Mellon University and others. (see Contributors file). 
 * All Rights Reserved.
 * 
 * NO WARRANTY. ALL MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY
 * KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
 * OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT
 * MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 * 
 * This program and the accompanying materials are made available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Created, in part, with funding and support from the United States Government. (see Acknowledgments file).
 * 
 * This program includes and/or can make use of certain third party source code, object code, documentation and other
 * files ("Third Party Software"). The Third Party Software that is used by this program is dependent upon your system
 * configuration. By using this program, You agree to comply with any and all relevant Third Party Software terms and
 * conditions contained in any such Third Party Software or separate license file distributed with such Third Party
 * Software. The parties who own the Third Party Software ("Third Party Licensors") are intended third party benefici-
 * aries to this license with respect to the terms applicable to their Third Party Software. Third Party Software li-
 * censes only apply to the Third Party Software and not any other portion of this program or this program as a whole.
 */
grammar org.osate.alisa.workbench.Alisa with org.osate.alisa.common.Common

generate alisa "http://www.osate.org/alisa/workbench/Alisa"
import "http://aadl.info/AADL/2.0" as aadl2
import "http://www.osate.org/verify/Verify" as Verify 
import "http://www.osate.org/categories/Categories" as categories

 
AssuranceCase:
	'assurance' 'case' name=QualifiedName (':' title=STRING)?
	'for' system=[aadl2::ComponentType|AadlClassifierReference]
	'['
	description=Description?
	assurancePlans+=AssurancePlan+
	tasks+=AssuranceTask*
	']'
	;

AssurancePlan:
	'assurance' 'plan' name=ID (':' title=STRING)?
	'for' target=[aadl2::ComponentImplementation|AadlClassifierReference]
	'['(
	(description=Description)?
	& ('assure' assure+=[Verify::VerificationPlan|QualifiedName]+)?
	& ('assure''global' assureGlobal+=[Verify::VerificationPlan|QualifiedName]+)?
	& ('assure' 'subsystem' (assureSubsystems+=[aadl2::Subcomponent|ID]+|assureAll?='all'))?
	& ('assume' 'subsystem' (assumeSubsystems+=[aadl2::Subcomponent|ID]+|assumeAll?='all'))?
		& ('issues' issues+=STRING+ )?
	)']';
	
	AssuranceTask returns categories::CategoryFilter :
		{AssuranceTask} 'assurance''task' name=ID (':' title=STRING)? 
		'['	(
	(description=Description)?
	&('category' category+=[categories::Category|QualifiedName]+ anyCategory?='any'? )?
	&('issues' issues+=STRING+ )?
	)']'
	;
	