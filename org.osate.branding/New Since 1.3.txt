New API:
----------
Added PortDirection.isInverseOf()

Added PortGroupType.deepIsInverseOf()


Fixed bulder
------------
Fixed two problems with the AADL builder:

The builder didn't always rebuild spec files when packages/property sets that
they reference were changed.  This has been fixed.

When multiple AADL projects are open, the builder didn't always rebuild all
the projects.  This was especially true when a "clean" was performed.  This 
has also been fixed.

Fixed problem with builder during renaming of files.


New Features
------------
The "AADL Navigator" now shows the standard property sets at the top level.  
They can be opened in a read-only manner.

Plug-ins can now supply their supporting property sets into the workspace. 
This overcomes the previous problem of having to make sure you have adding 
the appropriate property sets into your project.  This property sets are visible
under the top-level "Plugin Property Sets" label in the "AADL Navigator".  They
can be opened in a read-only manner.

The AADL Object Editor now using icons based on the AADL Graphical notation
where appropriate.

The "AADL Property View" now uses a table format to show additional information
about the property association instead of tooltips.  This should be less
confusing.  Similarly, the New Property Association Dialog now uses a table
format to show more information about the property definitions.


Fixed AADL Semantic Behavior
----------------------------
Property lookups on features now defer to the feature's classifier always.  
Previously this was only done for subprograms and port group feature.
Consider the following:

property set ps
  p: aadlinteger => 0 applies to (all);
end ps;

data D
  properties
    ps::p => 1;
end D;

system s
  features
    f: in data port D;
end s;

Previously, looking up the association of ps::p for feature "f" of system s
would result in the default value 0 because there is no property association 
for ps::p on the feature itself.  Now the result is 1 because the property
lookup includes the data classifier D.


Additional Semantic Checking
----------------------------
A new semantic rule for propery reference expressions
(property_term in the AADL grammar), e.g., "value (<property name>)", has
been implemented.  The new rule is "The applies to clause of the referenced
property should be a super set of the applies to clause of the property being
assigned to." 

This is needed to avoid the following situation:

property set ps is
  p1: aadlinteger applies to (data);
  p2: aadlinteger applies to (system);
end ps;

system s
  properties
    ps::p2 => value(ps::p1);
end s;

This doesn't make sense because system s can never have a property value for
ps::p1.  Previously this cause OSATE to log an error in the system log.  It is
now detected during semantic checking.


The checking of flow specifications and flow implementations has been 
improved.  Previous version of OSATE did not check that the end points of
a flow implementation matched the end points declared in the flow specification.
Semantic checking of flows involving port groups and port group connections has
also been improved.  Previously, port group connections were not always treated
as bidirectional. 

