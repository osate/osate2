// $ANTLR 3.3 Nov 30, 2010 12:45:30 /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g 2011-06-17 15:16:14
	
	package org.osate.aadl2.parser;
	
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.Vector;
import java.util.TreeSet;

import org.antlr.runtime.BaseRecognizer;
import org.antlr.runtime.BitSet;
import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.DFA;
import org.antlr.runtime.EarlyExitException;
import org.antlr.runtime.FailedPredicateException;
import org.antlr.runtime.MismatchedNotSetException;
import org.antlr.runtime.MismatchedRangeException;
import org.antlr.runtime.MismatchedSetException;
import org.antlr.runtime.MismatchedTokenException;
import org.antlr.runtime.MismatchedTreeNodeException;
import org.antlr.runtime.NoViableAltException;
import org.antlr.runtime.Parser;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.Token;
import org.antlr.runtime.TokenStream;
import org.eclipse.emf.ecore.resource.Resource;

import org.osate.aadl2.Aadl2Factory;
import org.osate.aadl2.AadlBoolean;
import org.osate.aadl2.AadlInteger;
import org.osate.aadl2.AadlPackage;
import org.osate.aadl2.AadlReal;
import org.osate.aadl2.AadlString;
import org.osate.aadl2.AbstractFeature;
import org.osate.aadl2.AbstractImplementation;
import org.osate.aadl2.AbstractSubcomponent;
import org.osate.aadl2.AbstractType;
import org.osate.aadl2.AccessCategory;
import org.osate.aadl2.AccessConnection;
import org.osate.aadl2.AccessKind;
import org.osate.aadl2.AccessSpecification;
import org.osate.aadl2.AccessType;
import org.osate.aadl2.AnnexLibrary;
import org.osate.aadl2.AnnexSubclause;
import org.osate.aadl2.ArrayRange;
import org.osate.aadl2.ArraySpecification;
import org.osate.aadl2.BasicPropertyAssociation;
import org.osate.aadl2.BooleanLiteral;
import org.osate.aadl2.BusAccess;
import org.osate.aadl2.BusImplementation;
import org.osate.aadl2.BusSubcomponent;
import org.osate.aadl2.BusType;
import org.osate.aadl2.CalledSubprogram;
import org.osate.aadl2.CallSpecification;
import org.osate.aadl2.Classifier;
import org.osate.aadl2.ClassifierType;
import org.osate.aadl2.ClassifierValue;
import org.osate.aadl2.ComponentCategory;
import org.osate.aadl2.ComponentClassifier;
import org.osate.aadl2.ComponentImplementation;
import org.osate.aadl2.ComponentImplementationReference;
import org.osate.aadl2.ComponentPrototype;
import org.osate.aadl2.ComponentPrototypeBinding;
import org.osate.aadl2.ComponentPrototypeReference;
import org.osate.aadl2.ComponentReference;
import org.osate.aadl2.ComponentType;
import org.osate.aadl2.ComponentTypeRename;
import org.osate.aadl2.ComputedValue;
import org.osate.aadl2.Connection;
import org.osate.aadl2.ConnectionKind;
import org.osate.aadl2.ConstantValue;
import org.osate.aadl2.ContainmentPathElement;
import org.osate.aadl2.ContainedNamedElement;
import org.osate.aadl2.DataAccess;
import org.osate.aadl2.DataImplementation;
import org.osate.aadl2.DataPort;
import org.osate.aadl2.DataSubcomponent;
import org.osate.aadl2.DataType;
import org.osate.aadl2.DeviceImplementation;
import org.osate.aadl2.DeviceSubcomponent;
import org.osate.aadl2.DeviceType;
import org.osate.aadl2.DirectionType;
import org.osate.aadl2.Element;
import org.osate.aadl2.EndToEndFlow;
import org.osate.aadl2.EnumerationLiteral;
import org.osate.aadl2.EnumerationType;
import org.osate.aadl2.EventDataPort;
import org.osate.aadl2.EventPort;
import org.osate.aadl2.Feature;
import org.osate.aadl2.FeatureConnection;
import org.osate.aadl2.FeatureGroup;
import org.osate.aadl2.FeatureGroupConnection;
import org.osate.aadl2.FeatureGroupPrototype;
import org.osate.aadl2.FeatureGroupPrototypeBinding;
import org.osate.aadl2.FeatureGroupPrototypeReference;
import org.osate.aadl2.FeatureGroupReference;
import org.osate.aadl2.FeatureGroupType;
import org.osate.aadl2.FeatureGroupTypeRename;
import org.osate.aadl2.FeaturePrototype;
import org.osate.aadl2.FeaturePrototypeReference;
import org.osate.aadl2.FeaturePrototypeBinding;
import org.osate.aadl2.FlowElement;
import org.osate.aadl2.FlowKind;
import org.osate.aadl2.FlowSpecification;
import org.osate.aadl2.FlowImplementation;
import org.osate.aadl2.GlobalNamespace;
import org.osate.aadl2.ImplementationExtension;
import org.osate.aadl2.IntegerLiteral;
import org.osate.aadl2.InternalEvent;
import org.osate.aadl2.impl.IntegerLiteralImpl;
import org.osate.aadl2.ListValue;
import org.osate.aadl2.ModalElement;
import org.osate.aadl2.ModalPropertyValue;
import org.osate.aadl2.MetaclassReference;
import org.osate.aadl2.MemoryImplementation;
import org.osate.aadl2.MemorySubcomponent;
import org.osate.aadl2.MemoryType;
import org.osate.aadl2.Mode;
import org.osate.aadl2.ModeTransition;
import org.osate.aadl2.Namespace;
import org.osate.aadl2.NumericRange;
import org.osate.aadl2.Numeral;
import org.osate.aadl2.NumberValue;
import org.osate.aadl2.Operation;
import org.osate.aadl2.OperationKind;
import org.osate.aadl2.PackageRename;
import org.osate.aadl2.PackageSection;
import org.osate.aadl2.Parameter;
import org.osate.aadl2.ParameterConnection;
import org.osate.aadl2.PortCategory;
import org.osate.aadl2.PortConnection;
import org.osate.aadl2.PortSpecification;
import org.osate.aadl2.PrivatePackageSection;
import org.osate.aadl2.ProcessImplementation;
import org.osate.aadl2.ProcessSubcomponent;
import org.osate.aadl2.ProcessType;
import org.osate.aadl2.ProcessorCall;
import org.osate.aadl2.ProcessorImplementation;
import org.osate.aadl2.ProcessorSubcomponent;
import org.osate.aadl2.ProcessorSubprogram;
import org.osate.aadl2.ProcessorPort;
import org.osate.aadl2.ProcessorType;
import org.osate.aadl2.PropertyAssociation;
import org.osate.aadl2.PropertyReference;
import org.osate.aadl2.Property;
import org.osate.aadl2.PropertyConstant;
import org.osate.aadl2.PropertyExpression;
import org.osate.aadl2.PropertyOwner;
import org.osate.aadl2.PropertySet;
import org.osate.aadl2.PropertyType;
import org.osate.aadl2.PropertyValue;
import org.osate.aadl2.Prototype;
import org.osate.aadl2.PrototypeBinding;
import org.osate.aadl2.PublicPackageSection;
import org.osate.aadl2.RangeType;
import org.osate.aadl2.RangeValue;
import org.osate.aadl2.Realization;
import org.osate.aadl2.RealLiteral;
import org.osate.aadl2.RecordType;
import org.osate.aadl2.RecordField;
import org.osate.aadl2.RecordValue;
import org.osate.aadl2.ReferenceType;
import org.osate.aadl2.ReferenceValue;
import org.osate.aadl2.StringLiteral;
import org.osate.aadl2.StructuralFeature;
import org.osate.aadl2.Subcomponent;
import org.osate.aadl2.Subprogram;
import org.osate.aadl2.SubprogramCallSequence;
import org.osate.aadl2.SubprogramCall;
import org.osate.aadl2.SubprogramAccess;
import org.osate.aadl2.SubprogramGroupAccess;
import org.osate.aadl2.SubprogramGroupImplementation;
import org.osate.aadl2.SubprogramGroupSubcomponent;
import org.osate.aadl2.SubprogramGroupType;
import org.osate.aadl2.SubprogramImplementation;
import org.osate.aadl2.SubprogramSubcomponent;
import org.osate.aadl2.SubprogramType;
import org.osate.aadl2.SystemImplementation;
import org.osate.aadl2.SystemSubcomponent;
import org.osate.aadl2.SystemType;
import org.osate.aadl2.ThreadGroupImplementation;
import org.osate.aadl2.ThreadGroupSubcomponent;
import org.osate.aadl2.ThreadGroupType;
import org.osate.aadl2.ThreadImplementation;
import org.osate.aadl2.ThreadSubcomponent;
import org.osate.aadl2.ThreadType;
import org.osate.aadl2.TriggerPort;
import org.osate.aadl2.UnitLiteral;
import org.osate.aadl2.UnitsType;
import org.osate.aadl2.VirtualBusImplementation;
import org.osate.aadl2.VirtualBusSubcomponent;
import org.osate.aadl2.VirtualBusType;
import org.osate.aadl2.VirtualProcessorImplementation;
import org.osate.aadl2.VirtualProcessorSubcomponent;
import org.osate.aadl2.VirtualProcessorType;
import org.osate.aadl2.parsesupport.AObject;
import org.osate.aadl2.parsesupport.LocationReference;
import org.osate.annexsupport.AnnexParser;
import org.osate.annexsupport.AnnexParserRegistry;
import org.osate.annexsupport.AnnexRegistry;
import org.osate.aadl2.modelsupport.errorreporting.ParseErrorReporter;
import org.osate.aadl2.parser.provider.AadlParserPlugin;
	


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
public class Aadl2Parser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "WITH", "COMMA", "SEMI", "IDENT", "RENAMES", "PACKAGE", "DOUBLECOLON", "FEATURE", "GROUP", "ALL", "PROPERTIES", "END", "PUBLIC", "PRIVATE", "EXTENDS", "LPAREN", "RPAREN", "PROTOTYPES", "MODES", "ABSTRACT", "IMPLEMENTATION", "DOT", "SUBCOMPONENTS", "CALLS", "CONNECTIONS", "FLOWS", "BUS", "DATA", "DEVICE", "MEMORY", "PROCESS", "PROCESSOR", "SUBPROGRAM", "SYSTEM", "THREAD", "VIRTUAL", "LCURLY", "RCURLY", "COLON", "REFINED", "TO", "LBRACK", "RBRACK", "IN", "OUT", "NONE", "INVERSE", "OF", "EVENT", "PORT", "REQUIRES", "PROVIDES", "ACCESS", "ASSIGN", "FEATURES", "ANNEX", "ANNEX_TEXT", "PROPERTY", "SET", "IS", "INHERIT", "LIST", "APPLIES", "TYPE", "RECORD", "REFERENCE", "BOOLEAN", "STRING", "ENUMERATION", "UNITS", "STAR", "REAL", "INTEGER", "PLUS", "MINUS", "DOTDOT", "REAL_LIT", "INTEGER_LIT", "RANGE", "CLASSIFIER", "AND", "BINDING", "CONSTANT", "DELTA", "FALSE", "FLOW", "INITIAL", "MODE", "NOT", "OR", "PARAMETER", "PATH", "PROTOTYPE", "REFINES", "SERVER", "SINK", "SOURCE", "TRANSITIONS", "TRUE", "VALUE", "COMPUTE", "STARSTAR", "STRING_LITERAL", "ASSIGNPLUS", "LTRANS", "RTRANS", "SELF", "ARROW", "BARROW", "DARROW", "DHARROW", "HASH", "LETTER", "ESC", "DIGIT", "EXPONENT", "BASED_INTEGER", "INT_EXPONENT", "EXTENDED_DIGIT", "BASE", "HEX_DIGIT", "WS", "SL_COMMENT"
    };
    public static final int EOF=-1;
    public static final int WITH=4;
    public static final int COMMA=5;
    public static final int SEMI=6;
    public static final int IDENT=7;
    public static final int RENAMES=8;
    public static final int PACKAGE=9;
    public static final int DOUBLECOLON=10;
    public static final int FEATURE=11;
    public static final int GROUP=12;
    public static final int ALL=13;
    public static final int PROPERTIES=14;
    public static final int END=15;
    public static final int PUBLIC=16;
    public static final int PRIVATE=17;
    public static final int EXTENDS=18;
    public static final int LPAREN=19;
    public static final int RPAREN=20;
    public static final int PROTOTYPES=21;
    public static final int MODES=22;
    public static final int ABSTRACT=23;
    public static final int IMPLEMENTATION=24;
    public static final int DOT=25;
    public static final int SUBCOMPONENTS=26;
    public static final int CALLS=27;
    public static final int CONNECTIONS=28;
    public static final int FLOWS=29;
    public static final int BUS=30;
    public static final int DATA=31;
    public static final int DEVICE=32;
    public static final int MEMORY=33;
    public static final int PROCESS=34;
    public static final int PROCESSOR=35;
    public static final int SUBPROGRAM=36;
    public static final int SYSTEM=37;
    public static final int THREAD=38;
    public static final int VIRTUAL=39;
    public static final int LCURLY=40;
    public static final int RCURLY=41;
    public static final int COLON=42;
    public static final int REFINED=43;
    public static final int TO=44;
    public static final int LBRACK=45;
    public static final int RBRACK=46;
    public static final int IN=47;
    public static final int OUT=48;
    public static final int NONE=49;
    public static final int INVERSE=50;
    public static final int OF=51;
    public static final int EVENT=52;
    public static final int PORT=53;
    public static final int REQUIRES=54;
    public static final int PROVIDES=55;
    public static final int ACCESS=56;
    public static final int ASSIGN=57;
    public static final int FEATURES=58;
    public static final int ANNEX=59;
    public static final int ANNEX_TEXT=60;
    public static final int PROPERTY=61;
    public static final int SET=62;
    public static final int IS=63;
    public static final int INHERIT=64;
    public static final int LIST=65;
    public static final int APPLIES=66;
    public static final int TYPE=67;
    public static final int RECORD=68;
    public static final int REFERENCE=69;
    public static final int BOOLEAN=70;
    public static final int STRING=71;
    public static final int ENUMERATION=72;
    public static final int UNITS=73;
    public static final int STAR=74;
    public static final int REAL=75;
    public static final int INTEGER=76;
    public static final int PLUS=77;
    public static final int MINUS=78;
    public static final int DOTDOT=79;
    public static final int REAL_LIT=80;
    public static final int INTEGER_LIT=81;
    public static final int RANGE=82;
    public static final int CLASSIFIER=83;
    public static final int AND=84;
    public static final int BINDING=85;
    public static final int CONSTANT=86;
    public static final int DELTA=87;
    public static final int FALSE=88;
    public static final int FLOW=89;
    public static final int INITIAL=90;
    public static final int MODE=91;
    public static final int NOT=92;
    public static final int OR=93;
    public static final int PARAMETER=94;
    public static final int PATH=95;
    public static final int PROTOTYPE=96;
    public static final int REFINES=97;
    public static final int SERVER=98;
    public static final int SINK=99;
    public static final int SOURCE=100;
    public static final int TRANSITIONS=101;
    public static final int TRUE=102;
    public static final int VALUE=103;
    public static final int COMPUTE=104;
    public static final int STARSTAR=105;
    public static final int STRING_LITERAL=106;
    public static final int ASSIGNPLUS=107;
    public static final int LTRANS=108;
    public static final int RTRANS=109;
    public static final int SELF=110;
    public static final int ARROW=111;
    public static final int BARROW=112;
    public static final int DARROW=113;
    public static final int DHARROW=114;
    public static final int HASH=115;
    public static final int LETTER=116;
    public static final int ESC=117;
    public static final int DIGIT=118;
    public static final int EXPONENT=119;
    public static final int BASED_INTEGER=120;
    public static final int INT_EXPONENT=121;
    public static final int EXTENDED_DIGIT=122;
    public static final int BASE=123;
    public static final int HEX_DIGIT=124;
    public static final int WS=125;
    public static final int SL_COMMENT=126;

    // delegates
    // delegators


        public Aadl2Parser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public Aadl2Parser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return Aadl2Parser.tokenNames; }
    public String getGrammarFileName() { return "/home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g"; }


    	protected Aadl2Factory Aadl2F = Aadl2Factory.eINSTANCE;
    	
    	protected int commentIndex=0;
    	
    	/**
    	* All unresolved references ordered by dependencies. To determine the order look at
    	* the RecordReference main() to see an example of the ordering technique used here.
    	*/
    	protected TreeSet<ReferenceRecord> unresolvedReferences;

    	/**
    	 * The error reporter to use.
    	 */
    	protected ParseErrorReporter errReporter = null;
    	
    	/**
    	 * All external packages referenced in the parsed file.
    	 */
    	private Set referencedPackages = new HashSet();
    	
    	/**
    	 * All packages defined iin the parsed file.
    	 */
    	private Set definedPackages = new HashSet();
    	
    	/**
    	 * All external property sets referenced in the parsed file.
    	 */
    	private Set referencedPropertySets = new HashSet();

    	/**
    	 * All property sets defined in the parsed file.
    	 */
    	private Set definedPropertySets = new HashSet();

    	/**
    	 * global namespace to perform the resolution of names
    	 */
    	 
    	private GlobalNamespace globalNamespace=null;
    	
    	public void setGlobalNamespace(GlobalNamespace ns){
    		globalNamespace = ns;
    	}
    	
    	
    	/**
    	 * Set the error reporter to use.
    	 */
    		
    	public void setParseErrorReporter(final ParseErrorReporter reporter) {
    		  errReporter = reporter;
    	}
    	
    	String filename;
    	
    	public void setFilename(String fn){
    		filename=fn;
    	}
    	
    	public String getFilename(){
    		return filename;
    	}
    	/**
    	 * Report parser error
    	 * @param msg  error message
    	 * @param e  antlr error exception 
    	 */
    	public  void reportError(RecognitionException e)  {
        		String description=null;
        		if (e instanceof MismatchedTokenException){
        			MismatchedTokenException mte = (MismatchedTokenException) e;
        			if (mte.expecting != -1)
        				description = "Expecting: "+tokenNames[mte.expecting]+", found: "+mte.token.getText();
        			else
        				description = "Unexpected token '"+mte.token.getText()+"'";
        		} else if (e instanceof MismatchedTreeNodeException){
        			description = "Unexpected Tree Node Exception";
        		} else if (e instanceof NoViableAltException){
        			NoViableAltException nva = (NoViableAltException) e;
        			description = "No viable alternative: "+nva.grammarDecisionDescription;
        		} else if (e instanceof EarlyExitException){
        			EarlyExitException ee = (EarlyExitException) e;
        			description = "Early Exit";
        		} else if (e instanceof FailedPredicateException){
        			FailedPredicateException fp = (FailedPredicateException)e;
        			description = "Semantic error: "+fp.predicateText;
        		} else if (e instanceof MismatchedRangeException){
        			MismatchedRangeException mr = (MismatchedRangeException)e;
        			description = "Mismatched range: ";
        		} else if (e instanceof MismatchedSetException){
        			MismatchedSetException ms = (MismatchedSetException)e;
        			description = "Mismatched set";
        		} else if (e instanceof MismatchedNotSetException){
        			description="Mismatched of inverse of a set";
        		} 
        		  errReporter.error(getFilename(), e.line, description);
    	}

    	/**
    	 * Report parser error
    	 * @param msg  error message
    	 * @param e  any exception 
    	 */
    	public  void reportError(Exception e) {
    		AadlParserPlugin.INSTANCE.log(e);
    	  errReporter.error(this.getFilename(), 0, e.toString());
    	}
    	/**
    	 * Report parser error
    	 * @param msg  error message
    	 * @param e  antlr error exception 
    	 */
    	 
    	/* 
    	public  void reportError(ANTLRException e) {
    			  errReporter.error(this.getFilename(), 0, e.getMessage());
    			}
    	*/

    	/**
    	 * the current resource being parsed
    	 */
    	protected SplitStreamFilter filter = null;
    	
    	/**
    	 * sets the filter for pulling comment tokens.
    	 * @param filter  filter with comment tokens
    	 */
    	public void setFilter(SplitStreamFilter filter){
    		this.filter = filter;
    	}
    	
    	/* Process comments attached to the beginning of a declaration */
    	public void processComments(AObject o){
    		attachComments(o, getComments());
    	}

    	/* Get comments at the start of a declaration */
    	/*
    	public Vector getComments() {
    		if (filter == null ) return null;
    		return filter.getSplitTokens();
    	}
    	*/
    	
    	public Vector getComments() {
    		int i = input.index();
    		i = ((MultiChannelTokenStream)input).indexOfPreviousInChannelToken(i);

    		if (i>commentIndex){
    			List commList = ((CommonTokenStream)input).getTokens(commentIndex,i,Aadl2Lexer.SL_COMMENT);
    			Vector v;
    			if (commList != null)
    				v=new Vector(commList);
    			else
    				v = new Vector();
    			commentIndex = i;
    			return v;
    		}
    		
    		return new Vector();
    	}

    	/* Attach comments to an object. */
    	
    	/*
    	public void attachComments(AObject o, Vector cmt) {
    		if (cmt == null) return;
    		for ( Iterator i = cmt.iterator(); i.hasNext();)
    		{
    			Token t = (Token) i.next();
    		}
    	}
    	*/

    	public void attachComments(AObject o, Vector cmt) {
    		if (cmt == null) return;
    		for ( Iterator i = cmt.iterator(); i.hasNext();)
    		{
    			Token t = (Token) i.next();
    			String c = t.getText();
    			if (c.startsWith("--")){
    				c = c.substring(2);
    			} else if (c.startsWith("/*")){
    				c = c.substring(2, c.length()-2);
    			}
    			int idx = c.indexOf("\n");
    			while (idx >= 0){
    				if (idx == 0){
    					c = c.substring(1);
    				} else {
    				  String com = c.substring(0, idx-1);
    				  if (o instanceof Element)
    				      ((Element)o).createOwnedComment().setBody(com);
    				  c = c.substring(idx+1);
    				}
    				idx = c.indexOf("\n");
    			}
    			if (c.length()>0){
    			  if (o instanceof Element)
    			  	((Element)o).createOwnedComment().setBody(c);
    			}
    		}
    	}

    	
    	/**
    	 * Dummy method
    	 * see http://www.antlr.org:8080/pipermail/antlr-interest/2005-August/013323.html and replies
    	 */
    	 void recover (RecognitionException e, BitSet b) {
    	 }

    	/* Process comments attached to the end of a declaration */
    	public void processPostComments(AObject o){
    		processComments(o);
    	}
    	
    	private void setToDo(Set packagesToDo, Set propertySetsToDo) {
    		if (packagesToDo != null) {
    			for (Iterator i = referencedPackages.iterator(); i.hasNext();) {
    				String name = (String) i.next();
    				boolean foundIt = false;
    				for (Iterator ii = definedPackages.iterator(); ii.hasNext();) {
    					if (name.equalsIgnoreCase((String)ii.next())) {
    						foundIt = true;
    						break;
    					}
    				}
    				if (!foundIt)
    				    packagesToDo.add(name);
    				
    			}
    		}
    		if (propertySetsToDo != null) {
    			for (Iterator i = referencedPropertySets.iterator(); i.hasNext();) {
    				String name = (String) i.next();
    				boolean foundIt = false;
    				for (Iterator ii = definedPropertySets.iterator(); ii.hasNext();) {
    					if (name.equalsIgnoreCase((String)ii.next())) {
    						foundIt = true;
    						break;
    					}
    				}
    				if ( ! foundIt)
    					propertySetsToDo.add(name);
    			}
    		}
    	}



    // $ANTLR start "aadl_specification"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:554:1: aadl_specification[GlobalNamespace gns, Resource r, TreeSet<ReferenceRecord> uReferences] : ( package_spec[gns, r] | property_set[gns, r] )+ EOF ;
    public final void aadl_specification(GlobalNamespace gns, Resource r, TreeSet<ReferenceRecord> uReferences) throws RecognitionException {

        		unresolvedReferences = uReferences;
        		//jseibelTestString
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:559:2: ( ( package_spec[gns, r] | property_set[gns, r] )+ EOF )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:560:2: ( package_spec[gns, r] | property_set[gns, r] )+ EOF
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:560:2: ( package_spec[gns, r] | property_set[gns, r] )+
            int cnt1=0;
            loop1:
            do {
                int alt1=3;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==PACKAGE) ) {
                    alt1=1;
                }
                else if ( (LA1_0==PROPERTY) ) {
                    alt1=2;
                }


                switch (alt1) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:560:3: package_spec[gns, r]
            	    {
            	    pushFollow(FOLLOW_package_spec_in_aadl_specification87);
            	    package_spec(gns, r);

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;
            	case 2 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:561:3: property_set[gns, r]
            	    {
            	    pushFollow(FOLLOW_property_set_in_aadl_specification92);
            	    property_set(gns, r);

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    if ( cnt1 >= 1 ) break loop1;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(1, input);
                        throw eee;
                }
                cnt1++;
            } while (true);

            match(input,EOF,FOLLOW_EOF_in_aadl_specification100); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "aadl_specification"


    // $ANTLR start "name_visibility_declaration"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:589:1: name_visibility_declaration[PackageSection pkg ] : ( WITH (pn= package_name ) ( COMMA pn= package_name )* SEMI | alias_declaration[pkg] );
    public final void name_visibility_declaration(PackageSection pkg) throws RecognitionException {
        String pn = null;



        	 String pkgName = "";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:593:2: ( WITH (pn= package_name ) ( COMMA pn= package_name )* SEMI | alias_declaration[pkg] )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==WITH) ) {
                alt3=1;
            }
            else if ( ((LA3_0>=IDENT && LA3_0<=RENAMES)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:594:2: WITH (pn= package_name ) ( COMMA pn= package_name )* SEMI
                    {
                    match(input,WITH,FOLLOW_WITH_in_name_visibility_declaration123); if (state.failed) return ;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:595:2: (pn= package_name )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:595:3: pn= package_name
                    {
                    pushFollow(FOLLOW_package_name_in_name_visibility_declaration130);
                    pn=package_name();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      		  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.WithStatementReference,
                      		                                            pkg,
                      		                                            new String[]{pn}
                      		                                            ); 
                            unresolvedReferences.add(rr);
                      		
                    }

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:604:2: ( COMMA pn= package_name )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==COMMA) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:604:3: COMMA pn= package_name
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_name_visibility_declaration142); if (state.failed) return ;
                    	    pushFollow(FOLLOW_package_name_in_name_visibility_declaration148);
                    	    pn=package_name();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	            ReferenceRecord rr1 = new ReferenceRecord(ParserReferenceType.WithStatementReference,
                    	                                                      pkg,
                    	                                                      new String[]{pn}
                    	                                                      ); 
                    	            unresolvedReferences.add(rr1); 
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    match(input,SEMI,FOLLOW_SEMI_in_name_visibility_declaration163); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:615:3: alias_declaration[pkg]
                    {
                    pushFollow(FOLLOW_alias_declaration_in_name_visibility_declaration167);
                    alias_declaration(pkg);

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "name_visibility_declaration"


    // $ANTLR start "alias_declaration"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:619:1: alias_declaration[PackageSection pkg ] : (newid= IDENT RENAMES PACKAGE pn= package_name SEMI | ( (newid= IDENT )? r= RENAMES ( (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) | ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) ) ) | (r= RENAMES pn= package_name DOUBLECOLON ALL SEMI ) );
    public final void alias_declaration(PackageSection pkg) throws RecognitionException {
        Token newid=null;
        Token r=null;
        Token pkgId=null;
        Token oldid=null;
        String pn = null;

        ComponentCategory cc = null;



        		String newname = null;
        		String oldpkg="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:624:2: (newid= IDENT RENAMES PACKAGE pn= package_name SEMI | ( (newid= IDENT )? r= RENAMES ( (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) | ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) ) ) | (r= RENAMES pn= package_name DOUBLECOLON ALL SEMI ) )
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==IDENT) ) {
                int LA8_1 = input.LA(2);

                if ( (LA8_1==RENAMES) ) {
                    int LA8_3 = input.LA(3);

                    if ( (LA8_3==PACKAGE) ) {
                        alt8=1;
                    }
                    else if ( (LA8_3==FEATURE||LA8_3==ABSTRACT||(LA8_3>=BUS && LA8_3<=VIRTUAL)) ) {
                        alt8=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA8_0==RENAMES) ) {
                int LA8_2 = input.LA(2);

                if ( (LA8_2==FEATURE||LA8_2==ABSTRACT||(LA8_2>=BUS && LA8_2<=VIRTUAL)) ) {
                    alt8=2;
                }
                else if ( (LA8_2==IDENT) ) {
                    alt8=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:625:2: newid= IDENT RENAMES PACKAGE pn= package_name SEMI
                    {
                    newid=(Token)match(input,IDENT,FOLLOW_IDENT_in_alias_declaration192); if (state.failed) return ;
                    match(input,RENAMES,FOLLOW_RENAMES_in_alias_declaration194); if (state.failed) return ;
                    match(input,PACKAGE,FOLLOW_PACKAGE_in_alias_declaration196); if (state.failed) return ;
                    pushFollow(FOLLOW_package_name_in_alias_declaration200);
                    pn=package_name();

                    state._fsp--;
                    if (state.failed) return ;
                    match(input,SEMI,FOLLOW_SEMI_in_alias_declaration202); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                         if( pkg.findNamedElement(newid.getText()) != null) 
                            errReporter.error(new LocationReference(input.getSourceName(),newid.getLine()),"Duplicate renames identifier");
                            
                      		PackageRename pr = Aadl2F.createPackageRename();
                      		pr.setName(newid.getText());
                      		pr.setLocationReference(this.getFilename(), newid.getLine());
                      		pkg.getOwnedPackageRenames().add(pr);
                      		ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.PackageRenameReference,
                      		                                          pr,
                      		                                          new String[]{pn});
                          unresolvedReferences.add(rr);		                                         
                      	
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:640:2: ( (newid= IDENT )? r= RENAMES ( (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) | ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) ) )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:640:2: ( (newid= IDENT )? r= RENAMES ( (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) | ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) ) )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:640:3: (newid= IDENT )? r= RENAMES ( (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) | ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:640:3: (newid= IDENT )?
                    int alt4=2;
                    int LA4_0 = input.LA(1);

                    if ( (LA4_0==IDENT) ) {
                        alt4=1;
                    }
                    switch (alt4) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:640:4: newid= IDENT
                            {
                            newid=(Token)match(input,IDENT,FOLLOW_IDENT_in_alias_declaration216); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                       if( pkg.findNamedElement(newid.getText()) != null) 
                                        errReporter.error(new LocationReference(input.getSourceName(),newid.getLine()),
                                                          "Duplicate renames identifier");
                              	       newname=newid.getText();
                              	     
                            }

                            }
                            break;

                    }

                    r=(Token)match(input,RENAMES,FOLLOW_RENAMES_in_alias_declaration238); if (state.failed) return ;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:649:2: ( (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) | ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI ) )
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==ABSTRACT||(LA7_0>=BUS && LA7_0<=VIRTUAL)) ) {
                        alt7=1;
                    }
                    else if ( (LA7_0==FEATURE) ) {
                        alt7=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 7, 0, input);

                        throw nvae;
                    }
                    switch (alt7) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:650:3: (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:650:3: (cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:650:4: cc= component_category (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI
                            {
                            pushFollow(FOLLOW_component_category_in_alias_declaration249);
                            cc=component_category();

                            state._fsp--;
                            if (state.failed) return ;
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:651:4: (pkgId= IDENT DOUBLECOLON )+
                            int cnt5=0;
                            loop5:
                            do {
                                int alt5=2;
                                int LA5_0 = input.LA(1);

                                if ( (LA5_0==IDENT) ) {
                                    int LA5_1 = input.LA(2);

                                    if ( (LA5_1==DOUBLECOLON) ) {
                                        alt5=1;
                                    }


                                }


                                switch (alt5) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:651:5: pkgId= IDENT DOUBLECOLON
                            	    {
                            	    pkgId=(Token)match(input,IDENT,FOLLOW_IDENT_in_alias_declaration259); if (state.failed) return ;
                            	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_alias_declaration261); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	                  oldpkg+= ((oldpkg.length() > 0)?"::":"")+ pkgId.getText();
                            	                
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt5 >= 1 ) break loop5;
                            	    if (state.backtracking>0) {state.failed=true; return ;}
                                        EarlyExitException eee =
                                            new EarlyExitException(5, input);
                                        throw eee;
                                }
                                cnt5++;
                            } while (true);

                            oldid=(Token)match(input,IDENT,FOLLOW_IDENT_in_alias_declaration292); if (state.failed) return ;
                            match(input,SEMI,FOLLOW_SEMI_in_alias_declaration294); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              				ComponentTypeRename ctren = Aadl2F.createComponentTypeRename();
                              				if (newname != null){
                              					ctren.setName(newname);
                              				} else {
                              					ctren.setName(oldid.getText());
                              				}
                              				ctren.setLocationReference(this.getFilename(), r.getLine());
                              				pkg.getOwnedComponentTypeRenames().add(ctren);
                              				ctren.setCategory(cc);

                                      ReferenceRecord rr1=new ReferenceRecord(ParserReferenceType.ComponentTypeRename,
                                                                              ctren,
                                                                              new String[]{oldpkg,oldid.getText()});
                                      unresolvedReferences.add(rr1);
                                      oldpkg="";                                               
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:676:4: ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:676:4: ( FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:676:5: FEATURE GROUP (pkgId= IDENT DOUBLECOLON )+ oldid= IDENT SEMI
                            {
                            match(input,FEATURE,FOLLOW_FEATURE_in_alias_declaration310); if (state.failed) return ;
                            match(input,GROUP,FOLLOW_GROUP_in_alias_declaration312); if (state.failed) return ;
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:677:4: (pkgId= IDENT DOUBLECOLON )+
                            int cnt6=0;
                            loop6:
                            do {
                                int alt6=2;
                                int LA6_0 = input.LA(1);

                                if ( (LA6_0==IDENT) ) {
                                    int LA6_1 = input.LA(2);

                                    if ( (LA6_1==DOUBLECOLON) ) {
                                        alt6=1;
                                    }


                                }


                                switch (alt6) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:677:5: pkgId= IDENT DOUBLECOLON
                            	    {
                            	    pkgId=(Token)match(input,IDENT,FOLLOW_IDENT_in_alias_declaration323); if (state.failed) return ;
                            	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_alias_declaration325); if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	                  oldpkg+= ((oldpkg.length() > 0)?"::":"")+ pkgId.getText();
                            	                
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt6 >= 1 ) break loop6;
                            	    if (state.backtracking>0) {state.failed=true; return ;}
                                        EarlyExitException eee =
                                            new EarlyExitException(6, input);
                                        throw eee;
                                }
                                cnt6++;
                            } while (true);

                            oldid=(Token)match(input,IDENT,FOLLOW_IDENT_in_alias_declaration352); if (state.failed) return ;
                            match(input,SEMI,FOLLOW_SEMI_in_alias_declaration354); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              				FeatureGroupTypeRename fgren = Aadl2F.createFeatureGroupTypeRename();				
                              				if (newname != null){
                              					fgren.setName(newname);
                              				} else {
                              				  fgren.setName(oldid.getText());
                              				}
                              				fgren.setLocationReference(this.getFilename(), r.getLine());
                              				ReferenceRecord rr2 = new ReferenceRecord(ParserReferenceType.FeatureGroupTypeRename,
                              				                                          fgren,
                              				                                          new String []{oldpkg,oldid.getText()});
                                      unresolvedReferences.add(rr2);				                                          
                              				pkg.getOwnedFeatureGroupTypeRenames().add(fgren);
                              			
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:700:4: (r= RENAMES pn= package_name DOUBLECOLON ALL SEMI )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:700:4: (r= RENAMES pn= package_name DOUBLECOLON ALL SEMI )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:700:5: r= RENAMES pn= package_name DOUBLECOLON ALL SEMI
                    {
                    r=(Token)match(input,RENAMES,FOLLOW_RENAMES_in_alias_declaration377); if (state.failed) return ;
                    pushFollow(FOLLOW_package_name_in_alias_declaration381);
                    pn=package_name();

                    state._fsp--;
                    if (state.failed) return ;
                    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_alias_declaration383); if (state.failed) return ;
                    match(input,ALL,FOLLOW_ALL_in_alias_declaration385); if (state.failed) return ;
                    match(input,SEMI,FOLLOW_SEMI_in_alias_declaration387); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                           PackageRename pr = Aadl2F.createPackageRename();
                           pr.setLocationReference(this.getFilename(), r.getLine());
                           ReferenceRecord rr3 = new ReferenceRecord(ParserReferenceType.RenamesAll,
                                                                      pr,
                                                                      new String[]{pn});
                           unresolvedReferences.add(rr3);                                                	   
                      	   pr.setRenameAll(true);
                      	   pkg.getOwnedPackageRenames().add(pr);
                      	 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "alias_declaration"


    // $ANTLR start "package_spec"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:826:1: package_spec[GlobalNamespace gns, Resource r] : fl= PACKAGE packname= package_name ( ( public_part[aadllib] ( private_part[aadllib] )? ) | ( private_part[aadllib] ) ) ( PROPERTIES (pa= property_association )+ )? END pname2= package_name sl= SEMI ;
    public final void package_spec(GlobalNamespace gns, Resource r) throws RecognitionException {
        Token fl=null;
        Token sl=null;
        String packname = null;

        PropertyAssociation pa = null;

        String pname2 = null;



        		AadlPackage aadllib = Aadl2F.createAadlPackage();
        	   	processComments(aadllib);
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:831:2: (fl= PACKAGE packname= package_name ( ( public_part[aadllib] ( private_part[aadllib] )? ) | ( private_part[aadllib] ) ) ( PROPERTIES (pa= property_association )+ )? END pname2= package_name sl= SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:832:4: fl= PACKAGE packname= package_name ( ( public_part[aadllib] ( private_part[aadllib] )? ) | ( private_part[aadllib] ) ) ( PROPERTIES (pa= property_association )+ )? END pname2= package_name sl= SEMI
            {
            fl=(Token)match(input,PACKAGE,FOLLOW_PACKAGE_in_package_spec533); if (state.failed) return ;
            pushFollow(FOLLOW_package_name_in_package_spec539);
            packname=package_name();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

                			aadllib.setName(packname);
                			aadllib.setLocationReference(this.getFilename(),fl.getLine());
                   	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:837:6: ( ( public_part[aadllib] ( private_part[aadllib] )? ) | ( private_part[aadllib] ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==PUBLIC) ) {
                alt10=1;
            }
            else if ( (LA10_0==PRIVATE) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:837:8: ( public_part[aadllib] ( private_part[aadllib] )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:837:8: ( public_part[aadllib] ( private_part[aadllib] )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:837:9: public_part[aadllib] ( private_part[aadllib] )?
                    {
                    pushFollow(FOLLOW_public_part_in_package_spec562);
                    public_part(aadllib);

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                        				definedPackages.add(packname);
                           		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:841:8: ( private_part[aadllib] )?
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==PRIVATE) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:841:10: private_part[aadllib]
                            {
                            pushFollow(FOLLOW_private_part_in_package_spec584);
                            private_part(aadllib);

                            state._fsp--;
                            if (state.failed) return ;

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:844:5: ( private_part[aadllib] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:844:5: ( private_part[aadllib] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:844:6: private_part[aadllib]
                    {
                    pushFollow(FOLLOW_private_part_in_package_spec610);
                    private_part(aadllib);

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                        				definedPackages.add(packname);
                           		
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:850:4: ( PROPERTIES (pa= property_association )+ )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==PROPERTIES) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:850:5: PROPERTIES (pa= property_association )+
                    {
                    match(input,PROPERTIES,FOLLOW_PROPERTIES_in_package_spec637); if (state.failed) return ;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:851:6: (pa= property_association )+
                    int cnt11=0;
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==IDENT) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:851:7: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_package_spec647);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	               aadllib.getOwnedPropertyAssociations().add(pa);
                    	             
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt11 >= 1 ) break loop11;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(11, input);
                                throw eee;
                        }
                        cnt11++;
                    } while (true);


                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_package_spec674); if (state.failed) return ;
            pushFollow(FOLLOW_package_name_in_package_spec680);
            pname2=package_name();

            state._fsp--;
            if (state.failed) return ;
            sl=(Token)match(input,SEMI,FOLLOW_SEMI_in_package_spec684); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              	  	if (!( packname.equalsIgnoreCase(pname2) )) 
                			throw new FailedPredicateException(input, "package spec", "package name '"+packname+"' does not match end identifier '"+pname2+"'");

              		// now is safe to add it.
              		r.getContents().add(aadllib);  	
              	
            }
            if ( state.backtracking==0 ) {
               processComments(aadllib); 
            }

            }

        }
        catch (RecognitionException ex) {

                        reportError(ex);
            			consumeUntil(input,END);
            			consumeUntil(input,SEMI);
            			input.consume();
                    
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "package_spec"


    // $ANTLR start "public_part"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:878:3: public_part[AadlPackage aadllib] : p= PUBLIC ( name_visibility_declaration[pub] )* package_items[pub] ;
    public final void public_part(AadlPackage aadllib) throws RecognitionException {
        Token p=null;


              		PublicPackageSection pub = aadllib.createOwnedPublicSection();
              		processComments(pub);
              
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:883:7: (p= PUBLIC ( name_visibility_declaration[pub] )* package_items[pub] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:884:7: p= PUBLIC ( name_visibility_declaration[pub] )* package_items[pub]
            {
            p=(Token)match(input,PUBLIC,FOLLOW_PUBLIC_in_public_part756); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                    		pub.setLocationReference(this.getFilename(), p.getLine());
                    	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:888:7: ( name_visibility_declaration[pub] )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==WITH||(LA13_0>=IDENT && LA13_0<=RENAMES)) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:888:8: name_visibility_declaration[pub]
            	    {
            	    pushFollow(FOLLOW_name_visibility_declaration_in_public_part774);
            	    name_visibility_declaration(pub);

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);

            pushFollow(FOLLOW_package_items_in_public_part779);
            package_items(pub);

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "public_part"


    // $ANTLR start "private_part"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:891:3: private_part[AadlPackage aadllib] : p= PRIVATE ( name_visibility_declaration[priv] )* package_items[priv] ;
    public final void private_part(AadlPackage aadllib) throws RecognitionException {
        Token p=null;


                	PrivatePackageSection priv = aadllib.createOwnedPrivateSection();
                	processComments(priv);
              
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:896:7: (p= PRIVATE ( name_visibility_declaration[priv] )* package_items[priv] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:897:7: p= PRIVATE ( name_visibility_declaration[priv] )* package_items[priv]
            {
            p=(Token)match(input,PRIVATE,FOLLOW_PRIVATE_in_private_part825); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                    		priv.setLocationReference(this.getFilename(), p.getLine());
                    	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:901:7: ( name_visibility_declaration[priv] )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==WITH||(LA14_0>=IDENT && LA14_0<=RENAMES)) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:901:8: name_visibility_declaration[priv]
            	    {
            	    pushFollow(FOLLOW_name_visibility_declaration_in_private_part843);
            	    name_visibility_declaration(priv);

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            pushFollow(FOLLOW_package_items_in_private_part848);
            package_items(priv);

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "private_part"


    // $ANTLR start "package_items"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:905:1: package_items[PackageSection section] : ( package_item[section] )+ ;
    public final void package_items(PackageSection section) throws RecognitionException {
         
        			//Properties ps=null;
        			
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:908:6: ( ( package_item[section] )+ )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:909:8: ( package_item[section] )+
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:909:8: ( package_item[section] )+
            int cnt15=0;
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==FEATURE||LA15_0==ABSTRACT||(LA15_0>=BUS && LA15_0<=VIRTUAL)||LA15_0==ANNEX) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:909:10: package_item[section]
            	    {
            	    pushFollow(FOLLOW_package_item_in_package_items881);
            	    package_item(section);

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    if ( cnt15 >= 1 ) break loop15;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(15, input);
                        throw eee;
                }
                cnt15++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "package_items"


    // $ANTLR start "package_item"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:914:1: package_item[PackageSection section] : (ax= annex_library | cd= classifier_declaration );
    public final void package_item(PackageSection section) throws RecognitionException {
        AnnexLibrary ax = null;

        Classifier cd = null;


         
                 	//Classifier cd = null; 
                 	//AnnexLibrary ax = null; 
                 
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:920:6: (ax= annex_library | cd= classifier_declaration )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==ANNEX) ) {
                alt16=1;
            }
            else if ( (LA16_0==FEATURE||LA16_0==ABSTRACT||(LA16_0>=BUS && LA16_0<=VIRTUAL)) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:921:6: ax= annex_library
                    {
                    pushFollow(FOLLOW_annex_library_in_package_item947);
                    ax=annex_library();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       
                              	if( section.findNamedElement(ax.getName()) != null) 
                              		errReporter.error(ax.getLocationReference(),"Duplicate annex library");
                              		
                           		section.getOwnedAnnexLibraries().add(ax);
                         		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:929:2: cd= classifier_declaration
                    {
                    pushFollow(FOLLOW_classifier_declaration_in_package_item970);
                    cd=classifier_declaration();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       
                      			if (cd != null){
                      				if(section.findNamedElement(cd.getName()) != null) 
                      					errReporter.error(cd.getLocationReference(),"Duplicate component classifier");
                      				
                                   	section.getOwnedClassifiers().add(cd);
                                   }
                              
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "package_item"


    // $ANTLR start "package_name"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:957:1: package_name returns [String name] : ( (id= IDENT ) ( ( DOUBLECOLON id2= IDENT )* ) ) ;
    public final String package_name() throws RecognitionException {
        String name = null;

        Token id=null;
        Token id2=null;


          	name="";
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:961:3: ( ( (id= IDENT ) ( ( DOUBLECOLON id2= IDENT )* ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:962:3: ( (id= IDENT ) ( ( DOUBLECOLON id2= IDENT )* ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:962:3: ( (id= IDENT ) ( ( DOUBLECOLON id2= IDENT )* ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:963:3: (id= IDENT ) ( ( DOUBLECOLON id2= IDENT )* )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:963:3: (id= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:963:4: id= IDENT
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_package_name1025); if (state.failed) return name;
            if ( state.backtracking==0 ) {
               
                		name = id.getText();
                	
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:968:3: ( ( DOUBLECOLON id2= IDENT )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:969:4: ( DOUBLECOLON id2= IDENT )*
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:969:4: ( DOUBLECOLON id2= IDENT )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==DOUBLECOLON) ) {
                    int LA17_2 = input.LA(2);

                    if ( (LA17_2==IDENT) ) {
                        alt17=1;
                    }


                }


                switch (alt17) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:969:6: DOUBLECOLON id2= IDENT
            	    {
            	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_package_name1047); if (state.failed) return name;
            	    id2=(Token)match(input,IDENT,FOLLOW_IDENT_in_package_name1051); if (state.failed) return name;
            	    if ( state.backtracking==0 ) {
            	       
            	        			name = name + "::" + id2.getText();
            	        		
            	    }

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return name;
    }
    // $ANTLR end "package_name"


    // $ANTLR start "classifier_declaration"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:983:1: classifier_declaration returns [Classifier classifier] : (classifier1= component_classifier_declaration | classifier2= feature_group_type );
    public final Classifier classifier_declaration() throws RecognitionException {
        Classifier classifier = null;

        Classifier classifier1 = null;

        FeatureGroupType classifier2 = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:986:2: (classifier1= component_classifier_declaration | classifier2= feature_group_type )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==ABSTRACT||(LA18_0>=BUS && LA18_0<=VIRTUAL)) ) {
                alt18=1;
            }
            else if ( (LA18_0==FEATURE) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return classifier;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:987:2: classifier1= component_classifier_declaration
                    {
                    pushFollow(FOLLOW_component_classifier_declaration_in_classifier_declaration1102);
                    classifier1=component_classifier_declaration();

                    state._fsp--;
                    if (state.failed) return classifier;
                    if ( state.backtracking==0 ) {
                      classifier=classifier1;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:988:4: classifier2= feature_group_type
                    {
                    pushFollow(FOLLOW_feature_group_type_in_classifier_declaration1111);
                    classifier2=feature_group_type();

                    state._fsp--;
                    if (state.failed) return classifier;
                    if ( state.backtracking==0 ) {
                      classifier=classifier2;
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return classifier;
    }
    // $ANTLR end "classifier_declaration"


    // $ANTLR start "component_classifier_declaration"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:991:1: component_classifier_declaration returns [Classifier classifier] : (classifier2= component_implementation | classifier1= component_type );
    public final Classifier component_classifier_declaration() throws RecognitionException {
        Classifier classifier = null;

        ComponentImplementation classifier2 = null;

        ComponentClassifier classifier1 = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:994:2: (classifier2= component_implementation | classifier1= component_type )
            int alt19=2;
            alt19 = dfa19.predict(input);
            switch (alt19) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:995:2: classifier2= component_implementation
                    {
                    pushFollow(FOLLOW_component_implementation_in_component_classifier_declaration1137);
                    classifier2=component_implementation();

                    state._fsp--;
                    if (state.failed) return classifier;
                    if ( state.backtracking==0 ) {
                      classifier=classifier2;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:996:4: classifier1= component_type
                    {
                    pushFollow(FOLLOW_component_type_in_component_classifier_declaration1146);
                    classifier1=component_type();

                    state._fsp--;
                    if (state.failed) return classifier;
                    if ( state.backtracking==0 ) {
                      classifier= classifier1;
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return classifier;
    }
    // $ANTLR end "component_classifier_declaration"


    // $ANTLR start "component_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1000:1: component_implementation returns [ComponentImplementation aadldecl] : (tt1= abstract_implementation | tt2= thread_implementation | tt4= thread_group_implementation | tt6= system_implementation | tt8= data_implementation | tt10= subprogram_implementation | tt12= process_implementation | tt14= processor_implementation | tt16= memory_implementation | tt18= bus_implementation | tt20= device_implementation | tt21= subprogram_group_implementation | tt22= virtual_bus_implementation | tt23= virtual_processor_implementation ) ;
    public final ComponentImplementation component_implementation() throws RecognitionException {
        ComponentImplementation aadldecl = null;

        AbstractImplementation tt1 = null;

        ThreadImplementation tt2 = null;

        ThreadGroupImplementation tt4 = null;

        SystemImplementation tt6 = null;

        DataImplementation tt8 = null;

        SubprogramImplementation tt10 = null;

        ProcessImplementation tt12 = null;

        ProcessorImplementation tt14 = null;

        MemoryImplementation tt16 = null;

        BusImplementation tt18 = null;

        DeviceImplementation tt20 = null;

        SubprogramGroupImplementation tt21 = null;

        VirtualBusImplementation tt22 = null;

        VirtualProcessorImplementation tt23 = null;



        		aadldecl=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1003:3: ( (tt1= abstract_implementation | tt2= thread_implementation | tt4= thread_group_implementation | tt6= system_implementation | tt8= data_implementation | tt10= subprogram_implementation | tt12= process_implementation | tt14= processor_implementation | tt16= memory_implementation | tt18= bus_implementation | tt20= device_implementation | tt21= subprogram_group_implementation | tt22= virtual_bus_implementation | tt23= virtual_processor_implementation ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1004:4: (tt1= abstract_implementation | tt2= thread_implementation | tt4= thread_group_implementation | tt6= system_implementation | tt8= data_implementation | tt10= subprogram_implementation | tt12= process_implementation | tt14= processor_implementation | tt16= memory_implementation | tt18= bus_implementation | tt20= device_implementation | tt21= subprogram_group_implementation | tt22= virtual_bus_implementation | tt23= virtual_processor_implementation )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1004:4: (tt1= abstract_implementation | tt2= thread_implementation | tt4= thread_group_implementation | tt6= system_implementation | tt8= data_implementation | tt10= subprogram_implementation | tt12= process_implementation | tt14= processor_implementation | tt16= memory_implementation | tt18= bus_implementation | tt20= device_implementation | tt21= subprogram_group_implementation | tt22= virtual_bus_implementation | tt23= virtual_processor_implementation )
            int alt20=14;
            alt20 = dfa20.predict(input);
            switch (alt20) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1004:6: tt1= abstract_implementation
                    {
                    pushFollow(FOLLOW_abstract_implementation_in_component_implementation1178);
                    tt1=abstract_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt1;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1005:11: tt2= thread_implementation
                    {
                    pushFollow(FOLLOW_thread_implementation_in_component_implementation1196);
                    tt2=thread_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt2;
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1006:11: tt4= thread_group_implementation
                    {
                    pushFollow(FOLLOW_thread_group_implementation_in_component_implementation1214);
                    tt4=thread_group_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt4;
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1007:11: tt6= system_implementation
                    {
                    pushFollow(FOLLOW_system_implementation_in_component_implementation1232);
                    tt6=system_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt6;
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1008:11: tt8= data_implementation
                    {
                    pushFollow(FOLLOW_data_implementation_in_component_implementation1250);
                    tt8=data_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt8;
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1009:11: tt10= subprogram_implementation
                    {
                    pushFollow(FOLLOW_subprogram_implementation_in_component_implementation1268);
                    tt10=subprogram_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt10;
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1010:11: tt12= process_implementation
                    {
                    pushFollow(FOLLOW_process_implementation_in_component_implementation1286);
                    tt12=process_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt12;
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1011:11: tt14= processor_implementation
                    {
                    pushFollow(FOLLOW_processor_implementation_in_component_implementation1304);
                    tt14=processor_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt14;
                    }

                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1012:11: tt16= memory_implementation
                    {
                    pushFollow(FOLLOW_memory_implementation_in_component_implementation1322);
                    tt16=memory_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt16;
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1013:11: tt18= bus_implementation
                    {
                    pushFollow(FOLLOW_bus_implementation_in_component_implementation1340);
                    tt18=bus_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt18;
                    }

                    }
                    break;
                case 11 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1014:11: tt20= device_implementation
                    {
                    pushFollow(FOLLOW_device_implementation_in_component_implementation1358);
                    tt20=device_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt20;
                    }

                    }
                    break;
                case 12 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1015:11: tt21= subprogram_group_implementation
                    {
                    pushFollow(FOLLOW_subprogram_group_implementation_in_component_implementation1376);
                    tt21=subprogram_group_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt21;
                    }

                    }
                    break;
                case 13 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1016:11: tt22= virtual_bus_implementation
                    {
                    pushFollow(FOLLOW_virtual_bus_implementation_in_component_implementation1394);
                    tt22=virtual_bus_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt22;
                    }

                    }
                    break;
                case 14 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1017:11: tt23= virtual_processor_implementation
                    {
                    pushFollow(FOLLOW_virtual_processor_implementation_in_component_implementation1412);
                    tt23=virtual_processor_implementation();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt23;
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return aadldecl;
    }
    // $ANTLR end "component_implementation"


    // $ANTLR start "component_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1021:1: component_type returns [ComponentClassifier aadldecl] : (tt1= thread_type | tt3= thread_group_type | tt5= system_type | tt7= data_type | tt9= subprogram_type | tt11= process_type | tt13= processor_type | tt15= memory_type | tt17= bus_type | tt19= device_type | tt20= abstract_type | tt21= subprogram_group_type | tt22= virtual_bus_type | tt23= virtual_processor_type ) ;
    public final ComponentClassifier component_type() throws RecognitionException {
        ComponentClassifier aadldecl = null;

        ThreadType tt1 = null;

        ThreadGroupType tt3 = null;

        SystemType tt5 = null;

        DataType tt7 = null;

        SubprogramType tt9 = null;

        ProcessType tt11 = null;

        ProcessorType tt13 = null;

        MemoryType tt15 = null;

        BusType tt17 = null;

        DeviceType tt19 = null;

        AbstractType tt20 = null;

        SubprogramGroupType tt21 = null;

        VirtualBusType tt22 = null;

        VirtualProcessorType tt23 = null;



        		aadldecl=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1024:3: ( (tt1= thread_type | tt3= thread_group_type | tt5= system_type | tt7= data_type | tt9= subprogram_type | tt11= process_type | tt13= processor_type | tt15= memory_type | tt17= bus_type | tt19= device_type | tt20= abstract_type | tt21= subprogram_group_type | tt22= virtual_bus_type | tt23= virtual_processor_type ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1025:7: (tt1= thread_type | tt3= thread_group_type | tt5= system_type | tt7= data_type | tt9= subprogram_type | tt11= process_type | tt13= processor_type | tt15= memory_type | tt17= bus_type | tt19= device_type | tt20= abstract_type | tt21= subprogram_group_type | tt22= virtual_bus_type | tt23= virtual_processor_type )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1025:7: (tt1= thread_type | tt3= thread_group_type | tt5= system_type | tt7= data_type | tt9= subprogram_type | tt11= process_type | tt13= processor_type | tt15= memory_type | tt17= bus_type | tt19= device_type | tt20= abstract_type | tt21= subprogram_group_type | tt22= virtual_bus_type | tt23= virtual_processor_type )
            int alt21=14;
            alt21 = dfa21.predict(input);
            switch (alt21) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1025:9: tt1= thread_type
                    {
                    pushFollow(FOLLOW_thread_type_in_component_type1454);
                    tt1=thread_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt1;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1026:9: tt3= thread_group_type
                    {
                    pushFollow(FOLLOW_thread_group_type_in_component_type1471);
                    tt3=thread_group_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt3;
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1027:9: tt5= system_type
                    {
                    pushFollow(FOLLOW_system_type_in_component_type1487);
                    tt5=system_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt5;
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1028:9: tt7= data_type
                    {
                    pushFollow(FOLLOW_data_type_in_component_type1503);
                    tt7=data_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt7;
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1029:9: tt9= subprogram_type
                    {
                    pushFollow(FOLLOW_subprogram_type_in_component_type1520);
                    tt9=subprogram_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt9;
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1030:9: tt11= process_type
                    {
                    pushFollow(FOLLOW_process_type_in_component_type1536);
                    tt11=process_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt11;
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1031:9: tt13= processor_type
                    {
                    pushFollow(FOLLOW_processor_type_in_component_type1553);
                    tt13=processor_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt13;
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1032:9: tt15= memory_type
                    {
                    pushFollow(FOLLOW_memory_type_in_component_type1569);
                    tt15=memory_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt15;
                    }

                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1033:9: tt17= bus_type
                    {
                    pushFollow(FOLLOW_bus_type_in_component_type1585);
                    tt17=bus_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt17;
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1034:9: tt19= device_type
                    {
                    pushFollow(FOLLOW_device_type_in_component_type1601);
                    tt19=device_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl=tt19;
                    }

                    }
                    break;
                case 11 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1035:9: tt20= abstract_type
                    {
                    pushFollow(FOLLOW_abstract_type_in_component_type1617);
                    tt20=abstract_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl = tt20;
                    }

                    }
                    break;
                case 12 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1036:9: tt21= subprogram_group_type
                    {
                    pushFollow(FOLLOW_subprogram_group_type_in_component_type1633);
                    tt21=subprogram_group_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl = tt21;
                    }

                    }
                    break;
                case 13 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1037:9: tt22= virtual_bus_type
                    {
                    pushFollow(FOLLOW_virtual_bus_type_in_component_type1649);
                    tt22=virtual_bus_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl = tt22;
                    }

                    }
                    break;
                case 14 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1038:9: tt23= virtual_processor_type
                    {
                    pushFollow(FOLLOW_virtual_processor_type_in_component_type1665);
                    tt23=virtual_processor_type();

                    state._fsp--;
                    if (state.failed) return aadldecl;
                    if ( state.backtracking==0 ) {
                      aadldecl = tt23;
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return aadldecl;
    }
    // $ANTLR end "component_type"


    // $ANTLR start "properties_for_classifiers"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1042:1: properties_for_classifiers[ Classifier ct ] : ( PROPERTIES ( ( none_stmt ) | ( (cpa= contained_property_association )+ ) ) ) ;
    public final void properties_for_classifiers(Classifier ct) throws RecognitionException {
        PropertyAssociation cpa = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1043:2: ( ( PROPERTIES ( ( none_stmt ) | ( (cpa= contained_property_association )+ ) ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1044:3: ( PROPERTIES ( ( none_stmt ) | ( (cpa= contained_property_association )+ ) ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1044:3: ( PROPERTIES ( ( none_stmt ) | ( (cpa= contained_property_association )+ ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1044:4: PROPERTIES ( ( none_stmt ) | ( (cpa= contained_property_association )+ ) )
            {
            match(input,PROPERTIES,FOLLOW_PROPERTIES_in_properties_for_classifiers1692); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1045:4: ( ( none_stmt ) | ( (cpa= contained_property_association )+ ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==NONE) ) {
                alt23=1;
            }
            else if ( (LA23_0==IDENT) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1046:4: ( none_stmt )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1046:4: ( none_stmt )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1046:5: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_properties_for_classifiers1703);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                             // TODO: wait for this method to be put into 
                             // classifier in the meta-model
                             ct.setNoProperties(true);
                           
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1054:4: ( (cpa= contained_property_association )+ )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1054:4: ( (cpa= contained_property_association )+ )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1055:6: (cpa= contained_property_association )+
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1055:6: (cpa= contained_property_association )+
                    int cnt22=0;
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==IDENT) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1055:7: cpa= contained_property_association
                    	    {
                    	    pushFollow(FOLLOW_contained_property_association_in_properties_for_classifiers1737);
                    	    cpa=contained_property_association();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	              ct.getOwnedPropertyAssociations().add(cpa);
                    	             
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt22 >= 1 ) break loop22;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(22, input);
                                throw eee;
                        }
                        cnt22++;
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "properties_for_classifiers"


    // $ANTLR start "implementation_extension"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1065:1: implementation_extension[ComponentImplementation ci] : e= EXTENDS cr= unique_impl_name ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )? ;
    public final void implementation_extension(ComponentImplementation ci) throws RecognitionException {
        Token e=null;
        ReferenceRecord cr = null;

        PrototypeBinding pb = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1066:2: (e= EXTENDS cr= unique_impl_name ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1067:2: e= EXTENDS cr= unique_impl_name ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )?
            {
            e=(Token)match(input,EXTENDS,FOLLOW_EXTENDS_in_implementation_extension1789); if (state.failed) return ;
            pushFollow(FOLLOW_unique_impl_name_in_implementation_extension1795);
            cr=unique_impl_name();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               		  
              		  ImplementationExtension implEx = Aadl2F.createImplementationExtension();
              		  ci.setOwnedExtension(implEx);
              		  implEx.setLocationReference(this.getFilename(), e.getLine());
              		  cr.setReferencingObject(implEx);
              		  cr.setReferenceType(ParserReferenceType.ComponentImplementationExtensionReference);
              		  unresolvedReferences.add(cr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1076:3: ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==LPAREN) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1076:5: LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_implementation_extension1806); if (state.failed) return ;
                    pushFollow(FOLLOW_prototype_binding_in_implementation_extension1810);
                    pb=prototype_binding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				ci.getOwnedPrototypeBindings().add(pb);
                      			
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1080:4: ( COMMA pb= prototype_binding )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==COMMA) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1080:5: COMMA pb= prototype_binding
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_implementation_extension1821); if (state.failed) return ;
                    	    pushFollow(FOLLOW_prototype_binding_in_implementation_extension1825);
                    	    pb=prototype_binding();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					ci.getOwnedPrototypeBindings().add(pb);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_implementation_extension1842); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "implementation_extension"


    // $ANTLR start "prototypes_for_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1089:1: prototypes_for_implementation[boolean extension, ComponentImplementation ci] : PROTOTYPES ( none_stmt | ( (pt= prototype[extension] )+ ) ) ;
    public final void prototypes_for_implementation(boolean extension, ComponentImplementation ci) throws RecognitionException {
        Prototype pt = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1090:2: ( PROTOTYPES ( none_stmt | ( (pt= prototype[extension] )+ ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1091:2: PROTOTYPES ( none_stmt | ( (pt= prototype[extension] )+ ) )
            {
            match(input,PROTOTYPES,FOLLOW_PROTOTYPES_in_prototypes_for_implementation1861); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1092:3: ( none_stmt | ( (pt= prototype[extension] )+ ) )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==NONE) ) {
                alt27=1;
            }
            else if ( (LA27_0==IDENT) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1092:4: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_prototypes_for_implementation1866);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				ci.setNoPrototypes(true);
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1096:5: ( (pt= prototype[extension] )+ )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1096:5: ( (pt= prototype[extension] )+ )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1097:4: (pt= prototype[extension] )+
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1097:4: (pt= prototype[extension] )+
                    int cnt26=0;
                    loop26:
                    do {
                        int alt26=2;
                        int LA26_0 = input.LA(1);

                        if ( (LA26_0==IDENT) ) {
                            alt26=1;
                        }


                        switch (alt26) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1097:5: pt= prototype[extension]
                    	    {
                    	    pushFollow(FOLLOW_prototype_in_prototypes_for_implementation1887);
                    	    pt=prototype(extension);

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					ci.getOwnedPrototypes().add(pt);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt26 >= 1 ) break loop26;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(26, input);
                                throw eee;
                        }
                        cnt26++;
                    } while (true);


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "prototypes_for_implementation"


    // $ANTLR start "modes_for_implementations"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1106:1: modes_for_implementations[ComponentImplementation ai] : MODES ( ( none_stmt ) | ( ( (md= mode ) | (mt= mode_transition[ai] ) )+ ) ) ;
    public final void modes_for_implementations(ComponentImplementation ai) throws RecognitionException {
        Mode md = null;

        ModeTransition mt = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1107:1: ( MODES ( ( none_stmt ) | ( ( (md= mode ) | (mt= mode_transition[ai] ) )+ ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1108:1: MODES ( ( none_stmt ) | ( ( (md= mode ) | (mt= mode_transition[ai] ) )+ ) )
            {
            match(input,MODES,FOLLOW_MODES_in_modes_for_implementations1924); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1109:5: ( ( none_stmt ) | ( ( (md= mode ) | (mt= mode_transition[ai] ) )+ ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==NONE) ) {
                alt29=1;
            }
            else if ( (LA29_0==IDENT) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1110:5: ( none_stmt )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1110:5: ( none_stmt )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1110:6: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_modes_for_implementations1937);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              ai.setNoModes(true);
                            
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1116:5: ( ( (md= mode ) | (mt= mode_transition[ai] ) )+ )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1116:5: ( ( (md= mode ) | (mt= mode_transition[ai] ) )+ )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1117:5: ( (md= mode ) | (mt= mode_transition[ai] ) )+
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1117:5: ( (md= mode ) | (mt= mode_transition[ai] ) )+
                    int cnt28=0;
                    loop28:
                    do {
                        int alt28=3;
                        int LA28_0 = input.LA(1);

                        if ( (LA28_0==IDENT) ) {
                            int LA28_2 = input.LA(2);

                            if ( (LA28_2==COLON) ) {
                                int LA28_3 = input.LA(3);

                                if ( ((LA28_3>=INITIAL && LA28_3<=MODE)) ) {
                                    alt28=1;
                                }
                                else if ( (LA28_3==IDENT) ) {
                                    alt28=2;
                                }


                            }
                            else if ( (LA28_2==LTRANS) ) {
                                alt28=2;
                            }


                        }


                        switch (alt28) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1118:7: (md= mode )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1118:7: (md= mode )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1118:8: md= mode
                    	    {
                    	    pushFollow(FOLLOW_mode_in_modes_for_implementations1978);
                    	    md=mode();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	                ai.getOwnedModes().add(md);
                    	              
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1124:7: (mt= mode_transition[ai] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1124:7: (mt= mode_transition[ai] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1124:8: mt= mode_transition[ai]
                    	    {
                    	    pushFollow(FOLLOW_mode_transition_in_modes_for_implementations2016);
                    	    mt=mode_transition(ai);

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	                ai.getOwnedModeTransitions().add(mt);
                    	              
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt28 >= 1 ) break loop28;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(28, input);
                                throw eee;
                        }
                        cnt28++;
                    } while (true);


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "modes_for_implementations"


    // $ANTLR start "component_implementation_realization"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1134:1: component_implementation_realization[ComponentImplementation ci, Token typeid] : ;
    public final void component_implementation_realization(ComponentImplementation ci, Token typeid) throws RecognitionException {

          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1137:3: ()
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1138:3: 
            {
            if ( state.backtracking==0 ) {

                  Realization realization = Aadl2F.createRealization();
                  realization.setLocationReference(this.getFilename(), typeid.getLine());
                  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.RealizationReference,
                                                                              realization,
                                                                              new String[]{typeid.getText()});
                  ci.setOwnedRealization(realization);
                  unresolvedReferences.add(rr);                                                             
                
            }

            }

        }
        finally {
        }
        return ;
    }
    // $ANTLR end "component_implementation_realization"


    // $ANTLR start "connections"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1149:1: connections[ComponentImplementation ai, boolean extension] : (conn= connection[extension] )+ ;
    public final void connections(ComponentImplementation ai, boolean extension) throws RecognitionException {
        Connection conn = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1150:3: ( (conn= connection[extension] )+ )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1151:4: (conn= connection[extension] )+
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1151:4: (conn= connection[extension] )+
            int cnt30=0;
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==IDENT||LA30_0==FEATURE||(LA30_0>=BUS && LA30_0<=DATA)||LA30_0==SUBPROGRAM||LA30_0==REFINED||LA30_0==PORT||LA30_0==ACCESS||LA30_0==PARAMETER) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1151:5: conn= connection[extension]
            	    {
            	    pushFollow(FOLLOW_connection_in_connections2097);
            	    conn=connection(extension);

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	                  ai.addConnection(conn);
            	                  if (conn.getSource() != null){
            	                    if (conn.getSource() instanceof InternalEvent){
            	                      ai.getOwnedInternalEvents().add((InternalEvent)conn.getSource());
            	                    } else if (conn.getSource() instanceof ProcessorPort){
            	                      ai.getOwnedProcessorPorts().add((ProcessorPort)conn.getSource());
            	                    } else if (conn.getSource() instanceof ProcessorSubprogram){
            	                      ai.getOwnedProcessorSubprograms().add((ProcessorSubprogram) conn.getSource());
            	                    }
            	                  }
            	                  if (conn.getDestination() != null){
            	                    if (conn.getDestination() instanceof InternalEvent){
            	                      ai.getOwnedInternalEvents().add((InternalEvent)conn.getDestination());
            	                    } else if (conn.getDestination() instanceof ProcessorPort){
            	                      ai.getOwnedProcessorPorts().add((ProcessorPort)conn.getDestination());
            	                    }
            	                  }
            	                
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt30 >= 1 ) break loop30;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(30, input);
                        throw eee;
                }
                cnt30++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "connections"

    protected static class abstract_implementation_scope {
        boolean extension;
    }
    protected Stack abstract_implementation_stack = new Stack();


    // $ANTLR start "abstract_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1174:1: abstract_implementation returns [AbstractImplementation ai] : ABSTRACT IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$abstract_implementation::extension, ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$abstract_implementation::extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final AbstractImplementation abstract_implementation() throws RecognitionException {
        abstract_implementation_stack.push(new abstract_implementation_scope());
        AbstractImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        SubprogramSubcomponent ss = null;

        SubprogramGroupSubcomponent sgs = null;

        ThreadSubcomponent ts = null;

        ThreadGroupSubcomponent tgs = null;

        ProcessSubcomponent ps = null;

        ProcessorSubcomponent procs = null;

        VirtualProcessorSubcomponent vps = null;

        MemorySubcomponent ms = null;

        DeviceSubcomponent devs = null;

        SystemSubcomponent syss = null;

        AbstractSubcomponent as = null;

        BusSubcomponent bs = null;

        VirtualBusSubcomponent vbs = null;

        SubprogramCallSequence scs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



        	 ((abstract_implementation_scope)abstract_implementation_stack.peek()).extension =false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1181:2: ( ABSTRACT IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$abstract_implementation::extension, ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$abstract_implementation::extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1182:2: ABSTRACT IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$abstract_implementation::extension, ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$abstract_implementation::extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,ABSTRACT,FOLLOW_ABSTRACT_in_abstract_implementation2137); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_abstract_implementation2139); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_implementation2143); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_abstract_implementation2145); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_implementation2149); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createAbstractImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_abstract_implementation2156);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1189:2: ( implementation_extension[ai] )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==EXTENDS) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1189:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_abstract_implementation2161);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                      	   ((abstract_implementation_scope)abstract_implementation_stack.peek()).extension =true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1194:2: ( prototypes_for_implementation[$abstract_implementation::extension, ai] )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==PROTOTYPES) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1194:3: prototypes_for_implementation[$abstract_implementation::extension, ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_abstract_implementation2174);
                    prototypes_for_implementation(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1196:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==SUBCOMPONENTS) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1196:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_abstract_implementation2184); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1197:3: ( ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==IDENT) ) {
                        alt34=1;
                    }
                    else if ( (LA34_0==NONE) ) {
                        alt34=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 34, 0, input);

                        throw nvae;
                    }
                    switch (alt34) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1198:4: ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1198:4: ( ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1199:4: ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1199:4: ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+
                            int cnt33=0;
                            loop33:
                            do {
                                int alt33=15;
                                alt33 = dfa33.predict(input);
                                switch (alt33) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1200:4: (ds= data_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1200:4: (ds= data_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1200:5: ds= data_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_abstract_implementation2206);
                            	    ds=data_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1205:5: (ss= subprogram_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1205:5: (ss= subprogram_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1205:6: ss= subprogram_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_abstract_implementation2227);
                            	    ss=subprogram_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramSubcomponents().add(ss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1210:5: (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1210:5: (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1210:6: sgs= subprogram_group_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_subcomponent_in_abstract_implementation2248);
                            	    sgs=subprogram_group_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramGroupSubcomponents().add(sgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1215:5: (ts= thread_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1215:5: (ts= thread_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1215:6: ts= thread_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_thread_subcomponent_in_abstract_implementation2269);
                            	    ts=thread_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedThreadSubcomponents().add(ts);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1220:5: (tgs= thread_group_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1220:5: (tgs= thread_group_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1220:6: tgs= thread_group_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_thread_group_subcomponent_in_abstract_implementation2293);
                            	    tgs=thread_group_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedThreadGroupSubcomponents().add(tgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1225:5: (ps= process_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1225:5: (ps= process_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1225:6: ps= process_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_process_subcomponent_in_abstract_implementation2314);
                            	    ps=process_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedProcessSubcomponents().add(ps);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1230:5: (procs= processor_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1230:5: (procs= processor_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1230:6: procs= processor_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_processor_subcomponent_in_abstract_implementation2335);
                            	    procs=processor_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedProcessorSubcomponents().add(procs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1235:5: (vps= virtual_processor_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1235:5: (vps= virtual_processor_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1235:6: vps= virtual_processor_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_processor_subcomponent_in_abstract_implementation2356);
                            	    vps=virtual_processor_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualProcessorSubcomponents().add(vps);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 9 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1240:5: (ms= memory_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1240:5: (ms= memory_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1240:6: ms= memory_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_memory_subcomponent_in_abstract_implementation2377);
                            	    ms=memory_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedMemorySubcomponents().add(ms);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 10 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1245:5: (devs= device_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1245:5: (devs= device_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1245:6: devs= device_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_device_subcomponent_in_abstract_implementation2398);
                            	    devs=device_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDeviceSubcomponents().add(devs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 11 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1250:5: (syss= system_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1250:5: (syss= system_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1250:6: syss= system_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_system_subcomponent_in_abstract_implementation2419);
                            	    syss=system_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSystemSubcomponents().add(syss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 12 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1255:5: (as= abstract_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1255:5: (as= abstract_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1255:6: as= abstract_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_abstract_implementation2440);
                            	    as=abstract_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 13 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1260:5: (bs= bus_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1260:5: (bs= bus_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1260:6: bs= bus_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_subcomponent_in_abstract_implementation2461);
                            	    bs=bus_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedBusSubcomponents().add(bs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 14 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1265:5: (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1265:5: (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1265:6: vbs= virtual_bus_subcomponent[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_bus_subcomponent_in_abstract_implementation2482);
                            	    vbs=virtual_bus_subcomponent(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualBusSubcomponents().add(vbs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt33 >= 1 ) break loop33;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(33, input);
                                        throw eee;
                                }
                                cnt33++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1273:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1273:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1274:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_abstract_implementation2521);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1281:2: ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==CALLS) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1281:3: CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) )
                    {
                    match(input,CALLS,FOLLOW_CALLS_in_abstract_implementation2545); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1282:3: ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==IDENT) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==NONE) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }
                    switch (alt37) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1283:4: ( (scs= subprogram_call_sequence )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1283:4: ( (scs= subprogram_call_sequence )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1283:6: (scs= subprogram_call_sequence )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1283:6: (scs= subprogram_call_sequence )+
                            int cnt36=0;
                            loop36:
                            do {
                                int alt36=2;
                                int LA36_0 = input.LA(1);

                                if ( (LA36_0==IDENT) ) {
                                    alt36=1;
                                }


                                switch (alt36) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1283:7: scs= subprogram_call_sequence
                            	    {
                            	    pushFollow(FOLLOW_subprogram_call_sequence_in_abstract_implementation2559);
                            	    scs=subprogram_call_sequence();

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      						ai.getOwnedSubprogramCallSequences().add(scs);
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt36 >= 1 ) break loop36;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(36, input);
                                        throw eee;
                                }
                                cnt36++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1290:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1290:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1290:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_abstract_implementation2588);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              					ai.setNoCalls(true);
                              				
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1297:2: ( CONNECTIONS ( ( connections[ai,$abstract_implementation::extension] ) | ( none_stmt ) ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==CONNECTIONS) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1297:3: CONNECTIONS ( ( connections[ai,$abstract_implementation::extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_abstract_implementation2611); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1298:3: ( ( connections[ai,$abstract_implementation::extension] ) | ( none_stmt ) )
                    int alt39=2;
                    int LA39_0 = input.LA(1);

                    if ( (LA39_0==IDENT||LA39_0==FEATURE||(LA39_0>=BUS && LA39_0<=DATA)||LA39_0==SUBPROGRAM||LA39_0==REFINED||LA39_0==PORT||LA39_0==ACCESS||LA39_0==PARAMETER) ) {
                        alt39=1;
                    }
                    else if ( (LA39_0==NONE) ) {
                        alt39=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 39, 0, input);

                        throw nvae;
                    }
                    switch (alt39) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1299:4: ( connections[ai,$abstract_implementation::extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1299:4: ( connections[ai,$abstract_implementation::extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1299:5: connections[ai,$abstract_implementation::extension]
                            {
                            pushFollow(FOLLOW_connections_in_abstract_implementation2621);
                            connections(ai, ((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1302:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1302:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1303:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_abstract_implementation2643);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1310:2: ( FLOWS ( ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==FLOWS) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1310:3: FLOWS ( ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_abstract_implementation2667); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1311:3: ( ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==IDENT) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==NONE) ) {
                        alt42=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 42, 0, input);

                        throw nvae;
                    }
                    switch (alt42) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1312:4: ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1312:4: ( ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1313:5: ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1313:5: ( (fi= flow_implementation[$abstract_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] ) )+
                            int cnt41=0;
                            loop41:
                            do {
                                int alt41=3;
                                int LA41_0 = input.LA(1);

                                if ( (LA41_0==IDENT) ) {
                                    int LA41_2 = input.LA(2);

                                    if ( (LA41_2==COLON) ) {
                                        int LA41_3 = input.LA(3);

                                        if ( (LA41_3==FLOW) ) {
                                            alt41=1;
                                        }
                                        else if ( (LA41_3==END||LA41_3==REFINED) ) {
                                            alt41=2;
                                        }


                                    }


                                }


                                switch (alt41) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1314:6: (fi= flow_implementation[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1314:6: (fi= flow_implementation[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1314:7: fi= flow_implementation[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_abstract_implementation2692);
                            	    fi=flow_implementation(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1320:6: (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1320:6: (e2e= end_to_end_flow_implementation[$abstract_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1320:7: e2e= end_to_end_flow_implementation[$abstract_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_abstract_implementation2724);
                            	    e2e=end_to_end_flow_implementation(((abstract_implementation_scope)abstract_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt41 >= 1 ) break loop41;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(41, input);
                                        throw eee;
                                }
                                cnt41++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1328:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1328:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1329:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_abstract_implementation2769);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1336:2: ( modes_for_implementations[ai] )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==MODES) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1336:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_abstract_implementation2793);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1338:2: ( properties_for_classifiers[ai] )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==PROPERTIES) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1338:3: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_abstract_implementation2802);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1340:2: (asub= annex_subclause )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==ANNEX) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1340:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_abstract_implementation2813);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_abstract_implementation2824); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_implementation2828); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_abstract_implementation2830); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_implementation2834); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"abstract implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_abstract_implementation2841); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
            abstract_implementation_stack.pop();
        }
        return ai;
    }
    // $ANTLR end "abstract_implementation"

    protected static class bus_implementation_scope {
        boolean extension;
    }
    protected Stack bus_implementation_stack = new Stack();


    // $ANTLR start "bus_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1360:1: bus_implementation returns [BusImplementation ai] : BUS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$bus_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final BusImplementation bus_implementation() throws RecognitionException {
        bus_implementation_stack.push(new bus_implementation_scope());
        BusImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        VirtualBusSubcomponent vbs = null;

        AbstractSubcomponent as = null;

        AnnexSubclause asub = null;



        	((bus_implementation_scope)bus_implementation_stack.peek()).extension =false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1367:2: ( BUS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$bus_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1368:2: BUS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$bus_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,BUS,FOLLOW_BUS_in_bus_implementation2882); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_bus_implementation2884); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_implementation2888); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_bus_implementation2890); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_implementation2894); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createBusImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_bus_implementation2902);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1376:2: ( implementation_extension[ai] )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==EXTENDS) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1376:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_bus_implementation2909);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                      	   ((bus_implementation_scope)bus_implementation_stack.peek()).extension =true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1381:2: ( prototypes_for_implementation[$bus_implementation::extension,ai] )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==PROTOTYPES) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1381:3: prototypes_for_implementation[$bus_implementation::extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_bus_implementation2922);
                    prototypes_for_implementation(((bus_implementation_scope)bus_implementation_stack.peek()).extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1383:2: ( SUBCOMPONENTS ( ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==SUBCOMPONENTS) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1383:4: SUBCOMPONENTS ( ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_bus_implementation2932); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1384:3: ( ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==IDENT) ) {
                        alt50=1;
                    }
                    else if ( (LA50_0==NONE) ) {
                        alt50=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 50, 0, input);

                        throw nvae;
                    }
                    switch (alt50) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1385:4: ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1385:4: ( ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1386:4: ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1386:4: ( (vbs= virtual_bus_subcomponent[$bus_implementation::extension] ) | (as= abstract_subcomponent[$bus_implementation::extension] ) )+
                            int cnt49=0;
                            loop49:
                            do {
                                int alt49=3;
                                int LA49_0 = input.LA(1);

                                if ( (LA49_0==IDENT) ) {
                                    int LA49_2 = input.LA(2);

                                    if ( (LA49_2==COLON) ) {
                                        switch ( input.LA(3) ) {
                                        case REFINED:
                                            {
                                            int LA49_4 = input.LA(4);

                                            if ( (LA49_4==TO) ) {
                                                int LA49_7 = input.LA(5);

                                                if ( (LA49_7==VIRTUAL) ) {
                                                    alt49=1;
                                                }
                                                else if ( (LA49_7==ABSTRACT) ) {
                                                    alt49=2;
                                                }


                                            }


                                            }
                                            break;
                                        case VIRTUAL:
                                            {
                                            alt49=1;
                                            }
                                            break;
                                        case ABSTRACT:
                                            {
                                            alt49=2;
                                            }
                                            break;

                                        }

                                    }


                                }


                                switch (alt49) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1387:4: (vbs= virtual_bus_subcomponent[$bus_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1387:4: (vbs= virtual_bus_subcomponent[$bus_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1387:5: vbs= virtual_bus_subcomponent[$bus_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_bus_subcomponent_in_bus_implementation2954);
                            	    vbs=virtual_bus_subcomponent(((bus_implementation_scope)bus_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualBusSubcomponents().add(vbs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1392:5: (as= abstract_subcomponent[$bus_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1392:5: (as= abstract_subcomponent[$bus_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1392:6: as= abstract_subcomponent[$bus_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_bus_implementation2975);
                            	    as=abstract_subcomponent(((bus_implementation_scope)bus_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt49 >= 1 ) break loop49;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(49, input);
                                        throw eee;
                                }
                                cnt49++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1400:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1400:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1401:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_bus_implementation3014);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1408:2: ( modes_for_implementations[ai] )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==MODES) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1408:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_bus_implementation3038);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1410:3: ( properties_for_classifiers[ai] )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==PROPERTIES) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1410:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_bus_implementation3048);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1412:2: (asub= annex_subclause )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==ANNEX) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1412:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_bus_implementation3060);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_bus_implementation3071); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_implementation3075); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_bus_implementation3077); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_implementation3081); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"bus implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_bus_implementation3088); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
            bus_implementation_stack.pop();
        }
        return ai;
    }
    // $ANTLR end "bus_implementation"

    protected static class data_implementation_scope {
        boolean extension;
    }
    protected Stack data_implementation_stack = new Stack();


    // $ANTLR start "data_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1432:1: data_implementation returns [DataImplementation ai] : DATA IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$data_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$data_implementation::extension] ) | ( none_stmt ) ) )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final DataImplementation data_implementation() throws RecognitionException {
        data_implementation_stack.push(new data_implementation_scope());
        DataImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        SubprogramSubcomponent ss = null;

        AbstractSubcomponent as = null;

        AnnexSubclause asub = null;



           ((data_implementation_scope)data_implementation_stack.peek()).extension =false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1439:2: ( DATA IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$data_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$data_implementation::extension] ) | ( none_stmt ) ) )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1440:2: DATA IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$data_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$data_implementation::extension] ) | ( none_stmt ) ) )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,DATA,FOLLOW_DATA_in_data_implementation3129); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_data_implementation3131); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_implementation3135); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_data_implementation3137); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_implementation3141); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createDataImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_data_implementation3149);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1447:2: ( implementation_extension[ai] )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==EXTENDS) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1447:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_data_implementation3155);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                      	   ((data_implementation_scope)data_implementation_stack.peek()).extension =true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1452:2: ( prototypes_for_implementation[$data_implementation::extension,ai] )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==PROTOTYPES) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1452:3: prototypes_for_implementation[$data_implementation::extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_data_implementation3168);
                    prototypes_for_implementation(((data_implementation_scope)data_implementation_stack.peek()).extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1454:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==SUBCOMPONENTS) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1454:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_data_implementation3178); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1455:3: ( ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==IDENT) ) {
                        alt58=1;
                    }
                    else if ( (LA58_0==NONE) ) {
                        alt58=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 58, 0, input);

                        throw nvae;
                    }
                    switch (alt58) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1456:4: ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1456:4: ( ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1457:4: ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1457:4: ( (ds= data_subcomponent[$data_implementation::extension] ) | (ss= subprogram_subcomponent[$data_implementation::extension] ) | (as= abstract_subcomponent[$data_implementation::extension] ) )+
                            int cnt57=0;
                            loop57:
                            do {
                                int alt57=4;
                                int LA57_0 = input.LA(1);

                                if ( (LA57_0==IDENT) ) {
                                    int LA57_2 = input.LA(2);

                                    if ( (LA57_2==COLON) ) {
                                        switch ( input.LA(3) ) {
                                        case REFINED:
                                            {
                                            int LA57_4 = input.LA(4);

                                            if ( (LA57_4==TO) ) {
                                                switch ( input.LA(5) ) {
                                                case DATA:
                                                    {
                                                    alt57=1;
                                                    }
                                                    break;
                                                case SUBPROGRAM:
                                                    {
                                                    alt57=2;
                                                    }
                                                    break;
                                                case ABSTRACT:
                                                    {
                                                    alt57=3;
                                                    }
                                                    break;

                                                }

                                            }


                                            }
                                            break;
                                        case DATA:
                                            {
                                            alt57=1;
                                            }
                                            break;
                                        case SUBPROGRAM:
                                            {
                                            alt57=2;
                                            }
                                            break;
                                        case ABSTRACT:
                                            {
                                            alt57=3;
                                            }
                                            break;

                                        }

                                    }


                                }


                                switch (alt57) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1458:4: (ds= data_subcomponent[$data_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1458:4: (ds= data_subcomponent[$data_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1458:5: ds= data_subcomponent[$data_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_data_implementation3200);
                            	    ds=data_subcomponent(((data_implementation_scope)data_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1463:5: (ss= subprogram_subcomponent[$data_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1463:5: (ss= subprogram_subcomponent[$data_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1463:6: ss= subprogram_subcomponent[$data_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_data_implementation3221);
                            	    ss=subprogram_subcomponent(((data_implementation_scope)data_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	                ai.getOwnedSubprogramSubcomponents().add(ss);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1468:5: (as= abstract_subcomponent[$data_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1468:5: (as= abstract_subcomponent[$data_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1468:6: as= abstract_subcomponent[$data_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_data_implementation3249);
                            	    as=abstract_subcomponent(((data_implementation_scope)data_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt57 >= 1 ) break loop57;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(57, input);
                                        throw eee;
                                }
                                cnt57++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1476:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1476:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1477:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_data_implementation3288);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1484:2: ( CONNECTIONS ( ( connections[ai,$data_implementation::extension] ) | ( none_stmt ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==CONNECTIONS) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1484:3: CONNECTIONS ( ( connections[ai,$data_implementation::extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_data_implementation3312); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1485:3: ( ( connections[ai,$data_implementation::extension] ) | ( none_stmt ) )
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==IDENT||LA60_0==FEATURE||(LA60_0>=BUS && LA60_0<=DATA)||LA60_0==SUBPROGRAM||LA60_0==REFINED||LA60_0==PORT||LA60_0==ACCESS||LA60_0==PARAMETER) ) {
                        alt60=1;
                    }
                    else if ( (LA60_0==NONE) ) {
                        alt60=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 0, input);

                        throw nvae;
                    }
                    switch (alt60) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1486:4: ( connections[ai,$data_implementation::extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1486:4: ( connections[ai,$data_implementation::extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1487:5: connections[ai,$data_implementation::extension]
                            {
                            pushFollow(FOLLOW_connections_in_data_implementation3327);
                            connections(ai, ((data_implementation_scope)data_implementation_stack.peek()).extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1490:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1490:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1491:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_data_implementation3349);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1498:3: ( properties_for_classifiers[ai] )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==PROPERTIES) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1498:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_data_implementation3374);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1500:2: (asub= annex_subclause )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==ANNEX) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1500:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_data_implementation3386);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_data_implementation3397); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_implementation3401); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_data_implementation3403); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_implementation3407); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"data implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_data_implementation3414); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
            data_implementation_stack.pop();
        }
        return ai;
    }
    // $ANTLR end "data_implementation"


    // $ANTLR start "device_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1520:1: device_implementation returns [DeviceImplementation ai] : DEVICE IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final DeviceImplementation device_implementation() throws RecognitionException {
        DeviceImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        BusSubcomponent bs = null;

        AbstractSubcomponent as = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1524:2: ( DEVICE IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1525:2: DEVICE IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,DEVICE,FOLLOW_DEVICE_in_device_implementation3450); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_device_implementation3452); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_implementation3456); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_device_implementation3458); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_implementation3462); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createDeviceImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_device_implementation3470);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1533:2: ( implementation_extension[ai] )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==EXTENDS) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1533:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_device_implementation3477);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1538:2: ( prototypes_for_implementation[extension,ai] )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==PROTOTYPES) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1538:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_device_implementation3490);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1540:2: ( SUBCOMPONENTS ( ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==SUBCOMPONENTS) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1540:4: SUBCOMPONENTS ( ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_device_implementation3500); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1541:3: ( ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==IDENT) ) {
                        alt67=1;
                    }
                    else if ( (LA67_0==NONE) ) {
                        alt67=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 67, 0, input);

                        throw nvae;
                    }
                    switch (alt67) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1542:4: ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1542:4: ( ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1543:5: ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1543:5: ( (bs= bus_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            int cnt66=0;
                            loop66:
                            do {
                                int alt66=3;
                                int LA66_0 = input.LA(1);

                                if ( (LA66_0==IDENT) ) {
                                    int LA66_2 = input.LA(2);

                                    if ( (LA66_2==COLON) ) {
                                        switch ( input.LA(3) ) {
                                        case REFINED:
                                            {
                                            int LA66_4 = input.LA(4);

                                            if ( (LA66_4==TO) ) {
                                                int LA66_7 = input.LA(5);

                                                if ( (LA66_7==BUS) ) {
                                                    alt66=1;
                                                }
                                                else if ( (LA66_7==ABSTRACT) ) {
                                                    alt66=2;
                                                }


                                            }


                                            }
                                            break;
                                        case BUS:
                                            {
                                            alt66=1;
                                            }
                                            break;
                                        case ABSTRACT:
                                            {
                                            alt66=2;
                                            }
                                            break;

                                        }

                                    }


                                }


                                switch (alt66) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1544:6: (bs= bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1544:6: (bs= bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1544:7: bs= bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_subcomponent_in_device_implementation3525);
                            	    bs=bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedBusSubcomponents().add(bs);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1550:6: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1550:6: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1550:7: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_device_implementation3557);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedAbstractSubcomponents().add(as);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt66 >= 1 ) break loop66;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(66, input);
                                        throw eee;
                                }
                                cnt66++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1558:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1558:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1559:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_device_implementation3601);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1566:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==CONNECTIONS) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1566:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_device_implementation3625); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1567:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==IDENT||LA69_0==FEATURE||(LA69_0>=BUS && LA69_0<=DATA)||LA69_0==SUBPROGRAM||LA69_0==REFINED||LA69_0==PORT||LA69_0==ACCESS||LA69_0==PARAMETER) ) {
                        alt69=1;
                    }
                    else if ( (LA69_0==NONE) ) {
                        alt69=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 69, 0, input);

                        throw nvae;
                    }
                    switch (alt69) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1568:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1568:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1569:9: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_device_implementation3644);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1572:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1572:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1573:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_device_implementation3666);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1580:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==FLOWS) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1580:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_device_implementation3690); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1581:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==IDENT) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==NONE) ) {
                        alt72=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 0, input);

                        throw nvae;
                    }
                    switch (alt72) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1582:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1582:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1583:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1583:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt71=0;
                            loop71:
                            do {
                                int alt71=3;
                                int LA71_0 = input.LA(1);

                                if ( (LA71_0==IDENT) ) {
                                    int LA71_2 = input.LA(2);

                                    if ( (LA71_2==COLON) ) {
                                        int LA71_3 = input.LA(3);

                                        if ( (LA71_3==FLOW) ) {
                                            alt71=1;
                                        }
                                        else if ( (LA71_3==END||LA71_3==REFINED) ) {
                                            alt71=2;
                                        }


                                    }


                                }


                                switch (alt71) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1584:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1584:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1584:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_device_implementation3715);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1590:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1590:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1590:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_device_implementation3747);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt71 >= 1 ) break loop71;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(71, input);
                                        throw eee;
                                }
                                cnt71++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1598:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1598:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1599:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_device_implementation3792);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1606:2: ( modes_for_implementations[ai] )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==MODES) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1606:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_device_implementation3816);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1608:3: ( properties_for_classifiers[ai] )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==PROPERTIES) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1608:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_device_implementation3826);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1610:2: (asub= annex_subclause )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==ANNEX) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1610:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_device_implementation3838);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_device_implementation3849); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_implementation3853); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_device_implementation3855); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_implementation3859); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"device implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_device_implementation3866); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "device_implementation"

    protected static class memory_implementation_scope {
        boolean extension;
    }
    protected Stack memory_implementation_stack = new Stack();


    // $ANTLR start "memory_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1631:1: memory_implementation returns [ MemoryImplementation ai] : MEMORY IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$memory_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$memory_implementation::extension] ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final MemoryImplementation memory_implementation() throws RecognitionException {
        memory_implementation_stack.push(new memory_implementation_scope());
        MemoryImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        MemorySubcomponent ms = null;

        AbstractSubcomponent as = null;

        BusSubcomponent bs = null;

        AnnexSubclause asub = null;



           ((memory_implementation_scope)memory_implementation_stack.peek()).extension =false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1638:2: ( MEMORY IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$memory_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$memory_implementation::extension] ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1639:2: MEMORY IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$memory_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$memory_implementation::extension] ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,MEMORY,FOLLOW_MEMORY_in_memory_implementation3908); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_memory_implementation3910); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_implementation3914); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_memory_implementation3916); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_implementation3920); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createMemoryImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_memory_implementation3928);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1647:2: ( implementation_extension[ai] )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==EXTENDS) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1647:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_memory_implementation3935);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            ((memory_implementation_scope)memory_implementation_stack.peek()).extension =true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1652:2: ( prototypes_for_implementation[$memory_implementation::extension,ai] )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==PROTOTYPES) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1652:3: prototypes_for_implementation[$memory_implementation::extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_memory_implementation3950);
                    prototypes_for_implementation(((memory_implementation_scope)memory_implementation_stack.peek()).extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1654:2: ( SUBCOMPONENTS ( ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==SUBCOMPONENTS) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1654:4: SUBCOMPONENTS ( ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_memory_implementation3960); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1655:3: ( ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==IDENT) ) {
                        alt80=1;
                    }
                    else if ( (LA80_0==NONE) ) {
                        alt80=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 0, input);

                        throw nvae;
                    }
                    switch (alt80) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1656:4: ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1656:4: ( ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1657:4: ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1657:4: ( (ms= memory_subcomponent[$memory_implementation::extension] ) | (as= abstract_subcomponent[$memory_implementation::extension] ) | (bs= bus_subcomponent[$memory_implementation::extension] ) )+
                            int cnt79=0;
                            loop79:
                            do {
                                int alt79=4;
                                int LA79_0 = input.LA(1);

                                if ( (LA79_0==IDENT) ) {
                                    int LA79_2 = input.LA(2);

                                    if ( (LA79_2==COLON) ) {
                                        switch ( input.LA(3) ) {
                                        case REFINED:
                                            {
                                            int LA79_4 = input.LA(4);

                                            if ( (LA79_4==TO) ) {
                                                switch ( input.LA(5) ) {
                                                case MEMORY:
                                                    {
                                                    alt79=1;
                                                    }
                                                    break;
                                                case ABSTRACT:
                                                    {
                                                    alt79=2;
                                                    }
                                                    break;
                                                case BUS:
                                                    {
                                                    alt79=3;
                                                    }
                                                    break;

                                                }

                                            }


                                            }
                                            break;
                                        case MEMORY:
                                            {
                                            alt79=1;
                                            }
                                            break;
                                        case ABSTRACT:
                                            {
                                            alt79=2;
                                            }
                                            break;
                                        case BUS:
                                            {
                                            alt79=3;
                                            }
                                            break;

                                        }

                                    }


                                }


                                switch (alt79) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1658:4: (ms= memory_subcomponent[$memory_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1658:4: (ms= memory_subcomponent[$memory_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1658:5: ms= memory_subcomponent[$memory_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_memory_subcomponent_in_memory_implementation3982);
                            	    ms=memory_subcomponent(((memory_implementation_scope)memory_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedMemorySubcomponents().add(ms);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1663:5: (as= abstract_subcomponent[$memory_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1663:5: (as= abstract_subcomponent[$memory_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1663:6: as= abstract_subcomponent[$memory_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_memory_implementation4003);
                            	    as=abstract_subcomponent(((memory_implementation_scope)memory_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1668:5: (bs= bus_subcomponent[$memory_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1668:5: (bs= bus_subcomponent[$memory_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1668:6: bs= bus_subcomponent[$memory_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_subcomponent_in_memory_implementation4024);
                            	    bs=bus_subcomponent(((memory_implementation_scope)memory_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedBusSubcomponents().add(bs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt79 >= 1 ) break loop79;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(79, input);
                                        throw eee;
                                }
                                cnt79++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1676:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1676:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1677:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_memory_implementation4063);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1684:2: ( CONNECTIONS ( ( connections[ai,$memory_implementation::extension] ) | ( none_stmt ) ) )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==CONNECTIONS) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1684:3: CONNECTIONS ( ( connections[ai,$memory_implementation::extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_memory_implementation4087); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1685:3: ( ( connections[ai,$memory_implementation::extension] ) | ( none_stmt ) )
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==IDENT||LA82_0==FEATURE||(LA82_0>=BUS && LA82_0<=DATA)||LA82_0==SUBPROGRAM||LA82_0==REFINED||LA82_0==PORT||LA82_0==ACCESS||LA82_0==PARAMETER) ) {
                        alt82=1;
                    }
                    else if ( (LA82_0==NONE) ) {
                        alt82=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 82, 0, input);

                        throw nvae;
                    }
                    switch (alt82) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1686:4: ( connections[ai,$memory_implementation::extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1686:4: ( connections[ai,$memory_implementation::extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1687:5: connections[ai,$memory_implementation::extension]
                            {
                            pushFollow(FOLLOW_connections_in_memory_implementation4103);
                            connections(ai, ((memory_implementation_scope)memory_implementation_stack.peek()).extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1690:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1690:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1691:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_memory_implementation4125);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1698:2: ( modes_for_implementations[ai] )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==MODES) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1698:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_memory_implementation4149);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1700:3: ( properties_for_classifiers[ai] )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==PROPERTIES) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1700:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_memory_implementation4159);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1702:2: (asub= annex_subclause )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==ANNEX) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1702:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_memory_implementation4171);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_memory_implementation4182); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_implementation4186); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_memory_implementation4188); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_implementation4192); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"memory implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_memory_implementation4199); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
            memory_implementation_stack.pop();
        }
        return ai;
    }
    // $ANTLR end "memory_implementation"

    protected static class process_implementation_scope {
        boolean extension;
    }
    protected Stack process_implementation_stack = new Stack();


    // $ANTLR start "process_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1722:1: process_implementation returns [ ProcessImplementation ai ] : PROCESS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$process_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$process_implementation::extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final ProcessImplementation process_implementation() throws RecognitionException {
        process_implementation_stack.push(new process_implementation_scope());
        ProcessImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        SubprogramSubcomponent ss = null;

        SubprogramGroupSubcomponent sgs = null;

        ThreadSubcomponent ts = null;

        ThreadGroupSubcomponent tgs = null;

        AbstractSubcomponent as = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           ((process_implementation_scope)process_implementation_stack.peek()).extension =false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1729:2: ( PROCESS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$process_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$process_implementation::extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1730:2: PROCESS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[$process_implementation::extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,$process_implementation::extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,PROCESS,FOLLOW_PROCESS_in_process_implementation4240); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_process_implementation4242); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_implementation4246); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_process_implementation4248); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_implementation4252); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createProcessImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_process_implementation4260);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1738:2: ( implementation_extension[ai] )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==EXTENDS) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1738:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_process_implementation4267);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            ((process_implementation_scope)process_implementation_stack.peek()).extension =true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1743:2: ( prototypes_for_implementation[$process_implementation::extension,ai] )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==PROTOTYPES) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1743:3: prototypes_for_implementation[$process_implementation::extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_process_implementation4282);
                    prototypes_for_implementation(((process_implementation_scope)process_implementation_stack.peek()).extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1745:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==SUBCOMPONENTS) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1745:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_process_implementation4292); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1746:3: ( ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==IDENT) ) {
                        alt90=1;
                    }
                    else if ( (LA90_0==NONE) ) {
                        alt90=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 90, 0, input);

                        throw nvae;
                    }
                    switch (alt90) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1747:4: ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1747:4: ( ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1748:4: ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1748:4: ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+
                            int cnt89=0;
                            loop89:
                            do {
                                int alt89=7;
                                alt89 = dfa89.predict(input);
                                switch (alt89) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1749:4: (ds= data_subcomponent[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1749:4: (ds= data_subcomponent[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1749:5: ds= data_subcomponent[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_process_implementation4314);
                            	    ds=data_subcomponent(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1754:5: (ss= subprogram_subcomponent[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1754:5: (ss= subprogram_subcomponent[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1754:6: ss= subprogram_subcomponent[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_process_implementation4335);
                            	    ss=subprogram_subcomponent(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramSubcomponents().add(ss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1759:5: (sgs= subprogram_group_subcomponent[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1759:5: (sgs= subprogram_group_subcomponent[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1759:6: sgs= subprogram_group_subcomponent[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_subcomponent_in_process_implementation4356);
                            	    sgs=subprogram_group_subcomponent(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramGroupSubcomponents().add(sgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1764:5: (ts= thread_subcomponent[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1764:5: (ts= thread_subcomponent[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1764:6: ts= thread_subcomponent[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_thread_subcomponent_in_process_implementation4377);
                            	    ts=thread_subcomponent(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedThreadSubcomponents().add(ts);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1769:5: (tgs= thread_group_subcomponent[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1769:5: (tgs= thread_group_subcomponent[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1769:6: tgs= thread_group_subcomponent[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_thread_group_subcomponent_in_process_implementation4401);
                            	    tgs=thread_group_subcomponent(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedThreadGroupSubcomponents().add(tgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1774:5: (as= abstract_subcomponent[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1774:5: (as= abstract_subcomponent[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1774:6: as= abstract_subcomponent[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_process_implementation4422);
                            	    as=abstract_subcomponent(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt89 >= 1 ) break loop89;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(89, input);
                                        throw eee;
                                }
                                cnt89++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1782:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1782:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1783:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_process_implementation4461);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1790:2: ( CONNECTIONS ( ( connections[ai,$process_implementation::extension] ) | ( none_stmt ) ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==CONNECTIONS) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1790:3: CONNECTIONS ( ( connections[ai,$process_implementation::extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_process_implementation4485); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1791:3: ( ( connections[ai,$process_implementation::extension] ) | ( none_stmt ) )
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==IDENT||LA92_0==FEATURE||(LA92_0>=BUS && LA92_0<=DATA)||LA92_0==SUBPROGRAM||LA92_0==REFINED||LA92_0==PORT||LA92_0==ACCESS||LA92_0==PARAMETER) ) {
                        alt92=1;
                    }
                    else if ( (LA92_0==NONE) ) {
                        alt92=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 92, 0, input);

                        throw nvae;
                    }
                    switch (alt92) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1792:4: ( connections[ai,$process_implementation::extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1792:4: ( connections[ai,$process_implementation::extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1793:5: connections[ai,$process_implementation::extension]
                            {
                            pushFollow(FOLLOW_connections_in_process_implementation4500);
                            connections(ai, ((process_implementation_scope)process_implementation_stack.peek()).extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1796:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1796:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1797:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_process_implementation4522);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1804:2: ( FLOWS ( ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ ) | ( none_stmt ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==FLOWS) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1804:3: FLOWS ( ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_process_implementation4546); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1805:3: ( ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ ) | ( none_stmt ) )
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==IDENT) ) {
                        alt95=1;
                    }
                    else if ( (LA95_0==NONE) ) {
                        alt95=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 95, 0, input);

                        throw nvae;
                    }
                    switch (alt95) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1806:4: ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1806:4: ( ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1807:5: ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1807:5: ( (fi= flow_implementation[$process_implementation::extension] ) | (e2e= end_to_end_flow_implementation[$process_implementation::extension] ) )+
                            int cnt94=0;
                            loop94:
                            do {
                                int alt94=3;
                                int LA94_0 = input.LA(1);

                                if ( (LA94_0==IDENT) ) {
                                    int LA94_2 = input.LA(2);

                                    if ( (LA94_2==COLON) ) {
                                        int LA94_3 = input.LA(3);

                                        if ( (LA94_3==FLOW) ) {
                                            alt94=1;
                                        }
                                        else if ( (LA94_3==END||LA94_3==REFINED) ) {
                                            alt94=2;
                                        }


                                    }


                                }


                                switch (alt94) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1808:6: (fi= flow_implementation[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1808:6: (fi= flow_implementation[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1808:7: fi= flow_implementation[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_process_implementation4571);
                            	    fi=flow_implementation(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1814:6: (e2e= end_to_end_flow_implementation[$process_implementation::extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1814:6: (e2e= end_to_end_flow_implementation[$process_implementation::extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1814:7: e2e= end_to_end_flow_implementation[$process_implementation::extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_process_implementation4603);
                            	    e2e=end_to_end_flow_implementation(((process_implementation_scope)process_implementation_stack.peek()).extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt94 >= 1 ) break loop94;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(94, input);
                                        throw eee;
                                }
                                cnt94++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1822:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1822:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1823:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_process_implementation4648);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1830:2: ( modes_for_implementations[ai] )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==MODES) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1830:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_process_implementation4672);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1832:3: ( properties_for_classifiers[ai] )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==PROPERTIES) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1832:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_process_implementation4682);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1834:2: (asub= annex_subclause )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==ANNEX) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1834:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_process_implementation4694);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_process_implementation4705); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_implementation4709); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_process_implementation4711); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_implementation4715); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"process implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_process_implementation4722); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
            process_implementation_stack.pop();
        }
        return ai;
    }
    // $ANTLR end "process_implementation"


    // $ANTLR start "processor_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1854:1: processor_implementation returns [ ProcessorImplementation ai] : PROCESSOR IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final ProcessorImplementation processor_implementation() throws RecognitionException {
        ProcessorImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        VirtualProcessorSubcomponent vps = null;

        MemorySubcomponent ms = null;

        AbstractSubcomponent as = null;

        BusSubcomponent bs = null;

        VirtualBusSubcomponent vbs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1858:2: ( PROCESSOR IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1859:2: PROCESSOR IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_processor_implementation4758); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_processor_implementation4760); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_implementation4764); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_processor_implementation4766); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_implementation4770); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createProcessorImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_processor_implementation4778);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1867:2: ( implementation_extension[ai] )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==EXTENDS) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1867:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_processor_implementation4785);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension = true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1872:2: ( prototypes_for_implementation[extension,ai] )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==PROTOTYPES) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1872:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_processor_implementation4800);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1874:2: ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==SUBCOMPONENTS) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1874:4: SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_processor_implementation4810); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1875:3: ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==IDENT) ) {
                        alt103=1;
                    }
                    else if ( (LA103_0==NONE) ) {
                        alt103=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 103, 0, input);

                        throw nvae;
                    }
                    switch (alt103) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1876:4: ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1876:4: ( ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1877:4: ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1877:4: ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+
                            int cnt102=0;
                            loop102:
                            do {
                                int alt102=6;
                                alt102 = dfa102.predict(input);
                                switch (alt102) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1878:4: (vps= virtual_processor_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1878:4: (vps= virtual_processor_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1878:5: vps= virtual_processor_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_processor_subcomponent_in_processor_implementation4832);
                            	    vps=virtual_processor_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualProcessorSubcomponents().add(vps);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1883:5: (ms= memory_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1883:5: (ms= memory_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1883:6: ms= memory_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_memory_subcomponent_in_processor_implementation4853);
                            	    ms=memory_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedMemorySubcomponents().add(ms);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1888:5: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1888:5: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1888:6: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_processor_implementation4874);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1893:5: (bs= bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1893:5: (bs= bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1893:6: bs= bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_subcomponent_in_processor_implementation4895);
                            	    bs=bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedBusSubcomponents().add(bs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1898:5: (vbs= virtual_bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1898:5: (vbs= virtual_bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1898:6: vbs= virtual_bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_bus_subcomponent_in_processor_implementation4916);
                            	    vbs=virtual_bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualBusSubcomponents().add(vbs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt102 >= 1 ) break loop102;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(102, input);
                                        throw eee;
                                }
                                cnt102++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1906:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1906:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1907:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_processor_implementation4955);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1914:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==CONNECTIONS) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1914:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_processor_implementation4979); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1915:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==IDENT||LA105_0==FEATURE||(LA105_0>=BUS && LA105_0<=DATA)||LA105_0==SUBPROGRAM||LA105_0==REFINED||LA105_0==PORT||LA105_0==ACCESS||LA105_0==PARAMETER) ) {
                        alt105=1;
                    }
                    else if ( (LA105_0==NONE) ) {
                        alt105=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 105, 0, input);

                        throw nvae;
                    }
                    switch (alt105) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1916:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1916:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1917:5: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_processor_implementation4994);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1920:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1920:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1921:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_processor_implementation5016);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1928:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==FLOWS) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1928:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_processor_implementation5040); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1929:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt108=2;
                    int LA108_0 = input.LA(1);

                    if ( (LA108_0==IDENT) ) {
                        alt108=1;
                    }
                    else if ( (LA108_0==NONE) ) {
                        alt108=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 108, 0, input);

                        throw nvae;
                    }
                    switch (alt108) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1930:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1930:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1931:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1931:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt107=0;
                            loop107:
                            do {
                                int alt107=3;
                                int LA107_0 = input.LA(1);

                                if ( (LA107_0==IDENT) ) {
                                    int LA107_2 = input.LA(2);

                                    if ( (LA107_2==COLON) ) {
                                        int LA107_3 = input.LA(3);

                                        if ( (LA107_3==FLOW) ) {
                                            alt107=1;
                                        }
                                        else if ( (LA107_3==END||LA107_3==REFINED) ) {
                                            alt107=2;
                                        }


                                    }


                                }


                                switch (alt107) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1932:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1932:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1932:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_processor_implementation5065);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1938:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1938:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1938:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_processor_implementation5097);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt107 >= 1 ) break loop107;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(107, input);
                                        throw eee;
                                }
                                cnt107++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1946:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1946:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1947:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_processor_implementation5142);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1954:2: ( modes_for_implementations[ai] )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==MODES) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1954:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_processor_implementation5166);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1956:3: ( properties_for_classifiers[ai] )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==PROPERTIES) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1956:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_processor_implementation5176);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1958:2: (asub= annex_subclause )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==ANNEX) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1958:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_processor_implementation5188);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_processor_implementation5199); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_implementation5203); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_processor_implementation5205); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_implementation5209); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"processor implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_processor_implementation5216); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "processor_implementation"


    // $ANTLR start "subprogram_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1978:1: subprogram_implementation returns [ SubprogramImplementation ai] : SUBPROGRAM IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final SubprogramImplementation subprogram_implementation() throws RecognitionException {
        SubprogramImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        AbstractSubcomponent as = null;

        SubprogramCallSequence scs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1982:2: ( SUBPROGRAM IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1983:2: SUBPROGRAM IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_implementation5252); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_subprogram_implementation5254); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_implementation5258); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_subprogram_implementation5260); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_implementation5264); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createSubprogramImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_subprogram_implementation5272);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1991:2: ( implementation_extension[ai] )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==EXTENDS) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1991:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_subprogram_implementation5279);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension=true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1996:2: ( prototypes_for_implementation[extension,ai] )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==PROTOTYPES) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1996:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_subprogram_implementation5294);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1998:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==SUBCOMPONENTS) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1998:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_subprogram_implementation5304); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:1999:3: ( ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==IDENT) ) {
                        alt116=1;
                    }
                    else if ( (LA116_0==NONE) ) {
                        alt116=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 116, 0, input);

                        throw nvae;
                    }
                    switch (alt116) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2000:4: ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2000:4: ( ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2001:4: ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2001:4: ( (ds= data_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            int cnt115=0;
                            loop115:
                            do {
                                int alt115=3;
                                int LA115_0 = input.LA(1);

                                if ( (LA115_0==IDENT) ) {
                                    int LA115_2 = input.LA(2);

                                    if ( (LA115_2==COLON) ) {
                                        switch ( input.LA(3) ) {
                                        case REFINED:
                                            {
                                            int LA115_4 = input.LA(4);

                                            if ( (LA115_4==TO) ) {
                                                int LA115_7 = input.LA(5);

                                                if ( (LA115_7==DATA) ) {
                                                    alt115=1;
                                                }
                                                else if ( (LA115_7==ABSTRACT) ) {
                                                    alt115=2;
                                                }


                                            }


                                            }
                                            break;
                                        case DATA:
                                            {
                                            alt115=1;
                                            }
                                            break;
                                        case ABSTRACT:
                                            {
                                            alt115=2;
                                            }
                                            break;

                                        }

                                    }


                                }


                                switch (alt115) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2002:4: (ds= data_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2002:4: (ds= data_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2002:5: ds= data_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_subprogram_implementation5326);
                            	    ds=data_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2007:5: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2007:5: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2007:6: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_subprogram_implementation5347);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt115 >= 1 ) break loop115;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(115, input);
                                        throw eee;
                                }
                                cnt115++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2015:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2015:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2016:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_subprogram_implementation5386);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2023:2: ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==CALLS) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2023:3: CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) )
                    {
                    match(input,CALLS,FOLLOW_CALLS_in_subprogram_implementation5410); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2024:3: ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) )
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==IDENT) ) {
                        alt119=1;
                    }
                    else if ( (LA119_0==NONE) ) {
                        alt119=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 119, 0, input);

                        throw nvae;
                    }
                    switch (alt119) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2025:3: ( (scs= subprogram_call_sequence )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2025:3: ( (scs= subprogram_call_sequence )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2026:4: (scs= subprogram_call_sequence )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2026:4: (scs= subprogram_call_sequence )+
                            int cnt118=0;
                            loop118:
                            do {
                                int alt118=2;
                                int LA118_0 = input.LA(1);

                                if ( (LA118_0==IDENT) ) {
                                    alt118=1;
                                }


                                switch (alt118) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2026:5: scs= subprogram_call_sequence
                            	    {
                            	    pushFollow(FOLLOW_subprogram_call_sequence_in_subprogram_implementation5426);
                            	    scs=subprogram_call_sequence();

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramCallSequences().add(scs);
                            	      				
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt118 >= 1 ) break loop118;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(118, input);
                                        throw eee;
                                }
                                cnt118++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2033:3: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2033:3: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2033:4: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_subprogram_implementation5451);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              				ai.setNoCalls(true);
                              			
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2040:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==CONNECTIONS) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2040:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_subprogram_implementation5472); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2041:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==IDENT||LA121_0==FEATURE||(LA121_0>=BUS && LA121_0<=DATA)||LA121_0==SUBPROGRAM||LA121_0==REFINED||LA121_0==PORT||LA121_0==ACCESS||LA121_0==PARAMETER) ) {
                        alt121=1;
                    }
                    else if ( (LA121_0==NONE) ) {
                        alt121=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 121, 0, input);

                        throw nvae;
                    }
                    switch (alt121) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2042:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2042:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2043:5: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_subprogram_implementation5487);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2046:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2046:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2047:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_subprogram_implementation5509);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2054:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==FLOWS) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2054:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_subprogram_implementation5533); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2055:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==IDENT) ) {
                        alt124=1;
                    }
                    else if ( (LA124_0==NONE) ) {
                        alt124=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 124, 0, input);

                        throw nvae;
                    }
                    switch (alt124) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2056:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2056:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2057:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2057:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt123=0;
                            loop123:
                            do {
                                int alt123=3;
                                int LA123_0 = input.LA(1);

                                if ( (LA123_0==IDENT) ) {
                                    int LA123_2 = input.LA(2);

                                    if ( (LA123_2==COLON) ) {
                                        int LA123_3 = input.LA(3);

                                        if ( (LA123_3==FLOW) ) {
                                            alt123=1;
                                        }
                                        else if ( (LA123_3==END||LA123_3==REFINED) ) {
                                            alt123=2;
                                        }


                                    }


                                }


                                switch (alt123) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2058:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2058:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2058:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_subprogram_implementation5558);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2064:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2064:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2064:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_subprogram_implementation5590);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt123 >= 1 ) break loop123;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(123, input);
                                        throw eee;
                                }
                                cnt123++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2072:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2072:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2073:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_subprogram_implementation5635);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2080:2: ( modes_for_implementations[ai] )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==MODES) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2080:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_subprogram_implementation5659);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2082:3: ( properties_for_classifiers[ai] )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==PROPERTIES) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2082:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_subprogram_implementation5669);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2084:2: (asub= annex_subclause )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==ANNEX) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2084:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_subprogram_implementation5681);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_subprogram_implementation5692); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_implementation5696); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_subprogram_implementation5698); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_implementation5702); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"subprogram implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_subprogram_implementation5709); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "subprogram_implementation"


    // $ANTLR start "subprogram_group_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2104:1: subprogram_group_implementation returns [ SubprogramGroupImplementation ai] : SUBPROGRAM GROUP IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ss= subprogram_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS connections[ai,extension] | none_stmt )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final SubprogramGroupImplementation subprogram_group_implementation() throws RecognitionException {
        SubprogramGroupImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        SubprogramSubcomponent ss = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2108:2: ( SUBPROGRAM GROUP IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ss= subprogram_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS connections[ai,extension] | none_stmt )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2109:2: SUBPROGRAM GROUP IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ss= subprogram_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS connections[ai,extension] | none_stmt )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_group_implementation5745); if (state.failed) return ai;
            match(input,GROUP,FOLLOW_GROUP_in_subprogram_group_implementation5747); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_subprogram_group_implementation5749); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_implementation5753); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_subprogram_group_implementation5755); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_implementation5759); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createSubprogramGroupImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_subprogram_group_implementation5767);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2117:2: ( implementation_extension[ai] )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==EXTENDS) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2117:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_subprogram_group_implementation5774);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension=true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2122:2: ( prototypes_for_implementation[extension,ai] )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==PROTOTYPES) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2122:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_subprogram_group_implementation5789);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2124:2: ( SUBCOMPONENTS ( ( ( (ss= subprogram_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==SUBCOMPONENTS) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2124:4: SUBCOMPONENTS ( ( ( (ss= subprogram_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_subprogram_group_implementation5799); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2125:3: ( ( ( (ss= subprogram_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt132=2;
                    int LA132_0 = input.LA(1);

                    if ( (LA132_0==IDENT) ) {
                        alt132=1;
                    }
                    else if ( (LA132_0==NONE) ) {
                        alt132=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 132, 0, input);

                        throw nvae;
                    }
                    switch (alt132) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2126:4: ( ( (ss= subprogram_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2126:4: ( ( (ss= subprogram_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2127:4: ( (ss= subprogram_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2127:4: ( (ss= subprogram_subcomponent[extension] ) )+
                            int cnt131=0;
                            loop131:
                            do {
                                int alt131=2;
                                int LA131_0 = input.LA(1);

                                if ( (LA131_0==IDENT) ) {
                                    alt131=1;
                                }


                                switch (alt131) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2128:4: (ss= subprogram_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2128:4: (ss= subprogram_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2128:5: ss= subprogram_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_subprogram_group_implementation5821);
                            	    ss=subprogram_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramSubcomponents().add(ss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt131 >= 1 ) break loop131;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(131, input);
                                        throw eee;
                                }
                                cnt131++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2136:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2136:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2137:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_subprogram_group_implementation5860);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2144:2: ( CONNECTIONS connections[ai,extension] | none_stmt )?
            int alt134=3;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==CONNECTIONS) ) {
                alt134=1;
            }
            else if ( (LA134_0==NONE) ) {
                alt134=2;
            }
            switch (alt134) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2144:3: CONNECTIONS connections[ai,extension]
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_subprogram_group_implementation5884); if (state.failed) return ai;
                    pushFollow(FOLLOW_connections_in_subprogram_group_implementation5888);
                    connections(ai, extension);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2146:5: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_subprogram_group_implementation5895);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                      				ai.setNoConnections(true);
                      			
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2151:3: ( properties_for_classifiers[ai] )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==PROPERTIES) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2151:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_subprogram_group_implementation5909);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2153:2: (asub= annex_subclause )?
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==ANNEX) ) {
                alt136=1;
            }
            switch (alt136) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2153:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_subprogram_group_implementation5921);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_subprogram_group_implementation5932); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_implementation5936); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_subprogram_group_implementation5938); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_implementation5942); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"subprogram group implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_subprogram_group_implementation5949); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "subprogram_group_implementation"


    // $ANTLR start "system_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2173:1: system_implementation returns [ SystemImplementation ai] : SYSTEM IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final SystemImplementation system_implementation() throws RecognitionException {
        SystemImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        SubprogramSubcomponent ss = null;

        SubprogramGroupSubcomponent sgs = null;

        ProcessSubcomponent ps = null;

        ProcessorSubcomponent procs = null;

        VirtualProcessorSubcomponent vps = null;

        MemorySubcomponent ms = null;

        DeviceSubcomponent devs = null;

        SystemSubcomponent syss = null;

        AbstractSubcomponent as = null;

        BusSubcomponent bs = null;

        VirtualBusSubcomponent vbs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2177:2: ( SYSTEM IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2178:2: SYSTEM IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,SYSTEM,FOLLOW_SYSTEM_in_system_implementation5985); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_system_implementation5987); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_implementation5991); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_system_implementation5993); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_implementation5997); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createSystemImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_system_implementation6003);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2186:2: ( implementation_extension[ai] )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==EXTENDS) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2186:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_system_implementation6010);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension = true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2191:2: ( prototypes_for_implementation[extension,ai] )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==PROTOTYPES) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2191:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_system_implementation6025);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2193:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==SUBCOMPONENTS) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2193:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_system_implementation6035); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2194:3: ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==IDENT) ) {
                        alt140=1;
                    }
                    else if ( (LA140_0==NONE) ) {
                        alt140=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 140, 0, input);

                        throw nvae;
                    }
                    switch (alt140) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2195:4: ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2195:4: ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2196:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2196:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+
                            int cnt139=0;
                            loop139:
                            do {
                                int alt139=13;
                                alt139 = dfa139.predict(input);
                                switch (alt139) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2197:4: (ds= data_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2197:4: (ds= data_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2197:5: ds= data_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_system_implementation6057);
                            	    ds=data_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2202:5: (ss= subprogram_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2202:5: (ss= subprogram_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2202:6: ss= subprogram_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_system_implementation6078);
                            	    ss=subprogram_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramSubcomponents().add(ss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2207:5: (sgs= subprogram_group_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2207:5: (sgs= subprogram_group_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2207:6: sgs= subprogram_group_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_subcomponent_in_system_implementation6099);
                            	    sgs=subprogram_group_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramGroupSubcomponents().add(sgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2212:5: (ps= process_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2212:5: (ps= process_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2212:6: ps= process_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_process_subcomponent_in_system_implementation6120);
                            	    ps=process_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedProcessSubcomponents().add(ps);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2217:5: (procs= processor_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2217:5: (procs= processor_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2217:6: procs= processor_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_processor_subcomponent_in_system_implementation6141);
                            	    procs=processor_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedProcessorSubcomponents().add(procs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2222:5: (vps= virtual_processor_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2222:5: (vps= virtual_processor_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2222:6: vps= virtual_processor_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_processor_subcomponent_in_system_implementation6162);
                            	    vps=virtual_processor_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualProcessorSubcomponents().add(vps);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2227:5: (ms= memory_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2227:5: (ms= memory_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2227:6: ms= memory_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_memory_subcomponent_in_system_implementation6183);
                            	    ms=memory_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedMemorySubcomponents().add(ms);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2232:5: (devs= device_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2232:5: (devs= device_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2232:6: devs= device_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_device_subcomponent_in_system_implementation6204);
                            	    devs=device_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDeviceSubcomponents().add(devs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 9 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2237:5: (syss= system_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2237:5: (syss= system_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2237:6: syss= system_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_system_subcomponent_in_system_implementation6225);
                            	    syss=system_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSystemSubcomponents().add(syss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 10 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2242:5: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2242:5: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2242:6: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_system_implementation6246);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 11 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2247:5: (bs= bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2247:5: (bs= bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2247:6: bs= bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_subcomponent_in_system_implementation6267);
                            	    bs=bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedBusSubcomponents().add(bs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 12 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2252:5: (vbs= virtual_bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2252:5: (vbs= virtual_bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2252:6: vbs= virtual_bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_bus_subcomponent_in_system_implementation6288);
                            	    vbs=virtual_bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualBusSubcomponents().add(vbs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt139 >= 1 ) break loop139;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(139, input);
                                        throw eee;
                                }
                                cnt139++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2260:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2260:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2261:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_system_implementation6327);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2268:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==CONNECTIONS) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2268:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_system_implementation6351); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2269:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt142=2;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==IDENT||LA142_0==FEATURE||(LA142_0>=BUS && LA142_0<=DATA)||LA142_0==SUBPROGRAM||LA142_0==REFINED||LA142_0==PORT||LA142_0==ACCESS||LA142_0==PARAMETER) ) {
                        alt142=1;
                    }
                    else if ( (LA142_0==NONE) ) {
                        alt142=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 142, 0, input);

                        throw nvae;
                    }
                    switch (alt142) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2270:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2270:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2271:5: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_system_implementation6366);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2274:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2274:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2275:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_system_implementation6388);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2282:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==FLOWS) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2282:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_system_implementation6412); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2283:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==IDENT) ) {
                        alt145=1;
                    }
                    else if ( (LA145_0==NONE) ) {
                        alt145=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 145, 0, input);

                        throw nvae;
                    }
                    switch (alt145) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2284:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2284:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2285:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2285:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt144=0;
                            loop144:
                            do {
                                int alt144=3;
                                int LA144_0 = input.LA(1);

                                if ( (LA144_0==IDENT) ) {
                                    int LA144_2 = input.LA(2);

                                    if ( (LA144_2==COLON) ) {
                                        int LA144_3 = input.LA(3);

                                        if ( (LA144_3==FLOW) ) {
                                            alt144=1;
                                        }
                                        else if ( (LA144_3==END||LA144_3==REFINED) ) {
                                            alt144=2;
                                        }


                                    }


                                }


                                switch (alt144) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2286:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2286:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2286:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_system_implementation6437);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2292:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2292:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2292:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_system_implementation6469);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt144 >= 1 ) break loop144;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(144, input);
                                        throw eee;
                                }
                                cnt144++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2300:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2300:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2301:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_system_implementation6514);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2308:2: ( modes_for_implementations[ai] )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==MODES) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2308:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_system_implementation6538);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2310:3: ( properties_for_classifiers[ai] )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==PROPERTIES) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2310:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_system_implementation6548);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2312:2: (asub= annex_subclause )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==ANNEX) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2312:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_system_implementation6560);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_system_implementation6571); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_implementation6575); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_system_implementation6577); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_implementation6581); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"system implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_system_implementation6588); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "system_implementation"


    // $ANTLR start "thread_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2332:1: thread_implementation returns [ThreadImplementation ai] : THREAD IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final ThreadImplementation thread_implementation() throws RecognitionException {
        ThreadImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        SubprogramSubcomponent ss = null;

        SubprogramGroupSubcomponent sgs = null;

        AbstractSubcomponent as = null;

        SubprogramCallSequence scs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2336:2: ( THREAD IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2337:2: THREAD IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,THREAD,FOLLOW_THREAD_in_thread_implementation6624); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_thread_implementation6626); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_implementation6630); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_thread_implementation6632); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_implementation6636); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createThreadImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_thread_implementation6644);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2345:2: ( implementation_extension[ai] )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==EXTENDS) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2345:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_thread_implementation6651);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension = true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2350:2: ( prototypes_for_implementation[extension,ai] )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==PROTOTYPES) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2350:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_thread_implementation6666);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2352:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==SUBCOMPONENTS) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2352:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_thread_implementation6676); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2353:3: ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==IDENT) ) {
                        alt153=1;
                    }
                    else if ( (LA153_0==NONE) ) {
                        alt153=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 153, 0, input);

                        throw nvae;
                    }
                    switch (alt153) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2354:4: ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2354:4: ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2355:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2355:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            int cnt152=0;
                            loop152:
                            do {
                                int alt152=5;
                                alt152 = dfa152.predict(input);
                                switch (alt152) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2356:4: (ds= data_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2356:4: (ds= data_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2356:5: ds= data_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_thread_implementation6698);
                            	    ds=data_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2361:5: (ss= subprogram_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2361:5: (ss= subprogram_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2361:6: ss= subprogram_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_thread_implementation6719);
                            	    ss=subprogram_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramSubcomponents().add(ss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2366:5: (sgs= subprogram_group_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2366:5: (sgs= subprogram_group_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2366:6: sgs= subprogram_group_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_subcomponent_in_thread_implementation6740);
                            	    sgs=subprogram_group_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramGroupSubcomponents().add(sgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2371:5: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2371:5: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2371:6: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_thread_implementation6761);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt152 >= 1 ) break loop152;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(152, input);
                                        throw eee;
                                }
                                cnt152++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2379:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2379:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2380:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_implementation6800);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2387:2: ( CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==CALLS) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2387:3: CALLS ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) )
                    {
                    match(input,CALLS,FOLLOW_CALLS_in_thread_implementation6824); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2388:3: ( ( (scs= subprogram_call_sequence )+ ) | ( none_stmt ) )
                    int alt156=2;
                    int LA156_0 = input.LA(1);

                    if ( (LA156_0==IDENT) ) {
                        alt156=1;
                    }
                    else if ( (LA156_0==NONE) ) {
                        alt156=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 156, 0, input);

                        throw nvae;
                    }
                    switch (alt156) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2389:3: ( (scs= subprogram_call_sequence )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2389:3: ( (scs= subprogram_call_sequence )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2390:4: (scs= subprogram_call_sequence )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2390:4: (scs= subprogram_call_sequence )+
                            int cnt155=0;
                            loop155:
                            do {
                                int alt155=2;
                                int LA155_0 = input.LA(1);

                                if ( (LA155_0==IDENT) ) {
                                    alt155=1;
                                }


                                switch (alt155) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2390:5: scs= subprogram_call_sequence
                            	    {
                            	    pushFollow(FOLLOW_subprogram_call_sequence_in_thread_implementation6840);
                            	    scs=subprogram_call_sequence();

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramCallSequences().add(scs);
                            	      				
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt155 >= 1 ) break loop155;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(155, input);
                                        throw eee;
                                }
                                cnt155++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2397:3: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2397:3: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2397:4: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_implementation6865);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              				ai.setNoCalls(true);
                              			
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2404:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==CONNECTIONS) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2404:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_thread_implementation6886); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2405:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==IDENT||LA158_0==FEATURE||(LA158_0>=BUS && LA158_0<=DATA)||LA158_0==SUBPROGRAM||LA158_0==REFINED||LA158_0==PORT||LA158_0==ACCESS||LA158_0==PARAMETER) ) {
                        alt158=1;
                    }
                    else if ( (LA158_0==NONE) ) {
                        alt158=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 158, 0, input);

                        throw nvae;
                    }
                    switch (alt158) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2406:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2406:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2407:5: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_thread_implementation6901);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2410:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2410:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2411:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_implementation6923);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2418:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==FLOWS) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2418:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_thread_implementation6947); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2419:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==IDENT) ) {
                        alt161=1;
                    }
                    else if ( (LA161_0==NONE) ) {
                        alt161=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 161, 0, input);

                        throw nvae;
                    }
                    switch (alt161) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2420:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2420:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2421:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2421:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt160=0;
                            loop160:
                            do {
                                int alt160=3;
                                int LA160_0 = input.LA(1);

                                if ( (LA160_0==IDENT) ) {
                                    int LA160_2 = input.LA(2);

                                    if ( (LA160_2==COLON) ) {
                                        int LA160_3 = input.LA(3);

                                        if ( (LA160_3==FLOW) ) {
                                            alt160=1;
                                        }
                                        else if ( (LA160_3==END||LA160_3==REFINED) ) {
                                            alt160=2;
                                        }


                                    }


                                }


                                switch (alt160) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2422:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2422:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2422:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_thread_implementation6972);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2428:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2428:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2428:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_thread_implementation7004);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt160 >= 1 ) break loop160;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(160, input);
                                        throw eee;
                                }
                                cnt160++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2436:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2436:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2437:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_implementation7049);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2444:2: ( modes_for_implementations[ai] )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==MODES) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2444:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_thread_implementation7073);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2446:3: ( properties_for_classifiers[ai] )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==PROPERTIES) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2446:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_thread_implementation7083);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2448:2: (asub= annex_subclause )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==ANNEX) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2448:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_thread_implementation7095);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_thread_implementation7106); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_implementation7110); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_thread_implementation7112); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_implementation7116); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"thread implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_thread_implementation7123); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "thread_implementation"


    // $ANTLR start "thread_group_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2468:1: thread_group_implementation returns [ThreadGroupImplementation ai] : THREAD GROUP IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final ThreadGroupImplementation thread_group_implementation() throws RecognitionException {
        ThreadGroupImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        DataSubcomponent ds = null;

        SubprogramSubcomponent ss = null;

        SubprogramGroupSubcomponent sgs = null;

        ThreadSubcomponent ts = null;

        ThreadGroupSubcomponent tgs = null;

        AbstractSubcomponent as = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2472:2: ( THREAD GROUP IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2473:2: THREAD GROUP IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,THREAD,FOLLOW_THREAD_in_thread_group_implementation7159); if (state.failed) return ai;
            match(input,GROUP,FOLLOW_GROUP_in_thread_group_implementation7161); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_thread_group_implementation7163); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_implementation7167); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_thread_group_implementation7169); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_implementation7173); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createThreadGroupImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_thread_group_implementation7181);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2481:2: ( implementation_extension[ai] )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==EXTENDS) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2481:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_thread_group_implementation7188);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension = true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2486:2: ( prototypes_for_implementation[extension,ai] )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==PROTOTYPES) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2486:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_thread_group_implementation7203);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2488:2: ( SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==SUBCOMPONENTS) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2488:4: SUBCOMPONENTS ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_thread_group_implementation7213); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2489:3: ( ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==IDENT) ) {
                        alt169=1;
                    }
                    else if ( (LA169_0==NONE) ) {
                        alt169=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 169, 0, input);

                        throw nvae;
                    }
                    switch (alt169) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2490:4: ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2490:4: ( ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2491:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2491:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+
                            int cnt168=0;
                            loop168:
                            do {
                                int alt168=7;
                                alt168 = dfa168.predict(input);
                                switch (alt168) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2492:4: (ds= data_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2492:4: (ds= data_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2492:5: ds= data_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_subcomponent_in_thread_group_implementation7235);
                            	    ds=data_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedDataSubcomponents().add(ds);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2497:5: (ss= subprogram_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2497:5: (ss= subprogram_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2497:6: ss= subprogram_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_subcomponent_in_thread_group_implementation7256);
                            	    ss=subprogram_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramSubcomponents().add(ss);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2502:5: (sgs= subprogram_group_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2502:5: (sgs= subprogram_group_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2502:6: sgs= subprogram_group_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_subcomponent_in_thread_group_implementation7277);
                            	    sgs=subprogram_group_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedSubprogramGroupSubcomponents().add(sgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2507:5: (ts= thread_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2507:5: (ts= thread_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2507:6: ts= thread_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_thread_subcomponent_in_thread_group_implementation7298);
                            	    ts=thread_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedThreadSubcomponents().add(ts);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2512:5: (tgs= thread_group_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2512:5: (tgs= thread_group_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2512:6: tgs= thread_group_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_thread_group_subcomponent_in_thread_group_implementation7322);
                            	    tgs=thread_group_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedThreadGroupSubcomponents().add(tgs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2517:5: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2517:5: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2517:6: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_thread_group_implementation7343);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt168 >= 1 ) break loop168;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(168, input);
                                        throw eee;
                                }
                                cnt168++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2525:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2525:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2526:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_group_implementation7382);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2533:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==CONNECTIONS) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2533:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_thread_group_implementation7406); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2534:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( (LA171_0==IDENT||LA171_0==FEATURE||(LA171_0>=BUS && LA171_0<=DATA)||LA171_0==SUBPROGRAM||LA171_0==REFINED||LA171_0==PORT||LA171_0==ACCESS||LA171_0==PARAMETER) ) {
                        alt171=1;
                    }
                    else if ( (LA171_0==NONE) ) {
                        alt171=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 171, 0, input);

                        throw nvae;
                    }
                    switch (alt171) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2534:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2534:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2535:3: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_thread_group_implementation7415);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2537:5: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2537:5: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2537:6: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_group_implementation7427);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;

                            }

                            if ( state.backtracking==0 ) {

                              				ai.setNoConnections(true);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2543:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==FLOWS) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2543:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_thread_group_implementation7445); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2544:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==IDENT) ) {
                        alt174=1;
                    }
                    else if ( (LA174_0==NONE) ) {
                        alt174=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 174, 0, input);

                        throw nvae;
                    }
                    switch (alt174) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2545:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2545:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2546:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2546:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt173=0;
                            loop173:
                            do {
                                int alt173=3;
                                int LA173_0 = input.LA(1);

                                if ( (LA173_0==IDENT) ) {
                                    int LA173_2 = input.LA(2);

                                    if ( (LA173_2==COLON) ) {
                                        int LA173_3 = input.LA(3);

                                        if ( (LA173_3==FLOW) ) {
                                            alt173=1;
                                        }
                                        else if ( (LA173_3==END||LA173_3==REFINED) ) {
                                            alt173=2;
                                        }


                                    }


                                }


                                switch (alt173) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2547:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2547:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2547:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_thread_group_implementation7470);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2553:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2553:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2553:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_thread_group_implementation7502);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt173 >= 1 ) break loop173;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(173, input);
                                        throw eee;
                                }
                                cnt173++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2561:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2561:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2562:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_group_implementation7547);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2569:2: ( modes_for_implementations[ai] )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==MODES) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2569:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_thread_group_implementation7571);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2571:3: ( properties_for_classifiers[ai] )?
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==PROPERTIES) ) {
                alt177=1;
            }
            switch (alt177) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2571:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_thread_group_implementation7581);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2573:2: (asub= annex_subclause )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==ANNEX) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2573:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_thread_group_implementation7593);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_thread_group_implementation7604); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_implementation7608); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_thread_group_implementation7610); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_implementation7614); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"thread group implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_thread_group_implementation7621); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "thread_group_implementation"


    // $ANTLR start "virtual_bus_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2593:1: virtual_bus_implementation returns [VirtualBusImplementation ai] : VIRTUAL BUS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final VirtualBusImplementation virtual_bus_implementation() throws RecognitionException {
        VirtualBusImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        AbstractSubcomponent as = null;

        VirtualBusSubcomponent bs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2597:2: ( VIRTUAL BUS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2598:2: VIRTUAL BUS IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,VIRTUAL,FOLLOW_VIRTUAL_in_virtual_bus_implementation7658); if (state.failed) return ai;
            match(input,BUS,FOLLOW_BUS_in_virtual_bus_implementation7660); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_virtual_bus_implementation7662); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_implementation7666); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_virtual_bus_implementation7668); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_implementation7672); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createVirtualBusImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_virtual_bus_implementation7680);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2606:2: ( implementation_extension[ai] )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==EXTENDS) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2606:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_virtual_bus_implementation7687);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension=true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2611:2: ( prototypes_for_implementation[extension,ai] )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==PROTOTYPES) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2611:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_virtual_bus_implementation7702);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2613:2: ( SUBCOMPONENTS ( ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==SUBCOMPONENTS) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2613:4: SUBCOMPONENTS ( ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_virtual_bus_implementation7712); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2614:3: ( ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==IDENT) ) {
                        alt182=1;
                    }
                    else if ( (LA182_0==NONE) ) {
                        alt182=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 182, 0, input);

                        throw nvae;
                    }
                    switch (alt182) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2615:4: ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2615:4: ( ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2616:5: ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2616:5: ( (as= abstract_subcomponent[extension] ) | (bs= virtual_bus_subcomponent[extension] ) )+
                            int cnt181=0;
                            loop181:
                            do {
                                int alt181=3;
                                int LA181_0 = input.LA(1);

                                if ( (LA181_0==IDENT) ) {
                                    int LA181_2 = input.LA(2);

                                    if ( (LA181_2==COLON) ) {
                                        switch ( input.LA(3) ) {
                                        case REFINED:
                                            {
                                            int LA181_4 = input.LA(4);

                                            if ( (LA181_4==TO) ) {
                                                int LA181_7 = input.LA(5);

                                                if ( (LA181_7==ABSTRACT) ) {
                                                    alt181=1;
                                                }
                                                else if ( (LA181_7==VIRTUAL) ) {
                                                    alt181=2;
                                                }


                                            }


                                            }
                                            break;
                                        case ABSTRACT:
                                            {
                                            alt181=1;
                                            }
                                            break;
                                        case VIRTUAL:
                                            {
                                            alt181=2;
                                            }
                                            break;

                                        }

                                    }


                                }


                                switch (alt181) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2617:6: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2617:6: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2617:7: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_virtual_bus_implementation7737);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedAbstractSubcomponents().add(as);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2623:6: (bs= virtual_bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2623:6: (bs= virtual_bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2623:7: bs= virtual_bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_bus_subcomponent_in_virtual_bus_implementation7769);
                            	    bs=virtual_bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedVirtualBusSubcomponents().add(bs);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt181 >= 1 ) break loop181;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(181, input);
                                        throw eee;
                                }
                                cnt181++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2631:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2631:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2632:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_bus_implementation7813);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoSubcomponents(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2639:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==CONNECTIONS) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2639:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_virtual_bus_implementation7837); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2640:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt184=2;
                    int LA184_0 = input.LA(1);

                    if ( (LA184_0==IDENT||LA184_0==FEATURE||(LA184_0>=BUS && LA184_0<=DATA)||LA184_0==SUBPROGRAM||LA184_0==REFINED||LA184_0==PORT||LA184_0==ACCESS||LA184_0==PARAMETER) ) {
                        alt184=1;
                    }
                    else if ( (LA184_0==NONE) ) {
                        alt184=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 184, 0, input);

                        throw nvae;
                    }
                    switch (alt184) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2641:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2641:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2642:5: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_virtual_bus_implementation7852);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2645:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2645:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2646:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_bus_implementation7874);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoConnections(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2653:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==FLOWS) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2653:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_virtual_bus_implementation7898); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2654:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt187=2;
                    int LA187_0 = input.LA(1);

                    if ( (LA187_0==IDENT) ) {
                        alt187=1;
                    }
                    else if ( (LA187_0==NONE) ) {
                        alt187=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 187, 0, input);

                        throw nvae;
                    }
                    switch (alt187) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2655:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2655:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2656:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2656:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt186=0;
                            loop186:
                            do {
                                int alt186=3;
                                int LA186_0 = input.LA(1);

                                if ( (LA186_0==IDENT) ) {
                                    int LA186_2 = input.LA(2);

                                    if ( (LA186_2==COLON) ) {
                                        int LA186_3 = input.LA(3);

                                        if ( (LA186_3==FLOW) ) {
                                            alt186=1;
                                        }
                                        else if ( (LA186_3==END||LA186_3==REFINED) ) {
                                            alt186=2;
                                        }


                                    }


                                }


                                switch (alt186) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2657:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2657:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2657:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_virtual_bus_implementation7923);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2663:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2663:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2663:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_virtual_bus_implementation7955);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt186 >= 1 ) break loop186;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(186, input);
                                        throw eee;
                                }
                                cnt186++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2671:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2671:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2672:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_bus_implementation8001);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2679:2: ( modes_for_implementations[ai] )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==MODES) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2679:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_virtual_bus_implementation8025);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2681:3: ( properties_for_classifiers[ai] )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==PROPERTIES) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2681:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_virtual_bus_implementation8035);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2683:2: (asub= annex_subclause )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==ANNEX) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2683:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_virtual_bus_implementation8047);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_virtual_bus_implementation8058); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_implementation8062); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_virtual_bus_implementation8064); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_implementation8068); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"virtual bus implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_virtual_bus_implementation8075); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "virtual_bus_implementation"


    // $ANTLR start "virtual_processor_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2703:1: virtual_processor_implementation returns [VirtualProcessorImplementation ai] : VIRTUAL PROCESSOR IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI ;
    public final VirtualProcessorImplementation virtual_processor_implementation() throws RecognitionException {
        VirtualProcessorImplementation ai = null;

        Token id=null;
        Token iid=null;
        Token eid=null;
        Token eiid=null;
        VirtualProcessorSubcomponent vps = null;

        AbstractSubcomponent as = null;

        VirtualBusSubcomponent vbs = null;

        FlowImplementation fi = null;

        EndToEndFlow e2e = null;

        AnnexSubclause asub = null;



           boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2707:2: ( VIRTUAL PROCESSOR IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2708:2: VIRTUAL PROCESSOR IMPLEMENTATION id= IDENT DOT iid= IDENT component_implementation_realization[ai,id] ( implementation_extension[ai] )? ( prototypes_for_implementation[extension,ai] )? ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )? ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )? ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )? ( modes_for_implementations[ai] )? ( properties_for_classifiers[ai] )? (asub= annex_subclause )? END eid= IDENT DOT eiid= IDENT SEMI
            {
            match(input,VIRTUAL,FOLLOW_VIRTUAL_in_virtual_processor_implementation8111); if (state.failed) return ai;
            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_virtual_processor_implementation8113); if (state.failed) return ai;
            match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_virtual_processor_implementation8115); if (state.failed) return ai;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_implementation8119); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_virtual_processor_implementation8121); if (state.failed) return ai;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_implementation8125); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			ai=Aadl2F.createVirtualProcessorImplementation();
              			ai.setName(id.getText()+"."+iid.getText());
              			ai.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            pushFollow(FOLLOW_component_implementation_realization_in_virtual_processor_implementation8133);
            component_implementation_realization(ai, id);

            state._fsp--;
            if (state.failed) return ai;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2716:2: ( implementation_extension[ai] )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==EXTENDS) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2716:3: implementation_extension[ai]
                    {
                    pushFollow(FOLLOW_implementation_extension_in_virtual_processor_implementation8140);
                    implementation_extension(ai);

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {

                            extension=true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2721:2: ( prototypes_for_implementation[extension,ai] )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==PROTOTYPES) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2721:3: prototypes_for_implementation[extension,ai]
                    {
                    pushFollow(FOLLOW_prototypes_for_implementation_in_virtual_processor_implementation8155);
                    prototypes_for_implementation(extension, ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2723:2: ( SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==SUBCOMPONENTS) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2723:4: SUBCOMPONENTS ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_virtual_processor_implementation8165); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2724:3: ( ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ ) | ( none_stmt ) )
                    int alt195=2;
                    int LA195_0 = input.LA(1);

                    if ( (LA195_0==IDENT) ) {
                        alt195=1;
                    }
                    else if ( (LA195_0==NONE) ) {
                        alt195=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 195, 0, input);

                        throw nvae;
                    }
                    switch (alt195) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2725:3: ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2725:3: ( ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2725:4: ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2725:4: ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+
                            int cnt194=0;
                            loop194:
                            do {
                                int alt194=4;
                                alt194 = dfa194.predict(input);
                                switch (alt194) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2726:4: (vps= virtual_processor_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2726:4: (vps= virtual_processor_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2726:5: vps= virtual_processor_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_processor_subcomponent_in_virtual_processor_implementation8182);
                            	    vps=virtual_processor_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualProcessorSubcomponents().add(vps);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2731:5: (as= abstract_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2731:5: (as= abstract_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2731:6: as= abstract_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_abstract_subcomponent_in_virtual_processor_implementation8203);
                            	    as=abstract_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedAbstractSubcomponents().add(as);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2736:5: (vbs= virtual_bus_subcomponent[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2736:5: (vbs= virtual_bus_subcomponent[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2736:6: vbs= virtual_bus_subcomponent[extension]
                            	    {
                            	    pushFollow(FOLLOW_virtual_bus_subcomponent_in_virtual_processor_implementation8224);
                            	    vbs=virtual_bus_subcomponent(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      					ai.getOwnedVirtualBusSubcomponents().add(vbs);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt194 >= 1 ) break loop194;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(194, input);
                                        throw eee;
                                }
                                cnt194++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2742:5: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2742:5: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2742:6: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_processor_implementation8249);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;

                            }

                            if ( state.backtracking==0 ) {

                              				ai.setNoSubcomponents(true);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2748:2: ( CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) ) )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==CONNECTIONS) ) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2748:3: CONNECTIONS ( ( connections[ai,extension] ) | ( none_stmt ) )
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_virtual_processor_implementation8267); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2749:3: ( ( connections[ai,extension] ) | ( none_stmt ) )
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==IDENT||LA197_0==FEATURE||(LA197_0>=BUS && LA197_0<=DATA)||LA197_0==SUBPROGRAM||LA197_0==REFINED||LA197_0==PORT||LA197_0==ACCESS||LA197_0==PARAMETER) ) {
                        alt197=1;
                    }
                    else if ( (LA197_0==NONE) ) {
                        alt197=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 197, 0, input);

                        throw nvae;
                    }
                    switch (alt197) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2750:4: ( connections[ai,extension] )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2750:4: ( connections[ai,extension] )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2751:4: connections[ai,extension]
                            {
                            pushFollow(FOLLOW_connections_in_virtual_processor_implementation8281);
                            connections(ai, extension);

                            state._fsp--;
                            if (state.failed) return ai;

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2753:6: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2753:6: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2753:7: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_processor_implementation8295);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;

                            }

                            if ( state.backtracking==0 ) {

                              					ai.setNoConnections(true);
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2759:2: ( FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) ) )?
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==FLOWS) ) {
                alt201=1;
            }
            switch (alt201) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2759:3: FLOWS ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_virtual_processor_implementation8314); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2760:3: ( ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ ) | ( none_stmt ) )
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==IDENT) ) {
                        alt200=1;
                    }
                    else if ( (LA200_0==NONE) ) {
                        alt200=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 200, 0, input);

                        throw nvae;
                    }
                    switch (alt200) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2761:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2761:4: ( ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2762:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2762:5: ( (fi= flow_implementation[extension] ) | (e2e= end_to_end_flow_implementation[extension] ) )+
                            int cnt199=0;
                            loop199:
                            do {
                                int alt199=3;
                                int LA199_0 = input.LA(1);

                                if ( (LA199_0==IDENT) ) {
                                    int LA199_2 = input.LA(2);

                                    if ( (LA199_2==COLON) ) {
                                        int LA199_3 = input.LA(3);

                                        if ( (LA199_3==FLOW) ) {
                                            alt199=1;
                                        }
                                        else if ( (LA199_3==END||LA199_3==REFINED) ) {
                                            alt199=2;
                                        }


                                    }


                                }


                                switch (alt199) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2763:6: (fi= flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2763:6: (fi= flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2763:7: fi= flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_implementation_in_virtual_processor_implementation8339);
                            	    fi=flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedFlowImplementations().add(fi);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2769:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2769:6: (e2e= end_to_end_flow_implementation[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2769:7: e2e= end_to_end_flow_implementation[extension]
                            	    {
                            	    pushFollow(FOLLOW_end_to_end_flow_implementation_in_virtual_processor_implementation8371);
                            	    e2e=end_to_end_flow_implementation(extension);

                            	    state._fsp--;
                            	    if (state.failed) return ai;
                            	    if ( state.backtracking==0 ) {

                            	      							ai.getOwnedEndToEndFlows().add(e2e);
                            	      						
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt199 >= 1 ) break loop199;
                            	    if (state.backtracking>0) {state.failed=true; return ai;}
                                        EarlyExitException eee =
                                            new EarlyExitException(199, input);
                                        throw eee;
                                }
                                cnt199++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2777:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2777:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2778:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_processor_implementation8416);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              						ai.setNoFlows(true);
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2785:2: ( modes_for_implementations[ai] )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==MODES) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2785:3: modes_for_implementations[ai]
                    {
                    pushFollow(FOLLOW_modes_for_implementations_in_virtual_processor_implementation8440);
                    modes_for_implementations(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2787:3: ( properties_for_classifiers[ai] )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==PROPERTIES) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2787:4: properties_for_classifiers[ai]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_virtual_processor_implementation8450);
                    properties_for_classifiers(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2789:2: (asub= annex_subclause )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==ANNEX) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2789:3: asub= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_virtual_processor_implementation8462);
                    asub=annex_subclause();

                    state._fsp--;
                    if (state.failed) return ai;
                    if ( state.backtracking==0 ) {
                      	
                      			ai.getOwnedAnnexSubclauses().add(asub);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_virtual_processor_implementation8473); if (state.failed) return ai;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_implementation8477); if (state.failed) return ai;
            match(input,DOT,FOLLOW_DOT_in_virtual_processor_implementation8479); if (state.failed) return ai;
            eiid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_implementation8483); if (state.failed) return ai;
            if ( state.backtracking==0 ) {

              			if (!(iid.getText().equalsIgnoreCase(eiid.getText())) || !(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"virtual processor implementation", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_virtual_processor_implementation8490); if (state.failed) return ai;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "virtual_processor_implementation"


    // $ANTLR start "implementation_reference_prototype_bindings"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2904:1: implementation_reference_prototype_bindings[ComponentImplementationReference cir] : ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN ) ;
    public final void implementation_reference_prototype_bindings(ComponentImplementationReference cir) throws RecognitionException {
        PrototypeBinding pb = null;

        PrototypeBinding pb1 = null;




        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2907:1: ( ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2908:5: ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2908:5: ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2908:7: LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_implementation_reference_prototype_bindings8623); if (state.failed) return ;
            pushFollow(FOLLOW_prototype_binding_in_implementation_reference_prototype_bindings8627);
            pb=prototype_binding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

                      cir.getOwnedPrototypeBindings().add(pb);
                    
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2912:7: ( COMMA pb1= prototype_binding )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==COMMA) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2912:8: COMMA pb1= prototype_binding
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_implementation_reference_prototype_bindings8644); if (state.failed) return ;
            	    pushFollow(FOLLOW_prototype_binding_in_implementation_reference_prototype_bindings8648);
            	    pb1=prototype_binding();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	                cir.getOwnedPrototypeBindings().add(pb1);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_implementation_reference_prototype_bindings8674); if (state.failed) return ;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "implementation_reference_prototype_bindings"


    // $ANTLR start "subcomponent_prototype_bindings"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2922:1: subcomponent_prototype_bindings[Subcomponent sc] : ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN ) ;
    public final void subcomponent_prototype_bindings(Subcomponent sc) throws RecognitionException {
        PrototypeBinding pb = null;

        PrototypeBinding pb1 = null;




        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2925:1: ( ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2926:5: ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2926:5: ( LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2926:7: LPAREN pb= prototype_binding ( COMMA pb1= prototype_binding )* RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_subcomponent_prototype_bindings8702); if (state.failed) return ;
            pushFollow(FOLLOW_prototype_binding_in_subcomponent_prototype_bindings8706);
            pb=prototype_binding();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

                      sc.getOwnedPrototypeBindings().add(pb);
                    
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2930:7: ( COMMA pb1= prototype_binding )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==COMMA) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2930:8: COMMA pb1= prototype_binding
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_subcomponent_prototype_bindings8723); if (state.failed) return ;
            	    pushFollow(FOLLOW_prototype_binding_in_subcomponent_prototype_bindings8727);
            	    pb1=prototype_binding();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	                sc.getOwnedPrototypeBindings().add(pb1);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_subcomponent_prototype_bindings8753); if (state.failed) return ;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "subcomponent_prototype_bindings"


    // $ANTLR start "subcomponent_properties"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2939:1: subcomponent_properties[Subcomponent sc] : LCURLY ( (cpa= contained_property_association ) )+ RCURLY ;
    public final void subcomponent_properties(Subcomponent sc) throws RecognitionException {
        PropertyAssociation cpa = null;



          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2942:3: ( LCURLY ( (cpa= contained_property_association ) )+ RCURLY )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2943:3: LCURLY ( (cpa= contained_property_association ) )+ RCURLY
            {
            match(input,LCURLY,FOLLOW_LCURLY_in_subcomponent_properties8780); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2944:5: ( (cpa= contained_property_association ) )+
            int cnt207=0;
            loop207:
            do {
                int alt207=2;
                int LA207_0 = input.LA(1);

                if ( (LA207_0==IDENT) ) {
                    alt207=1;
                }


                switch (alt207) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2945:7: (cpa= contained_property_association )
            	    {
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2945:7: (cpa= contained_property_association )
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2945:8: cpa= contained_property_association
            	    {
            	    pushFollow(FOLLOW_contained_property_association_in_subcomponent_properties8797);
            	    cpa=contained_property_association();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	                sc.getOwnedPropertyAssociations().add(cpa);
            	              
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt207 >= 1 ) break loop207;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(207, input);
                        throw eee;
                }
                cnt207++;
            } while (true);

            match(input,RCURLY,FOLLOW_RCURLY_in_subcomponent_properties8827); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "subcomponent_properties"


    // $ANTLR start "subcomponent_array_element_references"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2954:1: subcomponent_array_element_references[Subcomponent sc] : (l= LPAREN cr1= classifier_reference ( implementation_reference_prototype_bindings[cir] )? (c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )? )* RPAREN ) ;
    public final void subcomponent_array_element_references(Subcomponent sc) throws RecognitionException {
        Token l=null;
        Token c=null;
        ReferenceRecord cr1 = null;

        ReferenceRecord cr2 = null;



          ComponentImplementationReference cir=null;
          ComponentImplementationReference cir2=null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2959:3: ( (l= LPAREN cr1= classifier_reference ( implementation_reference_prototype_bindings[cir] )? (c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )? )* RPAREN ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2960:5: (l= LPAREN cr1= classifier_reference ( implementation_reference_prototype_bindings[cir] )? (c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )? )* RPAREN )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2960:5: (l= LPAREN cr1= classifier_reference ( implementation_reference_prototype_bindings[cir] )? (c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )? )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2960:7: l= LPAREN cr1= classifier_reference ( implementation_reference_prototype_bindings[cir] )? (c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )? )* RPAREN
            {
            l=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_subcomponent_array_element_references8858); if (state.failed) return ;
            pushFollow(FOLLOW_classifier_reference_in_subcomponent_array_element_references8862);
            cr1=classifier_reference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

                        // verify that it is an implementation label
                        if (!cr1.getLabels()[cr1.getLabels().length-1].contains(".")){
                           throw new FailedPredicateException(input, "subcomponent array element references", "array element reference '"+cr1.getLabels()[0]+"' is not an implementation reference ");
                        }
                         cir = Aadl2F.createComponentImplementationReference();
                         cir.setLocationReference(this.getFilename(), l.getLine());
                        sc.getImplementationReferences().add(cir);
                        cr1.setReferenceType(ParserReferenceType.ArrayElementClassifierReference);
                        cr1.setReferencingObject(cir);
                        unresolvedReferences.add(cr1);
                      
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2973:9: ( implementation_reference_prototype_bindings[cir] )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==LPAREN) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2973:10: implementation_reference_prototype_bindings[cir]
                    {
                    pushFollow(FOLLOW_implementation_reference_prototype_bindings_in_subcomponent_array_element_references8883);
                    implementation_reference_prototype_bindings(cir);

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2975:7: (c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )? )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==COMMA) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2975:8: c= COMMA cr2= classifier_reference ( implementation_reference_prototype_bindings[cir2] )?
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_subcomponent_array_element_references8906); if (state.failed) return ;
            	    pushFollow(FOLLOW_classifier_reference_in_subcomponent_array_element_references8910);
            	    cr2=classifier_reference();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	                // verify that it is an implementation label
            	                if (!cr2.getLabels()[cr1.getLabels().length-1].contains(".")){
            	                   throw new FailedPredicateException(input, "subcomponent array element references", "array element reference '"+cr2.getLabels()[0]+"' is not an implementation reference ");
            	                }
            	                cir2 = Aadl2F.createComponentImplementationReference();
            	                cir2.setLocationReference(this.getFilename(), c.getLine());
            	                sc.getImplementationReferences().add(cir2);
            	                cr2.setReferenceType(ParserReferenceType.ArrayElementClassifierReference);
            	                cr2.setReferencingObject(cir2);
            	                unresolvedReferences.add(cr2);
            	              
            	    }
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2988:9: ( implementation_reference_prototype_bindings[cir2] )?
            	    int alt209=2;
            	    int LA209_0 = input.LA(1);

            	    if ( (LA209_0==LPAREN) ) {
            	        alt209=1;
            	    }
            	    switch (alt209) {
            	        case 1 :
            	            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:2988:10: implementation_reference_prototype_bindings[cir2]
            	            {
            	            pushFollow(FOLLOW_implementation_reference_prototype_bindings_in_subcomponent_array_element_references8931);
            	            implementation_reference_prototype_bindings(cir2);

            	            state._fsp--;
            	            if (state.failed) return ;

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_subcomponent_array_element_references8960); if (state.failed) return ;

            }


            }

        }
        catch (RecognitionException ex) {

                  reportError(ex);
                  consumeUntil(input,SEMI);
                  input.consume();
              
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "subcomponent_array_element_references"


    // $ANTLR start "data_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3000:1: data_subcomponent[boolean extension] returns [DataSubcomponent ds] : id= IDENT COLON ( REFINED TO )? DATA (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )? ( subcomponent_properties[ds] )? ( component_in_modes[ds] )? SEMI ;
    public final DataSubcomponent data_subcomponent(boolean extension) throws RecognitionException {
        DataSubcomponent ds = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3004:2: (id= IDENT COLON ( REFINED TO )? DATA (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )? ( subcomponent_properties[ds] )? ( component_in_modes[ds] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3005:2: id= IDENT COLON ( REFINED TO )? DATA (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )? ( subcomponent_properties[ds] )? ( component_in_modes[ds] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_subcomponent9002); if (state.failed) return ds;
            match(input,COLON,FOLLOW_COLON_in_data_subcomponent9004); if (state.failed) return ds;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3006:2: ( REFINED TO )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==REFINED) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3006:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_data_subcomponent9008); if (state.failed) return ds;
                    match(input,TO,FOLLOW_TO_in_data_subcomponent9010); if (state.failed) return ds;
                    if ( state.backtracking==0 ) {

                      		  if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                      		  }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,DATA,FOLLOW_DATA_in_data_subcomponent9022); if (state.failed) return ds;
            if ( state.backtracking==0 ) {

              			ds = Aadl2F.createDataSubcomponent();
              			ds.setName(id.getText());
              			ds.setLocationReference(this.getFilename(),id.getLine());
              			if (refinement){
              			  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
              			                                           ds,
              			                                           new String[]{id.getText()}
              			                                           );
                      unresolvedReferences.add(rr);			                                           
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3027:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==IDENT) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3027:3: cr= classifier_reference ( subcomponent_prototype_bindings[ds] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_data_subcomponent9033);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ds;
                    if ( state.backtracking==0 ) {

                      		  // if the reference includes a package name we know that it is a classifier
                      		  // if not then it could either be a prototype or a classifier
                      		  cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                      		                                               : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                      		                      );
                      		  cr.setReferencingObject(ds);
                      		  unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3037:3: ( subcomponent_prototype_bindings[ds] )?
                    int alt212=2;
                    int LA212_0 = input.LA(1);

                    if ( (LA212_0==LPAREN) ) {
                        alt212=1;
                    }
                    switch (alt212) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3037:4: subcomponent_prototype_bindings[ds]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_data_subcomponent9042);
                            subcomponent_prototype_bindings(ds);

                            state._fsp--;
                            if (state.failed) return ds;
                            if ( state.backtracking==0 ) {

                              		    // now I know is a classifier reference. Overwrite
                              		    unresolvedReferences.remove(cr);
                              		    cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                              		    unresolvedReferences.add(cr);
                              		  
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3046:2: (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==LBRACK) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3046:3: ad= array_dimensions ( subcomponent_array_element_references[ds] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_data_subcomponent9064);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ds;
                    if ( state.backtracking==0 ) {

                      			ds.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3050:3: ( subcomponent_array_element_references[ds] )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==LPAREN) ) {
                        alt214=1;
                    }
                    switch (alt214) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3050:4: subcomponent_array_element_references[ds]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_data_subcomponent9073);
                            subcomponent_array_element_references(ds);

                            state._fsp--;
                            if (state.failed) return ds;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3053:2: ( subcomponent_properties[ds] )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==LCURLY) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3053:3: subcomponent_properties[ds]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_data_subcomponent9087);
                    subcomponent_properties(ds);

                    state._fsp--;
                    if (state.failed) return ds;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3055:2: ( component_in_modes[ds] )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==IN) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3056:2: component_in_modes[ds]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_data_subcomponent9098);
                    component_in_modes(ds);

                    state._fsp--;
                    if (state.failed) return ds;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_data_subcomponent9106); if (state.failed) return ds;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ds;
    }
    // $ANTLR end "data_subcomponent"


    // $ANTLR start "subprogram_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3066:1: subprogram_subcomponent[boolean extension] returns [SubprogramSubcomponent ss] : id= IDENT COLON ( REFINED TO )? SUBPROGRAM (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI ;
    public final SubprogramSubcomponent subprogram_subcomponent(boolean extension) throws RecognitionException {
        SubprogramSubcomponent ss = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3070:2: (id= IDENT COLON ( REFINED TO )? SUBPROGRAM (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3071:2: id= IDENT COLON ( REFINED TO )? SUBPROGRAM (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_subcomponent9146); if (state.failed) return ss;
            match(input,COLON,FOLLOW_COLON_in_subprogram_subcomponent9148); if (state.failed) return ss;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3072:2: ( REFINED TO )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==REFINED) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3072:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_subprogram_subcomponent9152); if (state.failed) return ss;
                    match(input,TO,FOLLOW_TO_in_subprogram_subcomponent9154); if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                      		  if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_subcomponent9166); if (state.failed) return ss;
            if ( state.backtracking==0 ) {

              			ss = Aadl2F.createSubprogramSubcomponent();
              			ss.setName(id.getText());
              			ss.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ss,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3093:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( (LA220_0==IDENT) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3093:3: cr= classifier_reference ( subcomponent_prototype_bindings[ss] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_subprogram_subcomponent9177);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ss);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3103:5: ( subcomponent_prototype_bindings[ss] )?
                    int alt219=2;
                    int LA219_0 = input.LA(1);

                    if ( (LA219_0==LPAREN) ) {
                        alt219=1;
                    }
                    switch (alt219) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3103:6: subcomponent_prototype_bindings[ss]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_subprogram_subcomponent9188);
                            subcomponent_prototype_bindings(ss);

                            state._fsp--;
                            if (state.failed) return ss;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3112:3: (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==LBRACK) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3112:4: ad= array_dimensions ( subcomponent_array_element_references[ss] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_subprogram_subcomponent9216);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                      			ss.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3116:5: ( subcomponent_array_element_references[ss] )?
                    int alt221=2;
                    int LA221_0 = input.LA(1);

                    if ( (LA221_0==LPAREN) ) {
                        alt221=1;
                    }
                    switch (alt221) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3116:6: subcomponent_array_element_references[ss]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_subprogram_subcomponent9227);
                            subcomponent_array_element_references(ss);

                            state._fsp--;
                            if (state.failed) return ss;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3119:3: ( subcomponent_properties[ss] )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==LCURLY) ) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3119:4: subcomponent_properties[ss]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_subprogram_subcomponent9244);
                    subcomponent_properties(ss);

                    state._fsp--;
                    if (state.failed) return ss;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3121:2: ( component_in_modes[ss] )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==IN) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3122:2: component_in_modes[ss]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_subprogram_subcomponent9256);
                    component_in_modes(ss);

                    state._fsp--;
                    if (state.failed) return ss;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_subprogram_subcomponent9264); if (state.failed) return ss;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ss;
    }
    // $ANTLR end "subprogram_subcomponent"


    // $ANTLR start "subprogram_group_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3132:1: subprogram_group_subcomponent[boolean extension] returns [SubprogramGroupSubcomponent ss] : id= IDENT COLON ( REFINED TO )? SUBPROGRAM GROUP (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI ;
    public final SubprogramGroupSubcomponent subprogram_group_subcomponent(boolean extension) throws RecognitionException {
        SubprogramGroupSubcomponent ss = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3136:2: (id= IDENT COLON ( REFINED TO )? SUBPROGRAM GROUP (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3137:2: id= IDENT COLON ( REFINED TO )? SUBPROGRAM GROUP (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_subcomponent9305); if (state.failed) return ss;
            match(input,COLON,FOLLOW_COLON_in_subprogram_group_subcomponent9307); if (state.failed) return ss;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3138:2: ( REFINED TO )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==REFINED) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3138:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_subprogram_group_subcomponent9311); if (state.failed) return ss;
                    match(input,TO,FOLLOW_TO_in_subprogram_group_subcomponent9313); if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_group_subcomponent9325); if (state.failed) return ss;
            match(input,GROUP,FOLLOW_GROUP_in_subprogram_group_subcomponent9327); if (state.failed) return ss;
            if ( state.backtracking==0 ) {

              			ss = Aadl2F.createSubprogramGroupSubcomponent();
              			ss.setName(id.getText());
              			ss.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ss,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3159:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==IDENT) ) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3159:3: cr= classifier_reference ( subcomponent_prototype_bindings[ss] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_subprogram_group_subcomponent9337);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ss);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3169:5: ( subcomponent_prototype_bindings[ss] )?
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==LPAREN) ) {
                        alt226=1;
                    }
                    switch (alt226) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3169:6: subcomponent_prototype_bindings[ss]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_subprogram_group_subcomponent9348);
                            subcomponent_prototype_bindings(ss);

                            state._fsp--;
                            if (state.failed) return ss;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3178:2: (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==LBRACK) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3178:3: ad= array_dimensions ( subcomponent_array_element_references[ss] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_subprogram_group_subcomponent9375);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                      			ss.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3182:5: ( subcomponent_array_element_references[ss] )?
                    int alt228=2;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==LPAREN) ) {
                        alt228=1;
                    }
                    switch (alt228) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3182:6: subcomponent_array_element_references[ss]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_subprogram_group_subcomponent9386);
                            subcomponent_array_element_references(ss);

                            state._fsp--;
                            if (state.failed) return ss;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3185:3: ( subcomponent_properties[ss] )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==LCURLY) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3185:4: subcomponent_properties[ss]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_subprogram_group_subcomponent9403);
                    subcomponent_properties(ss);

                    state._fsp--;
                    if (state.failed) return ss;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3187:2: ( component_in_modes[ss] )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==IN) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3188:2: component_in_modes[ss]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_subprogram_group_subcomponent9415);
                    component_in_modes(ss);

                    state._fsp--;
                    if (state.failed) return ss;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_subprogram_group_subcomponent9423); if (state.failed) return ss;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ss;
    }
    // $ANTLR end "subprogram_group_subcomponent"


    // $ANTLR start "thread_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3198:1: thread_subcomponent[boolean extension] returns [ThreadSubcomponent ts] : id= IDENT COLON ( REFINED TO )? THREAD (cr= classifier_reference ( subcomponent_prototype_bindings[ts] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ts] )? )? ( subcomponent_properties[ts] )? ( component_in_modes[ts] )? SEMI ;
    public final ThreadSubcomponent thread_subcomponent(boolean extension) throws RecognitionException {
        ThreadSubcomponent ts = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3202:2: (id= IDENT COLON ( REFINED TO )? THREAD (cr= classifier_reference ( subcomponent_prototype_bindings[ts] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ts] )? )? ( subcomponent_properties[ts] )? ( component_in_modes[ts] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3203:2: id= IDENT COLON ( REFINED TO )? THREAD (cr= classifier_reference ( subcomponent_prototype_bindings[ts] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ts] )? )? ( subcomponent_properties[ts] )? ( component_in_modes[ts] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_subcomponent9464); if (state.failed) return ts;
            match(input,COLON,FOLLOW_COLON_in_thread_subcomponent9466); if (state.failed) return ts;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3204:2: ( REFINED TO )?
            int alt232=2;
            int LA232_0 = input.LA(1);

            if ( (LA232_0==REFINED) ) {
                alt232=1;
            }
            switch (alt232) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3204:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_thread_subcomponent9471); if (state.failed) return ts;
                    match(input,TO,FOLLOW_TO_in_thread_subcomponent9473); if (state.failed) return ts;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,THREAD,FOLLOW_THREAD_in_thread_subcomponent9484); if (state.failed) return ts;
            if ( state.backtracking==0 ) {

              			ts = Aadl2F.createThreadSubcomponent();
              			ts.setName(id.getText());
              			ts.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ts,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3225:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ts] )? )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==IDENT) ) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3225:3: cr= classifier_reference ( subcomponent_prototype_bindings[ts] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_thread_subcomponent9495);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ts;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ts);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3235:5: ( subcomponent_prototype_bindings[ts] )?
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==LPAREN) ) {
                        alt233=1;
                    }
                    switch (alt233) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3235:6: subcomponent_prototype_bindings[ts]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_thread_subcomponent9506);
                            subcomponent_prototype_bindings(ts);

                            state._fsp--;
                            if (state.failed) return ts;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3244:2: (ad= array_dimensions ( subcomponent_array_element_references[ts] )? )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==LBRACK) ) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3244:3: ad= array_dimensions ( subcomponent_array_element_references[ts] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_thread_subcomponent9533);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ts;
                    if ( state.backtracking==0 ) {

                      			ts.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3248:5: ( subcomponent_array_element_references[ts] )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==LPAREN) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3248:6: subcomponent_array_element_references[ts]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_thread_subcomponent9544);
                            subcomponent_array_element_references(ts);

                            state._fsp--;
                            if (state.failed) return ts;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3251:3: ( subcomponent_properties[ts] )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==LCURLY) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3251:4: subcomponent_properties[ts]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_thread_subcomponent9561);
                    subcomponent_properties(ts);

                    state._fsp--;
                    if (state.failed) return ts;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3253:2: ( component_in_modes[ts] )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==IN) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3254:2: component_in_modes[ts]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_thread_subcomponent9573);
                    component_in_modes(ts);

                    state._fsp--;
                    if (state.failed) return ts;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_thread_subcomponent9581); if (state.failed) return ts;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ts;
    }
    // $ANTLR end "thread_subcomponent"


    // $ANTLR start "thread_group_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3264:1: thread_group_subcomponent[boolean extension] returns [ThreadGroupSubcomponent tgs] : id= IDENT COLON ( REFINED TO )? THREAD GROUP (cr= classifier_reference ( subcomponent_prototype_bindings[tgs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[tgs] )? )? ( subcomponent_properties[tgs] )? ( component_in_modes[tgs] )? SEMI ;
    public final ThreadGroupSubcomponent thread_group_subcomponent(boolean extension) throws RecognitionException {
        ThreadGroupSubcomponent tgs = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3268:2: (id= IDENT COLON ( REFINED TO )? THREAD GROUP (cr= classifier_reference ( subcomponent_prototype_bindings[tgs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[tgs] )? )? ( subcomponent_properties[tgs] )? ( component_in_modes[tgs] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3269:2: id= IDENT COLON ( REFINED TO )? THREAD GROUP (cr= classifier_reference ( subcomponent_prototype_bindings[tgs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[tgs] )? )? ( subcomponent_properties[tgs] )? ( component_in_modes[tgs] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_subcomponent9622); if (state.failed) return tgs;
            match(input,COLON,FOLLOW_COLON_in_thread_group_subcomponent9624); if (state.failed) return tgs;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3270:2: ( REFINED TO )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==REFINED) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3270:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_thread_group_subcomponent9628); if (state.failed) return tgs;
                    match(input,TO,FOLLOW_TO_in_thread_group_subcomponent9630); if (state.failed) return tgs;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,THREAD,FOLLOW_THREAD_in_thread_group_subcomponent9643); if (state.failed) return tgs;
            match(input,GROUP,FOLLOW_GROUP_in_thread_group_subcomponent9645); if (state.failed) return tgs;
            if ( state.backtracking==0 ) {

              			tgs = Aadl2F.createThreadGroupSubcomponent();
              			tgs.setName(id.getText());
              			tgs.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               tgs,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3291:2: (cr= classifier_reference ( subcomponent_prototype_bindings[tgs] )? )?
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==IDENT) ) {
                alt241=1;
            }
            switch (alt241) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3291:3: cr= classifier_reference ( subcomponent_prototype_bindings[tgs] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_thread_group_subcomponent9656);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return tgs;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(tgs);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3301:5: ( subcomponent_prototype_bindings[tgs] )?
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==LPAREN) ) {
                        alt240=1;
                    }
                    switch (alt240) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3301:6: subcomponent_prototype_bindings[tgs]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_thread_group_subcomponent9667);
                            subcomponent_prototype_bindings(tgs);

                            state._fsp--;
                            if (state.failed) return tgs;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3310:2: (ad= array_dimensions ( subcomponent_array_element_references[tgs] )? )?
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==LBRACK) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3310:3: ad= array_dimensions ( subcomponent_array_element_references[tgs] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_thread_group_subcomponent9694);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return tgs;
                    if ( state.backtracking==0 ) {

                      			tgs.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3314:5: ( subcomponent_array_element_references[tgs] )?
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==LPAREN) ) {
                        alt242=1;
                    }
                    switch (alt242) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3314:6: subcomponent_array_element_references[tgs]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_thread_group_subcomponent9705);
                            subcomponent_array_element_references(tgs);

                            state._fsp--;
                            if (state.failed) return tgs;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3317:3: ( subcomponent_properties[tgs] )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==LCURLY) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3317:4: subcomponent_properties[tgs]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_thread_group_subcomponent9722);
                    subcomponent_properties(tgs);

                    state._fsp--;
                    if (state.failed) return tgs;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3319:2: ( component_in_modes[tgs] )?
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==IN) ) {
                alt245=1;
            }
            switch (alt245) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3320:2: component_in_modes[tgs]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_thread_group_subcomponent9734);
                    component_in_modes(tgs);

                    state._fsp--;
                    if (state.failed) return tgs;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_thread_group_subcomponent9742); if (state.failed) return tgs;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return tgs;
    }
    // $ANTLR end "thread_group_subcomponent"


    // $ANTLR start "process_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3330:1: process_subcomponent[boolean extension] returns [ProcessSubcomponent ps] : id= IDENT COLON ( REFINED TO )? PROCESS (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )? ( subcomponent_properties[ps] )? ( component_in_modes[ps] )? SEMI ;
    public final ProcessSubcomponent process_subcomponent(boolean extension) throws RecognitionException {
        ProcessSubcomponent ps = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3334:2: (id= IDENT COLON ( REFINED TO )? PROCESS (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )? ( subcomponent_properties[ps] )? ( component_in_modes[ps] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3335:2: id= IDENT COLON ( REFINED TO )? PROCESS (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )? ( subcomponent_properties[ps] )? ( component_in_modes[ps] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_subcomponent9782); if (state.failed) return ps;
            match(input,COLON,FOLLOW_COLON_in_process_subcomponent9784); if (state.failed) return ps;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3336:2: ( REFINED TO )?
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==REFINED) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3336:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_process_subcomponent9788); if (state.failed) return ps;
                    match(input,TO,FOLLOW_TO_in_process_subcomponent9790); if (state.failed) return ps;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,PROCESS,FOLLOW_PROCESS_in_process_subcomponent9802); if (state.failed) return ps;
            if ( state.backtracking==0 ) {

              			ps = Aadl2F.createProcessSubcomponent();
              			ps.setName(id.getText());
              			ps.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ps,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3357:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==IDENT) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3357:3: cr= classifier_reference ( subcomponent_prototype_bindings[ps] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_process_subcomponent9813);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ps;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ps);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3367:5: ( subcomponent_prototype_bindings[ps] )?
                    int alt247=2;
                    int LA247_0 = input.LA(1);

                    if ( (LA247_0==LPAREN) ) {
                        alt247=1;
                    }
                    switch (alt247) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3367:6: subcomponent_prototype_bindings[ps]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_process_subcomponent9824);
                            subcomponent_prototype_bindings(ps);

                            state._fsp--;
                            if (state.failed) return ps;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3376:2: (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==LBRACK) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3376:3: ad= array_dimensions ( subcomponent_array_element_references[ps] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_process_subcomponent9851);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ps;
                    if ( state.backtracking==0 ) {

                      			ps.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3380:5: ( subcomponent_array_element_references[ps] )?
                    int alt249=2;
                    int LA249_0 = input.LA(1);

                    if ( (LA249_0==LPAREN) ) {
                        alt249=1;
                    }
                    switch (alt249) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3380:6: subcomponent_array_element_references[ps]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_process_subcomponent9862);
                            subcomponent_array_element_references(ps);

                            state._fsp--;
                            if (state.failed) return ps;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3383:3: ( subcomponent_properties[ps] )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==LCURLY) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3383:4: subcomponent_properties[ps]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_process_subcomponent9879);
                    subcomponent_properties(ps);

                    state._fsp--;
                    if (state.failed) return ps;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3385:2: ( component_in_modes[ps] )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==IN) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3386:2: component_in_modes[ps]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_process_subcomponent9891);
                    component_in_modes(ps);

                    state._fsp--;
                    if (state.failed) return ps;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_process_subcomponent9899); if (state.failed) return ps;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ps;
    }
    // $ANTLR end "process_subcomponent"


    // $ANTLR start "processor_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3396:1: processor_subcomponent[boolean extension] returns [ProcessorSubcomponent ps] : id= IDENT COLON ( REFINED TO )? PROCESSOR (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )? ( subcomponent_properties[ps] )? ( component_in_modes[ps] )? SEMI ;
    public final ProcessorSubcomponent processor_subcomponent(boolean extension) throws RecognitionException {
        ProcessorSubcomponent ps = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3400:2: (id= IDENT COLON ( REFINED TO )? PROCESSOR (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )? ( subcomponent_properties[ps] )? ( component_in_modes[ps] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3401:2: id= IDENT COLON ( REFINED TO )? PROCESSOR (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )? ( subcomponent_properties[ps] )? ( component_in_modes[ps] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_subcomponent9939); if (state.failed) return ps;
            match(input,COLON,FOLLOW_COLON_in_processor_subcomponent9941); if (state.failed) return ps;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3402:2: ( REFINED TO )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==REFINED) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3402:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_processor_subcomponent9945); if (state.failed) return ps;
                    match(input,TO,FOLLOW_TO_in_processor_subcomponent9947); if (state.failed) return ps;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_processor_subcomponent9960); if (state.failed) return ps;
            if ( state.backtracking==0 ) {

              			ps = Aadl2F.createProcessorSubcomponent();
              			ps.setName(id.getText());
              			ps.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ps,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3423:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ps] )? )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==IDENT) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3423:3: cr= classifier_reference ( subcomponent_prototype_bindings[ps] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_processor_subcomponent9971);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ps;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ps);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3433:5: ( subcomponent_prototype_bindings[ps] )?
                    int alt254=2;
                    int LA254_0 = input.LA(1);

                    if ( (LA254_0==LPAREN) ) {
                        alt254=1;
                    }
                    switch (alt254) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3433:6: subcomponent_prototype_bindings[ps]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_processor_subcomponent9982);
                            subcomponent_prototype_bindings(ps);

                            state._fsp--;
                            if (state.failed) return ps;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3442:2: (ad= array_dimensions ( subcomponent_array_element_references[ps] )? )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==LBRACK) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3442:3: ad= array_dimensions ( subcomponent_array_element_references[ps] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_processor_subcomponent10009);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ps;
                    if ( state.backtracking==0 ) {

                      			ps.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3446:5: ( subcomponent_array_element_references[ps] )?
                    int alt256=2;
                    int LA256_0 = input.LA(1);

                    if ( (LA256_0==LPAREN) ) {
                        alt256=1;
                    }
                    switch (alt256) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3446:6: subcomponent_array_element_references[ps]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_processor_subcomponent10020);
                            subcomponent_array_element_references(ps);

                            state._fsp--;
                            if (state.failed) return ps;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3449:3: ( subcomponent_properties[ps] )?
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==LCURLY) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3449:4: subcomponent_properties[ps]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_processor_subcomponent10037);
                    subcomponent_properties(ps);

                    state._fsp--;
                    if (state.failed) return ps;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3451:2: ( component_in_modes[ps] )?
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==IN) ) {
                alt259=1;
            }
            switch (alt259) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3452:2: component_in_modes[ps]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_processor_subcomponent10049);
                    component_in_modes(ps);

                    state._fsp--;
                    if (state.failed) return ps;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_processor_subcomponent10057); if (state.failed) return ps;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ps;
    }
    // $ANTLR end "processor_subcomponent"


    // $ANTLR start "virtual_processor_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3462:1: virtual_processor_subcomponent[boolean extension] returns [VirtualProcessorSubcomponent vps] : id= IDENT COLON ( REFINED TO )? VIRTUAL PROCESSOR (cr= classifier_reference ( subcomponent_prototype_bindings[vps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[vps] )? )? ( subcomponent_properties[vps] )? ( component_in_modes[vps] )? SEMI ;
    public final VirtualProcessorSubcomponent virtual_processor_subcomponent(boolean extension) throws RecognitionException {
        VirtualProcessorSubcomponent vps = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3466:2: (id= IDENT COLON ( REFINED TO )? VIRTUAL PROCESSOR (cr= classifier_reference ( subcomponent_prototype_bindings[vps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[vps] )? )? ( subcomponent_properties[vps] )? ( component_in_modes[vps] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3467:2: id= IDENT COLON ( REFINED TO )? VIRTUAL PROCESSOR (cr= classifier_reference ( subcomponent_prototype_bindings[vps] )? )? (ad= array_dimensions ( subcomponent_array_element_references[vps] )? )? ( subcomponent_properties[vps] )? ( component_in_modes[vps] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_subcomponent10097); if (state.failed) return vps;
            match(input,COLON,FOLLOW_COLON_in_virtual_processor_subcomponent10099); if (state.failed) return vps;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3468:2: ( REFINED TO )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==REFINED) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3468:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_virtual_processor_subcomponent10103); if (state.failed) return vps;
                    match(input,TO,FOLLOW_TO_in_virtual_processor_subcomponent10105); if (state.failed) return vps;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,VIRTUAL,FOLLOW_VIRTUAL_in_virtual_processor_subcomponent10117); if (state.failed) return vps;
            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_virtual_processor_subcomponent10119); if (state.failed) return vps;
            if ( state.backtracking==0 ) {

              			vps = Aadl2F.createVirtualProcessorSubcomponent();
              			vps.setName(id.getText());
              			vps.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               vps,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3489:2: (cr= classifier_reference ( subcomponent_prototype_bindings[vps] )? )?
            int alt262=2;
            int LA262_0 = input.LA(1);

            if ( (LA262_0==IDENT) ) {
                alt262=1;
            }
            switch (alt262) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3489:3: cr= classifier_reference ( subcomponent_prototype_bindings[vps] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_virtual_processor_subcomponent10130);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return vps;
                    if ( state.backtracking==0 ) {
                      	
                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(vps);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3499:5: ( subcomponent_prototype_bindings[vps] )?
                    int alt261=2;
                    int LA261_0 = input.LA(1);

                    if ( (LA261_0==LPAREN) ) {
                        alt261=1;
                    }
                    switch (alt261) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3499:6: subcomponent_prototype_bindings[vps]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_virtual_processor_subcomponent10141);
                            subcomponent_prototype_bindings(vps);

                            state._fsp--;
                            if (state.failed) return vps;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3508:2: (ad= array_dimensions ( subcomponent_array_element_references[vps] )? )?
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==LBRACK) ) {
                alt264=1;
            }
            switch (alt264) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3508:3: ad= array_dimensions ( subcomponent_array_element_references[vps] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_virtual_processor_subcomponent10168);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return vps;
                    if ( state.backtracking==0 ) {

                      			vps.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3512:5: ( subcomponent_array_element_references[vps] )?
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==LPAREN) ) {
                        alt263=1;
                    }
                    switch (alt263) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3512:6: subcomponent_array_element_references[vps]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_virtual_processor_subcomponent10179);
                            subcomponent_array_element_references(vps);

                            state._fsp--;
                            if (state.failed) return vps;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3515:3: ( subcomponent_properties[vps] )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==LCURLY) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3515:4: subcomponent_properties[vps]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_virtual_processor_subcomponent10196);
                    subcomponent_properties(vps);

                    state._fsp--;
                    if (state.failed) return vps;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3517:2: ( component_in_modes[vps] )?
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==IN) ) {
                alt266=1;
            }
            switch (alt266) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3518:2: component_in_modes[vps]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_virtual_processor_subcomponent10208);
                    component_in_modes(vps);

                    state._fsp--;
                    if (state.failed) return vps;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_virtual_processor_subcomponent10216); if (state.failed) return vps;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return vps;
    }
    // $ANTLR end "virtual_processor_subcomponent"


    // $ANTLR start "memory_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3528:1: memory_subcomponent[boolean extension] returns [MemorySubcomponent ms] : id= IDENT COLON ( REFINED TO )? MEMORY (cr= classifier_reference ( subcomponent_prototype_bindings[ms] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ms] )? )? ( subcomponent_properties[ms] )? ( component_in_modes[ms] )? SEMI ;
    public final MemorySubcomponent memory_subcomponent(boolean extension) throws RecognitionException {
        MemorySubcomponent ms = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3532:2: (id= IDENT COLON ( REFINED TO )? MEMORY (cr= classifier_reference ( subcomponent_prototype_bindings[ms] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ms] )? )? ( subcomponent_properties[ms] )? ( component_in_modes[ms] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3533:2: id= IDENT COLON ( REFINED TO )? MEMORY (cr= classifier_reference ( subcomponent_prototype_bindings[ms] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ms] )? )? ( subcomponent_properties[ms] )? ( component_in_modes[ms] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_subcomponent10256); if (state.failed) return ms;
            match(input,COLON,FOLLOW_COLON_in_memory_subcomponent10258); if (state.failed) return ms;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3534:2: ( REFINED TO )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==REFINED) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3534:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_memory_subcomponent10262); if (state.failed) return ms;
                    match(input,TO,FOLLOW_TO_in_memory_subcomponent10264); if (state.failed) return ms;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,MEMORY,FOLLOW_MEMORY_in_memory_subcomponent10276); if (state.failed) return ms;
            if ( state.backtracking==0 ) {

              			ms = Aadl2F.createMemorySubcomponent();
              			ms.setName(id.getText());
              			ms.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ms,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3555:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ms] )? )?
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==IDENT) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3555:3: cr= classifier_reference ( subcomponent_prototype_bindings[ms] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_memory_subcomponent10287);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ms;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ms);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3565:5: ( subcomponent_prototype_bindings[ms] )?
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( (LA268_0==LPAREN) ) {
                        alt268=1;
                    }
                    switch (alt268) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3565:6: subcomponent_prototype_bindings[ms]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_memory_subcomponent10298);
                            subcomponent_prototype_bindings(ms);

                            state._fsp--;
                            if (state.failed) return ms;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3574:2: (ad= array_dimensions ( subcomponent_array_element_references[ms] )? )?
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==LBRACK) ) {
                alt271=1;
            }
            switch (alt271) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3574:3: ad= array_dimensions ( subcomponent_array_element_references[ms] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_memory_subcomponent10325);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ms;
                    if ( state.backtracking==0 ) {

                      			ms.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3578:5: ( subcomponent_array_element_references[ms] )?
                    int alt270=2;
                    int LA270_0 = input.LA(1);

                    if ( (LA270_0==LPAREN) ) {
                        alt270=1;
                    }
                    switch (alt270) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3578:6: subcomponent_array_element_references[ms]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_memory_subcomponent10336);
                            subcomponent_array_element_references(ms);

                            state._fsp--;
                            if (state.failed) return ms;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3581:3: ( subcomponent_properties[ms] )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==LCURLY) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3581:4: subcomponent_properties[ms]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_memory_subcomponent10353);
                    subcomponent_properties(ms);

                    state._fsp--;
                    if (state.failed) return ms;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3583:2: ( component_in_modes[ms] )?
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==IN) ) {
                alt273=1;
            }
            switch (alt273) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3584:2: component_in_modes[ms]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_memory_subcomponent10365);
                    component_in_modes(ms);

                    state._fsp--;
                    if (state.failed) return ms;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_memory_subcomponent10373); if (state.failed) return ms;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ms;
    }
    // $ANTLR end "memory_subcomponent"


    // $ANTLR start "bus_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3594:1: bus_subcomponent[boolean extension] returns [BusSubcomponent bs] : id= IDENT COLON ( REFINED TO )? BUS (cr= classifier_reference ( subcomponent_prototype_bindings[bs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[bs] )? )? ( subcomponent_properties[bs] )? ( component_in_modes[bs] )? SEMI ;
    public final BusSubcomponent bus_subcomponent(boolean extension) throws RecognitionException {
        BusSubcomponent bs = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3598:2: (id= IDENT COLON ( REFINED TO )? BUS (cr= classifier_reference ( subcomponent_prototype_bindings[bs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[bs] )? )? ( subcomponent_properties[bs] )? ( component_in_modes[bs] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3599:2: id= IDENT COLON ( REFINED TO )? BUS (cr= classifier_reference ( subcomponent_prototype_bindings[bs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[bs] )? )? ( subcomponent_properties[bs] )? ( component_in_modes[bs] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_subcomponent10413); if (state.failed) return bs;
            match(input,COLON,FOLLOW_COLON_in_bus_subcomponent10415); if (state.failed) return bs;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3600:2: ( REFINED TO )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==REFINED) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3600:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_bus_subcomponent10419); if (state.failed) return bs;
                    match(input,TO,FOLLOW_TO_in_bus_subcomponent10421); if (state.failed) return bs;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,BUS,FOLLOW_BUS_in_bus_subcomponent10433); if (state.failed) return bs;
            if ( state.backtracking==0 ) {

              			bs = Aadl2F.createBusSubcomponent();
              			bs.setName(id.getText());
              			bs.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               bs,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3621:2: (cr= classifier_reference ( subcomponent_prototype_bindings[bs] )? )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==IDENT) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3621:3: cr= classifier_reference ( subcomponent_prototype_bindings[bs] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_bus_subcomponent10444);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return bs;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(bs);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3631:5: ( subcomponent_prototype_bindings[bs] )?
                    int alt275=2;
                    int LA275_0 = input.LA(1);

                    if ( (LA275_0==LPAREN) ) {
                        alt275=1;
                    }
                    switch (alt275) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3631:6: subcomponent_prototype_bindings[bs]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_bus_subcomponent10455);
                            subcomponent_prototype_bindings(bs);

                            state._fsp--;
                            if (state.failed) return bs;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3640:2: (ad= array_dimensions ( subcomponent_array_element_references[bs] )? )?
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==LBRACK) ) {
                alt278=1;
            }
            switch (alt278) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3640:3: ad= array_dimensions ( subcomponent_array_element_references[bs] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_bus_subcomponent10482);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return bs;
                    if ( state.backtracking==0 ) {

                      			bs.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3644:5: ( subcomponent_array_element_references[bs] )?
                    int alt277=2;
                    int LA277_0 = input.LA(1);

                    if ( (LA277_0==LPAREN) ) {
                        alt277=1;
                    }
                    switch (alt277) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3644:6: subcomponent_array_element_references[bs]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_bus_subcomponent10493);
                            subcomponent_array_element_references(bs);

                            state._fsp--;
                            if (state.failed) return bs;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3647:3: ( subcomponent_properties[bs] )?
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==LCURLY) ) {
                alt279=1;
            }
            switch (alt279) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3647:4: subcomponent_properties[bs]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_bus_subcomponent10510);
                    subcomponent_properties(bs);

                    state._fsp--;
                    if (state.failed) return bs;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3649:2: ( component_in_modes[bs] )?
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==IN) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3650:2: component_in_modes[bs]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_bus_subcomponent10522);
                    component_in_modes(bs);

                    state._fsp--;
                    if (state.failed) return bs;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_bus_subcomponent10530); if (state.failed) return bs;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return bs;
    }
    // $ANTLR end "bus_subcomponent"


    // $ANTLR start "virtual_bus_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3660:1: virtual_bus_subcomponent[boolean extension] returns [VirtualBusSubcomponent vbs] : id= IDENT COLON ( REFINED TO )? VIRTUAL BUS (cr= classifier_reference ( subcomponent_prototype_bindings[vbs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[vbs] )? )? ( subcomponent_properties[vbs] )? ( component_in_modes[vbs] )? SEMI ;
    public final VirtualBusSubcomponent virtual_bus_subcomponent(boolean extension) throws RecognitionException {
        VirtualBusSubcomponent vbs = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3664:2: (id= IDENT COLON ( REFINED TO )? VIRTUAL BUS (cr= classifier_reference ( subcomponent_prototype_bindings[vbs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[vbs] )? )? ( subcomponent_properties[vbs] )? ( component_in_modes[vbs] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3665:2: id= IDENT COLON ( REFINED TO )? VIRTUAL BUS (cr= classifier_reference ( subcomponent_prototype_bindings[vbs] )? )? (ad= array_dimensions ( subcomponent_array_element_references[vbs] )? )? ( subcomponent_properties[vbs] )? ( component_in_modes[vbs] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_subcomponent10570); if (state.failed) return vbs;
            match(input,COLON,FOLLOW_COLON_in_virtual_bus_subcomponent10572); if (state.failed) return vbs;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3666:2: ( REFINED TO )?
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==REFINED) ) {
                alt281=1;
            }
            switch (alt281) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3666:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_virtual_bus_subcomponent10576); if (state.failed) return vbs;
                    match(input,TO,FOLLOW_TO_in_virtual_bus_subcomponent10578); if (state.failed) return vbs;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,VIRTUAL,FOLLOW_VIRTUAL_in_virtual_bus_subcomponent10590); if (state.failed) return vbs;
            match(input,BUS,FOLLOW_BUS_in_virtual_bus_subcomponent10592); if (state.failed) return vbs;
            if ( state.backtracking==0 ) {

              			vbs = Aadl2F.createVirtualBusSubcomponent();
              			vbs.setName(id.getText());
              			vbs.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               vbs,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3687:2: (cr= classifier_reference ( subcomponent_prototype_bindings[vbs] )? )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==IDENT) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3687:3: cr= classifier_reference ( subcomponent_prototype_bindings[vbs] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_virtual_bus_subcomponent10603);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return vbs;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(vbs);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3697:5: ( subcomponent_prototype_bindings[vbs] )?
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==LPAREN) ) {
                        alt282=1;
                    }
                    switch (alt282) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3697:6: subcomponent_prototype_bindings[vbs]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_virtual_bus_subcomponent10614);
                            subcomponent_prototype_bindings(vbs);

                            state._fsp--;
                            if (state.failed) return vbs;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3706:2: (ad= array_dimensions ( subcomponent_array_element_references[vbs] )? )?
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==LBRACK) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3706:3: ad= array_dimensions ( subcomponent_array_element_references[vbs] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_virtual_bus_subcomponent10641);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return vbs;
                    if ( state.backtracking==0 ) {

                      			vbs.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3710:5: ( subcomponent_array_element_references[vbs] )?
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==LPAREN) ) {
                        alt284=1;
                    }
                    switch (alt284) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3710:6: subcomponent_array_element_references[vbs]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_virtual_bus_subcomponent10652);
                            subcomponent_array_element_references(vbs);

                            state._fsp--;
                            if (state.failed) return vbs;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3713:3: ( subcomponent_properties[vbs] )?
            int alt286=2;
            int LA286_0 = input.LA(1);

            if ( (LA286_0==LCURLY) ) {
                alt286=1;
            }
            switch (alt286) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3713:4: subcomponent_properties[vbs]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_virtual_bus_subcomponent10669);
                    subcomponent_properties(vbs);

                    state._fsp--;
                    if (state.failed) return vbs;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3715:2: ( component_in_modes[vbs] )?
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==IN) ) {
                alt287=1;
            }
            switch (alt287) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3716:2: component_in_modes[vbs]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_virtual_bus_subcomponent10681);
                    component_in_modes(vbs);

                    state._fsp--;
                    if (state.failed) return vbs;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_virtual_bus_subcomponent10689); if (state.failed) return vbs;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return vbs;
    }
    // $ANTLR end "virtual_bus_subcomponent"


    // $ANTLR start "device_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3726:1: device_subcomponent[boolean extension] returns [DeviceSubcomponent ds] : id= IDENT COLON ( REFINED TO )? DEVICE (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )? ( subcomponent_properties[ds] )? ( component_in_modes[ds] )? SEMI ;
    public final DeviceSubcomponent device_subcomponent(boolean extension) throws RecognitionException {
        DeviceSubcomponent ds = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3730:2: (id= IDENT COLON ( REFINED TO )? DEVICE (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )? ( subcomponent_properties[ds] )? ( component_in_modes[ds] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3731:2: id= IDENT COLON ( REFINED TO )? DEVICE (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )? ( subcomponent_properties[ds] )? ( component_in_modes[ds] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_subcomponent10730); if (state.failed) return ds;
            match(input,COLON,FOLLOW_COLON_in_device_subcomponent10732); if (state.failed) return ds;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3732:2: ( REFINED TO )?
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==REFINED) ) {
                alt288=1;
            }
            switch (alt288) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3732:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_device_subcomponent10736); if (state.failed) return ds;
                    match(input,TO,FOLLOW_TO_in_device_subcomponent10738); if (state.failed) return ds;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,DEVICE,FOLLOW_DEVICE_in_device_subcomponent10750); if (state.failed) return ds;
            if ( state.backtracking==0 ) {

              			ds = Aadl2F.createDeviceSubcomponent();
              			ds.setName(id.getText());
              			ds.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ds,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3753:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ds] )? )?
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==IDENT) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3753:3: cr= classifier_reference ( subcomponent_prototype_bindings[ds] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_device_subcomponent10761);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ds;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ds);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3763:5: ( subcomponent_prototype_bindings[ds] )?
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==LPAREN) ) {
                        alt289=1;
                    }
                    switch (alt289) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3763:6: subcomponent_prototype_bindings[ds]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_device_subcomponent10772);
                            subcomponent_prototype_bindings(ds);

                            state._fsp--;
                            if (state.failed) return ds;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3772:2: (ad= array_dimensions ( subcomponent_array_element_references[ds] )? )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==LBRACK) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3772:3: ad= array_dimensions ( subcomponent_array_element_references[ds] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_device_subcomponent10799);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ds;
                    if ( state.backtracking==0 ) {

                      			ds.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3776:5: ( subcomponent_array_element_references[ds] )?
                    int alt291=2;
                    int LA291_0 = input.LA(1);

                    if ( (LA291_0==LPAREN) ) {
                        alt291=1;
                    }
                    switch (alt291) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3776:6: subcomponent_array_element_references[ds]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_device_subcomponent10810);
                            subcomponent_array_element_references(ds);

                            state._fsp--;
                            if (state.failed) return ds;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3779:3: ( subcomponent_properties[ds] )?
            int alt293=2;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==LCURLY) ) {
                alt293=1;
            }
            switch (alt293) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3779:4: subcomponent_properties[ds]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_device_subcomponent10827);
                    subcomponent_properties(ds);

                    state._fsp--;
                    if (state.failed) return ds;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3781:2: ( component_in_modes[ds] )?
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==IN) ) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3782:2: component_in_modes[ds]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_device_subcomponent10839);
                    component_in_modes(ds);

                    state._fsp--;
                    if (state.failed) return ds;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_device_subcomponent10847); if (state.failed) return ds;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ds;
    }
    // $ANTLR end "device_subcomponent"


    // $ANTLR start "system_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3792:1: system_subcomponent[boolean extension] returns [SystemSubcomponent ss] : id= IDENT COLON ( REFINED TO )? SYSTEM (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI ;
    public final SystemSubcomponent system_subcomponent(boolean extension) throws RecognitionException {
        SystemSubcomponent ss = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3796:2: (id= IDENT COLON ( REFINED TO )? SYSTEM (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3797:2: id= IDENT COLON ( REFINED TO )? SYSTEM (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )? (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )? ( subcomponent_properties[ss] )? ( component_in_modes[ss] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_subcomponent10888); if (state.failed) return ss;
            match(input,COLON,FOLLOW_COLON_in_system_subcomponent10890); if (state.failed) return ss;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3798:2: ( REFINED TO )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==REFINED) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3798:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_system_subcomponent10894); if (state.failed) return ss;
                    match(input,TO,FOLLOW_TO_in_system_subcomponent10896); if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,SYSTEM,FOLLOW_SYSTEM_in_system_subcomponent10908); if (state.failed) return ss;
            if ( state.backtracking==0 ) {

              			ss = Aadl2F.createSystemSubcomponent();
              			ss.setName(id.getText());
              			ss.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               ss,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3819:2: (cr= classifier_reference ( subcomponent_prototype_bindings[ss] )? )?
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==IDENT) ) {
                alt297=1;
            }
            switch (alt297) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3819:3: cr= classifier_reference ( subcomponent_prototype_bindings[ss] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_system_subcomponent10919);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(ss);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3829:5: ( subcomponent_prototype_bindings[ss] )?
                    int alt296=2;
                    int LA296_0 = input.LA(1);

                    if ( (LA296_0==LPAREN) ) {
                        alt296=1;
                    }
                    switch (alt296) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3829:6: subcomponent_prototype_bindings[ss]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_system_subcomponent10930);
                            subcomponent_prototype_bindings(ss);

                            state._fsp--;
                            if (state.failed) return ss;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3838:2: (ad= array_dimensions ( subcomponent_array_element_references[ss] )? )?
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==LBRACK) ) {
                alt299=1;
            }
            switch (alt299) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3838:3: ad= array_dimensions ( subcomponent_array_element_references[ss] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_system_subcomponent10957);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return ss;
                    if ( state.backtracking==0 ) {

                      			ss.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3842:5: ( subcomponent_array_element_references[ss] )?
                    int alt298=2;
                    int LA298_0 = input.LA(1);

                    if ( (LA298_0==LPAREN) ) {
                        alt298=1;
                    }
                    switch (alt298) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3842:6: subcomponent_array_element_references[ss]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_system_subcomponent10968);
                            subcomponent_array_element_references(ss);

                            state._fsp--;
                            if (state.failed) return ss;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3845:3: ( subcomponent_properties[ss] )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==LCURLY) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3845:4: subcomponent_properties[ss]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_system_subcomponent10985);
                    subcomponent_properties(ss);

                    state._fsp--;
                    if (state.failed) return ss;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3847:2: ( component_in_modes[ss] )?
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==IN) ) {
                alt301=1;
            }
            switch (alt301) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3848:2: component_in_modes[ss]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_system_subcomponent10997);
                    component_in_modes(ss);

                    state._fsp--;
                    if (state.failed) return ss;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_system_subcomponent11005); if (state.failed) return ss;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ss;
    }
    // $ANTLR end "system_subcomponent"


    // $ANTLR start "abstract_subcomponent"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3858:1: abstract_subcomponent[boolean extension] returns [AbstractSubcomponent as] : id= IDENT COLON ( REFINED TO )? ABSTRACT (cr= classifier_reference ( subcomponent_prototype_bindings[as] )? )? (ad= array_dimensions ( subcomponent_array_element_references[as] )? )? ( subcomponent_properties[as] )? ( component_in_modes[as] )? SEMI ;
    public final AbstractSubcomponent abstract_subcomponent(boolean extension) throws RecognitionException {
        AbstractSubcomponent as = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;



        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3862:2: (id= IDENT COLON ( REFINED TO )? ABSTRACT (cr= classifier_reference ( subcomponent_prototype_bindings[as] )? )? (ad= array_dimensions ( subcomponent_array_element_references[as] )? )? ( subcomponent_properties[as] )? ( component_in_modes[as] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3863:2: id= IDENT COLON ( REFINED TO )? ABSTRACT (cr= classifier_reference ( subcomponent_prototype_bindings[as] )? )? (ad= array_dimensions ( subcomponent_array_element_references[as] )? )? ( subcomponent_properties[as] )? ( component_in_modes[as] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_subcomponent11045); if (state.failed) return as;
            match(input,COLON,FOLLOW_COLON_in_abstract_subcomponent11047); if (state.failed) return as;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3864:2: ( REFINED TO )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==REFINED) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3864:4: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_abstract_subcomponent11052); if (state.failed) return as;
                    match(input,TO,FOLLOW_TO_in_abstract_subcomponent11054); if (state.failed) return as;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"subcomponent ", "refinement only allowed in extension");
                            }
                      			refinement = true;
                      		
                    }

                    }
                    break;

            }

            match(input,ABSTRACT,FOLLOW_ABSTRACT_in_abstract_subcomponent11066); if (state.failed) return as;
            if ( state.backtracking==0 ) {

              			as = Aadl2F.createAbstractSubcomponent();
              			as.setName(id.getText());
              			as.setLocationReference(this.getFilename(),id.getLine());
                    if (refinement){
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.SubcomponentRefinementReference,
                                                               as,
                                                               new String[]{id.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                
                    }
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3885:2: (cr= classifier_reference ( subcomponent_prototype_bindings[as] )? )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==IDENT) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3885:3: cr= classifier_reference ( subcomponent_prototype_bindings[as] )?
                    {
                    pushFollow(FOLLOW_classifier_reference_in_abstract_subcomponent11077);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return as;
                    if ( state.backtracking==0 ) {

                            // if the reference includes a package name we know that it is a classifier
                            // if not then it could either be a prototype or a classifier
                            cr.setReferenceType((cr.getLabels().length >1) ? ParserReferenceType.SubcomponentClassifierReference
                                                                         : ParserReferenceType.SubcomponentPrototypeOrClassifierReference
                                                );
                            cr.setReferencingObject(as);
                            unresolvedReferences.add(cr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3895:5: ( subcomponent_prototype_bindings[as] )?
                    int alt303=2;
                    int LA303_0 = input.LA(1);

                    if ( (LA303_0==LPAREN) ) {
                        alt303=1;
                    }
                    switch (alt303) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3895:6: subcomponent_prototype_bindings[as]
                            {
                            pushFollow(FOLLOW_subcomponent_prototype_bindings_in_abstract_subcomponent11088);
                            subcomponent_prototype_bindings(as);

                            state._fsp--;
                            if (state.failed) return as;
                            if ( state.backtracking==0 ) {

                                      // now I know is a classifier reference. Overwrite
                                      unresolvedReferences.remove(cr);
                                      cr.setReferenceType(ParserReferenceType.SubcomponentClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3904:2: (ad= array_dimensions ( subcomponent_array_element_references[as] )? )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==LBRACK) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3904:3: ad= array_dimensions ( subcomponent_array_element_references[as] )?
                    {
                    pushFollow(FOLLOW_array_dimensions_in_abstract_subcomponent11115);
                    ad=array_dimensions();

                    state._fsp--;
                    if (state.failed) return as;
                    if ( state.backtracking==0 ) {

                      			as.setArraySpecification(ad);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3908:5: ( subcomponent_array_element_references[as] )?
                    int alt305=2;
                    int LA305_0 = input.LA(1);

                    if ( (LA305_0==LPAREN) ) {
                        alt305=1;
                    }
                    switch (alt305) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3908:6: subcomponent_array_element_references[as]
                            {
                            pushFollow(FOLLOW_subcomponent_array_element_references_in_abstract_subcomponent11126);
                            subcomponent_array_element_references(as);

                            state._fsp--;
                            if (state.failed) return as;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3911:3: ( subcomponent_properties[as] )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==LCURLY) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3911:4: subcomponent_properties[as]
                    {
                    pushFollow(FOLLOW_subcomponent_properties_in_abstract_subcomponent11143);
                    subcomponent_properties(as);

                    state._fsp--;
                    if (state.failed) return as;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3913:2: ( component_in_modes[as] )?
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==IN) ) {
                alt308=1;
            }
            switch (alt308) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3914:2: component_in_modes[as]
                    {
                    pushFollow(FOLLOW_component_in_modes_in_abstract_subcomponent11155);
                    component_in_modes(as);

                    state._fsp--;
                    if (state.failed) return as;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_abstract_subcomponent11163); if (state.failed) return as;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return as;
    }
    // $ANTLR end "abstract_subcomponent"


    // $ANTLR start "prototype"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3955:1: prototype[boolean extension] returns [Prototype prototype] : id= IDENT COLON ( REFINED TO )? ( (cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )? ) | ( FEATURE GROUP (cr= classifier_reference )? ) | ( ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? ) ) ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final Prototype prototype(boolean extension) throws RecognitionException {
        Prototype prototype = null;

        Token id=null;
        ComponentCategory cc = null;

        ReferenceRecord cr = null;

        PropertyAssociation pa = null;



            boolean refinement=false;
            DirectionType direction=DirectionType.IN_OUT;
            ComponentPrototype cp=null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3961:3: (id= IDENT COLON ( REFINED TO )? ( (cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )? ) | ( FEATURE GROUP (cr= classifier_reference )? ) | ( ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? ) ) ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3962:3: id= IDENT COLON ( REFINED TO )? ( (cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )? ) | ( FEATURE GROUP (cr= classifier_reference )? ) | ( ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? ) ) ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_prototype11247); if (state.failed) return prototype;
            match(input,COLON,FOLLOW_COLON_in_prototype11249); if (state.failed) return prototype;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3963:3: ( REFINED TO )?
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==REFINED) ) {
                alt309=1;
            }
            switch (alt309) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3963:4: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_prototype11254); if (state.failed) return prototype;
                    match(input,TO,FOLLOW_TO_in_prototype11256); if (state.failed) return prototype;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"prototypes", "refinement only allowed in extensions");
                            }
                            refinement=true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3971:3: ( (cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )? ) | ( FEATURE GROUP (cr= classifier_reference )? ) | ( ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? ) )
            int alt315=3;
            switch ( input.LA(1) ) {
            case ABSTRACT:
            case BUS:
            case DATA:
            case DEVICE:
            case MEMORY:
            case PROCESS:
            case PROCESSOR:
            case SUBPROGRAM:
            case SYSTEM:
            case THREAD:
            case VIRTUAL:
                {
                alt315=1;
                }
                break;
            case FEATURE:
                {
                int LA315_2 = input.LA(2);

                if ( (LA315_2==GROUP) ) {
                    alt315=2;
                }
                else if ( ((LA315_2>=SEMI && LA315_2<=IDENT)||LA315_2==LCURLY) ) {
                    alt315=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return prototype;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 315, 2, input);

                    throw nvae;
                }
                }
                break;
            case IN:
            case OUT:
                {
                alt315=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return prototype;}
                NoViableAltException nvae =
                    new NoViableAltException("", 315, 0, input);

                throw nvae;
            }

            switch (alt315) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3972:3: (cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3972:3: (cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3972:4: cc= component_category (cr= classifier_reference )? ( LBRACK RBRACK )?
                    {
                    pushFollow(FOLLOW_component_category_in_prototype11278);
                    cc=component_category();

                    state._fsp--;
                    if (state.failed) return prototype;
                    if ( state.backtracking==0 ) {

                              cp= Aadl2F.createComponentPrototype();
                              cp.setLocationReference(this.getFilename(), id.getLine());
                              cp.setName(id.getText());
                              cp.setCategory(cc);
                              prototype = cp;
                              if (refinement){
                                  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.ComponentPrototypeRefinementReference,
                                                                                            cp,
                                                                                            new String[]{id.getText()}
                                                                                            );
                                  unresolvedReferences.add(rr);
                              }
                            
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3987:7: (cr= classifier_reference )?
                    int alt310=2;
                    int LA310_0 = input.LA(1);

                    if ( (LA310_0==IDENT) ) {
                        alt310=1;
                    }
                    switch (alt310) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3987:8: cr= classifier_reference
                            {
                            pushFollow(FOLLOW_classifier_reference_in_prototype11297);
                            cr=classifier_reference();

                            state._fsp--;
                            if (state.failed) return prototype;
                            if ( state.backtracking==0 ) {

                                      cr.setReferencingObject(prototype);
                                      cr.setReferenceType(ParserReferenceType.ComponentPrototypeClassifierReference);
                                      unresolvedReferences.add(cr);
                                      
                            }

                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3994:7: ( LBRACK RBRACK )?
                    int alt311=2;
                    int LA311_0 = input.LA(1);

                    if ( (LA311_0==LBRACK) ) {
                        alt311=1;
                    }
                    switch (alt311) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:3994:8: LBRACK RBRACK
                            {
                            match(input,LBRACK,FOLLOW_LBRACK_in_prototype11325); if (state.failed) return prototype;
                            match(input,RBRACK,FOLLOW_RBRACK_in_prototype11327); if (state.failed) return prototype;
                            if ( state.backtracking==0 ) {

                                        cp.setArray(true);
                                      
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4000:4: ( FEATURE GROUP (cr= classifier_reference )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4000:4: ( FEATURE GROUP (cr= classifier_reference )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4000:5: FEATURE GROUP (cr= classifier_reference )?
                    {
                    match(input,FEATURE,FOLLOW_FEATURE_in_prototype11356); if (state.failed) return prototype;
                    match(input,GROUP,FOLLOW_GROUP_in_prototype11358); if (state.failed) return prototype;
                    if ( state.backtracking==0 ) {

                            FeatureGroupPrototype fgp = Aadl2F.createFeatureGroupPrototype();
                            fgp.setLocationReference(this.getFilename(), id.getLine());
                            fgp.setName(id.getText());
                            prototype = fgp;
                            if (refinement){
                              ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FeatureGroupPrototypeRefinementReference,
                                                                                        fgp,
                                                                                        new String[]{id.getText()}
                                                                                        );
                              unresolvedReferences.add(rr);
                            }
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4014:5: (cr= classifier_reference )?
                    int alt312=2;
                    int LA312_0 = input.LA(1);

                    if ( (LA312_0==IDENT) ) {
                        alt312=1;
                    }
                    switch (alt312) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4014:6: cr= classifier_reference
                            {
                            pushFollow(FOLLOW_classifier_reference_in_prototype11373);
                            cr=classifier_reference();

                            state._fsp--;
                            if (state.failed) return prototype;
                            if ( state.backtracking==0 ) {

                                      cr.setReferencingObject(prototype);
                                      cr.setReferenceType(ParserReferenceType.FeatureGroupPrototypeClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4022:4: ( ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4022:4: ( ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4023:5: ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )?
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4023:5: ( ( IN ) | ( OUT ) )?
                    int alt313=3;
                    int LA313_0 = input.LA(1);

                    if ( (LA313_0==IN) ) {
                        alt313=1;
                    }
                    else if ( (LA313_0==OUT) ) {
                        alt313=2;
                    }
                    switch (alt313) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4024:7: ( IN )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4024:7: ( IN )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4024:8: IN
                            {
                            match(input,IN,FOLLOW_IN_in_prototype11412); if (state.failed) return prototype;
                            if ( state.backtracking==0 ) {

                                        direction = DirectionType.IN;
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4029:8: ( OUT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4029:8: ( OUT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4029:9: OUT
                            {
                            match(input,OUT,FOLLOW_OUT_in_prototype11440); if (state.failed) return prototype;
                            if ( state.backtracking==0 ) {

                                        direction = DirectionType.OUT;
                                      
                            }

                            }


                            }
                            break;

                    }

                    match(input,FEATURE,FOLLOW_FEATURE_in_prototype11471); if (state.failed) return prototype;
                    if ( state.backtracking==0 ) {

                                FeaturePrototype fp = Aadl2F.createFeaturePrototype();
                                fp.setLocationReference(this.getFilename(), id.getLine());
                                fp.setName(id.getText());
                                fp.setDirection(direction);
                                prototype=fp;
                                if (refinement){
                                  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FeaturePrototypeRefinementReference,
                                                                                            fp,
                                                                                            new String[]{id.getText()}
                                                                                            );
                                  unresolvedReferences.add(rr);
                                }
                            
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4050:5: (cr= classifier_reference )?
                    int alt314=2;
                    int LA314_0 = input.LA(1);

                    if ( (LA314_0==IDENT) ) {
                        alt314=1;
                    }
                    switch (alt314) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4050:6: cr= classifier_reference
                            {
                            pushFollow(FOLLOW_classifier_reference_in_prototype11490);
                            cr=classifier_reference();

                            state._fsp--;
                            if (state.failed) return prototype;
                            if ( state.backtracking==0 ) {

                                      cr.setReferencingObject(prototype);
                                      cr.setReferenceType(ParserReferenceType.FeaturePrototypeClassifierReference);
                                      unresolvedReferences.add(cr);
                                    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4059:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt317=2;
            int LA317_0 = input.LA(1);

            if ( (LA317_0==LCURLY) ) {
                alt317=1;
            }
            switch (alt317) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4060:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_prototype11521); if (state.failed) return prototype;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4061:4: (pa= property_association )+
                    int cnt316=0;
                    loop316:
                    do {
                        int alt316=2;
                        int LA316_0 = input.LA(1);

                        if ( (LA316_0==IDENT) ) {
                            alt316=1;
                        }


                        switch (alt316) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4061:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_prototype11531);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return prototype;
                    	    if ( state.backtracking==0 ) {

                    	             prototype.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt316 >= 1 ) break loop316;
                    	    if (state.backtracking>0) {state.failed=true; return prototype;}
                                EarlyExitException eee =
                                    new EarlyExitException(316, input);
                                throw eee;
                        }
                        cnt316++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_prototype11548); if (state.failed) return prototype;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_prototype11558); if (state.failed) return prototype;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return prototype;
    }
    // $ANTLR end "prototype"


    // $ANTLR start "none_stmt"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4135:1: none_stmt : NONE SEMI ;
    public final void none_stmt() throws RecognitionException {
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4135:11: ( NONE SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4135:13: NONE SEMI
            {
            match(input,NONE,FOLLOW_NONE_in_none_stmt11647); if (state.failed) return ;
            match(input,SEMI,FOLLOW_SEMI_in_none_stmt11649); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "none_stmt"


    // $ANTLR start "abstract_feature"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4147:1: abstract_feature returns [AbstractFeature af] : fid= IDENT COLON ( REFINED TO )? ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final AbstractFeature abstract_feature() throws RecognitionException {
        AbstractFeature af = null;

        Token fid=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



            DirectionType direction = null;
            boolean refined=false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4152:3: (fid= IDENT COLON ( REFINED TO )? ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4153:3: fid= IDENT COLON ( REFINED TO )? ( ( IN ) | ( OUT ) )? FEATURE (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            fid=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_feature11686); if (state.failed) return af;
            match(input,COLON,FOLLOW_COLON_in_abstract_feature11688); if (state.failed) return af;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4154:3: ( REFINED TO )?
            int alt318=2;
            int LA318_0 = input.LA(1);

            if ( (LA318_0==REFINED) ) {
                alt318=1;
            }
            switch (alt318) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4154:4: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_abstract_feature11693); if (state.failed) return af;
                    match(input,TO,FOLLOW_TO_in_abstract_feature11695); if (state.failed) return af;
                    if ( state.backtracking==0 ) {

                            refined = true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4159:3: ( ( IN ) | ( OUT ) )?
            int alt319=3;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==IN) ) {
                alt319=1;
            }
            else if ( (LA319_0==OUT) ) {
                alt319=2;
            }
            switch (alt319) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4160:5: ( IN )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4160:5: ( IN )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4160:6: IN
                    {
                    match(input,IN,FOLLOW_IN_in_abstract_feature11717); if (state.failed) return af;
                    if ( state.backtracking==0 ) {

                              direction = DirectionType.IN;
                            
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4165:6: ( OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4165:6: ( OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4165:7: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_abstract_feature11739); if (state.failed) return af;
                    if ( state.backtracking==0 ) {

                              direction = DirectionType.OUT;
                            
                    }

                    }


                    }
                    break;

            }

            match(input,FEATURE,FOLLOW_FEATURE_in_abstract_feature11762); if (state.failed) return af;
            if ( state.backtracking==0 ) {

                    af = Aadl2F.createAbstractFeature();
                    af.setName(fid.getText());
                    if (direction != null)
                      af.setDirection(direction);
                    else
                      af.setDirection(DirectionType.IN_OUT);
                    af.setLocationReference(this.getFilename(), fid.getLine());
                    if (refined) {
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.AbstractFeatureRefinementReference,af,new String[]{fid.getText()});
                      unresolvedReferences.add(rr);
                    }
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4185:3: (cr= classifier_reference )?
            int alt320=2;
            int LA320_0 = input.LA(1);

            if ( (LA320_0==IDENT) ) {
                alt320=1;
            }
            switch (alt320) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4185:4: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_abstract_feature11775);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return af;
                    if ( state.backtracking==0 ) {

                            if (cr.getLabels().length > 1){
                      //        if (refined){
                      //          // this should not have a reference to a classifier this is an error
                      //           throw new FailedPredicateException(input,"feature ", "refinement cannot have reference to classifier");
                      //        }
                              cr.setReferenceType(ParserReferenceType.FeatureClassifierReference);
                            } else {
                      //        if (refined){
                      //          cr.setReferenceType(ParserReferenceType.FeaturePrototypeReference);
                      //        } else {
                                cr.setReferenceType(ParserReferenceType.FeatureClassifierOrPrototypeReference);
                      //        }
                            }
                            cr.setReferencingObject(af);
                            unresolvedReferences.add(cr);
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4204:3: (ad= array_dimension )?
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==LBRACK) ) {
                alt321=1;
            }
            switch (alt321) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4204:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_abstract_feature11793);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return af;
                    if ( state.backtracking==0 ) {

                           af.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4209:4: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt323=2;
            int LA323_0 = input.LA(1);

            if ( (LA323_0==LCURLY) ) {
                alt323=1;
            }
            switch (alt323) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4209:5: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_abstract_feature11809); if (state.failed) return af;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4210:4: (pa= property_association )+
                    int cnt322=0;
                    loop322:
                    do {
                        int alt322=2;
                        int LA322_0 = input.LA(1);

                        if ( (LA322_0==IDENT) ) {
                            alt322=1;
                        }


                        switch (alt322) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4210:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_abstract_feature11817);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return af;
                    	    if ( state.backtracking==0 ) {

                    	             af.getOwnedPropertyAssociations().add(pa); 
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt322 >= 1 ) break loop322;
                    	    if (state.backtracking>0) {state.failed=true; return af;}
                                EarlyExitException eee =
                                    new EarlyExitException(322, input);
                                throw eee;
                        }
                        cnt322++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_abstract_feature11835); if (state.failed) return af;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_abstract_feature11847); if (state.failed) return af;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return af;
    }
    // $ANTLR end "abstract_feature"


    // $ANTLR start "feature_group"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4226:1: feature_group[boolean extension] returns [ FeatureGroup fg ] : id= IDENT COLON ( REFINED TO )? ( ( IN ) | ( OUT ) )? FEATURE GROUP ( ( INVERSE OF )? (cr= classifier_reference ) )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final FeatureGroup feature_group(boolean extension) throws RecognitionException {
        FeatureGroup fg = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		boolean refinement = false;
        		DirectionType direction = DirectionType.IN_OUT;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4231:2: (id= IDENT COLON ( REFINED TO )? ( ( IN ) | ( OUT ) )? FEATURE GROUP ( ( INVERSE OF )? (cr= classifier_reference ) )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4232:2: id= IDENT COLON ( REFINED TO )? ( ( IN ) | ( OUT ) )? FEATURE GROUP ( ( INVERSE OF )? (cr= classifier_reference ) )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group11891); if (state.failed) return fg;
            match(input,COLON,FOLLOW_COLON_in_feature_group11893); if (state.failed) return fg;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4233:2: ( REFINED TO )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==REFINED) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4233:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_feature_group11897); if (state.failed) return fg;
                    match(input,TO,FOLLOW_TO_in_feature_group11899); if (state.failed) return fg;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4241:3: ( ( IN ) | ( OUT ) )?
            int alt325=3;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==IN) ) {
                alt325=1;
            }
            else if ( (LA325_0==OUT) ) {
                alt325=2;
            }
            switch (alt325) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4242:4: ( IN )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4242:4: ( IN )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4242:5: IN
                    {
                    match(input,IN,FOLLOW_IN_in_feature_group11918); if (state.failed) return fg;
                    if ( state.backtracking==0 ) {

                             direction=DirectionType.IN;
                           
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4247:5: ( OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4247:5: ( OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4247:6: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_feature_group11937); if (state.failed) return fg;
                    if ( state.backtracking==0 ) {

                             direction = DirectionType.OUT;
                           
                    }

                    }


                    }
                    break;

            }

            match(input,FEATURE,FOLLOW_FEATURE_in_feature_group11957); if (state.failed) return fg;
            match(input,GROUP,FOLLOW_GROUP_in_feature_group11959); if (state.failed) return fg;
            if ( state.backtracking==0 ) {

              			fg = Aadl2F.createFeatureGroup();
              			fg.setName(id.getText());
              			if (direction != null)
              			   fg.setDirection(direction);
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			fg.setLocationReference(lr);
              			if (refinement){
                      ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.FeatureGroupRefinementReference,
                                                                  fg,
                                                                  new String[]{id.getText()}
                                                                  );			 
              				unresolvedReferences.add(refref);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4271:2: ( ( INVERSE OF )? (cr= classifier_reference ) )?
            int alt327=2;
            int LA327_0 = input.LA(1);

            if ( (LA327_0==IDENT||LA327_0==INVERSE) ) {
                alt327=1;
            }
            switch (alt327) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4272:3: ( INVERSE OF )? (cr= classifier_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4272:3: ( INVERSE OF )?
                    int alt326=2;
                    int LA326_0 = input.LA(1);

                    if ( (LA326_0==INVERSE) ) {
                        alt326=1;
                    }
                    switch (alt326) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4272:4: INVERSE OF
                            {
                            match(input,INVERSE,FOLLOW_INVERSE_in_feature_group11971); if (state.failed) return fg;
                            match(input,OF,FOLLOW_OF_in_feature_group11973); if (state.failed) return fg;
                            if ( state.backtracking==0 ) {

                              		    fg.setInverse(true);
                              		  
                            }

                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4277:3: (cr= classifier_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4277:4: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_feature_group11992);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return fg;
                    if ( state.backtracking==0 ) {

                            if (cr.getLabels().length >1){
                      			   // it has a package reference hende it is a 
                      			   // classifier
                      			   cr.setReferenceType(ParserReferenceType.FeatureGroupClassifierReference);
                      			 } else {
                      			   // it could be either prototype or classifier reference 
                      			   cr.setReferenceType(ParserReferenceType.FeatureGroupPrototypeOrClassifierReference);
                      			 }
                      			 cr.setReferencingObject(fg);
                      			 unresolvedReferences.add(cr);
                      			
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4292:3: (ad= array_dimension )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==LBRACK) ) {
                alt328=1;
            }
            switch (alt328) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4292:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_feature_group12013);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return fg;
                    if ( state.backtracking==0 ) {

                           fg.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4297:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==LCURLY) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4297:5: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_feature_group12029); if (state.failed) return fg;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4298:4: (pa= property_association )+
                    int cnt329=0;
                    loop329:
                    do {
                        int alt329=2;
                        int LA329_0 = input.LA(1);

                        if ( (LA329_0==IDENT) ) {
                            alt329=1;
                        }


                        switch (alt329) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4298:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_feature_group12039);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return fg;
                    	    if ( state.backtracking==0 ) {

                    	            fg.getOwnedPropertyAssociations().add(pa);
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt329 >= 1 ) break loop329;
                    	    if (state.backtracking>0) {state.failed=true; return fg;}
                                EarlyExitException eee =
                                    new EarlyExitException(329, input);
                                throw eee;
                        }
                        cnt329++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_feature_group12057); if (state.failed) return fg;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_feature_group12066); if (state.failed) return fg;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return fg;
    }
    // $ANTLR end "feature_group"


    // $ANTLR start "component_prototype_actual"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4325:1: component_prototype_actual[PrototypeBinding pb] returns [PrototypeBinding rpb] : (cc= component_category (cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? ) ) ;
    public final PrototypeBinding component_prototype_actual(PrototypeBinding pb) throws RecognitionException {
        PrototypeBinding rpb = null;

        ComponentCategory cc = null;

        ReferenceRecord cr = null;

        PrototypeBinding pb1 = null;

        PrototypeBinding pb2 = null;



            ComponentReference cmr=null;  
            boolean recursiveBinding=false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4330:3: ( (cc= component_category (cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4331:4: (cc= component_category (cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4331:4: (cc= component_category (cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4331:5: cc= component_category (cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? )
            {
            pushFollow(FOLLOW_component_category_in_component_prototype_actual12130);
            cc=component_category();

            state._fsp--;
            if (state.failed) return rpb;
            if ( state.backtracking==0 ) {

                      if (pb ==null){
                      //XXX: Location
                        rpb = Aadl2F.createComponentPrototypeBinding();
                        pb = rpb;
                      }
                    
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4339:5: (cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4339:6: cr= classifier_reference ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )?
            {
            pushFollow(FOLLOW_classifier_reference_in_component_prototype_actual12147);
            cr=classifier_reference();

            state._fsp--;
            if (state.failed) return rpb;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4340:7: ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )?
            int alt332=2;
            int LA332_0 = input.LA(1);

            if ( (LA332_0==LPAREN) ) {
                alt332=1;
            }
            switch (alt332) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4340:9: LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_component_prototype_actual12157); if (state.failed) return rpb;
                    pushFollow(FOLLOW_prototype_binding_in_component_prototype_actual12161);
                    pb1=prototype_binding();

                    state._fsp--;
                    if (state.failed) return rpb;
                    if ( state.backtracking==0 ) {

                                //XXX: Location
                                  cmr = Aadl2F.createComponentReference();
                                  cmr.setCategory(cc);
                                  ((ComponentPrototypeBinding)pb).getActuals().add(cmr);
                                  cr.setReferenceType(ParserReferenceType.ClassifierReference);
                                  cr.setReferencingObject(cmr);  
                                  cmr.getBindings().add(pb1);
                                  recursiveBinding=true;
                                
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4351:11: (pb2= prototype_binding )*
                    loop331:
                    do {
                        int alt331=2;
                        int LA331_0 = input.LA(1);

                        if ( (LA331_0==IDENT) ) {
                            alt331=1;
                        }


                        switch (alt331) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4351:12: pb2= prototype_binding
                    	    {
                    	    pushFollow(FOLLOW_prototype_binding_in_component_prototype_actual12188);
                    	    pb2=prototype_binding();

                    	    state._fsp--;
                    	    if (state.failed) return rpb;
                    	    if ( state.backtracking==0 ) {

                    	                   cmr.getBindings().add(pb2);
                    	                  
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop331;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_component_prototype_actual12225); if (state.failed) return rpb;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                      if (!recursiveBinding){
                        if (cr.getLabels().length > 1){
                          // it contains a package label, hence it is a classifier
                          //XXX: Location
                            cmr = Aadl2F.createComponentReference();
                            cmr.setCategory(cc);
                            ((ComponentPrototypeBinding)pb).getActuals().add(cmr);
                            cr.setReferenceType(ParserReferenceType.ClassifierReference);
                            cr.setReferencingObject(cmr);
                        } else {
                          // does not contain a package label
                          // neither prototype bindings so it can be
                          // either a component reference or a prototype reference.
                          // this means that we are not going to create any of the references
                          // and we will only have a pointer to the ComponentPrototypeBinding
                          // with a reference to be resolve and transformed into a PrototypeActual
                          // to be added with the getActuals.add();
                          cr.setReferenceType(ParserReferenceType.PrototypeOrClassifierReference);
                          cr.setReferencingObject(pb);
                        
                          // this component category should be added to the final actual
                          // (prototype or component) once the name resolver knows what it is
                          cr.getResolvedObjects().add(cc);
                        }
                      }
                      unresolvedReferences.add(cr);
                    
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rpb;
    }
    // $ANTLR end "component_prototype_actual"


    // $ANTLR start "component_prototype_actual_list"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4390:1: component_prototype_actual_list[PrototypeBinding pb] returns [PrototypeBinding rpb] : LPAREN rpb1= component_prototype_actual[pb] ( COMMA rpb1= component_prototype_actual[rpb] )* RPAREN ;
    public final PrototypeBinding component_prototype_actual_list(PrototypeBinding pb) throws RecognitionException {
        PrototypeBinding rpb = null;

        PrototypeBinding rpb1 = null;



          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4393:3: ( LPAREN rpb1= component_prototype_actual[pb] ( COMMA rpb1= component_prototype_actual[rpb] )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4394:3: LPAREN rpb1= component_prototype_actual[pb] ( COMMA rpb1= component_prototype_actual[rpb] )* RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_component_prototype_actual_list12282); if (state.failed) return rpb;
            pushFollow(FOLLOW_component_prototype_actual_in_component_prototype_actual_list12290);
            rpb1=component_prototype_actual(pb);

            state._fsp--;
            if (state.failed) return rpb;
            if ( state.backtracking==0 ) {

                    rpb = rpb1;
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4399:3: ( COMMA rpb1= component_prototype_actual[rpb] )*
            loop333:
            do {
                int alt333=2;
                int LA333_0 = input.LA(1);

                if ( (LA333_0==COMMA) ) {
                    alt333=1;
                }


                switch (alt333) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4399:4: COMMA rpb1= component_prototype_actual[rpb]
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_component_prototype_actual_list12303); if (state.failed) return rpb;
            	    pushFollow(FOLLOW_component_prototype_actual_in_component_prototype_actual_list12309);
            	    rpb1=component_prototype_actual(rpb);

            	    state._fsp--;
            	    if (state.failed) return rpb;

            	    }
            	    break;

            	default :
            	    break loop333;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_component_prototype_actual_list12320); if (state.failed) return rpb;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rpb;
    }
    // $ANTLR end "component_prototype_actual_list"


    // $ANTLR start "feature_group_type_prototype_actual"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4404:1: feature_group_type_prototype_actual returns [FeatureGroupPrototypeBinding rpb] : f= FEATURE GROUP cr= classifier_reference ( ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? ) ;
    public final FeatureGroupPrototypeBinding feature_group_type_prototype_actual() throws RecognitionException {
        FeatureGroupPrototypeBinding rpb = null;

        Token f=null;
        ReferenceRecord cr = null;

        PrototypeBinding pb1 = null;

        PrototypeBinding pb2 = null;



            FeatureGroupReference fpr=null;
            boolean recursiveBinding=false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4409:3: (f= FEATURE GROUP cr= classifier_reference ( ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4410:3: f= FEATURE GROUP cr= classifier_reference ( ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? )
            {
            f=(Token)match(input,FEATURE,FOLLOW_FEATURE_in_feature_group_type_prototype_actual12347); if (state.failed) return rpb;
            match(input,GROUP,FOLLOW_GROUP_in_feature_group_type_prototype_actual12349); if (state.failed) return rpb;
            if ( state.backtracking==0 ) {

                    rpb = Aadl2F.createFeatureGroupPrototypeBinding();
                    rpb.setLocationReference(this.getFilename(), f.getLine());
                  
            }
            pushFollow(FOLLOW_classifier_reference_in_feature_group_type_prototype_actual12363);
            cr=classifier_reference();

            state._fsp--;
            if (state.failed) return rpb;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4416:7: ( ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4417:7: ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4417:7: ( LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN )?
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==LPAREN) ) {
                alt335=1;
            }
            switch (alt335) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4417:9: LPAREN pb1= prototype_binding (pb2= prototype_binding )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_feature_group_type_prototype_actual12381); if (state.failed) return rpb;
                    pushFollow(FOLLOW_prototype_binding_in_feature_group_type_prototype_actual12385);
                    pb1=prototype_binding();

                    state._fsp--;
                    if (state.failed) return rpb;
                    if ( state.backtracking==0 ) {

                                //XXX: Location
                                  fpr = Aadl2F.createFeatureGroupReference();
                                  rpb.setActual(fpr);
                                  cr.setReferenceType(ParserReferenceType.FeatureGroupTypeReference);
                                  cr.setReferencingObject(fpr);  
                                  fpr.getBindings().add(pb1);
                                  recursiveBinding=true;
                                
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4427:11: (pb2= prototype_binding )*
                    loop334:
                    do {
                        int alt334=2;
                        int LA334_0 = input.LA(1);

                        if ( (LA334_0==IDENT) ) {
                            alt334=1;
                        }


                        switch (alt334) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4427:12: pb2= prototype_binding
                    	    {
                    	    pushFollow(FOLLOW_prototype_binding_in_feature_group_type_prototype_actual12412);
                    	    pb2=prototype_binding();

                    	    state._fsp--;
                    	    if (state.failed) return rpb;
                    	    if ( state.backtracking==0 ) {

                    	                   fpr.getBindings().add(pb2);
                    	                  
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop334;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_feature_group_type_prototype_actual12449); if (state.failed) return rpb;

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

                      if (!recursiveBinding){
                        if (cr.getLabels().length > 1){
                        //XXX: Location
                          FeatureGroupReference fgr  = Aadl2F.createFeatureGroupReference();
                          rpb.setActual(fgr);
                          cr.setReferenceType(ParserReferenceType.FeatureGroupTypeReference);
                          cr.setReferencingObject(fgr);  
                        } else {
                          cr.setReferenceType(ParserReferenceType.PrototypeOrFeatureGroupTypeReference);
                          cr.setReferencingObject(rpb);
                        }
                      }
                      unresolvedReferences.add(cr);
                    
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rpb;
    }
    // $ANTLR end "feature_group_type_prototype_actual"


    // $ANTLR start "feature_prototype_actual"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4453:1: feature_prototype_actual returns [FeaturePrototypeBinding rpb] : ( ( ( ( IN ) | ( OUT ) )? FEATURE fprotid= IDENT ) | ( ( ( IN OUT ) | ( OUT ) | ( IN ) ) ( ( EVENT DATA ) | ( EVENT ) | ( DATA ) ) ( PORT (cr= classifier_reference )? ) ) | ( ( ( REQUIRES ) | ( PROVIDES ) ) ( ( BUS ) | ( DATA ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) ) ACCESS cr= classifier_reference ) );
    public final FeaturePrototypeBinding feature_prototype_actual() throws RecognitionException {
        FeaturePrototypeBinding rpb = null;

        Token fprotid=null;
        ReferenceRecord cr = null;



            PortCategory pCategory=null;
            DirectionType direction=null;
            AccessType accessType = null;
            AccessCategory accessCategory=null;
            boolean portClassifier=false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4461:3: ( ( ( ( IN ) | ( OUT ) )? FEATURE fprotid= IDENT ) | ( ( ( IN OUT ) | ( OUT ) | ( IN ) ) ( ( EVENT DATA ) | ( EVENT ) | ( DATA ) ) ( PORT (cr= classifier_reference )? ) ) | ( ( ( REQUIRES ) | ( PROVIDES ) ) ( ( BUS ) | ( DATA ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) ) ACCESS cr= classifier_reference ) )
            int alt342=3;
            switch ( input.LA(1) ) {
            case IN:
                {
                int LA342_1 = input.LA(2);

                if ( (LA342_1==DATA||LA342_1==OUT||LA342_1==EVENT) ) {
                    alt342=2;
                }
                else if ( (LA342_1==FEATURE) ) {
                    alt342=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return rpb;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 342, 1, input);

                    throw nvae;
                }
                }
                break;
            case OUT:
                {
                int LA342_2 = input.LA(2);

                if ( (LA342_2==FEATURE) ) {
                    alt342=1;
                }
                else if ( (LA342_2==DATA||LA342_2==EVENT) ) {
                    alt342=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return rpb;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 342, 2, input);

                    throw nvae;
                }
                }
                break;
            case FEATURE:
                {
                alt342=1;
                }
                break;
            case REQUIRES:
            case PROVIDES:
                {
                alt342=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return rpb;}
                NoViableAltException nvae =
                    new NoViableAltException("", 342, 0, input);

                throw nvae;
            }

            switch (alt342) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4462:3: ( ( ( IN ) | ( OUT ) )? FEATURE fprotid= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4462:3: ( ( ( IN ) | ( OUT ) )? FEATURE fprotid= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4463:5: ( ( IN ) | ( OUT ) )? FEATURE fprotid= IDENT
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4463:5: ( ( IN ) | ( OUT ) )?
                    int alt336=3;
                    int LA336_0 = input.LA(1);

                    if ( (LA336_0==IN) ) {
                        alt336=1;
                    }
                    else if ( (LA336_0==OUT) ) {
                        alt336=2;
                    }
                    switch (alt336) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4464:7: ( IN )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4464:7: ( IN )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4464:8: IN
                            {
                            match(input,IN,FOLLOW_IN_in_feature_prototype_actual12522); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        direction=DirectionType.IN;
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4469:8: ( OUT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4469:8: ( OUT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4469:9: OUT
                            {
                            match(input,OUT,FOLLOW_OUT_in_feature_prototype_actual12550); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        direction=DirectionType.OUT;
                                      
                            }

                            }


                            }
                            break;

                    }

                    match(input,FEATURE,FOLLOW_FEATURE_in_feature_prototype_actual12581); if (state.failed) return rpb;
                    fprotid=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_prototype_actual12591); if (state.failed) return rpb;
                    if ( state.backtracking==0 ) {

                            //XXX: Location
                              rpb = Aadl2F.createFeaturePrototypeBinding();
                              //XXX: Location
                              FeaturePrototypeReference fpr = Aadl2F.createFeaturePrototypeReference();
                              if (direction != null)
                                fpr.setDirection(direction);
                              rpb.setActual(fpr);  
                              ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FeaturePrototypeReference,
                                                                       fpr,
                                                                       new String[]{fprotid.getText()}
                                                                       );
                              unresolvedReferences.add(rr);
                            
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4492:4: ( ( ( IN OUT ) | ( OUT ) | ( IN ) ) ( ( EVENT DATA ) | ( EVENT ) | ( DATA ) ) ( PORT (cr= classifier_reference )? ) )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4492:4: ( ( ( IN OUT ) | ( OUT ) | ( IN ) ) ( ( EVENT DATA ) | ( EVENT ) | ( DATA ) ) ( PORT (cr= classifier_reference )? ) )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4493:5: ( ( IN OUT ) | ( OUT ) | ( IN ) ) ( ( EVENT DATA ) | ( EVENT ) | ( DATA ) ) ( PORT (cr= classifier_reference )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4493:5: ( ( IN OUT ) | ( OUT ) | ( IN ) )
                    int alt337=3;
                    int LA337_0 = input.LA(1);

                    if ( (LA337_0==IN) ) {
                        int LA337_1 = input.LA(2);

                        if ( (LA337_1==OUT) ) {
                            alt337=1;
                        }
                        else if ( (LA337_1==DATA||LA337_1==EVENT) ) {
                            alt337=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rpb;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 337, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA337_0==OUT) ) {
                        alt337=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return rpb;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 337, 0, input);

                        throw nvae;
                    }
                    switch (alt337) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4494:7: ( IN OUT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4494:7: ( IN OUT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4494:8: IN OUT
                            {
                            match(input,IN,FOLLOW_IN_in_feature_prototype_actual12623); if (state.failed) return rpb;
                            match(input,OUT,FOLLOW_OUT_in_feature_prototype_actual12625); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        direction=DirectionType.IN_OUT;
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4499:8: ( OUT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4499:8: ( OUT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4499:9: OUT
                            {
                            match(input,OUT,FOLLOW_OUT_in_feature_prototype_actual12653); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        direction=DirectionType.OUT;
                                      
                            }

                            }


                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4504:8: ( IN )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4504:8: ( IN )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4504:9: IN
                            {
                            match(input,IN,FOLLOW_IN_in_feature_prototype_actual12681); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        direction = DirectionType.IN;
                                      
                            }

                            }


                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4510:5: ( ( EVENT DATA ) | ( EVENT ) | ( DATA ) )
                    int alt338=3;
                    int LA338_0 = input.LA(1);

                    if ( (LA338_0==EVENT) ) {
                        int LA338_1 = input.LA(2);

                        if ( (LA338_1==DATA) ) {
                            alt338=1;
                        }
                        else if ( (LA338_1==PORT) ) {
                            alt338=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rpb;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 338, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA338_0==DATA) ) {
                        alt338=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return rpb;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 338, 0, input);

                        throw nvae;
                    }
                    switch (alt338) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4511:7: ( EVENT DATA )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4511:7: ( EVENT DATA )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4511:8: EVENT DATA
                            {
                            match(input,EVENT,FOLLOW_EVENT_in_feature_prototype_actual12720); if (state.failed) return rpb;
                            match(input,DATA,FOLLOW_DATA_in_feature_prototype_actual12722); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        pCategory=PortCategory.EVENT_DATA;
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4516:8: ( EVENT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4516:8: ( EVENT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4516:9: EVENT
                            {
                            match(input,EVENT,FOLLOW_EVENT_in_feature_prototype_actual12750); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        pCategory=PortCategory.EVENT;
                                      
                            }

                            }


                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4521:8: ( DATA )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4521:8: ( DATA )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4521:9: DATA
                            {
                            match(input,DATA,FOLLOW_DATA_in_feature_prototype_actual12778); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        pCategory=PortCategory.DATA;
                                      
                            }

                            }


                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4527:5: ( PORT (cr= classifier_reference )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4527:6: PORT (cr= classifier_reference )?
                    {
                    match(input,PORT,FOLLOW_PORT_in_feature_prototype_actual12809); if (state.failed) return rpb;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4528:7: (cr= classifier_reference )?
                    int alt339=2;
                    int LA339_0 = input.LA(1);

                    if ( (LA339_0==IDENT) ) {
                        int LA339_1 = input.LA(2);

                        if ( (LA339_1==EOF||LA339_1==COMMA||LA339_1==IDENT||LA339_1==DOUBLECOLON||LA339_1==RPAREN||LA339_1==DOT) ) {
                            alt339=1;
                        }
                    }
                    switch (alt339) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4528:8: cr= classifier_reference
                            {
                            pushFollow(FOLLOW_classifier_reference_in_feature_prototype_actual12821);
                            cr=classifier_reference();

                            state._fsp--;
                            if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        if (pCategory == PortCategory.EVENT){
                                          throw new FailedPredicateException(input,"feature prototype actual", "an event port cannot have a classifier");
                                        }
                                        //XXX: Location
                                        rpb = Aadl2F.createFeaturePrototypeBinding();
                                        //XXX: Location
                                        PortSpecification ps = Aadl2F.createPortSpecification();
                                        if (direction != null)
                                          ps.setDirection(direction);
                                        if (pCategory !=null)
                                          ps.setCategory(pCategory);
                                        rpb.setActual(ps);
                                        cr.setReferenceType(ParserReferenceType.FeaturePortSpecificationClassifierReference);
                                        cr.setReferencingObject(ps);
                                        unresolvedReferences.add(cr);
                                        portClassifier=true;
                                      
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                              if (!portClassifier){
                              //XXX: Location
                                rpb = Aadl2F.createFeaturePrototypeBinding();
                                //XXX: Location
                                PortSpecification ps = Aadl2F.createPortSpecification();
                                 if (direction != null)
                                  ps.setDirection(direction);
                                if (pCategory !=null)
                                  ps.setCategory(pCategory);
                                rpb.setActual(ps);
                              }
                            
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4563:4: ( ( ( REQUIRES ) | ( PROVIDES ) ) ( ( BUS ) | ( DATA ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) ) ACCESS cr= classifier_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4563:4: ( ( ( REQUIRES ) | ( PROVIDES ) ) ( ( BUS ) | ( DATA ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) ) ACCESS cr= classifier_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4564:5: ( ( REQUIRES ) | ( PROVIDES ) ) ( ( BUS ) | ( DATA ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) ) ACCESS cr= classifier_reference
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4564:5: ( ( REQUIRES ) | ( PROVIDES ) )
                    int alt340=2;
                    int LA340_0 = input.LA(1);

                    if ( (LA340_0==REQUIRES) ) {
                        alt340=1;
                    }
                    else if ( (LA340_0==PROVIDES) ) {
                        alt340=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return rpb;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 340, 0, input);

                        throw nvae;
                    }
                    switch (alt340) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4565:7: ( REQUIRES )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4565:7: ( REQUIRES )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4565:8: REQUIRES
                            {
                            match(input,REQUIRES,FOLLOW_REQUIRES_in_feature_prototype_actual12878); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        accessType = AccessType.REQUIRED;
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4570:8: ( PROVIDES )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4570:8: ( PROVIDES )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4570:9: PROVIDES
                            {
                            match(input,PROVIDES,FOLLOW_PROVIDES_in_feature_prototype_actual12906); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        accessType = AccessType.PROVIDED;
                                      
                            }

                            }


                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4576:5: ( ( BUS ) | ( DATA ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) )
                    int alt341=4;
                    switch ( input.LA(1) ) {
                    case BUS:
                        {
                        alt341=1;
                        }
                        break;
                    case DATA:
                        {
                        alt341=2;
                        }
                        break;
                    case SUBPROGRAM:
                        {
                        int LA341_3 = input.LA(2);

                        if ( (LA341_3==GROUP) ) {
                            alt341=3;
                        }
                        else if ( (LA341_3==ACCESS) ) {
                            alt341=4;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rpb;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 341, 3, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return rpb;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 341, 0, input);

                        throw nvae;
                    }

                    switch (alt341) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4577:7: ( BUS )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4577:7: ( BUS )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4577:8: BUS
                            {
                            match(input,BUS,FOLLOW_BUS_in_feature_prototype_actual12945); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        accessCategory=AccessCategory.BUS;
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4582:8: ( DATA )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4582:8: ( DATA )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4582:9: DATA
                            {
                            match(input,DATA,FOLLOW_DATA_in_feature_prototype_actual12973); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        accessCategory=AccessCategory.DATA;
                                      
                            }

                            }


                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4587:8: ( SUBPROGRAM GROUP )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4587:8: ( SUBPROGRAM GROUP )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4587:9: SUBPROGRAM GROUP
                            {
                            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_feature_prototype_actual13001); if (state.failed) return rpb;
                            match(input,GROUP,FOLLOW_GROUP_in_feature_prototype_actual13003); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        accessCategory=AccessCategory.SUBPROGRAM_GROUP;
                                      
                            }

                            }


                            }
                            break;
                        case 4 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4592:8: ( SUBPROGRAM )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4592:8: ( SUBPROGRAM )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4592:9: SUBPROGRAM
                            {
                            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_feature_prototype_actual13031); if (state.failed) return rpb;
                            if ( state.backtracking==0 ) {

                                        accessCategory=AccessCategory.SUBPROGRAM;
                                      
                            }

                            }


                            }
                            break;

                    }

                    match(input,ACCESS,FOLLOW_ACCESS_in_feature_prototype_actual13060); if (state.failed) return rpb;
                    pushFollow(FOLLOW_classifier_reference_in_feature_prototype_actual13064);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return rpb;
                    if ( state.backtracking==0 ) {

                          //XXX: Location
                            rpb = Aadl2F.createFeaturePrototypeBinding();
                            //XXX: Location
                            AccessSpecification as = Aadl2F.createAccessSpecification();
                            if (accessType != null)
                              as.setKind(accessType);
                            if (accessCategory != null)
                              as.setCategory(accessCategory);       
                            cr.setReferenceType(ParserReferenceType.FeatureAccessSpecificationClassifierReference);
                            cr.setReferencingObject(as);
                            unresolvedReferences.add(cr);
                            rpb.setActual(as);
                          
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return rpb;
    }
    // $ANTLR end "feature_prototype_actual"

    protected static class prototype_binding_scope {
        PrototypeBinding pbret;
    }
    protected Stack prototype_binding_stack = new Stack();


    // $ANTLR start "prototype_binding"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4622:1: prototype_binding returns [PrototypeBinding pb] : protid= IDENT ASSIGN (pb1= feature_group_type_prototype_actual | pb4= component_prototype_actual_list[$prototype_binding::pbret] | pb3= component_prototype_actual[$prototype_binding::pbret] | pb2= feature_prototype_actual ) ;
    public final PrototypeBinding prototype_binding() throws RecognitionException {
        prototype_binding_stack.push(new prototype_binding_scope());
        PrototypeBinding pb = null;

        Token protid=null;
        FeatureGroupPrototypeBinding pb1 = null;

        PrototypeBinding pb4 = null;

        PrototypeBinding pb3 = null;

        FeaturePrototypeBinding pb2 = null;



            pb=null;
            ((prototype_binding_scope)prototype_binding_stack.peek()).pbret =null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4630:3: (protid= IDENT ASSIGN (pb1= feature_group_type_prototype_actual | pb4= component_prototype_actual_list[$prototype_binding::pbret] | pb3= component_prototype_actual[$prototype_binding::pbret] | pb2= feature_prototype_actual ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4631:3: protid= IDENT ASSIGN (pb1= feature_group_type_prototype_actual | pb4= component_prototype_actual_list[$prototype_binding::pbret] | pb3= component_prototype_actual[$prototype_binding::pbret] | pb2= feature_prototype_actual )
            {
            protid=(Token)match(input,IDENT,FOLLOW_IDENT_in_prototype_binding13131); if (state.failed) return pb;
            match(input,ASSIGN,FOLLOW_ASSIGN_in_prototype_binding13133); if (state.failed) return pb;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4632:3: (pb1= feature_group_type_prototype_actual | pb4= component_prototype_actual_list[$prototype_binding::pbret] | pb3= component_prototype_actual[$prototype_binding::pbret] | pb2= feature_prototype_actual )
            int alt343=4;
            switch ( input.LA(1) ) {
            case FEATURE:
                {
                int LA343_1 = input.LA(2);

                if ( (LA343_1==GROUP) ) {
                    alt343=1;
                }
                else if ( (LA343_1==IDENT) ) {
                    alt343=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pb;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 343, 1, input);

                    throw nvae;
                }
                }
                break;
            case LPAREN:
                {
                alt343=2;
                }
                break;
            case ABSTRACT:
            case BUS:
            case DATA:
            case DEVICE:
            case MEMORY:
            case PROCESS:
            case PROCESSOR:
            case SUBPROGRAM:
            case SYSTEM:
            case THREAD:
            case VIRTUAL:
                {
                alt343=3;
                }
                break;
            case IN:
            case OUT:
            case REQUIRES:
            case PROVIDES:
                {
                alt343=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pb;}
                NoViableAltException nvae =
                    new NoViableAltException("", 343, 0, input);

                throw nvae;
            }

            switch (alt343) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4633:3: pb1= feature_group_type_prototype_actual
                    {
                    pushFollow(FOLLOW_feature_group_type_prototype_actual_in_prototype_binding13143);
                    pb1=feature_group_type_prototype_actual();

                    state._fsp--;
                    if (state.failed) return pb;
                    if ( state.backtracking==0 ) {

                                ((prototype_binding_scope)prototype_binding_stack.peek()).pbret = pb1;
                                ReferenceRecord fref = new ReferenceRecord(ParserReferenceType.PrototypeFormalReference,
                                                                     pb1,
                                                                     new String[]{protid.getText()}
                                                                     );
                                unresolvedReferences.add(fref);      
                              
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4643:4: pb4= component_prototype_actual_list[$prototype_binding::pbret]
                    {
                    pushFollow(FOLLOW_component_prototype_actual_list_in_prototype_binding13165);
                    pb4=component_prototype_actual_list(((prototype_binding_scope)prototype_binding_stack.peek()).pbret);

                    state._fsp--;
                    if (state.failed) return pb;
                    if ( state.backtracking==0 ) {

                                ((prototype_binding_scope)prototype_binding_stack.peek()).pbret =pb4;
                                 ReferenceRecord fref = new ReferenceRecord(ParserReferenceType.PrototypeFormalReference,
                                                                     pb4,
                                                                     new String[]{protid.getText()}
                                                                     );
                                unresolvedReferences.add(fref);      
                            
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4652:4: pb3= component_prototype_actual[$prototype_binding::pbret]
                    {
                    pushFollow(FOLLOW_component_prototype_actual_in_prototype_binding13183);
                    pb3=component_prototype_actual(((prototype_binding_scope)prototype_binding_stack.peek()).pbret);

                    state._fsp--;
                    if (state.failed) return pb;
                    if ( state.backtracking==0 ) {

                                ((prototype_binding_scope)prototype_binding_stack.peek()).pbret =pb3;
                                ReferenceRecord fref = new ReferenceRecord(ParserReferenceType.PrototypeFormalReference,
                                                                     pb3,
                                                                     new String[]{protid.getText()}
                                                                     );
                                unresolvedReferences.add(fref);      
                              
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4661:5: pb2= feature_prototype_actual
                    {
                    pushFollow(FOLLOW_feature_prototype_actual_in_prototype_binding13202);
                    pb2=feature_prototype_actual();

                    state._fsp--;
                    if (state.failed) return pb;
                    if ( state.backtracking==0 ) {

                                ((prototype_binding_scope)prototype_binding_stack.peek()).pbret =pb2;
                                ReferenceRecord fref = new ReferenceRecord(ParserReferenceType.PrototypeFormalReference,
                                                                     pb2,
                                                                     new String[]{protid.getText()}
                                                                     );
                                unresolvedReferences.add(fref);      
                              
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                      pb = ((prototype_binding_scope)prototype_binding_stack.peek()).pbret;
                 
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            prototype_binding_stack.pop();
        }
        return pb;
    }
    // $ANTLR end "prototype_binding"


    // $ANTLR start "array_dimension_body"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4725:1: array_dimension_body[ArraySpecification as] : (l= LBRACK ( (il= integer_literal ) | (pid= unique_property_identifier ) )? RBRACK ) ;
    public final void array_dimension_body(ArraySpecification as) throws RecognitionException {
        Token l=null;
        Token il = null;

        ReferenceRecord pid = null;




        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4728:1: ( (l= LBRACK ( (il= integer_literal ) | (pid= unique_property_identifier ) )? RBRACK ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4729:5: (l= LBRACK ( (il= integer_literal ) | (pid= unique_property_identifier ) )? RBRACK )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4729:5: (l= LBRACK ( (il= integer_literal ) | (pid= unique_property_identifier ) )? RBRACK )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4730:5: l= LBRACK ( (il= integer_literal ) | (pid= unique_property_identifier ) )? RBRACK
            {
            l=(Token)match(input,LBRACK,FOLLOW_LBRACK_in_array_dimension_body13307); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4731:7: ( (il= integer_literal ) | (pid= unique_property_identifier ) )?
            int alt344=3;
            int LA344_0 = input.LA(1);

            if ( (LA344_0==INTEGER_LIT) ) {
                alt344=1;
            }
            else if ( (LA344_0==IDENT) ) {
                alt344=2;
            }
            switch (alt344) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4732:7: (il= integer_literal )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4732:7: (il= integer_literal )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4732:8: il= integer_literal
                    {
                    pushFollow(FOLLOW_integer_literal_in_array_dimension_body13327);
                    il=integer_literal();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                                Numeral num = Aadl2F.createNumeral();
                                num.setLocationReference(this.getFilename(), l.getLine());
                                num.setValue(Integer.parseInt(il.getText()));
                                as.getSizes().add(num);
                              
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4740:8: (pid= unique_property_identifier )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4740:8: (pid= unique_property_identifier )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4740:9: pid= unique_property_identifier
                    {
                    pushFollow(FOLLOW_unique_property_identifier_in_array_dimension_body13357);
                    pid=unique_property_identifier();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                                pid.setReferencingObject(as);
                                pid.setReferenceType(ParserReferenceType.DimensionPropertyReference);
                                unresolvedReferences.add(pid);
                              
                    }

                    }


                    }
                    break;

            }

            match(input,RBRACK,FOLLOW_RBRACK_in_array_dimension_body13391); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {

                  	as.setLocationReference(this.getFilename(), l.getLine());
                  
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "array_dimension_body"


    // $ANTLR start "array_dimension"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4755:1: array_dimension returns [ArraySpecification as] : ( array_dimension_body[as] ) ;
    public final ArraySpecification array_dimension() throws RecognitionException {
        ArraySpecification as = null;


            as = Aadl2F.createArraySpecification();
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4759:3: ( ( array_dimension_body[as] ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4760:3: ( array_dimension_body[as] )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4760:3: ( array_dimension_body[as] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4761:3: array_dimension_body[as]
            {
            pushFollow(FOLLOW_array_dimension_body_in_array_dimension13434);
            array_dimension_body(as);

            state._fsp--;
            if (state.failed) return as;

            }

            if ( state.backtracking==0 ) {

                 as.setDimension(1);
                
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return as;
    }
    // $ANTLR end "array_dimension"


    // $ANTLR start "array_dimensions"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4769:1: array_dimensions returns [ArraySpecification as] : ( array_dimension_body[as] )+ ;
    public final ArraySpecification array_dimensions() throws RecognitionException {
        ArraySpecification as = null;


            as = Aadl2F.createArraySpecification();
            int dimension=0;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4774:2: ( ( array_dimension_body[as] )+ )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4775:2: ( array_dimension_body[as] )+
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4775:2: ( array_dimension_body[as] )+
            int cnt345=0;
            loop345:
            do {
                int alt345=2;
                int LA345_0 = input.LA(1);

                if ( (LA345_0==LBRACK) ) {
                    alt345=1;
                }


                switch (alt345) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4776:2: array_dimension_body[as]
            	    {
            	    pushFollow(FOLLOW_array_dimension_body_in_array_dimensions13471);
            	    array_dimension_body(as);

            	    state._fsp--;
            	    if (state.failed) return as;
            	    if ( state.backtracking==0 ) {

            	      	 dimension++;
            	      	
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt345 >= 1 ) break loop345;
            	    if (state.backtracking>0) {state.failed=true; return as;}
                        EarlyExitException eee =
                            new EarlyExitException(345, input);
                        throw eee;
                }
                cnt345++;
            } while (true);

            if ( state.backtracking==0 ) {

              	 as.setDimension(dimension);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return as;
    }
    // $ANTLR end "array_dimensions"


    // $ANTLR start "feature_group_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4786:1: feature_group_type returns [FeatureGroupType fgt] : FEATURE GROUP id= IDENT ( EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN )? )? ( PROTOTYPES ( ( none_stmt ) | ( (pt= prototype[extension] )+ ) ) )? ( FEATURES ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+ )? ( INVERSE OF cr= classifier_reference )? ( PROPERTIES ( ( none_stmt ) | ( (pa= property_association )+ ) ) )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final FeatureGroupType feature_group_type() throws RecognitionException {
        FeatureGroupType fgt = null;

        Token id=null;
        Token eid=null;
        ReferenceRecord cr = null;

        PrototypeBinding pb = null;

        Prototype pt = null;

        Parameter par = null;

        AbstractFeature af = null;

        BusAccess ba = null;

        DataAccess da = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        PropertyAssociation pa = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4790:2: ( FEATURE GROUP id= IDENT ( EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN )? )? ( PROTOTYPES ( ( none_stmt ) | ( (pt= prototype[extension] )+ ) ) )? ( FEATURES ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+ )? ( INVERSE OF cr= classifier_reference )? ( PROPERTIES ( ( none_stmt ) | ( (pa= property_association )+ ) ) )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4791:2: FEATURE GROUP id= IDENT ( EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN )? )? ( PROTOTYPES ( ( none_stmt ) | ( (pt= prototype[extension] )+ ) ) )? ( FEATURES ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+ )? ( INVERSE OF cr= classifier_reference )? ( PROPERTIES ( ( none_stmt ) | ( (pa= property_association )+ ) ) )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,FEATURE,FOLLOW_FEATURE_in_feature_group_type13503); if (state.failed) return fgt;
            match(input,GROUP,FOLLOW_GROUP_in_feature_group_type13505); if (state.failed) return fgt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_type13509); if (state.failed) return fgt;
            if ( state.backtracking==0 ) {

              			fgt = Aadl2F.createFeatureGroupType();
              			fgt.setName(id.getText());
              			fgt.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4798:2: ( EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN )? )?
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==EXTENDS) ) {
                alt348=1;
            }
            switch (alt348) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4798:3: EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN )?
                    {
                    match(input,EXTENDS,FOLLOW_EXTENDS_in_feature_group_type13519); if (state.failed) return fgt;
                    pushFollow(FOLLOW_unique_type_name_in_feature_group_type13525);
                    cr=unique_type_name();

                    state._fsp--;
                    if (state.failed) return fgt;
                    if ( state.backtracking==0 ) {

                      		  extension=true;
                      		  cr.setReferencingObject(fgt);
                      		  cr.setReferenceType(ParserReferenceType.FeatureGroupTypeExtendReference);
                      		  unresolvedReferences.add(cr); 
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4805:3: ( LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN )?
                    int alt347=2;
                    int LA347_0 = input.LA(1);

                    if ( (LA347_0==LPAREN) ) {
                        alt347=1;
                    }
                    switch (alt347) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4805:4: LPAREN pb= prototype_binding ( ( COMMA pb= prototype_binding )* ) RPAREN
                            {
                            match(input,LPAREN,FOLLOW_LPAREN_in_feature_group_type13535); if (state.failed) return fgt;
                            pushFollow(FOLLOW_prototype_binding_in_feature_group_type13539);
                            pb=prototype_binding();

                            state._fsp--;
                            if (state.failed) return fgt;
                            if ( state.backtracking==0 ) {

                              				fgt.getOwnedPrototypeBindings().add(pb);
                              			
                            }
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4809:4: ( ( COMMA pb= prototype_binding )* )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4810:4: ( COMMA pb= prototype_binding )*
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4810:4: ( COMMA pb= prototype_binding )*
                            loop346:
                            do {
                                int alt346=2;
                                int LA346_0 = input.LA(1);

                                if ( (LA346_0==COMMA) ) {
                                    alt346=1;
                                }


                                switch (alt346) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4810:5: COMMA pb= prototype_binding
                            	    {
                            	    match(input,COMMA,FOLLOW_COMMA_in_feature_group_type13555); if (state.failed) return fgt;
                            	    pushFollow(FOLLOW_prototype_binding_in_feature_group_type13559);
                            	    pb=prototype_binding();

                            	    state._fsp--;
                            	    if (state.failed) return fgt;
                            	    if ( state.backtracking==0 ) {

                            	      					fgt.getOwnedPrototypeBindings().add(pb);
                            	      				
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop346;
                                }
                            } while (true);


                            }

                            match(input,RPAREN,FOLLOW_RPAREN_in_feature_group_type13581); if (state.failed) return fgt;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4819:2: ( PROTOTYPES ( ( none_stmt ) | ( (pt= prototype[extension] )+ ) ) )?
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==PROTOTYPES) ) {
                alt351=1;
            }
            switch (alt351) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4819:4: PROTOTYPES ( ( none_stmt ) | ( (pt= prototype[extension] )+ ) )
                    {
                    match(input,PROTOTYPES,FOLLOW_PROTOTYPES_in_feature_group_type13595); if (state.failed) return fgt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4820:3: ( ( none_stmt ) | ( (pt= prototype[extension] )+ ) )
                    int alt350=2;
                    int LA350_0 = input.LA(1);

                    if ( (LA350_0==NONE) ) {
                        alt350=1;
                    }
                    else if ( (LA350_0==IDENT) ) {
                        alt350=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return fgt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 350, 0, input);

                        throw nvae;
                    }
                    switch (alt350) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4821:3: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4821:3: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4821:4: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_feature_group_type13604);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return fgt;
                            if ( state.backtracking==0 ) {

                              				fgt.setNoPrototypes(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4826:4: ( (pt= prototype[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4826:4: ( (pt= prototype[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4827:4: (pt= prototype[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4827:4: (pt= prototype[extension] )+
                            int cnt349=0;
                            loop349:
                            do {
                                int alt349=2;
                                int LA349_0 = input.LA(1);

                                if ( (LA349_0==IDENT) ) {
                                    alt349=1;
                                }


                                switch (alt349) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4827:5: pt= prototype[extension]
                            	    {
                            	    pushFollow(FOLLOW_prototype_in_feature_group_type13628);
                            	    pt=prototype(extension);

                            	    state._fsp--;
                            	    if (state.failed) return fgt;
                            	    if ( state.backtracking==0 ) {

                            	      					fgt.getOwnedPrototypes().add(pt);
                            	      				
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt349 >= 1 ) break loop349;
                            	    if (state.backtracking>0) {state.failed=true; return fgt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(349, input);
                                        throw eee;
                                }
                                cnt349++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4835:2: ( FEATURES ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+ )?
            int alt353=2;
            int LA353_0 = input.LA(1);

            if ( (LA353_0==FEATURES) ) {
                alt353=1;
            }
            switch (alt353) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4835:4: FEATURES ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_feature_group_type13658); if (state.failed) return fgt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4836:3: ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+
                    int cnt352=0;
                    loop352:
                    do {
                        int alt352=11;
                        alt352 = dfa352.predict(input);
                        switch (alt352) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4837:4: (par= parameter[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4837:4: (par= parameter[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4837:5: par= parameter[extension]
                    	    {
                    	    pushFollow(FOLLOW_parameter_in_feature_group_type13672);
                    	    par=parameter(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      		      fgt.getOwnedParameters().add(par);
                    	      		    
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4843:4: (af= abstract_feature )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4843:4: (af= abstract_feature )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4843:5: af= abstract_feature
                    	    {
                    	    pushFollow(FOLLOW_abstract_feature_in_feature_group_type13703);
                    	    af=abstract_feature();

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      		      fgt.getOwnedAbstractFeatures().add(af);
                    	      		    
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4849:3: (ba= bus_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4849:3: (ba= bus_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4849:4: ba= bus_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_bus_access_in_feature_group_type13729);
                    	    ba=bus_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedBusAccesses().add(ba);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4854:5: (da= data_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4854:5: (da= data_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4854:6: da= data_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_data_access_in_feature_group_type13753);
                    	    da=data_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedDataAccesses().add(da);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4859:5: (sa= subprogram_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4859:5: (sa= subprogram_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4859:6: sa= subprogram_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_subprogram_access_in_feature_group_type13777);
                    	    sa=subprogram_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedSubprogramAccesses().add(sa);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4864:5: (sga= subprogram_group_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4864:5: (sga= subprogram_group_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4864:6: sga= subprogram_group_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_subprogram_group_access_in_feature_group_type13801);
                    	    sga=subprogram_group_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedSubprogramGroupAccesses().add(sga);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4869:5: (fg= feature_group[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4869:5: (fg= feature_group[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4869:6: fg= feature_group[extension]
                    	    {
                    	    pushFollow(FOLLOW_feature_group_in_feature_group_type13825);
                    	    fg=feature_group(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedFeatureGroups().add(fg);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4874:5: (dp= data_port[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4874:5: (dp= data_port[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4874:6: dp= data_port[extension]
                    	    {
                    	    pushFollow(FOLLOW_data_port_in_feature_group_type13849);
                    	    dp=data_port(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedDataPorts().add(dp);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4879:5: (edp= event_data_port[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4879:5: (edp= event_data_port[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4879:6: edp= event_data_port[extension]
                    	    {
                    	    pushFollow(FOLLOW_event_data_port_in_feature_group_type13873);
                    	    edp=event_data_port(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedEventDataPorts().add(edp);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4884:5: (ep= event_port[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4884:5: (ep= event_port[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4884:6: ep= event_port[extension]
                    	    {
                    	    pushFollow(FOLLOW_event_port_in_feature_group_type13897);
                    	    ep=event_port(extension);

                    	    state._fsp--;
                    	    if (state.failed) return fgt;
                    	    if ( state.backtracking==0 ) {

                    	      					fgt.getOwnedEventPorts().add(ep);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt352 >= 1 ) break loop352;
                    	    if (state.backtracking>0) {state.failed=true; return fgt;}
                                EarlyExitException eee =
                                    new EarlyExitException(352, input);
                                throw eee;
                        }
                        cnt352++;
                    } while (true);


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4891:2: ( INVERSE OF cr= classifier_reference )?
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==INVERSE) ) {
                alt354=1;
            }
            switch (alt354) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4891:4: INVERSE OF cr= classifier_reference
                    {
                    match(input,INVERSE,FOLLOW_INVERSE_in_feature_group_type13924); if (state.failed) return fgt;
                    match(input,OF,FOLLOW_OF_in_feature_group_type13926); if (state.failed) return fgt;
                    pushFollow(FOLLOW_classifier_reference_in_feature_group_type13930);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return fgt;
                    if ( state.backtracking==0 ) {

                      		  cr.setReferencingObject(fgt);
                      		  cr.setReferenceType(ParserReferenceType.FeatureGroupTypeInverseOfReference);
                      		  unresolvedReferences.add(cr);
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4898:2: ( PROPERTIES ( ( none_stmt ) | ( (pa= property_association )+ ) ) )?
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==PROPERTIES) ) {
                alt357=1;
            }
            switch (alt357) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4898:3: PROPERTIES ( ( none_stmt ) | ( (pa= property_association )+ ) )
                    {
                    match(input,PROPERTIES,FOLLOW_PROPERTIES_in_feature_group_type13942); if (state.failed) return fgt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4899:3: ( ( none_stmt ) | ( (pa= property_association )+ ) )
                    int alt356=2;
                    int LA356_0 = input.LA(1);

                    if ( (LA356_0==NONE) ) {
                        alt356=1;
                    }
                    else if ( (LA356_0==IDENT) ) {
                        alt356=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return fgt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 356, 0, input);

                        throw nvae;
                    }
                    switch (alt356) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4899:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4899:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4899:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_feature_group_type13948);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return fgt;
                            if ( state.backtracking==0 ) {

                              	     // TODO: wait for this method to be put in Classifier
                              	   
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4904:4: ( (pa= property_association )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4904:4: ( (pa= property_association )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4905:5: (pa= property_association )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4905:5: (pa= property_association )+
                            int cnt355=0;
                            loop355:
                            do {
                                int alt355=2;
                                int LA355_0 = input.LA(1);

                                if ( (LA355_0==IDENT) ) {
                                    alt355=1;
                                }


                                switch (alt355) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4905:6: pa= property_association
                            	    {
                            	    pushFollow(FOLLOW_property_association_in_feature_group_type13973);
                            	    pa=property_association();

                            	    state._fsp--;
                            	    if (state.failed) return fgt;
                            	    if ( state.backtracking==0 ) {

                            	      	       fgt.getOwnedPropertyAssociations().add(pa);
                            	      	     
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt355 >= 1 ) break loop355;
                            	    if (state.backtracking>0) {state.failed=true; return fgt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(355, input);
                                        throw eee;
                                }
                                cnt355++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4913:2: (as= annex_subclause )?
            int alt358=2;
            int LA358_0 = input.LA(1);

            if ( (LA358_0==ANNEX) ) {
                alt358=1;
            }
            switch (alt358) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4913:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_feature_group_type14010);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return fgt;
                    if ( state.backtracking==0 ) {
                      	
                      			fgt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_feature_group_type14021); if (state.failed) return fgt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_type14025); if (state.failed) return fgt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText()))){
                  			throw new FailedPredicateException(input,"feature group type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_feature_group_type14032); if (state.failed) return fgt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return fgt;
    }
    // $ANTLR end "feature_group_type"


    // $ANTLR start "type_extension"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4937:1: type_extension[ComponentType ct] : EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )? ;
    public final void type_extension(ComponentType ct) throws RecognitionException {
        ReferenceRecord cr = null;

        PrototypeBinding pb = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4938:2: ( EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4939:2: EXTENDS cr= unique_type_name ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )?
            {
            match(input,EXTENDS,FOLLOW_EXTENDS_in_type_extension14068); if (state.failed) return ;
            pushFollow(FOLLOW_unique_type_name_in_type_extension14074);
            cr=unique_type_name();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		  cr.setReferencingObject(ct);
              		  cr.setReferenceType(ParserReferenceType.ComponentTypeExtensionReference); 
              		  unresolvedReferences.add(cr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4945:3: ( LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN )?
            int alt360=2;
            int LA360_0 = input.LA(1);

            if ( (LA360_0==LPAREN) ) {
                alt360=1;
            }
            switch (alt360) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4945:5: LPAREN pb= prototype_binding ( COMMA pb= prototype_binding )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_type_extension14085); if (state.failed) return ;
                    pushFollow(FOLLOW_prototype_binding_in_type_extension14089);
                    pb=prototype_binding();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				ct.getOwnedPrototypeBindings().add(pb);
                      			
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4949:4: ( COMMA pb= prototype_binding )*
                    loop359:
                    do {
                        int alt359=2;
                        int LA359_0 = input.LA(1);

                        if ( (LA359_0==COMMA) ) {
                            alt359=1;
                        }


                        switch (alt359) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4949:5: COMMA pb= prototype_binding
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_type_extension14100); if (state.failed) return ;
                    	    pushFollow(FOLLOW_prototype_binding_in_type_extension14104);
                    	    pb=prototype_binding();

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					ct.getOwnedPrototypeBindings().add(pb);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop359;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_type_extension14121); if (state.failed) return ;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "type_extension"


    // $ANTLR start "prototypes_for_types"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4958:1: prototypes_for_types[ boolean extension, ComponentType ct] : PROTOTYPES ( none_stmt | ( (pt= prototype[extension] )+ ) ) ;
    public final void prototypes_for_types(boolean extension, ComponentType ct) throws RecognitionException {
        Prototype pt = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4959:2: ( PROTOTYPES ( none_stmt | ( (pt= prototype[extension] )+ ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4960:2: PROTOTYPES ( none_stmt | ( (pt= prototype[extension] )+ ) )
            {
            match(input,PROTOTYPES,FOLLOW_PROTOTYPES_in_prototypes_for_types14140); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4961:3: ( none_stmt | ( (pt= prototype[extension] )+ ) )
            int alt362=2;
            int LA362_0 = input.LA(1);

            if ( (LA362_0==NONE) ) {
                alt362=1;
            }
            else if ( (LA362_0==IDENT) ) {
                alt362=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 362, 0, input);

                throw nvae;
            }
            switch (alt362) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4961:4: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_prototypes_for_types14145);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				ct.setNoPrototypes(true);
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4965:5: ( (pt= prototype[extension] )+ )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4965:5: ( (pt= prototype[extension] )+ )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4966:4: (pt= prototype[extension] )+
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4966:4: (pt= prototype[extension] )+
                    int cnt361=0;
                    loop361:
                    do {
                        int alt361=2;
                        int LA361_0 = input.LA(1);

                        if ( (LA361_0==IDENT) ) {
                            alt361=1;
                        }


                        switch (alt361) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4966:5: pt= prototype[extension]
                    	    {
                    	    pushFollow(FOLLOW_prototype_in_prototypes_for_types14166);
                    	    pt=prototype(extension);

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					ct.getOwnedPrototypes().add(pt);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt361 >= 1 ) break loop361;
                    	    if (state.backtracking>0) {state.failed=true; return ;}
                                EarlyExitException eee =
                                    new EarlyExitException(361, input);
                                throw eee;
                        }
                        cnt361++;
                    } while (true);


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "prototypes_for_types"


    // $ANTLR start "modes_for_types"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4975:1: modes_for_types[ComponentType tt] : ( ( REQUIRES MODES ( (md= mode )+ ) | none_stmt ) | ( MODES ( (md= mode )* (mt= mode_transition[tt] )* ) | none_stmt ) );
    public final void modes_for_types(ComponentType tt) throws RecognitionException {
        Mode md = null;

        ModeTransition mt = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4976:1: ( ( REQUIRES MODES ( (md= mode )+ ) | none_stmt ) | ( MODES ( (md= mode )* (mt= mode_transition[tt] )* ) | none_stmt ) )
            int alt368=2;
            switch ( input.LA(1) ) {
            case REQUIRES:
                {
                alt368=1;
                }
                break;
            case NONE:
                {
                int LA368_2 = input.LA(2);

                if ( (LA368_2==SEMI) ) {
                    int LA368_4 = input.LA(3);

                    if ( (synpred476_Aadl2()) ) {
                        alt368=1;
                    }
                    else if ( (true) ) {
                        alt368=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 368, 4, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 368, 2, input);

                    throw nvae;
                }
                }
                break;
            case MODES:
                {
                alt368=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 368, 0, input);

                throw nvae;
            }

            switch (alt368) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:3: ( REQUIRES MODES ( (md= mode )+ ) | none_stmt )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:3: ( REQUIRES MODES ( (md= mode )+ ) | none_stmt )
                    int alt364=2;
                    int LA364_0 = input.LA(1);

                    if ( (LA364_0==REQUIRES) ) {
                        alt364=1;
                    }
                    else if ( (LA364_0==NONE) ) {
                        alt364=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 364, 0, input);

                        throw nvae;
                    }
                    switch (alt364) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:4: REQUIRES MODES ( (md= mode )+ )
                            {
                            match(input,REQUIRES,FOLLOW_REQUIRES_in_modes_for_types14207); if (state.failed) return ;
                            match(input,MODES,FOLLOW_MODES_in_modes_for_types14209); if (state.failed) return ;
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4978:5: ( (md= mode )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4979:7: (md= mode )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4979:7: (md= mode )+
                            int cnt363=0;
                            loop363:
                            do {
                                int alt363=2;
                                int LA363_0 = input.LA(1);

                                if ( (LA363_0==IDENT) ) {
                                    alt363=1;
                                }


                                switch (alt363) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4979:8: md= mode
                            	    {
                            	    pushFollow(FOLLOW_mode_in_modes_for_types14226);
                            	    md=mode();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	                md.setDerived(true);
                            	                tt.getOwnedModes().add(md);
                            	              
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt363 >= 1 ) break loop363;
                            	    if (state.backtracking>0) {state.failed=true; return ;}
                                        EarlyExitException eee =
                                            new EarlyExitException(363, input);
                                        throw eee;
                                }
                                cnt363++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4987:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_modes_for_types14263);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      tt.setNoModes(true);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4992:4: ( MODES ( (md= mode )* (mt= mode_transition[tt] )* ) | none_stmt )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4992:4: ( MODES ( (md= mode )* (mt= mode_transition[tt] )* ) | none_stmt )
                    int alt367=2;
                    int LA367_0 = input.LA(1);

                    if ( (LA367_0==MODES) ) {
                        alt367=1;
                    }
                    else if ( (LA367_0==NONE) ) {
                        alt367=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 367, 0, input);

                        throw nvae;
                    }
                    switch (alt367) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4992:5: MODES ( (md= mode )* (mt= mode_transition[tt] )* )
                            {
                            match(input,MODES,FOLLOW_MODES_in_modes_for_types14281); if (state.failed) return ;
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4993:5: ( (md= mode )* (mt= mode_transition[tt] )* )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4994:7: (md= mode )* (mt= mode_transition[tt] )*
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4994:7: (md= mode )*
                            loop365:
                            do {
                                int alt365=2;
                                int LA365_0 = input.LA(1);

                                if ( (LA365_0==IDENT) ) {
                                    int LA365_1 = input.LA(2);

                                    if ( (LA365_1==COLON) ) {
                                        int LA365_3 = input.LA(3);

                                        if ( ((LA365_3>=INITIAL && LA365_3<=MODE)) ) {
                                            alt365=1;
                                        }


                                    }


                                }


                                switch (alt365) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4994:8: md= mode
                            	    {
                            	    pushFollow(FOLLOW_mode_in_modes_for_types14298);
                            	    md=mode();

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	                md.setDerived(false);
                            	                tt.getOwnedModes().add(md);
                            	              
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop365;
                                }
                            } while (true);

                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5000:7: (mt= mode_transition[tt] )*
                            loop366:
                            do {
                                int alt366=2;
                                int LA366_0 = input.LA(1);

                                if ( (LA366_0==IDENT) ) {
                                    alt366=1;
                                }


                                switch (alt366) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5000:8: mt= mode_transition[tt]
                            	    {
                            	    pushFollow(FOLLOW_mode_transition_in_modes_for_types14329);
                            	    mt=mode_transition(tt);

                            	    state._fsp--;
                            	    if (state.failed) return ;
                            	    if ( state.backtracking==0 ) {

                            	                tt.getOwnedModeTransitions().add(mt);
                            	              
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop366;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5007:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_modes_for_types14367);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      tt.setNoModes(true);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "modes_for_types"


    // $ANTLR start "abstract_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5014:1: abstract_type returns [AbstractType at] : ABSTRACT id= IDENT ( type_extension[at] )? ( prototypes_for_types[extension, at] )? ( FEATURES ( ( none_stmt ) | ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[at] )? ( properties_for_classifiers[at] )? (as= annex_subclause )? END backid= IDENT SEMI ;
    public final AbstractType abstract_type() throws RecognitionException {
        AbstractType at = null;

        Token id=null;
        Token backid=null;
        FeatureGroup fg = null;

        AbstractFeature af = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        BusAccess ba = null;

        DataAccess da = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        		at = Aadl2F.createAbstractType();
        		boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5019:2: ( ABSTRACT id= IDENT ( type_extension[at] )? ( prototypes_for_types[extension, at] )? ( FEATURES ( ( none_stmt ) | ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[at] )? ( properties_for_classifiers[at] )? (as= annex_subclause )? END backid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5020:2: ABSTRACT id= IDENT ( type_extension[at] )? ( prototypes_for_types[extension, at] )? ( FEATURES ( ( none_stmt ) | ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[at] )? ( properties_for_classifiers[at] )? (as= annex_subclause )? END backid= IDENT SEMI
            {
            match(input,ABSTRACT,FOLLOW_ABSTRACT_in_abstract_type14399); if (state.failed) return at;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_type14403); if (state.failed) return at;
            if ( state.backtracking==0 ) {
               
              	    	processComments(at);
              	    	at.setName(id.getText());
              	    	at.setLocationReference(this.getFilename(),id.getLine());
              	    
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5026:2: ( type_extension[at] )?
            int alt369=2;
            int LA369_0 = input.LA(1);

            if ( (LA369_0==EXTENDS) ) {
                alt369=1;
            }
            switch (alt369) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5026:3: type_extension[at]
                    {
                    pushFollow(FOLLOW_type_extension_in_abstract_type14416);
                    type_extension(at);

                    state._fsp--;
                    if (state.failed) return at;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5031:2: ( prototypes_for_types[extension, at] )?
            int alt370=2;
            int LA370_0 = input.LA(1);

            if ( (LA370_0==PROTOTYPES) ) {
                alt370=1;
            }
            switch (alt370) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5031:4: prototypes_for_types[extension, at]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_abstract_type14430);
                    prototypes_for_types(extension, at);

                    state._fsp--;
                    if (state.failed) return at;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5033:2: ( FEATURES ( ( none_stmt ) | ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ ) ) )?
            int alt373=2;
            int LA373_0 = input.LA(1);

            if ( (LA373_0==FEATURES) ) {
                alt373=1;
            }
            switch (alt373) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5033:4: FEATURES ( ( none_stmt ) | ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_abstract_type14440); if (state.failed) return at;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5034:3: ( ( none_stmt ) | ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ ) )
                    int alt372=2;
                    int LA372_0 = input.LA(1);

                    if ( (LA372_0==NONE) ) {
                        alt372=1;
                    }
                    else if ( (LA372_0==IDENT) ) {
                        alt372=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return at;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 372, 0, input);

                        throw nvae;
                    }
                    switch (alt372) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5034:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5034:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5034:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_abstract_type14446);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return at;
                            if ( state.backtracking==0 ) {

                              				at.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5039:4: ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5039:4: ( ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5039:5: ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5039:5: ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+
                            int cnt371=0;
                            loop371:
                            do {
                                int alt371=10;
                                alt371 = dfa371.predict(input);
                                switch (alt371) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5040:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5040:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5040:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_abstract_type14475);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5045:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5045:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5045:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_abstract_type14501);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	                at.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5050:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5050:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5050:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_abstract_type14531);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5055:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5055:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5055:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_abstract_type14555);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5060:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5060:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5060:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_abstract_type14579);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5066:5: (ba= bus_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5066:5: (ba= bus_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5066:6: ba= bus_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_access_in_abstract_type14607);
                            	    ba=bus_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedBusAccesses().add(ba);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5071:5: (da= data_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5071:5: (da= data_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5071:6: da= data_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_access_in_abstract_type14631);
                            	    da=data_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedDataAccesses().add(da);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5076:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5076:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5076:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_abstract_type14655);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 9 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5081:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5081:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5081:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_abstract_type14679);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      					at.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt371 >= 1 ) break loop371;
                            	    if (state.backtracking>0) {state.failed=true; return at;}
                                        EarlyExitException eee =
                                            new EarlyExitException(371, input);
                                        throw eee;
                                }
                                cnt371++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5089:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt376=2;
            int LA376_0 = input.LA(1);

            if ( (LA376_0==FLOWS) ) {
                alt376=1;
            }
            switch (alt376) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5089:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_abstract_type14710); if (state.failed) return at;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5090:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt375=2;
                    int LA375_0 = input.LA(1);

                    if ( (LA375_0==NONE) ) {
                        alt375=1;
                    }
                    else if ( (LA375_0==IDENT) ) {
                        alt375=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return at;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 375, 0, input);

                        throw nvae;
                    }
                    switch (alt375) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5091:3: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5091:3: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5091:4: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_abstract_type14719);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return at;
                            if ( state.backtracking==0 ) {

                              				at.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5096:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5096:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5096:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5096:5: (fs= flow_spec[extension] )+
                            int cnt374=0;
                            loop374:
                            do {
                                int alt374=2;
                                int LA374_0 = input.LA(1);

                                if ( (LA374_0==IDENT) ) {
                                    alt374=1;
                                }


                                switch (alt374) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5096:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_abstract_type14737);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return at;
                            	    if ( state.backtracking==0 ) {

                            	      				at.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt374 >= 1 ) break loop374;
                            	    if (state.backtracking>0) {state.failed=true; return at;}
                                        EarlyExitException eee =
                                            new EarlyExitException(374, input);
                                        throw eee;
                                }
                                cnt374++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5103:2: ( modes_for_types[at] )?
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( (LA377_0==MODES||LA377_0==NONE||LA377_0==REQUIRES) ) {
                alt377=1;
            }
            switch (alt377) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5103:3: modes_for_types[at]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_abstract_type14761);
                    modes_for_types(at);

                    state._fsp--;
                    if (state.failed) return at;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5105:2: ( properties_for_classifiers[at] )?
            int alt378=2;
            int LA378_0 = input.LA(1);

            if ( (LA378_0==PROPERTIES) ) {
                alt378=1;
            }
            switch (alt378) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5105:3: properties_for_classifiers[at]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_abstract_type14770);
                    properties_for_classifiers(at);

                    state._fsp--;
                    if (state.failed) return at;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5107:2: (as= annex_subclause )?
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==ANNEX) ) {
                alt379=1;
            }
            switch (alt379) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5107:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_abstract_type14782);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return at;
                    if ( state.backtracking==0 ) {
                      	
                      			at.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_abstract_type14793); if (state.failed) return at;
            backid=(Token)match(input,IDENT,FOLLOW_IDENT_in_abstract_type14797); if (state.failed) return at;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(backid.getText()))){
                  		throw new FailedPredicateException(input,"abstract type", "End identifier "+backid.getText()+" does not match defining identifier "+id.getText());
              			}
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_abstract_type14804); if (state.failed) return at;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return at;
    }
    // $ANTLR end "abstract_type"


    // $ANTLR start "subprogram_group_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5127:1: subprogram_group_type returns [SubprogramGroupType spgt] : SUBPROGRAM GROUP id= IDENT ( type_extension[spgt] )? ( prototypes_for_types[extension,spgt] )? ( FEATURES ( ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )? ( properties_for_classifiers[spgt] )? (as= annex_subclause )* END eid= IDENT SEMI ;
    public final SubprogramGroupType subprogram_group_type() throws RecognitionException {
        SubprogramGroupType spgt = null;

        Token id=null;
        Token eid=null;
        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        AbstractFeature af = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5131:2: ( SUBPROGRAM GROUP id= IDENT ( type_extension[spgt] )? ( prototypes_for_types[extension,spgt] )? ( FEATURES ( ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )? ( properties_for_classifiers[spgt] )? (as= annex_subclause )* END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5132:2: SUBPROGRAM GROUP id= IDENT ( type_extension[spgt] )? ( prototypes_for_types[extension,spgt] )? ( FEATURES ( ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )? ( properties_for_classifiers[spgt] )? (as= annex_subclause )* END eid= IDENT SEMI
            {
            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_group_type14841); if (state.failed) return spgt;
            match(input,GROUP,FOLLOW_GROUP_in_subprogram_group_type14843); if (state.failed) return spgt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_type14847); if (state.failed) return spgt;
            if ( state.backtracking==0 ) {

              			spgt = Aadl2F.createSubprogramGroupType();
              			spgt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			spgt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5141:2: ( type_extension[spgt] )?
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==EXTENDS) ) {
                alt380=1;
            }
            switch (alt380) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5141:3: type_extension[spgt]
                    {
                    pushFollow(FOLLOW_type_extension_in_subprogram_group_type14855);
                    type_extension(spgt);

                    state._fsp--;
                    if (state.failed) return spgt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5146:2: ( prototypes_for_types[extension,spgt] )?
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==PROTOTYPES) ) {
                alt381=1;
            }
            switch (alt381) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5146:4: prototypes_for_types[extension,spgt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_subprogram_group_type14869);
                    prototypes_for_types(extension, spgt);

                    state._fsp--;
                    if (state.failed) return spgt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5148:2: ( FEATURES ( ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )?
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==FEATURES) ) {
                alt384=1;
            }
            switch (alt384) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5148:3: FEATURES ( ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_subprogram_group_type14878); if (state.failed) return spgt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5149:3: ( ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )
                    int alt383=2;
                    int LA383_0 = input.LA(1);

                    if ( (LA383_0==IDENT) ) {
                        alt383=1;
                    }
                    else if ( (LA383_0==NONE) ) {
                        alt383=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return spgt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 383, 0, input);

                        throw nvae;
                    }
                    switch (alt383) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5149:4: ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5149:4: ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5149:5: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5149:5: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+
                            int cnt382=0;
                            loop382:
                            do {
                                int alt382=4;
                                alt382 = dfa382.predict(input);
                                switch (alt382) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5150:4: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5150:4: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5150:5: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_subprogram_group_type14894);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return spgt;
                            	    if ( state.backtracking==0 ) {

                            	      					spgt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5155:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5155:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5155:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_subprogram_group_type14918);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return spgt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sga.getKind() != AccessType.REQUIRED)
                            	      	    				throw new FailedPredicateException(input,"program group type", "subprogram group access can only be required");						
                            	      					spgt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5162:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5162:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5162:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_subprogram_group_type14944);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return spgt;
                            	    if ( state.backtracking==0 ) {

                            	                spgt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt382 >= 1 ) break loop382;
                            	    if (state.backtracking>0) {state.failed=true; return spgt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(382, input);
                                        throw eee;
                                }
                                cnt382++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5168:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5168:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5168:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_subprogram_group_type14975);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return spgt;

                            }

                            if ( state.backtracking==0 ) {

                              				spgt.setNoFeatures(true);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5174:3: ( properties_for_classifiers[spgt] )?
            int alt385=2;
            int LA385_0 = input.LA(1);

            if ( (LA385_0==PROPERTIES) ) {
                alt385=1;
            }
            switch (alt385) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5174:4: properties_for_classifiers[spgt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_subprogram_group_type14994);
                    properties_for_classifiers(spgt);

                    state._fsp--;
                    if (state.failed) return spgt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5176:2: (as= annex_subclause )*
            loop386:
            do {
                int alt386=2;
                int LA386_0 = input.LA(1);

                if ( (LA386_0==ANNEX) ) {
                    alt386=1;
                }


                switch (alt386) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5176:3: as= annex_subclause
            	    {
            	    pushFollow(FOLLOW_annex_subclause_in_subprogram_group_type15007);
            	    as=annex_subclause();

            	    state._fsp--;
            	    if (state.failed) return spgt;
            	    if ( state.backtracking==0 ) {

            	      			spgt.getOwnedAnnexSubclauses().add(as);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop386;
                }
            } while (true);

            match(input,END,FOLLOW_END_in_subprogram_group_type15018); if (state.failed) return spgt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_type15022); if (state.failed) return spgt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"program group type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());				
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_subprogram_group_type15030); if (state.failed) return spgt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return spgt;
    }
    // $ANTLR end "subprogram_group_type"


    // $ANTLR start "virtual_bus_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5195:1: virtual_bus_type returns [VirtualBusType vbt] : VIRTUAL BUS id= IDENT ( type_extension[vbt] )? ( prototypes_for_types[extension,vbt] )? ( FEATURES none_stmt )? ( modes_for_types[vbt] )? ( properties_for_classifiers[vbt] )? (as= annex_subclause )* END eid= IDENT SEMI ;
    public final VirtualBusType virtual_bus_type() throws RecognitionException {
        VirtualBusType vbt = null;

        Token id=null;
        Token eid=null;
        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5199:2: ( VIRTUAL BUS id= IDENT ( type_extension[vbt] )? ( prototypes_for_types[extension,vbt] )? ( FEATURES none_stmt )? ( modes_for_types[vbt] )? ( properties_for_classifiers[vbt] )? (as= annex_subclause )* END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5200:2: VIRTUAL BUS id= IDENT ( type_extension[vbt] )? ( prototypes_for_types[extension,vbt] )? ( FEATURES none_stmt )? ( modes_for_types[vbt] )? ( properties_for_classifiers[vbt] )? (as= annex_subclause )* END eid= IDENT SEMI
            {
            match(input,VIRTUAL,FOLLOW_VIRTUAL_in_virtual_bus_type15066); if (state.failed) return vbt;
            match(input,BUS,FOLLOW_BUS_in_virtual_bus_type15068); if (state.failed) return vbt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_type15072); if (state.failed) return vbt;
            if ( state.backtracking==0 ) {

              			vbt = Aadl2F.createVirtualBusType();
              			vbt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			vbt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5209:2: ( type_extension[vbt] )?
            int alt387=2;
            int LA387_0 = input.LA(1);

            if ( (LA387_0==EXTENDS) ) {
                alt387=1;
            }
            switch (alt387) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5209:3: type_extension[vbt]
                    {
                    pushFollow(FOLLOW_type_extension_in_virtual_bus_type15080);
                    type_extension(vbt);

                    state._fsp--;
                    if (state.failed) return vbt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5214:2: ( prototypes_for_types[extension,vbt] )?
            int alt388=2;
            int LA388_0 = input.LA(1);

            if ( (LA388_0==PROTOTYPES) ) {
                alt388=1;
            }
            switch (alt388) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5214:4: prototypes_for_types[extension,vbt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_virtual_bus_type15094);
                    prototypes_for_types(extension, vbt);

                    state._fsp--;
                    if (state.failed) return vbt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5216:2: ( FEATURES none_stmt )?
            int alt389=2;
            int LA389_0 = input.LA(1);

            if ( (LA389_0==FEATURES) ) {
                alt389=1;
            }
            switch (alt389) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5216:3: FEATURES none_stmt
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_virtual_bus_type15103); if (state.failed) return vbt;
                    pushFollow(FOLLOW_none_stmt_in_virtual_bus_type15107);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return vbt;
                    if ( state.backtracking==0 ) {

                      				vbt.setNoFeatures(true);
                      			
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5222:2: ( modes_for_types[vbt] )?
            int alt390=2;
            int LA390_0 = input.LA(1);

            if ( (LA390_0==MODES||LA390_0==NONE||LA390_0==REQUIRES) ) {
                alt390=1;
            }
            switch (alt390) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5222:3: modes_for_types[vbt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_virtual_bus_type15121);
                    modes_for_types(vbt);

                    state._fsp--;
                    if (state.failed) return vbt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5224:3: ( properties_for_classifiers[vbt] )?
            int alt391=2;
            int LA391_0 = input.LA(1);

            if ( (LA391_0==PROPERTIES) ) {
                alt391=1;
            }
            switch (alt391) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5224:4: properties_for_classifiers[vbt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_virtual_bus_type15131);
                    properties_for_classifiers(vbt);

                    state._fsp--;
                    if (state.failed) return vbt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5226:2: (as= annex_subclause )*
            loop392:
            do {
                int alt392=2;
                int LA392_0 = input.LA(1);

                if ( (LA392_0==ANNEX) ) {
                    alt392=1;
                }


                switch (alt392) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5226:3: as= annex_subclause
            	    {
            	    pushFollow(FOLLOW_annex_subclause_in_virtual_bus_type15144);
            	    as=annex_subclause();

            	    state._fsp--;
            	    if (state.failed) return vbt;
            	    if ( state.backtracking==0 ) {

            	      			vbt.getOwnedAnnexSubclauses().add(as);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop392;
                }
            } while (true);

            match(input,END,FOLLOW_END_in_virtual_bus_type15155); if (state.failed) return vbt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_bus_type15159); if (state.failed) return vbt;
            if ( state.backtracking==0 ) {

              			if (!(eid.getText().equalsIgnoreCase(id.getText())))
              	    		throw new FailedPredicateException(input,"program group type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());				
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_virtual_bus_type15166); if (state.failed) return vbt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return vbt;
    }
    // $ANTLR end "virtual_bus_type"


    // $ANTLR start "virtual_processor_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5245:1: virtual_processor_type returns [VirtualProcessorType vpt] : VIRTUAL PROCESSOR id= IDENT ( type_extension[vpt] )? ( prototypes_for_types[extension,vpt] )? ( FEATURES ( ( none_stmt ) | ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[vpt] )? ( properties_for_classifiers[vpt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final VirtualProcessorType virtual_processor_type() throws RecognitionException {
        VirtualProcessorType vpt = null;

        Token id=null;
        Token eid=null;
        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5249:2: ( VIRTUAL PROCESSOR id= IDENT ( type_extension[vpt] )? ( prototypes_for_types[extension,vpt] )? ( FEATURES ( ( none_stmt ) | ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[vpt] )? ( properties_for_classifiers[vpt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5250:2: VIRTUAL PROCESSOR id= IDENT ( type_extension[vpt] )? ( prototypes_for_types[extension,vpt] )? ( FEATURES ( ( none_stmt ) | ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[vpt] )? ( properties_for_classifiers[vpt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,VIRTUAL,FOLLOW_VIRTUAL_in_virtual_processor_type15203); if (state.failed) return vpt;
            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_virtual_processor_type15205); if (state.failed) return vpt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_type15209); if (state.failed) return vpt;
            if ( state.backtracking==0 ) {

              			vpt = Aadl2F.createVirtualProcessorType();
              			vpt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			vpt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5259:2: ( type_extension[vpt] )?
            int alt393=2;
            int LA393_0 = input.LA(1);

            if ( (LA393_0==EXTENDS) ) {
                alt393=1;
            }
            switch (alt393) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5259:3: type_extension[vpt]
                    {
                    pushFollow(FOLLOW_type_extension_in_virtual_processor_type15217);
                    type_extension(vpt);

                    state._fsp--;
                    if (state.failed) return vpt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5264:2: ( prototypes_for_types[extension,vpt] )?
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==PROTOTYPES) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5264:4: prototypes_for_types[extension,vpt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_virtual_processor_type15231);
                    prototypes_for_types(extension, vpt);

                    state._fsp--;
                    if (state.failed) return vpt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5266:2: ( FEATURES ( ( none_stmt ) | ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )?
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==FEATURES) ) {
                alt397=1;
            }
            switch (alt397) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5266:3: FEATURES ( ( none_stmt ) | ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_virtual_processor_type15240); if (state.failed) return vpt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5267:3: ( ( none_stmt ) | ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                    int alt396=2;
                    int LA396_0 = input.LA(1);

                    if ( (LA396_0==NONE) ) {
                        alt396=1;
                    }
                    else if ( (LA396_0==IDENT) ) {
                        alt396=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return vpt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 396, 0, input);

                        throw nvae;
                    }
                    switch (alt396) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5268:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5268:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5268:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_processor_type15250);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return vpt;
                            if ( state.backtracking==0 ) {

                              					vpt.setNoFeatures(true);
                              				
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5274:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5274:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt395=0;
                            loop395:
                            do {
                                int alt395=8;
                                alt395 = dfa395.predict(input);
                                switch (alt395) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5274:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5274:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5274:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_virtual_processor_type15277);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sa.getKind() != AccessType.PROVIDED)
                            	      			    		throw new FailedPredicateException(input,"virtual processor type", "subprogram access can only be provided");					
                            	      					vpt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5281:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5281:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5281:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_virtual_processor_type15301);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sga.getKind() != AccessType.PROVIDED)
                            	      			    		throw new FailedPredicateException(input,"virtual processor type", "subprogram group access can only be provided");					
                            	      					vpt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5288:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5288:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5288:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_virtual_processor_type15325);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      					vpt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5293:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5293:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5293:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_virtual_processor_type15349);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      					vpt.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5298:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5298:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5298:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_virtual_processor_type15373);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      					vpt.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5303:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5303:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5303:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_virtual_processor_type15397);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      					vpt.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5308:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5308:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5308:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_virtual_processor_type15424);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	                vpt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt395 >= 1 ) break loop395;
                            	    if (state.backtracking>0) {state.failed=true; return vpt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(395, input);
                                        throw eee;
                                }
                                cnt395++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5315:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt400=2;
            int LA400_0 = input.LA(1);

            if ( (LA400_0==FLOWS) ) {
                alt400=1;
            }
            switch (alt400) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5315:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_virtual_processor_type15457); if (state.failed) return vpt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5316:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt399=2;
                    int LA399_0 = input.LA(1);

                    if ( (LA399_0==NONE) ) {
                        alt399=1;
                    }
                    else if ( (LA399_0==IDENT) ) {
                        alt399=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return vpt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 399, 0, input);

                        throw nvae;
                    }
                    switch (alt399) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5316:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5316:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5316:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_virtual_processor_type15463);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return vpt;
                            if ( state.backtracking==0 ) {

                              				vpt.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5321:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5321:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5321:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5321:5: (fs= flow_spec[extension] )+
                            int cnt398=0;
                            loop398:
                            do {
                                int alt398=2;
                                int LA398_0 = input.LA(1);

                                if ( (LA398_0==IDENT) ) {
                                    alt398=1;
                                }


                                switch (alt398) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5321:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_virtual_processor_type15481);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return vpt;
                            	    if ( state.backtracking==0 ) {

                            	      				vpt.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt398 >= 1 ) break loop398;
                            	    if (state.backtracking>0) {state.failed=true; return vpt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(398, input);
                                        throw eee;
                                }
                                cnt398++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5328:2: ( modes_for_types[vpt] )?
            int alt401=2;
            int LA401_0 = input.LA(1);

            if ( (LA401_0==MODES||LA401_0==NONE||LA401_0==REQUIRES) ) {
                alt401=1;
            }
            switch (alt401) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5328:3: modes_for_types[vpt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_virtual_processor_type15505);
                    modes_for_types(vpt);

                    state._fsp--;
                    if (state.failed) return vpt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5330:3: ( properties_for_classifiers[vpt] )?
            int alt402=2;
            int LA402_0 = input.LA(1);

            if ( (LA402_0==PROPERTIES) ) {
                alt402=1;
            }
            switch (alt402) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5330:4: properties_for_classifiers[vpt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_virtual_processor_type15515);
                    properties_for_classifiers(vpt);

                    state._fsp--;
                    if (state.failed) return vpt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5332:2: (as= annex_subclause )?
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==ANNEX) ) {
                alt403=1;
            }
            switch (alt403) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5332:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_virtual_processor_type15528);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return vpt;
                    if ( state.backtracking==0 ) {
                      	
                      			vpt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_virtual_processor_type15539); if (state.failed) return vpt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_virtual_processor_type15543); if (state.failed) return vpt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"virtual processor type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());				
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_virtual_processor_type15550); if (state.failed) return vpt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return vpt;
    }
    // $ANTLR end "virtual_processor_type"


    // $ANTLR start "thread_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5351:1: thread_type returns [ThreadType tt] : THREAD id= IDENT ( type_extension[tt] )? ( prototypes_for_types[extension,tt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[tt] )? ( properties_for_classifiers[tt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final ThreadType thread_type() throws RecognitionException {
        ThreadType tt = null;

        Token id=null;
        Token eid=null;
        DataAccess da = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5355:2: ( THREAD id= IDENT ( type_extension[tt] )? ( prototypes_for_types[extension,tt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[tt] )? ( properties_for_classifiers[tt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5356:2: THREAD id= IDENT ( type_extension[tt] )? ( prototypes_for_types[extension,tt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[tt] )? ( properties_for_classifiers[tt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,THREAD,FOLLOW_THREAD_in_thread_type15586); if (state.failed) return tt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_type15590); if (state.failed) return tt;
            if ( state.backtracking==0 ) {

              			tt=Aadl2F.createThreadType();
              			tt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			tt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5365:2: ( type_extension[tt] )?
            int alt404=2;
            int LA404_0 = input.LA(1);

            if ( (LA404_0==EXTENDS) ) {
                alt404=1;
            }
            switch (alt404) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5365:3: type_extension[tt]
                    {
                    pushFollow(FOLLOW_type_extension_in_thread_type15598);
                    type_extension(tt);

                    state._fsp--;
                    if (state.failed) return tt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5370:2: ( prototypes_for_types[extension,tt] )?
            int alt405=2;
            int LA405_0 = input.LA(1);

            if ( (LA405_0==PROTOTYPES) ) {
                alt405=1;
            }
            switch (alt405) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5370:4: prototypes_for_types[extension,tt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_thread_type15612);
                    prototypes_for_types(extension, tt);

                    state._fsp--;
                    if (state.failed) return tt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5372:2: ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt408=2;
            int LA408_0 = input.LA(1);

            if ( (LA408_0==FEATURES) ) {
                alt408=1;
            }
            switch (alt408) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5372:3: FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_thread_type15621); if (state.failed) return tt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5373:3: ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt407=2;
                    int LA407_0 = input.LA(1);

                    if ( (LA407_0==NONE) ) {
                        alt407=1;
                    }
                    else if ( (LA407_0==IDENT) ) {
                        alt407=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return tt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 407, 0, input);

                        throw nvae;
                    }
                    switch (alt407) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5373:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5373:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5373:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_type15627);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return tt;
                            if ( state.backtracking==0 ) {

                              				tt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5378:4: ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5378:4: ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5378:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5378:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt406=0;
                            loop406:
                            do {
                                int alt406=9;
                                alt406 = dfa406.predict(input);
                                switch (alt406) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5379:4: (da= data_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5379:4: (da= data_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5379:5: da= data_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_access_in_thread_type15652);
                            	    da=data_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedDataAccesses().add(da);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5384:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5384:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5384:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_thread_type15676);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5389:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5389:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5389:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_thread_type15700);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5394:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5394:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5394:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_thread_type15724);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5399:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5399:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5399:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_thread_type15748);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5404:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5404:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5404:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_thread_type15772);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5409:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5409:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5409:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_thread_type15796);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5414:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5414:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5414:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_thread_type15822);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	                tt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt406 >= 1 ) break loop406;
                            	    if (state.backtracking>0) {state.failed=true; return tt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(406, input);
                                        throw eee;
                                }
                                cnt406++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5421:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt411=2;
            int LA411_0 = input.LA(1);

            if ( (LA411_0==FLOWS) ) {
                alt411=1;
            }
            switch (alt411) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5421:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_thread_type15856); if (state.failed) return tt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5422:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt410=2;
                    int LA410_0 = input.LA(1);

                    if ( (LA410_0==NONE) ) {
                        alt410=1;
                    }
                    else if ( (LA410_0==IDENT) ) {
                        alt410=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return tt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 410, 0, input);

                        throw nvae;
                    }
                    switch (alt410) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5422:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5422:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5422:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_type15862);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return tt;
                            if ( state.backtracking==0 ) {

                              				tt.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5427:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5427:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5427:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5427:5: (fs= flow_spec[extension] )+
                            int cnt409=0;
                            loop409:
                            do {
                                int alt409=2;
                                int LA409_0 = input.LA(1);

                                if ( (LA409_0==IDENT) ) {
                                    alt409=1;
                                }


                                switch (alt409) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5427:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_thread_type15880);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      				tt.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt409 >= 1 ) break loop409;
                            	    if (state.backtracking>0) {state.failed=true; return tt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(409, input);
                                        throw eee;
                                }
                                cnt409++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5434:2: ( modes_for_types[tt] )?
            int alt412=2;
            int LA412_0 = input.LA(1);

            if ( (LA412_0==MODES||LA412_0==NONE||LA412_0==REQUIRES) ) {
                alt412=1;
            }
            switch (alt412) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5434:3: modes_for_types[tt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_thread_type15904);
                    modes_for_types(tt);

                    state._fsp--;
                    if (state.failed) return tt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5436:3: ( properties_for_classifiers[tt] )?
            int alt413=2;
            int LA413_0 = input.LA(1);

            if ( (LA413_0==PROPERTIES) ) {
                alt413=1;
            }
            switch (alt413) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5436:4: properties_for_classifiers[tt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_thread_type15914);
                    properties_for_classifiers(tt);

                    state._fsp--;
                    if (state.failed) return tt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5438:2: (as= annex_subclause )?
            int alt414=2;
            int LA414_0 = input.LA(1);

            if ( (LA414_0==ANNEX) ) {
                alt414=1;
            }
            switch (alt414) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5438:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_thread_type15927);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return tt;
                    if ( state.backtracking==0 ) {
                      	
                      			tt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_thread_type15938); if (state.failed) return tt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_type15942); if (state.failed) return tt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"thread type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());								
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_thread_type15949); if (state.failed) return tt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return tt;
    }
    // $ANTLR end "thread_type"


    // $ANTLR start "thread_group_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5457:1: thread_group_type returns [ThreadGroupType tt] : THREAD GROUP id= IDENT ( type_extension[tt] )? ( prototypes_for_types[extension,tt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[tt] )? ( properties_for_classifiers[tt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final ThreadGroupType thread_group_type() throws RecognitionException {
        ThreadGroupType tt = null;

        Token id=null;
        Token eid=null;
        DataAccess da = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false; 
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5461:2: ( THREAD GROUP id= IDENT ( type_extension[tt] )? ( prototypes_for_types[extension,tt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[tt] )? ( properties_for_classifiers[tt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5463:2: THREAD GROUP id= IDENT ( type_extension[tt] )? ( prototypes_for_types[extension,tt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[tt] )? ( properties_for_classifiers[tt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,THREAD,FOLLOW_THREAD_in_thread_group_type15986); if (state.failed) return tt;
            match(input,GROUP,FOLLOW_GROUP_in_thread_group_type15988); if (state.failed) return tt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_type15992); if (state.failed) return tt;
            if ( state.backtracking==0 ) {

              			tt = Aadl2F.createThreadGroupType();
              			tt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			tt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5472:2: ( type_extension[tt] )?
            int alt415=2;
            int LA415_0 = input.LA(1);

            if ( (LA415_0==EXTENDS) ) {
                alt415=1;
            }
            switch (alt415) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5472:3: type_extension[tt]
                    {
                    pushFollow(FOLLOW_type_extension_in_thread_group_type16000);
                    type_extension(tt);

                    state._fsp--;
                    if (state.failed) return tt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5477:2: ( prototypes_for_types[extension,tt] )?
            int alt416=2;
            int LA416_0 = input.LA(1);

            if ( (LA416_0==PROTOTYPES) ) {
                alt416=1;
            }
            switch (alt416) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5477:4: prototypes_for_types[extension,tt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_thread_group_type16014);
                    prototypes_for_types(extension, tt);

                    state._fsp--;
                    if (state.failed) return tt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5479:2: ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt419=2;
            int LA419_0 = input.LA(1);

            if ( (LA419_0==FEATURES) ) {
                alt419=1;
            }
            switch (alt419) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5479:3: FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_thread_group_type16023); if (state.failed) return tt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5480:3: ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt418=2;
                    int LA418_0 = input.LA(1);

                    if ( (LA418_0==NONE) ) {
                        alt418=1;
                    }
                    else if ( (LA418_0==IDENT) ) {
                        alt418=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return tt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 418, 0, input);

                        throw nvae;
                    }
                    switch (alt418) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5480:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5480:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5480:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_group_type16029);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return tt;
                            if ( state.backtracking==0 ) {

                              				tt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5485:4: ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5485:4: ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5485:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5485:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt417=0;
                            loop417:
                            do {
                                int alt417=9;
                                alt417 = dfa417.predict(input);
                                switch (alt417) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5486:4: (da= data_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5486:4: (da= data_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5486:5: da= data_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_access_in_thread_group_type16054);
                            	    da=data_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedDataAccesses().add(da);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5491:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5491:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5491:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_thread_group_type16078);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5496:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5496:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5496:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_thread_group_type16102);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5501:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5501:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5501:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_thread_group_type16126);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5506:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5506:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5506:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_thread_group_type16150);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5511:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5511:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5511:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_thread_group_type16174);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5516:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5516:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5516:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_thread_group_type16198);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      					tt.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5521:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5521:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5521:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_thread_group_type16224);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	                tt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt417 >= 1 ) break loop417;
                            	    if (state.backtracking>0) {state.failed=true; return tt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(417, input);
                                        throw eee;
                                }
                                cnt417++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5528:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt422=2;
            int LA422_0 = input.LA(1);

            if ( (LA422_0==FLOWS) ) {
                alt422=1;
            }
            switch (alt422) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5528:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_thread_group_type16258); if (state.failed) return tt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5529:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt421=2;
                    int LA421_0 = input.LA(1);

                    if ( (LA421_0==NONE) ) {
                        alt421=1;
                    }
                    else if ( (LA421_0==IDENT) ) {
                        alt421=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return tt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 421, 0, input);

                        throw nvae;
                    }
                    switch (alt421) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5529:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5529:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5529:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_thread_group_type16264);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return tt;
                            if ( state.backtracking==0 ) {

                              				tt.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5534:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5534:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5534:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5534:5: (fs= flow_spec[extension] )+
                            int cnt420=0;
                            loop420:
                            do {
                                int alt420=2;
                                int LA420_0 = input.LA(1);

                                if ( (LA420_0==IDENT) ) {
                                    alt420=1;
                                }


                                switch (alt420) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5534:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_thread_group_type16282);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return tt;
                            	    if ( state.backtracking==0 ) {

                            	      				tt.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt420 >= 1 ) break loop420;
                            	    if (state.backtracking>0) {state.failed=true; return tt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(420, input);
                                        throw eee;
                                }
                                cnt420++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5541:2: ( modes_for_types[tt] )?
            int alt423=2;
            int LA423_0 = input.LA(1);

            if ( (LA423_0==MODES||LA423_0==NONE||LA423_0==REQUIRES) ) {
                alt423=1;
            }
            switch (alt423) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5541:3: modes_for_types[tt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_thread_group_type16306);
                    modes_for_types(tt);

                    state._fsp--;
                    if (state.failed) return tt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5543:3: ( properties_for_classifiers[tt] )?
            int alt424=2;
            int LA424_0 = input.LA(1);

            if ( (LA424_0==PROPERTIES) ) {
                alt424=1;
            }
            switch (alt424) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5543:4: properties_for_classifiers[tt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_thread_group_type16316);
                    properties_for_classifiers(tt);

                    state._fsp--;
                    if (state.failed) return tt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5545:2: (as= annex_subclause )?
            int alt425=2;
            int LA425_0 = input.LA(1);

            if ( (LA425_0==ANNEX) ) {
                alt425=1;
            }
            switch (alt425) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5545:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_thread_group_type16329);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return tt;
                    if ( state.backtracking==0 ) {
                      	
                      			tt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_thread_group_type16340); if (state.failed) return tt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_thread_group_type16344); if (state.failed) return tt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"thread group type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());								
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_thread_group_type16351); if (state.failed) return tt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return tt;
    }
    // $ANTLR end "thread_group_type"


    // $ANTLR start "process_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5564:1: process_type returns [ProcessType pt] : PROCESS id= IDENT ( type_extension[pt] )? ( prototypes_for_types[extension,pt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[pt] )? ( properties_for_classifiers[pt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final ProcessType process_type() throws RecognitionException {
        ProcessType pt = null;

        Token id=null;
        Token eid=null;
        DataAccess da = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5568:2: ( PROCESS id= IDENT ( type_extension[pt] )? ( prototypes_for_types[extension,pt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[pt] )? ( properties_for_classifiers[pt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5569:2: PROCESS id= IDENT ( type_extension[pt] )? ( prototypes_for_types[extension,pt] )? ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[pt] )? ( properties_for_classifiers[pt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,PROCESS,FOLLOW_PROCESS_in_process_type16387); if (state.failed) return pt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_type16391); if (state.failed) return pt;
            if ( state.backtracking==0 ) {

              			pt = Aadl2F.createProcessType();
              			pt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			pt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5578:2: ( type_extension[pt] )?
            int alt426=2;
            int LA426_0 = input.LA(1);

            if ( (LA426_0==EXTENDS) ) {
                alt426=1;
            }
            switch (alt426) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5578:3: type_extension[pt]
                    {
                    pushFollow(FOLLOW_type_extension_in_process_type16399);
                    type_extension(pt);

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5583:2: ( prototypes_for_types[extension,pt] )?
            int alt427=2;
            int LA427_0 = input.LA(1);

            if ( (LA427_0==PROTOTYPES) ) {
                alt427=1;
            }
            switch (alt427) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5583:4: prototypes_for_types[extension,pt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_process_type16413);
                    prototypes_for_types(extension, pt);

                    state._fsp--;
                    if (state.failed) return pt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5585:2: ( FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt430=2;
            int LA430_0 = input.LA(1);

            if ( (LA430_0==FEATURES) ) {
                alt430=1;
            }
            switch (alt430) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5585:3: FEATURES ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_process_type16422); if (state.failed) return pt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5586:3: ( ( none_stmt ) | ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt429=2;
                    int LA429_0 = input.LA(1);

                    if ( (LA429_0==NONE) ) {
                        alt429=1;
                    }
                    else if ( (LA429_0==IDENT) ) {
                        alt429=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return pt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 429, 0, input);

                        throw nvae;
                    }
                    switch (alt429) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5586:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5586:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5586:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_process_type16428);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return pt;
                            if ( state.backtracking==0 ) {

                              				pt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5591:4: ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5591:4: ( ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5591:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5591:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt428=0;
                            loop428:
                            do {
                                int alt428=9;
                                alt428 = dfa428.predict(input);
                                switch (alt428) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5592:4: (da= data_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5592:4: (da= data_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5592:5: da= data_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_access_in_process_type16453);
                            	    da=data_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedDataAccesses().add(da);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5597:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5597:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5597:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_process_type16477);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5602:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5602:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5602:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_process_type16501);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5607:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5607:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5607:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_process_type16525);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5612:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5612:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5612:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_process_type16549);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5617:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5617:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5617:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_process_type16573);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5622:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5622:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5622:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_process_type16597);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5627:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5627:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5627:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_process_type16623);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	                pt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt428 >= 1 ) break loop428;
                            	    if (state.backtracking>0) {state.failed=true; return pt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(428, input);
                                        throw eee;
                                }
                                cnt428++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5634:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt433=2;
            int LA433_0 = input.LA(1);

            if ( (LA433_0==FLOWS) ) {
                alt433=1;
            }
            switch (alt433) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5634:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_process_type16657); if (state.failed) return pt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5635:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt432=2;
                    int LA432_0 = input.LA(1);

                    if ( (LA432_0==NONE) ) {
                        alt432=1;
                    }
                    else if ( (LA432_0==IDENT) ) {
                        alt432=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return pt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 432, 0, input);

                        throw nvae;
                    }
                    switch (alt432) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5635:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5635:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5635:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_process_type16663);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return pt;
                            if ( state.backtracking==0 ) {

                              				pt.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5640:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5640:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5640:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5640:5: (fs= flow_spec[extension] )+
                            int cnt431=0;
                            loop431:
                            do {
                                int alt431=2;
                                int LA431_0 = input.LA(1);

                                if ( (LA431_0==IDENT) ) {
                                    alt431=1;
                                }


                                switch (alt431) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5640:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_process_type16681);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      				pt.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt431 >= 1 ) break loop431;
                            	    if (state.backtracking>0) {state.failed=true; return pt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(431, input);
                                        throw eee;
                                }
                                cnt431++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5647:2: ( modes_for_types[pt] )?
            int alt434=2;
            int LA434_0 = input.LA(1);

            if ( (LA434_0==MODES||LA434_0==NONE||LA434_0==REQUIRES) ) {
                alt434=1;
            }
            switch (alt434) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5647:3: modes_for_types[pt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_process_type16705);
                    modes_for_types(pt);

                    state._fsp--;
                    if (state.failed) return pt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5649:3: ( properties_for_classifiers[pt] )?
            int alt435=2;
            int LA435_0 = input.LA(1);

            if ( (LA435_0==PROPERTIES) ) {
                alt435=1;
            }
            switch (alt435) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5649:4: properties_for_classifiers[pt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_process_type16715);
                    properties_for_classifiers(pt);

                    state._fsp--;
                    if (state.failed) return pt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5651:2: (as= annex_subclause )?
            int alt436=2;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==ANNEX) ) {
                alt436=1;
            }
            switch (alt436) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5651:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_process_type16728);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      	
                      			pt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_process_type16739); if (state.failed) return pt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_process_type16743); if (state.failed) return pt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"process type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_process_type16751); if (state.failed) return pt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return pt;
    }
    // $ANTLR end "process_type"


    // $ANTLR start "system_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5670:1: system_type returns [SystemType st] : SYSTEM id= IDENT ( type_extension[st] )? ( prototypes_for_types[extension,st] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[st] )? ( properties_for_classifiers[st] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final SystemType system_type() throws RecognitionException {
        SystemType st = null;

        Token id=null;
        Token eid=null;
        BusAccess ba = null;

        DataAccess da = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5674:2: ( SYSTEM id= IDENT ( type_extension[st] )? ( prototypes_for_types[extension,st] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[st] )? ( properties_for_classifiers[st] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5675:2: SYSTEM id= IDENT ( type_extension[st] )? ( prototypes_for_types[extension,st] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[st] )? ( properties_for_classifiers[st] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,SYSTEM,FOLLOW_SYSTEM_in_system_type16787); if (state.failed) return st;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_type16791); if (state.failed) return st;
            if ( state.backtracking==0 ) {

              			st=Aadl2F.createSystemType();
              			st.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			st.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5684:2: ( type_extension[st] )?
            int alt437=2;
            int LA437_0 = input.LA(1);

            if ( (LA437_0==EXTENDS) ) {
                alt437=1;
            }
            switch (alt437) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5684:3: type_extension[st]
                    {
                    pushFollow(FOLLOW_type_extension_in_system_type16799);
                    type_extension(st);

                    state._fsp--;
                    if (state.failed) return st;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5689:2: ( prototypes_for_types[extension,st] )?
            int alt438=2;
            int LA438_0 = input.LA(1);

            if ( (LA438_0==PROTOTYPES) ) {
                alt438=1;
            }
            switch (alt438) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5689:4: prototypes_for_types[extension,st]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_system_type16813);
                    prototypes_for_types(extension, st);

                    state._fsp--;
                    if (state.failed) return st;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5691:2: ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt441=2;
            int LA441_0 = input.LA(1);

            if ( (LA441_0==FEATURES) ) {
                alt441=1;
            }
            switch (alt441) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5691:4: FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_system_type16823); if (state.failed) return st;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5692:3: ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt440=2;
                    int LA440_0 = input.LA(1);

                    if ( (LA440_0==NONE) ) {
                        alt440=1;
                    }
                    else if ( (LA440_0==IDENT) ) {
                        alt440=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return st;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 440, 0, input);

                        throw nvae;
                    }
                    switch (alt440) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5692:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5692:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5692:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_system_type16829);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return st;
                            if ( state.backtracking==0 ) {

                              				st.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:4: ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:4: ( ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:5: ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:5: ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt439=0;
                            loop439:
                            do {
                                int alt439=10;
                                alt439 = dfa439.predict(input);
                                switch (alt439) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:8: (ba= bus_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:8: (ba= bus_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5697:9: ba= bus_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_access_in_system_type16852);
                            	    ba=bus_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedBusAccesses().add(ba);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5702:5: (da= data_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5702:5: (da= data_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5702:6: da= data_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_access_in_system_type16876);
                            	    da=data_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedDataAccesses().add(da);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5707:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5707:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5707:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_system_type16900);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5712:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5712:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5712:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_system_type16924);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5717:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5717:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5717:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_system_type16948);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5722:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5722:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5722:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_system_type16972);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5727:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5727:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5727:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_system_type16996);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5732:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5732:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5732:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_system_type17020);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      					st.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 9 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5737:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5737:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5737:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_system_type17046);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	                st.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt439 >= 1 ) break loop439;
                            	    if (state.backtracking>0) {state.failed=true; return st;}
                                        EarlyExitException eee =
                                            new EarlyExitException(439, input);
                                        throw eee;
                                }
                                cnt439++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5744:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt444=2;
            int LA444_0 = input.LA(1);

            if ( (LA444_0==FLOWS) ) {
                alt444=1;
            }
            switch (alt444) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5744:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_system_type17080); if (state.failed) return st;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5745:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt443=2;
                    int LA443_0 = input.LA(1);

                    if ( (LA443_0==NONE) ) {
                        alt443=1;
                    }
                    else if ( (LA443_0==IDENT) ) {
                        alt443=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return st;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 443, 0, input);

                        throw nvae;
                    }
                    switch (alt443) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5745:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5745:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5745:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_system_type17086);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return st;
                            if ( state.backtracking==0 ) {

                              				st.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5750:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5750:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5750:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5750:5: (fs= flow_spec[extension] )+
                            int cnt442=0;
                            loop442:
                            do {
                                int alt442=2;
                                int LA442_0 = input.LA(1);

                                if ( (LA442_0==IDENT) ) {
                                    alt442=1;
                                }


                                switch (alt442) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5750:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_system_type17104);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return st;
                            	    if ( state.backtracking==0 ) {

                            	      				if (fs !=null){
                            	      					st.getOwnedFlowSpecifications().add(fs);
                            	      				}
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt442 >= 1 ) break loop442;
                            	    if (state.backtracking>0) {state.failed=true; return st;}
                                        EarlyExitException eee =
                                            new EarlyExitException(442, input);
                                        throw eee;
                                }
                                cnt442++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5758:2: ( modes_for_types[st] )?
            int alt445=2;
            int LA445_0 = input.LA(1);

            if ( (LA445_0==MODES||LA445_0==NONE||LA445_0==REQUIRES) ) {
                alt445=1;
            }
            switch (alt445) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5758:3: modes_for_types[st]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_system_type17125);
                    modes_for_types(st);

                    state._fsp--;
                    if (state.failed) return st;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5760:3: ( properties_for_classifiers[st] )?
            int alt446=2;
            int LA446_0 = input.LA(1);

            if ( (LA446_0==PROPERTIES) ) {
                alt446=1;
            }
            switch (alt446) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5760:4: properties_for_classifiers[st]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_system_type17136);
                    properties_for_classifiers(st);

                    state._fsp--;
                    if (state.failed) return st;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5762:2: (as= annex_subclause )?
            int alt447=2;
            int LA447_0 = input.LA(1);

            if ( (LA447_0==ANNEX) ) {
                alt447=1;
            }
            switch (alt447) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5762:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_system_type17149);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return st;
                    if ( state.backtracking==0 ) {
                      	
                      			st.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_system_type17160); if (state.failed) return st;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_system_type17164); if (state.failed) return st;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"system type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_system_type17172); if (state.failed) return st;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return st;
    }
    // $ANTLR end "system_type"


    // $ANTLR start "subprogram_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5781:1: subprogram_type returns [SubprogramType st] : SUBPROGRAM id= IDENT ( type_extension[st] )? ( prototypes_for_types[extension,st] )? ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )? ( modes_for_types[st] )? ( properties_for_classifiers[st] )? (as= annex_subclause )* END eid= IDENT SEMI ;
    public final SubprogramType subprogram_type() throws RecognitionException {
        SubprogramType st = null;

        Token id=null;
        Token eid=null;
        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        EventDataPort edp = null;

        EventPort ep = null;

        FeatureGroup fg = null;

        DataAccess da = null;

        Parameter pa = null;

        AbstractFeature af = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5785:2: ( SUBPROGRAM id= IDENT ( type_extension[st] )? ( prototypes_for_types[extension,st] )? ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )? ( modes_for_types[st] )? ( properties_for_classifiers[st] )? (as= annex_subclause )* END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5786:2: SUBPROGRAM id= IDENT ( type_extension[st] )? ( prototypes_for_types[extension,st] )? ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )? ( modes_for_types[st] )? ( properties_for_classifiers[st] )? (as= annex_subclause )* END eid= IDENT SEMI
            {
            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_type17210); if (state.failed) return st;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_type17214); if (state.failed) return st;
            if ( state.backtracking==0 ) {

              			st = Aadl2F.createSubprogramType();
              			st.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			st.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5795:2: ( type_extension[st] )?
            int alt448=2;
            int LA448_0 = input.LA(1);

            if ( (LA448_0==EXTENDS) ) {
                alt448=1;
            }
            switch (alt448) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5795:3: type_extension[st]
                    {
                    pushFollow(FOLLOW_type_extension_in_subprogram_type17222);
                    type_extension(st);

                    state._fsp--;
                    if (state.failed) return st;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5800:2: ( prototypes_for_types[extension,st] )?
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==PROTOTYPES) ) {
                alt449=1;
            }
            switch (alt449) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5800:4: prototypes_for_types[extension,st]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_subprogram_type17236);
                    prototypes_for_types(extension, st);

                    state._fsp--;
                    if (state.failed) return st;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5802:2: ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )?
            int alt451=3;
            int LA451_0 = input.LA(1);

            if ( (LA451_0==FEATURES) ) {
                alt451=1;
            }
            else if ( (LA451_0==NONE) ) {
                int LA451_2 = input.LA(2);

                if ( (LA451_2==SEMI) ) {
                    int LA451_4 = input.LA(3);

                    if ( (synpred615_Aadl2()) ) {
                        alt451=2;
                    }
                }
            }
            switch (alt451) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5802:3: FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+ )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_subprogram_type17245); if (state.failed) return st;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5803:3: ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+ )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5803:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5803:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+
                    int cnt450=0;
                    loop450:
                    do {
                        int alt450=9;
                        alt450 = dfa450.predict(input);
                        switch (alt450) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5804:4: (sa= subprogram_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5804:4: (sa= subprogram_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5804:5: sa= subprogram_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_subprogram_access_in_subprogram_type17260);
                    	    sa=subprogram_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					st.getOwnedSubprogramAccesses().add(sa);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5809:5: (sga= subprogram_group_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5809:5: (sga= subprogram_group_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5809:6: sga= subprogram_group_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_subprogram_group_access_in_subprogram_type17284);
                    	    sga=subprogram_group_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					if (sga.getKind() != AccessType.REQUIRED)
                    	      	    				throw new FailedPredicateException(input,"program type", "subprogram group access can only be required");						
                    	      					st.getOwnedSubprogramGroupAccesses().add(sga);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5816:5: (edp= event_data_port[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5816:5: (edp= event_data_port[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5816:6: edp= event_data_port[extension]
                    	    {
                    	    pushFollow(FOLLOW_event_data_port_in_subprogram_type17308);
                    	    edp=event_data_port(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					if (edp.getDirection() != DirectionType.OUT)
                    	      	    				throw new FailedPredicateException(input,"program type", "event data ports can only be out");						
                    	      					st.getOwnedEventDataPorts().add(edp);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5823:5: (ep= event_port[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5823:5: (ep= event_port[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5823:6: ep= event_port[extension]
                    	    {
                    	    pushFollow(FOLLOW_event_port_in_subprogram_type17332);
                    	    ep=event_port(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					if (ep.getDirection() != DirectionType.OUT)
                    	      						throw new FailedPredicateException(input,"program type", "event ports can only be out");						
                    	      					st.getOwnedEventPorts().add(ep);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5830:5: (fg= feature_group[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5830:5: (fg= feature_group[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5830:6: fg= feature_group[extension]
                    	    {
                    	    pushFollow(FOLLOW_feature_group_in_subprogram_type17356);
                    	    fg=feature_group(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					st.getOwnedFeatureGroups().add(fg);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5835:5: (da= data_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5835:5: (da= data_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5835:6: da= data_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_data_access_in_subprogram_type17380);
                    	    da=data_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					if (da.getKind() != AccessType.REQUIRED)
                    	      	    				throw new FailedPredicateException(input,"program type", "data access can only be required");											
                    	      					st.getOwnedDataAccesses().add(da);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5842:5: (pa= parameter[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5842:5: (pa= parameter[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5842:6: pa= parameter[extension]
                    	    {
                    	    pushFollow(FOLLOW_parameter_in_subprogram_type17404);
                    	    pa=parameter(extension);

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	      					st.getOwnedParameters().add(pa);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5847:9: (af= abstract_feature )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5847:9: (af= abstract_feature )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5847:10: af= abstract_feature
                    	    {
                    	    pushFollow(FOLLOW_abstract_feature_in_subprogram_type17431);
                    	    af=abstract_feature();

                    	    state._fsp--;
                    	    if (state.failed) return st;
                    	    if ( state.backtracking==0 ) {

                    	                st.getOwnedAbstractFeatures().add(af);
                    	              
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt450 >= 1 ) break loop450;
                    	    if (state.backtracking>0) {state.failed=true; return st;}
                                EarlyExitException eee =
                                    new EarlyExitException(450, input);
                                throw eee;
                        }
                        cnt450++;
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:5: ( none_stmt )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:5: ( none_stmt )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:6: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_subprogram_type17463);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return st;
                    if ( state.backtracking==0 ) {

                      					st.setNoFeatures(true);
                      				
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5859:2: ( modes_for_types[st] )?
            int alt452=2;
            int LA452_0 = input.LA(1);

            if ( (LA452_0==MODES||LA452_0==NONE||LA452_0==REQUIRES) ) {
                alt452=1;
            }
            switch (alt452) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5859:3: modes_for_types[st]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_subprogram_type17484);
                    modes_for_types(st);

                    state._fsp--;
                    if (state.failed) return st;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5861:3: ( properties_for_classifiers[st] )?
            int alt453=2;
            int LA453_0 = input.LA(1);

            if ( (LA453_0==PROPERTIES) ) {
                alt453=1;
            }
            switch (alt453) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5861:4: properties_for_classifiers[st]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_subprogram_type17494);
                    properties_for_classifiers(st);

                    state._fsp--;
                    if (state.failed) return st;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5863:2: (as= annex_subclause )*
            loop454:
            do {
                int alt454=2;
                int LA454_0 = input.LA(1);

                if ( (LA454_0==ANNEX) ) {
                    alt454=1;
                }


                switch (alt454) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5863:3: as= annex_subclause
            	    {
            	    pushFollow(FOLLOW_annex_subclause_in_subprogram_type17507);
            	    as=annex_subclause();

            	    state._fsp--;
            	    if (state.failed) return st;
            	    if ( state.backtracking==0 ) {

            	      			st.getOwnedAnnexSubclauses().add(as);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop454;
                }
            } while (true);

            match(input,END,FOLLOW_END_in_subprogram_type17518); if (state.failed) return st;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_type17522); if (state.failed) return st;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"subprogram type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_subprogram_type17530); if (state.failed) return st;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return st;
    }
    // $ANTLR end "subprogram_type"


    // $ANTLR start "data_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5882:1: data_type returns [DataType dt] : DATA id= IDENT ( type_extension[dt] )? ( prototypes_for_types[extension,dt] )? ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )? ( properties_for_classifiers[dt] )? (as= annex_subclause )* END eid= IDENT SEMI ;
    public final DataType data_type() throws RecognitionException {
        DataType dt = null;

        Token id=null;
        Token eid=null;
        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        AbstractFeature af = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5886:2: ( DATA id= IDENT ( type_extension[dt] )? ( prototypes_for_types[extension,dt] )? ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )? ( properties_for_classifiers[dt] )? (as= annex_subclause )* END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5887:2: DATA id= IDENT ( type_extension[dt] )? ( prototypes_for_types[extension,dt] )? ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )? ( properties_for_classifiers[dt] )? (as= annex_subclause )* END eid= IDENT SEMI
            {
            match(input,DATA,FOLLOW_DATA_in_data_type17566); if (state.failed) return dt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_type17570); if (state.failed) return dt;
            if ( state.backtracking==0 ) {

              			dt = Aadl2F.createDataType();
              			dt.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			dt.setLocationReference(lr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5896:2: ( type_extension[dt] )?
            int alt455=2;
            int LA455_0 = input.LA(1);

            if ( (LA455_0==EXTENDS) ) {
                alt455=1;
            }
            switch (alt455) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5896:3: type_extension[dt]
                    {
                    pushFollow(FOLLOW_type_extension_in_data_type17578);
                    type_extension(dt);

                    state._fsp--;
                    if (state.failed) return dt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5901:2: ( prototypes_for_types[extension,dt] )?
            int alt456=2;
            int LA456_0 = input.LA(1);

            if ( (LA456_0==PROTOTYPES) ) {
                alt456=1;
            }
            switch (alt456) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5901:4: prototypes_for_types[extension,dt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_data_type17592);
                    prototypes_for_types(extension, dt);

                    state._fsp--;
                    if (state.failed) return dt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5903:2: ( FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )?
            int alt458=3;
            int LA458_0 = input.LA(1);

            if ( (LA458_0==FEATURES) ) {
                alt458=1;
            }
            else if ( (LA458_0==NONE) ) {
                alt458=2;
            }
            switch (alt458) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5903:3: FEATURES ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_data_type17601); if (state.failed) return dt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5904:3: ( ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+ )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5904:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5904:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+
                    int cnt457=0;
                    loop457:
                    do {
                        int alt457=4;
                        alt457 = dfa457.predict(input);
                        switch (alt457) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5905:4: (sa= subprogram_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5905:4: (sa= subprogram_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5905:5: sa= subprogram_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_subprogram_access_in_data_type17616);
                    	    sa=subprogram_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return dt;
                    	    if ( state.backtracking==0 ) {

                    	      					dt.getOwnedSubprogramAccesses().add(sa);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5910:5: (sga= subprogram_group_access[extension] )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5910:5: (sga= subprogram_group_access[extension] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5910:6: sga= subprogram_group_access[extension]
                    	    {
                    	    pushFollow(FOLLOW_subprogram_group_access_in_data_type17640);
                    	    sga=subprogram_group_access(extension);

                    	    state._fsp--;
                    	    if (state.failed) return dt;
                    	    if ( state.backtracking==0 ) {

                    	      					if (sga.getKind() != AccessType.REQUIRED)
                    	      	    				throw new FailedPredicateException(input,"data type", "subprogram group access can only be required");						
                    	      					dt.getOwnedSubprogramGroupAccesses().add(sga);
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5917:9: (af= abstract_feature )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5917:9: (af= abstract_feature )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5917:10: af= abstract_feature
                    	    {
                    	    pushFollow(FOLLOW_abstract_feature_in_data_type17666);
                    	    af=abstract_feature();

                    	    state._fsp--;
                    	    if (state.failed) return dt;
                    	    if ( state.backtracking==0 ) {

                    	                dt.getOwnedAbstractFeatures().add(af);
                    	              
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt457 >= 1 ) break loop457;
                    	    if (state.backtracking>0) {state.failed=true; return dt;}
                                EarlyExitException eee =
                                    new EarlyExitException(457, input);
                                throw eee;
                        }
                        cnt457++;
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5923:4: ( none_stmt )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5923:4: ( none_stmt )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5923:5: none_stmt
                    {
                    pushFollow(FOLLOW_none_stmt_in_data_type17697);
                    none_stmt();

                    state._fsp--;
                    if (state.failed) return dt;
                    if ( state.backtracking==0 ) {

                      				dt.setNoFeatures(true);
                      			
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5929:3: ( properties_for_classifiers[dt] )?
            int alt459=2;
            int LA459_0 = input.LA(1);

            if ( (LA459_0==PROPERTIES) ) {
                alt459=1;
            }
            switch (alt459) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5929:4: properties_for_classifiers[dt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_data_type17715);
                    properties_for_classifiers(dt);

                    state._fsp--;
                    if (state.failed) return dt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5931:2: (as= annex_subclause )*
            loop460:
            do {
                int alt460=2;
                int LA460_0 = input.LA(1);

                if ( (LA460_0==ANNEX) ) {
                    alt460=1;
                }


                switch (alt460) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5931:3: as= annex_subclause
            	    {
            	    pushFollow(FOLLOW_annex_subclause_in_data_type17728);
            	    as=annex_subclause();

            	    state._fsp--;
            	    if (state.failed) return dt;
            	    if ( state.backtracking==0 ) {

            	      			dt.getOwnedAnnexSubclauses().add(as);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop460;
                }
            } while (true);

            match(input,END,FOLLOW_END_in_data_type17739); if (state.failed) return dt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_type17743); if (state.failed) return dt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"data type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_data_type17751); if (state.failed) return dt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return dt;
    }
    // $ANTLR end "data_type"


    // $ANTLR start "processor_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5950:1: processor_type returns [ProcessorType pt] : PROCESSOR id= IDENT ( type_extension[pt] )? ( prototypes_for_types[extension,pt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[pt] )? ( properties_for_classifiers[pt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final ProcessorType processor_type() throws RecognitionException {
        ProcessorType pt = null;

        Token id=null;
        Token eid=null;
        BusAccess ba = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5954:2: ( PROCESSOR id= IDENT ( type_extension[pt] )? ( prototypes_for_types[extension,pt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[pt] )? ( properties_for_classifiers[pt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5955:2: PROCESSOR id= IDENT ( type_extension[pt] )? ( prototypes_for_types[extension,pt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[pt] )? ( properties_for_classifiers[pt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_processor_type17788); if (state.failed) return pt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_type17792); if (state.failed) return pt;
            if ( state.backtracking==0 ) {

              			pt = Aadl2F.createProcessorType();
              			pt.setName(id.getText());
              			pt.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5961:2: ( type_extension[pt] )?
            int alt461=2;
            int LA461_0 = input.LA(1);

            if ( (LA461_0==EXTENDS) ) {
                alt461=1;
            }
            switch (alt461) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5961:3: type_extension[pt]
                    {
                    pushFollow(FOLLOW_type_extension_in_processor_type17800);
                    type_extension(pt);

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5966:2: ( prototypes_for_types[extension,pt] )?
            int alt462=2;
            int LA462_0 = input.LA(1);

            if ( (LA462_0==PROTOTYPES) ) {
                alt462=1;
            }
            switch (alt462) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5966:4: prototypes_for_types[extension,pt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_processor_type17814);
                    prototypes_for_types(extension, pt);

                    state._fsp--;
                    if (state.failed) return pt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5968:2: ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt465=2;
            int LA465_0 = input.LA(1);

            if ( (LA465_0==FEATURES) ) {
                alt465=1;
            }
            switch (alt465) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5968:4: FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_processor_type17824); if (state.failed) return pt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5969:3: ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt464=2;
                    int LA464_0 = input.LA(1);

                    if ( (LA464_0==NONE) ) {
                        alt464=1;
                    }
                    else if ( (LA464_0==IDENT) ) {
                        alt464=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return pt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 464, 0, input);

                        throw nvae;
                    }
                    switch (alt464) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5969:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5969:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5969:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_processor_type17830);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return pt;
                            if ( state.backtracking==0 ) {

                              				pt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:4: ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:4: ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:5: ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:5: ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt463=0;
                            loop463:
                            do {
                                int alt463=9;
                                alt463 = dfa463.predict(input);
                                switch (alt463) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:8: (ba= bus_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:8: (ba= bus_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5974:9: ba= bus_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_access_in_processor_type17853);
                            	    ba=bus_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedBusAccesses().add(ba);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5979:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5979:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5979:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_processor_type17877);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sa.getKind() != AccessType.PROVIDED)
                            	      	    				throw new FailedPredicateException(input,"processor type", "subprogram access can only be provided");						
                            	      					pt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5986:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5986:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5986:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_processor_type17901);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sga.getKind() != AccessType.PROVIDED)
                            	      	    				throw new FailedPredicateException(input,"processor type", "subprogram group access can only be provided");						
                            	      					pt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5993:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5993:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5993:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_processor_type17925);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5998:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5998:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5998:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_processor_type17949);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6003:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6003:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6003:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_processor_type17973);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6008:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6008:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6008:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_processor_type17997);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      					pt.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6013:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6013:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6013:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_processor_type18023);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	                pt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt463 >= 1 ) break loop463;
                            	    if (state.backtracking>0) {state.failed=true; return pt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(463, input);
                                        throw eee;
                                }
                                cnt463++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6020:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt468=2;
            int LA468_0 = input.LA(1);

            if ( (LA468_0==FLOWS) ) {
                alt468=1;
            }
            switch (alt468) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6020:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_processor_type18057); if (state.failed) return pt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6021:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt467=2;
                    int LA467_0 = input.LA(1);

                    if ( (LA467_0==NONE) ) {
                        alt467=1;
                    }
                    else if ( (LA467_0==IDENT) ) {
                        alt467=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return pt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 467, 0, input);

                        throw nvae;
                    }
                    switch (alt467) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6021:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6021:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6021:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_processor_type18063);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return pt;
                            if ( state.backtracking==0 ) {

                              				pt.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6026:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6026:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6026:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6026:5: (fs= flow_spec[extension] )+
                            int cnt466=0;
                            loop466:
                            do {
                                int alt466=2;
                                int LA466_0 = input.LA(1);

                                if ( (LA466_0==IDENT) ) {
                                    alt466=1;
                                }


                                switch (alt466) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6026:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_processor_type18081);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return pt;
                            	    if ( state.backtracking==0 ) {

                            	      				pt.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt466 >= 1 ) break loop466;
                            	    if (state.backtracking>0) {state.failed=true; return pt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(466, input);
                                        throw eee;
                                }
                                cnt466++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6033:2: ( modes_for_types[pt] )?
            int alt469=2;
            int LA469_0 = input.LA(1);

            if ( (LA469_0==MODES||LA469_0==NONE||LA469_0==REQUIRES) ) {
                alt469=1;
            }
            switch (alt469) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6033:3: modes_for_types[pt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_processor_type18106);
                    modes_for_types(pt);

                    state._fsp--;
                    if (state.failed) return pt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6035:3: ( properties_for_classifiers[pt] )?
            int alt470=2;
            int LA470_0 = input.LA(1);

            if ( (LA470_0==PROPERTIES) ) {
                alt470=1;
            }
            switch (alt470) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6035:4: properties_for_classifiers[pt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_processor_type18116);
                    properties_for_classifiers(pt);

                    state._fsp--;
                    if (state.failed) return pt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6037:2: (as= annex_subclause )?
            int alt471=2;
            int LA471_0 = input.LA(1);

            if ( (LA471_0==ANNEX) ) {
                alt471=1;
            }
            switch (alt471) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6037:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_processor_type18129);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      	
                      			pt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_processor_type18140); if (state.failed) return pt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_processor_type18144); if (state.failed) return pt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"processor type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_processor_type18152); if (state.failed) return pt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return pt;
    }
    // $ANTLR end "processor_type"


    // $ANTLR start "memory_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6056:1: memory_type returns [MemoryType mt] : MEMORY id= IDENT ( type_extension[mt] )? ( prototypes_for_types[extension,mt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )? ( modes_for_types[mt] )? ( properties_for_classifiers[mt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final MemoryType memory_type() throws RecognitionException {
        MemoryType mt = null;

        Token id=null;
        Token eid=null;
        BusAccess ba = null;

        FeatureGroup fg = null;

        AbstractFeature af = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6060:2: ( MEMORY id= IDENT ( type_extension[mt] )? ( prototypes_for_types[extension,mt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )? ( modes_for_types[mt] )? ( properties_for_classifiers[mt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6061:2: MEMORY id= IDENT ( type_extension[mt] )? ( prototypes_for_types[extension,mt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )? ( modes_for_types[mt] )? ( properties_for_classifiers[mt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,MEMORY,FOLLOW_MEMORY_in_memory_type18188); if (state.failed) return mt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_type18192); if (state.failed) return mt;
            if ( state.backtracking==0 ) {

              			mt = Aadl2F.createMemoryType();
              			mt.setName(id.getText());
              			mt.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6067:2: ( type_extension[mt] )?
            int alt472=2;
            int LA472_0 = input.LA(1);

            if ( (LA472_0==EXTENDS) ) {
                alt472=1;
            }
            switch (alt472) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6067:3: type_extension[mt]
                    {
                    pushFollow(FOLLOW_type_extension_in_memory_type18200);
                    type_extension(mt);

                    state._fsp--;
                    if (state.failed) return mt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6072:2: ( prototypes_for_types[extension,mt] )?
            int alt473=2;
            int LA473_0 = input.LA(1);

            if ( (LA473_0==PROTOTYPES) ) {
                alt473=1;
            }
            switch (alt473) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6072:4: prototypes_for_types[extension,mt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_memory_type18214);
                    prototypes_for_types(extension, mt);

                    state._fsp--;
                    if (state.failed) return mt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6074:2: ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( (LA476_0==FEATURES) ) {
                alt476=1;
            }
            switch (alt476) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6074:4: FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_memory_type18224); if (state.failed) return mt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6075:3: ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt475=2;
                    int LA475_0 = input.LA(1);

                    if ( (LA475_0==NONE) ) {
                        alt475=1;
                    }
                    else if ( (LA475_0==IDENT) ) {
                        alt475=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return mt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 475, 0, input);

                        throw nvae;
                    }
                    switch (alt475) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6075:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6075:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6075:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_memory_type18230);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return mt;
                            if ( state.backtracking==0 ) {

                              				mt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:4: ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:4: ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:5: ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:5: ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+
                            int cnt474=0;
                            loop474:
                            do {
                                int alt474=4;
                                alt474 = dfa474.predict(input);
                                switch (alt474) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:8: (ba= bus_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:8: (ba= bus_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6080:9: ba= bus_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_access_in_memory_type18253);
                            	    ba=bus_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return mt;
                            	    if ( state.backtracking==0 ) {

                            	      					mt.getOwnedBusAccesses().add(ba);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6085:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6085:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6085:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_memory_type18277);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return mt;
                            	    if ( state.backtracking==0 ) {

                            	      					mt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6090:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6090:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6090:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_memory_type18302);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return mt;
                            	    if ( state.backtracking==0 ) {

                            	                mt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt474 >= 1 ) break loop474;
                            	    if (state.backtracking>0) {state.failed=true; return mt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(474, input);
                                        throw eee;
                                }
                                cnt474++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6097:2: ( modes_for_types[mt] )?
            int alt477=2;
            int LA477_0 = input.LA(1);

            if ( (LA477_0==MODES||LA477_0==NONE||LA477_0==REQUIRES) ) {
                alt477=1;
            }
            switch (alt477) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6097:3: modes_for_types[mt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_memory_type18336);
                    modes_for_types(mt);

                    state._fsp--;
                    if (state.failed) return mt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6099:3: ( properties_for_classifiers[mt] )?
            int alt478=2;
            int LA478_0 = input.LA(1);

            if ( (LA478_0==PROPERTIES) ) {
                alt478=1;
            }
            switch (alt478) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6099:4: properties_for_classifiers[mt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_memory_type18346);
                    properties_for_classifiers(mt);

                    state._fsp--;
                    if (state.failed) return mt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6101:2: (as= annex_subclause )?
            int alt479=2;
            int LA479_0 = input.LA(1);

            if ( (LA479_0==ANNEX) ) {
                alt479=1;
            }
            switch (alt479) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6101:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_memory_type18359);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return mt;
                    if ( state.backtracking==0 ) {
                      	
                      			mt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_memory_type18370); if (state.failed) return mt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_memory_type18374); if (state.failed) return mt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"memory type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_memory_type18382); if (state.failed) return mt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return mt;
    }
    // $ANTLR end "memory_type"


    // $ANTLR start "bus_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6120:1: bus_type returns [BusType bt] : BUS id= IDENT ( type_extension[bt] )? ( prototypes_for_types[extension, bt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )? ( modes_for_types[bt] )? ( properties_for_classifiers[bt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final BusType bus_type() throws RecognitionException {
        BusType bt = null;

        Token id=null;
        Token eid=null;
        BusAccess ba = null;

        FeatureGroup fg = null;

        AbstractFeature af = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6124:2: ( BUS id= IDENT ( type_extension[bt] )? ( prototypes_for_types[extension, bt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )? ( modes_for_types[bt] )? ( properties_for_classifiers[bt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6125:2: BUS id= IDENT ( type_extension[bt] )? ( prototypes_for_types[extension, bt] )? ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )? ( modes_for_types[bt] )? ( properties_for_classifiers[bt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,BUS,FOLLOW_BUS_in_bus_type18419); if (state.failed) return bt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_type18423); if (state.failed) return bt;
            if ( state.backtracking==0 ) {

              			bt = Aadl2F.createBusType();
              			bt.setName(id.getText());
              			bt.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6131:2: ( type_extension[bt] )?
            int alt480=2;
            int LA480_0 = input.LA(1);

            if ( (LA480_0==EXTENDS) ) {
                alt480=1;
            }
            switch (alt480) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6131:3: type_extension[bt]
                    {
                    pushFollow(FOLLOW_type_extension_in_bus_type18431);
                    type_extension(bt);

                    state._fsp--;
                    if (state.failed) return bt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6136:2: ( prototypes_for_types[extension, bt] )?
            int alt481=2;
            int LA481_0 = input.LA(1);

            if ( (LA481_0==PROTOTYPES) ) {
                alt481=1;
            }
            switch (alt481) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6136:4: prototypes_for_types[extension, bt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_bus_type18445);
                    prototypes_for_types(extension, bt);

                    state._fsp--;
                    if (state.failed) return bt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6138:2: ( FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) ) )?
            int alt484=2;
            int LA484_0 = input.LA(1);

            if ( (LA484_0==FEATURES) ) {
                alt484=1;
            }
            switch (alt484) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6138:4: FEATURES ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_bus_type18455); if (state.failed) return bt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6139:3: ( ( none_stmt ) | ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ ) )
                    int alt483=2;
                    int LA483_0 = input.LA(1);

                    if ( (LA483_0==NONE) ) {
                        alt483=1;
                    }
                    else if ( (LA483_0==IDENT) ) {
                        alt483=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return bt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 483, 0, input);

                        throw nvae;
                    }
                    switch (alt483) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6140:3: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6140:3: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6140:4: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_bus_type18464);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return bt;
                            if ( state.backtracking==0 ) {

                              				bt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:4: ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:4: ( ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:5: ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:5: ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+
                            int cnt482=0;
                            loop482:
                            do {
                                int alt482=4;
                                alt482 = dfa482.predict(input);
                                switch (alt482) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:8: (ba= bus_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:8: (ba= bus_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6145:9: ba= bus_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_access_in_bus_type18487);
                            	    ba=bus_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return bt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (ba != null){
                            	      						if (ba.getKind() != AccessType.REQUIRED)
                            	      	    					throw new FailedPredicateException(input,"bus type", "bus access can only be required");						
                            	      						bt.getOwnedBusAccesses().add(ba);
                            	      					}
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6154:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6154:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6154:7: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_bus_type18512);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return bt;
                            	    if ( state.backtracking==0 ) {

                            	      					bt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6159:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6159:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6159:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_bus_type18538);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return bt;
                            	    if ( state.backtracking==0 ) {

                            	                bt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt482 >= 1 ) break loop482;
                            	    if (state.backtracking>0) {state.failed=true; return bt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(482, input);
                                        throw eee;
                                }
                                cnt482++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6167:2: ( modes_for_types[bt] )?
            int alt485=2;
            int LA485_0 = input.LA(1);

            if ( (LA485_0==MODES||LA485_0==NONE||LA485_0==REQUIRES) ) {
                alt485=1;
            }
            switch (alt485) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6167:3: modes_for_types[bt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_bus_type18575);
                    modes_for_types(bt);

                    state._fsp--;
                    if (state.failed) return bt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6169:3: ( properties_for_classifiers[bt] )?
            int alt486=2;
            int LA486_0 = input.LA(1);

            if ( (LA486_0==PROPERTIES) ) {
                alt486=1;
            }
            switch (alt486) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6169:4: properties_for_classifiers[bt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_bus_type18585);
                    properties_for_classifiers(bt);

                    state._fsp--;
                    if (state.failed) return bt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6171:2: (as= annex_subclause )?
            int alt487=2;
            int LA487_0 = input.LA(1);

            if ( (LA487_0==ANNEX) ) {
                alt487=1;
            }
            switch (alt487) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6171:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_bus_type18598);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return bt;
                    if ( state.backtracking==0 ) {
                      	
                      			bt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_bus_type18609); if (state.failed) return bt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_type18613); if (state.failed) return bt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"bus type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_bus_type18621); if (state.failed) return bt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return bt;
    }
    // $ANTLR end "bus_type"


    // $ANTLR start "device_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6190:1: device_type returns [DeviceType dt] : DEVICE id= IDENT ( type_extension[dt] )? ( prototypes_for_types[extension,dt] )? ( FEATURES ( ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[dt] )? ( properties_for_classifiers[dt] )? (as= annex_subclause )? END eid= IDENT SEMI ;
    public final DeviceType device_type() throws RecognitionException {
        DeviceType dt = null;

        Token id=null;
        Token eid=null;
        BusAccess ba = null;

        SubprogramAccess sa = null;

        SubprogramGroupAccess sga = null;

        FeatureGroup fg = null;

        DataPort dp = null;

        EventDataPort edp = null;

        EventPort ep = null;

        AbstractFeature af = null;

        FlowSpecification fs = null;

        AnnexSubclause as = null;



        	 boolean extension=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6194:2: ( DEVICE id= IDENT ( type_extension[dt] )? ( prototypes_for_types[extension,dt] )? ( FEATURES ( ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[dt] )? ( properties_for_classifiers[dt] )? (as= annex_subclause )? END eid= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6195:2: DEVICE id= IDENT ( type_extension[dt] )? ( prototypes_for_types[extension,dt] )? ( FEATURES ( ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )? ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )? ( modes_for_types[dt] )? ( properties_for_classifiers[dt] )? (as= annex_subclause )? END eid= IDENT SEMI
            {
            match(input,DEVICE,FOLLOW_DEVICE_in_device_type18658); if (state.failed) return dt;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_type18662); if (state.failed) return dt;
            if ( state.backtracking==0 ) {

              			dt = Aadl2F.createDeviceType();
              			dt.setName(id.getText());
              			dt.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6201:2: ( type_extension[dt] )?
            int alt488=2;
            int LA488_0 = input.LA(1);

            if ( (LA488_0==EXTENDS) ) {
                alt488=1;
            }
            switch (alt488) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6201:3: type_extension[dt]
                    {
                    pushFollow(FOLLOW_type_extension_in_device_type18670);
                    type_extension(dt);

                    state._fsp--;
                    if (state.failed) return dt;
                    if ( state.backtracking==0 ) {

                      	   extension=true;
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6206:2: ( prototypes_for_types[extension,dt] )?
            int alt489=2;
            int LA489_0 = input.LA(1);

            if ( (LA489_0==PROTOTYPES) ) {
                alt489=1;
            }
            switch (alt489) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6206:4: prototypes_for_types[extension,dt]
                    {
                    pushFollow(FOLLOW_prototypes_for_types_in_device_type18684);
                    prototypes_for_types(extension, dt);

                    state._fsp--;
                    if (state.failed) return dt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6208:2: ( FEATURES ( ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) ) )?
            int alt492=2;
            int LA492_0 = input.LA(1);

            if ( (LA492_0==FEATURES) ) {
                alt492=1;
            }
            switch (alt492) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6208:4: FEATURES ( ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_device_type18694); if (state.failed) return dt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:3: ( ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ ) | ( none_stmt ) )
                    int alt491=2;
                    int LA491_0 = input.LA(1);

                    if ( (LA491_0==IDENT) ) {
                        alt491=1;
                    }
                    else if ( (LA491_0==NONE) ) {
                        alt491=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return dt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 491, 0, input);

                        throw nvae;
                    }
                    switch (alt491) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:4: ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:4: ( ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:5: ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:5: ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+
                            int cnt490=0;
                            loop490:
                            do {
                                int alt490=9;
                                alt490 = dfa490.predict(input);
                                switch (alt490) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:8: (ba= bus_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:8: (ba= bus_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6209:9: ba= bus_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_bus_access_in_device_type18708);
                            	    ba=bus_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					dt.getOwnedBusAccesses().add(ba);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6214:5: (sa= subprogram_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6214:5: (sa= subprogram_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6214:6: sa= subprogram_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_access_in_device_type18732);
                            	    sa=subprogram_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sa.getKind() != AccessType.PROVIDED)
                            	      	    				throw new FailedPredicateException(input,"processor type", "subprogram access can only be provided");						
                            	      					dt.getOwnedSubprogramAccesses().add(sa);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 3 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6221:5: (sga= subprogram_group_access[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6221:5: (sga= subprogram_group_access[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6221:6: sga= subprogram_group_access[extension]
                            	    {
                            	    pushFollow(FOLLOW_subprogram_group_access_in_device_type18756);
                            	    sga=subprogram_group_access(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					if (sga.getKind() != AccessType.PROVIDED)
                            	      	    				throw new FailedPredicateException(input,"processor type", "subprogram group access can only be provided");						
                            	      					dt.getOwnedSubprogramGroupAccesses().add(sga);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 4 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6228:5: (fg= feature_group[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6228:5: (fg= feature_group[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6228:6: fg= feature_group[extension]
                            	    {
                            	    pushFollow(FOLLOW_feature_group_in_device_type18780);
                            	    fg=feature_group(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					dt.getOwnedFeatureGroups().add(fg);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 5 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6233:5: (dp= data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6233:5: (dp= data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6233:6: dp= data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_data_port_in_device_type18804);
                            	    dp=data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					dt.getOwnedDataPorts().add(dp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 6 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6238:5: (edp= event_data_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6238:5: (edp= event_data_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6238:6: edp= event_data_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_data_port_in_device_type18828);
                            	    edp=event_data_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					dt.getOwnedEventDataPorts().add(edp);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 7 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6243:5: (ep= event_port[extension] )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6243:5: (ep= event_port[extension] )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6243:6: ep= event_port[extension]
                            	    {
                            	    pushFollow(FOLLOW_event_port_in_device_type18852);
                            	    ep=event_port(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      					dt.getOwnedEventPorts().add(ep);
                            	      				
                            	    }

                            	    }


                            	    }
                            	    break;
                            	case 8 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6248:9: (af= abstract_feature )
                            	    {
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6248:9: (af= abstract_feature )
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6248:10: af= abstract_feature
                            	    {
                            	    pushFollow(FOLLOW_abstract_feature_in_device_type18878);
                            	    af=abstract_feature();

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	                dt.getOwnedAbstractFeatures().add(af);
                            	              
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt490 >= 1 ) break loop490;
                            	    if (state.backtracking>0) {state.failed=true; return dt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(490, input);
                                        throw eee;
                                }
                                cnt490++;
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6254:5: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6254:5: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6254:6: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_device_type18910);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return dt;
                            if ( state.backtracking==0 ) {

                              				dt.setNoFeatures(true);
                              			
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6260:2: ( FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) ) )?
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( (LA495_0==FLOWS) ) {
                alt495=1;
            }
            switch (alt495) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6260:3: FLOWS ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_device_type18928); if (state.failed) return dt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6261:3: ( ( none_stmt ) | ( (fs= flow_spec[extension] )+ ) )
                    int alt494=2;
                    int LA494_0 = input.LA(1);

                    if ( (LA494_0==NONE) ) {
                        alt494=1;
                    }
                    else if ( (LA494_0==IDENT) ) {
                        alt494=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return dt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 494, 0, input);

                        throw nvae;
                    }
                    switch (alt494) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6261:4: ( none_stmt )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6261:4: ( none_stmt )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6261:5: none_stmt
                            {
                            pushFollow(FOLLOW_none_stmt_in_device_type18934);
                            none_stmt();

                            state._fsp--;
                            if (state.failed) return dt;
                            if ( state.backtracking==0 ) {

                              				dt.setNoFlows(true);
                              			
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6266:4: ( (fs= flow_spec[extension] )+ )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6266:4: ( (fs= flow_spec[extension] )+ )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6266:5: (fs= flow_spec[extension] )+
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6266:5: (fs= flow_spec[extension] )+
                            int cnt493=0;
                            loop493:
                            do {
                                int alt493=2;
                                int LA493_0 = input.LA(1);

                                if ( (LA493_0==IDENT) ) {
                                    alt493=1;
                                }


                                switch (alt493) {
                            	case 1 :
                            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6266:6: fs= flow_spec[extension]
                            	    {
                            	    pushFollow(FOLLOW_flow_spec_in_device_type18952);
                            	    fs=flow_spec(extension);

                            	    state._fsp--;
                            	    if (state.failed) return dt;
                            	    if ( state.backtracking==0 ) {

                            	      				dt.getOwnedFlowSpecifications().add(fs);
                            	      			
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    if ( cnt493 >= 1 ) break loop493;
                            	    if (state.backtracking>0) {state.failed=true; return dt;}
                                        EarlyExitException eee =
                                            new EarlyExitException(493, input);
                                        throw eee;
                                }
                                cnt493++;
                            } while (true);


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6273:2: ( modes_for_types[dt] )?
            int alt496=2;
            int LA496_0 = input.LA(1);

            if ( (LA496_0==MODES||LA496_0==NONE||LA496_0==REQUIRES) ) {
                alt496=1;
            }
            switch (alt496) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6273:3: modes_for_types[dt]
                    {
                    pushFollow(FOLLOW_modes_for_types_in_device_type18977);
                    modes_for_types(dt);

                    state._fsp--;
                    if (state.failed) return dt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6275:3: ( properties_for_classifiers[dt] )?
            int alt497=2;
            int LA497_0 = input.LA(1);

            if ( (LA497_0==PROPERTIES) ) {
                alt497=1;
            }
            switch (alt497) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6275:4: properties_for_classifiers[dt]
                    {
                    pushFollow(FOLLOW_properties_for_classifiers_in_device_type18987);
                    properties_for_classifiers(dt);

                    state._fsp--;
                    if (state.failed) return dt;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6277:2: (as= annex_subclause )?
            int alt498=2;
            int LA498_0 = input.LA(1);

            if ( (LA498_0==ANNEX) ) {
                alt498=1;
            }
            switch (alt498) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6277:3: as= annex_subclause
                    {
                    pushFollow(FOLLOW_annex_subclause_in_device_type19000);
                    as=annex_subclause();

                    state._fsp--;
                    if (state.failed) return dt;
                    if ( state.backtracking==0 ) {
                      	
                      			dt.getOwnedAnnexSubclauses().add(as);
                      		
                    }

                    }
                    break;

            }

            match(input,END,FOLLOW_END_in_device_type19011); if (state.failed) return dt;
            eid=(Token)match(input,IDENT,FOLLOW_IDENT_in_device_type19015); if (state.failed) return dt;
            if ( state.backtracking==0 ) {

              			if (!(id.getText().equalsIgnoreCase(eid.getText())))
              	    		throw new FailedPredicateException(input,"bus type", "End identifier "+eid.getText()+" does not match defining identifier "+id.getText());			
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_device_type19023); if (state.failed) return dt;

            }

        }
        catch (RecognitionException ex) {

            		reportError(ex);
            		consumeUntil(input,END);
            		consumeUntil(input,SEMI);
            		input.consume();
            	
        }
        finally {
        }
        return dt;
    }
    // $ANTLR end "device_type"


    // $ANTLR start "unique_type_name"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6632:1: unique_type_name returns [ReferenceRecord rr] : (pid= IDENT DOUBLECOLON )* tid= IDENT ;
    public final ReferenceRecord unique_type_name() throws RecognitionException {
        ReferenceRecord rr = null;

        Token pid=null;
        Token tid=null;


        		String pn = "";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6635:3: ( (pid= IDENT DOUBLECOLON )* tid= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6636:3: (pid= IDENT DOUBLECOLON )* tid= IDENT
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6636:3: (pid= IDENT DOUBLECOLON )*
            loop499:
            do {
                int alt499=2;
                int LA499_0 = input.LA(1);

                if ( (LA499_0==IDENT) ) {
                    int LA499_1 = input.LA(2);

                    if ( (LA499_1==DOUBLECOLON) ) {
                        alt499=1;
                    }


                }


                switch (alt499) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6636:5: pid= IDENT DOUBLECOLON
            	    {
            	    pid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_type_name19414); if (state.failed) return rr;
            	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_unique_type_name19416); if (state.failed) return rr;
            	    if ( state.backtracking==0 ) {
            	       pn = pn + (pn.length() == 0 ? "":"::")+pid.getText();
            	    }

            	    }
            	    break;

            	default :
            	    break loop499;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              	 	if ( pn.length() > 0 ) {
              	 		referencedPackages.add(pn);
              	 	}
              	 
            }
            tid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_type_name19439); if (state.failed) return rr;
            if ( state.backtracking==0 ) {
               
              	     rr = new ReferenceRecord( (pn.length() >0)? new String[]{pn,tid.getText()} 
              	                                               : new String[]{tid.getText()}
              	                              );
              	   
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rr;
    }
    // $ANTLR end "unique_type_name"


    // $ANTLR start "unique_impl_name"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6652:1: unique_impl_name returns [ReferenceRecord rr ] : (pid= IDENT DOUBLECOLON )* tid= IDENT DOT iid= IDENT ;
    public final ReferenceRecord unique_impl_name() throws RecognitionException {
        ReferenceRecord rr = null;

        Token pid=null;
        Token tid=null;
        Token iid=null;


            String pn = "";
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6655:4: ( (pid= IDENT DOUBLECOLON )* tid= IDENT DOT iid= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6656:4: (pid= IDENT DOUBLECOLON )* tid= IDENT DOT iid= IDENT
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6656:4: (pid= IDENT DOUBLECOLON )*
            loop500:
            do {
                int alt500=2;
                int LA500_0 = input.LA(1);

                if ( (LA500_0==IDENT) ) {
                    int LA500_1 = input.LA(2);

                    if ( (LA500_1==DOUBLECOLON) ) {
                        alt500=1;
                    }


                }


                switch (alt500) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6656:6: pid= IDENT DOUBLECOLON
            	    {
            	    pid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_impl_name19473); if (state.failed) return rr;
            	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_unique_impl_name19475); if (state.failed) return rr;
            	    if ( state.backtracking==0 ) {
            	       pn = pn +(pn.length() == 0 ? "":"::")+pid.getText();
            	    }

            	    }
            	    break;

            	default :
            	    break loop500;
                }
            } while (true);

            if ( state.backtracking==0 ) {

                  if ( pn.length() > 0 ) {
                    referencedPackages.add(pn);
                  }
                 
            }
            tid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_impl_name19503); if (state.failed) return rr;
            match(input,DOT,FOLLOW_DOT_in_unique_impl_name19505); if (state.failed) return rr;
            iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_impl_name19509); if (state.failed) return rr;
            if ( state.backtracking==0 ) {

                       rr = new ReferenceRecord( (pn.length() >0) ? new String[]{pn,tid.getText(),iid.getText()} 
                                                                  : new String[]{tid.getText(), iid.getText()}
                                                );
                    
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rr;
    }
    // $ANTLR end "unique_impl_name"


    // $ANTLR start "classifier_reference"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6691:1: classifier_reference returns [ReferenceRecord cr] : ( (pid= IDENT DOUBLECOLON )* tid= IDENT ( DOT iid= IDENT )? ) ;
    public final ReferenceRecord classifier_reference() throws RecognitionException {
        ReferenceRecord cr = null;

        Token pid=null;
        Token tid=null;
        Token iid=null;


        		String pn = "";
        		String stid ="";
        		String siid = "";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6696:3: ( ( (pid= IDENT DOUBLECOLON )* tid= IDENT ( DOT iid= IDENT )? ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6697:2: ( (pid= IDENT DOUBLECOLON )* tid= IDENT ( DOT iid= IDENT )? )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6697:2: ( (pid= IDENT DOUBLECOLON )* tid= IDENT ( DOT iid= IDENT )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6698:3: (pid= IDENT DOUBLECOLON )* tid= IDENT ( DOT iid= IDENT )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6698:3: (pid= IDENT DOUBLECOLON )*
            loop501:
            do {
                int alt501=2;
                int LA501_0 = input.LA(1);

                if ( (LA501_0==IDENT) ) {
                    int LA501_1 = input.LA(2);

                    if ( (LA501_1==DOUBLECOLON) ) {
                        alt501=1;
                    }


                }


                switch (alt501) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6698:5: pid= IDENT DOUBLECOLON
            	    {
            	    pid=(Token)match(input,IDENT,FOLLOW_IDENT_in_classifier_reference19569); if (state.failed) return cr;
            	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_classifier_reference19571); if (state.failed) return cr;
            	    if ( state.backtracking==0 ) {
            	       
            	      	 		  pn = pn +(pn.length() == 0 ? "":"::")+pid.getText();
            	      	 		
            	    }

            	    }
            	    break;

            	default :
            	    break loop501;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              	 	if ( pn.length() > 0 ) {
              	 		referencedPackages.add(pn);
              	 	}
              	 
            }
            tid=(Token)match(input,IDENT,FOLLOW_IDENT_in_classifier_reference19594); if (state.failed) return cr;
            if ( state.backtracking==0 ) {

              	     stid = tid.getText();
              	    
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6712:2: ( DOT iid= IDENT )?
            int alt502=2;
            int LA502_0 = input.LA(1);

            if ( (LA502_0==DOT) ) {
                alt502=1;
            }
            switch (alt502) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:6712:4: DOT iid= IDENT
                    {
                    match(input,DOT,FOLLOW_DOT_in_classifier_reference19606); if (state.failed) return cr;
                    iid=(Token)match(input,IDENT,FOLLOW_IDENT_in_classifier_reference19610); if (state.failed) return cr;
                    if ( state.backtracking==0 ) {

                      			 siid = iid.getText(); 
                      			
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	   cr = new ReferenceRecord();
              	   stid = (siid.length() >0) ? stid + "."+siid : stid;
              	   cr.setLabels((pn.length() >0) ? (new String[]{pn,stid})
              	                                 : (new String[]{stid}) 
              	               );
              	 
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cr;
    }
    // $ANTLR end "classifier_reference"


    // $ANTLR start "annex_library"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7758:1: annex_library returns [AnnexLibrary al] : ANNEX id= IDENT at= ANNEX_TEXT SEMI ;
    public final AnnexLibrary annex_library() throws RecognitionException {
        AnnexLibrary al = null;

        Token id=null;
        Token at=null;


        		al = null;
        		Vector cmt = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7763:3: ( ANNEX id= IDENT at= ANNEX_TEXT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7764:5: ANNEX id= IDENT at= ANNEX_TEXT SEMI
            {
            match(input,ANNEX,FOLLOW_ANNEX_in_annex_library20696); if (state.failed) return al;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_annex_library20700); if (state.failed) return al;
            if ( state.backtracking==0 ) {

              			cmt = getComments();
              		
            }
            at=(Token)match(input,ANNEX_TEXT,FOLLOW_ANNEX_TEXT_in_annex_library20711); if (state.failed) return al;
            if ( state.backtracking==0 ) {
               
              			String annexName = id.getText();
              			String annexText = at.getText();
              			if (annexText.length() > 6) {
              		        annexText = annexText.substring(3, annexText.length() - 3);
              			}
              			AnnexParserRegistry registry = (AnnexParserRegistry) AnnexRegistry.getRegistry(AnnexRegistry.ANNEX_PARSER_EXT_ID);
              			AnnexParser ap = registry.getAnnexParser(annexName);
              			al = ap.parseAnnexLibrary(id.getText(), annexText, getFilename(), at.getLine(), at.getCharPositionInLine() + 3, errReporter);
              			al.setName(id.getText());
              			al.setLocationReference(this.getFilename(), id.getLine());
              			attachComments(al, cmt);
              	   
            }
            match(input,SEMI,FOLLOW_SEMI_in_annex_library20719); if (state.failed) return al;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return al;
    }
    // $ANTLR end "annex_library"


    // $ANTLR start "annex_subclause"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7784:1: annex_subclause returns [AnnexSubclause as ] : ANNEX id= IDENT at= ANNEX_TEXT SEMI ;
    public final AnnexSubclause annex_subclause() throws RecognitionException {
        AnnexSubclause as = null;

        Token id=null;
        Token at=null;


        		as = null;
        		Vector cmt = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7789:3: ( ANNEX id= IDENT at= ANNEX_TEXT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7790:5: ANNEX id= IDENT at= ANNEX_TEXT SEMI
            {
            match(input,ANNEX,FOLLOW_ANNEX_in_annex_subclause20743); if (state.failed) return as;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_annex_subclause20747); if (state.failed) return as;
            if ( state.backtracking==0 ) {

              			cmt = getComments();
              		
            }
            at=(Token)match(input,ANNEX_TEXT,FOLLOW_ANNEX_TEXT_in_annex_subclause20758); if (state.failed) return as;
            if ( state.backtracking==0 ) {
               
              			String annexName = id.getText();
              			String annexText = at.getText();
              			if (annexText.length() > 6 ){
              		        annexText = annexText.substring(3, annexText.length() - 3);
              			}
              			AnnexParserRegistry registry = (AnnexParserRegistry) AnnexRegistry.getRegistry(AnnexRegistry.ANNEX_PARSER_EXT_ID);
              			AnnexParser ap = registry.getAnnexParser(annexName);
              			as = ap.parseAnnexSubclause(id.getText(), annexText, getFilename(), at.getLine(), at.getCharPositionInLine() + 3, errReporter);
              			as.setName(id.getText());
              			as.setLocationReference(this.getFilename(), id.getLine());
              			attachComments(as, cmt);
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_annex_subclause20765); if (state.failed) return as;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return as;
    }
    // $ANTLR end "annex_subclause"


    // $ANTLR start "property_set"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7894:1: property_set[GlobalNamespace gns, Resource r] : PROPERTY SET psid1= IDENT IS ( WITH (opsid= IDENT ( COMMA opsid1= IDENT )* )+ SEMI )* (pt= property_type_declaration | pd= property_definition_declaration | pc= property_constant )* END psid2= IDENT SEMI ;
    public final void property_set(GlobalNamespace gns, Resource r) throws RecognitionException {
        Token psid1=null;
        Token opsid=null;
        Token opsid1=null;
        Token psid2=null;
        PropertyType pt = null;

        Property pd = null;

        PropertyConstant pc = null;



        		PropertySet ps=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7898:2: ( PROPERTY SET psid1= IDENT IS ( WITH (opsid= IDENT ( COMMA opsid1= IDENT )* )+ SEMI )* (pt= property_type_declaration | pd= property_definition_declaration | pc= property_constant )* END psid2= IDENT SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7899:2: PROPERTY SET psid1= IDENT IS ( WITH (opsid= IDENT ( COMMA opsid1= IDENT )* )+ SEMI )* (pt= property_type_declaration | pd= property_definition_declaration | pc= property_constant )* END psid2= IDENT SEMI
            {
            match(input,PROPERTY,FOLLOW_PROPERTY_in_property_set20869); if (state.failed) return ;
            match(input,SET,FOLLOW_SET_in_property_set20871); if (state.failed) return ;
            psid1=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_set20875); if (state.failed) return ;
            match(input,IS,FOLLOW_IS_in_property_set20877); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              			ps = Aadl2F.createPropertySet();
              			ps.setName(psid1.getText());
              			ps.setLocationReference(this.getFilename(),psid1.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7905:2: ( WITH (opsid= IDENT ( COMMA opsid1= IDENT )* )+ SEMI )*
            loop505:
            do {
                int alt505=2;
                int LA505_0 = input.LA(1);

                if ( (LA505_0==WITH) ) {
                    alt505=1;
                }


                switch (alt505) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7905:3: WITH (opsid= IDENT ( COMMA opsid1= IDENT )* )+ SEMI
            	    {
            	    match(input,WITH,FOLLOW_WITH_in_property_set20885); if (state.failed) return ;
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7906:3: (opsid= IDENT ( COMMA opsid1= IDENT )* )+
            	    int cnt504=0;
            	    loop504:
            	    do {
            	        int alt504=2;
            	        int LA504_0 = input.LA(1);

            	        if ( (LA504_0==IDENT) ) {
            	            alt504=1;
            	        }


            	        switch (alt504) {
            	    	case 1 :
            	    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7906:4: opsid= IDENT ( COMMA opsid1= IDENT )*
            	    	    {
            	    	    opsid=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_set20893); if (state.failed) return ;
            	    	    if ( state.backtracking==0 ) {

            	    	      				ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.WithStatementReference,
            	    	      				                                          ps,
            	    	      				                                          new String[]{opsid.getText()});
            	    	              unresolvedReferences.add(rr);				                                          
            	    	      			
            	    	    }
            	    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7913:4: ( COMMA opsid1= IDENT )*
            	    	    loop503:
            	    	    do {
            	    	        int alt503=2;
            	    	        int LA503_0 = input.LA(1);

            	    	        if ( (LA503_0==COMMA) ) {
            	    	            alt503=1;
            	    	        }


            	    	        switch (alt503) {
            	    	    	case 1 :
            	    	    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7913:5: COMMA opsid1= IDENT
            	    	    	    {
            	    	    	    match(input,COMMA,FOLLOW_COMMA_in_property_set20904); if (state.failed) return ;
            	    	    	    opsid1=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_set20908); if (state.failed) return ;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	                ReferenceRecord rr1 = new ReferenceRecord(ParserReferenceType.WithStatementReference,
            	    	    	                                                        ps,
            	    	    	                                                        new String[]{opsid1.getText()});
            	    	    	                unresolvedReferences.add(rr1);                                                 
            	    	    	      				
            	    	    	    }

            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop503;
            	    	        }
            	    	    } while (true);


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt504 >= 1 ) break loop504;
            	    	    if (state.backtracking>0) {state.failed=true; return ;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(504, input);
            	                throw eee;
            	        }
            	        cnt504++;
            	    } while (true);

            	    match(input,SEMI,FOLLOW_SEMI_in_property_set20931); if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop505;
                }
            } while (true);

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7924:2: (pt= property_type_declaration | pd= property_definition_declaration | pc= property_constant )*
            loop506:
            do {
                int alt506=4;
                int LA506_0 = input.LA(1);

                if ( (LA506_0==IDENT) ) {
                    int LA506_2 = input.LA(2);

                    if ( (LA506_2==COLON) ) {
                        switch ( input.LA(3) ) {
                        case TYPE:
                            {
                            alt506=1;
                            }
                            break;
                        case CONSTANT:
                            {
                            alt506=3;
                            }
                            break;
                        case IDENT:
                        case INHERIT:
                        case LIST:
                        case RECORD:
                        case REFERENCE:
                        case BOOLEAN:
                        case STRING:
                        case ENUMERATION:
                        case UNITS:
                        case REAL:
                        case INTEGER:
                        case RANGE:
                        case CLASSIFIER:
                            {
                            alt506=2;
                            }
                            break;

                        }

                    }


                }


                switch (alt506) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7925:3: pt= property_type_declaration
            	    {
            	    pushFollow(FOLLOW_property_type_declaration_in_property_set20944);
            	    pt=property_type_declaration();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      				if (ps.findNamedElement(pt.getName()) != null ) {
            	      					errReporter.error(new LocationReference(this.getFilename(), pt.getLocationReference().getLine()), "Duplicate property set entry");
            	      				}
            	      				ps.getOwnedPropertyTypes().add(pt);
            	      			
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7933:3: pd= property_definition_declaration
            	    {
            	    pushFollow(FOLLOW_property_definition_declaration_in_property_set20959);
            	    pd=property_definition_declaration();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      				ps.getOwnedProperties().add(pd);
            	      			
            	    }

            	    }
            	    break;
            	case 3 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7938:3: pc= property_constant
            	    {
            	    pushFollow(FOLLOW_property_constant_in_property_set20974);
            	    pc=property_constant();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      				ps.getOwnedPropertyConstants().add(pc);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop506;
                }
            } while (true);

            match(input,END,FOLLOW_END_in_property_set20986); if (state.failed) return ;
            psid2=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_set20990); if (state.failed) return ;
            match(input,SEMI,FOLLOW_SEMI_in_property_set20992); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		if (!(psid2.getText().equalsIgnoreCase(psid1.getText()))) {
              			throw new FailedPredicateException(input,"property set","Property set name '" + psid1.getText() + "' does not match end identifier '" + psid2.getText()+"'");
              		}
              		processComments(ps);
              		r.getContents().add(ps); 
              		//gns.getPropertySets().add(ps);
              	
            }

            }

        }
        catch (RecognitionException ex) {

            			reportError(ex);
            			consumeUntil(input,END);
            			consumeUntil(input,SEMI);
            			input.consume();
                    
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "property_set"


    // $ANTLR start "property_definition_declaration"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7960:1: property_definition_declaration returns [Property p] : id= IDENT COLON ( INHERIT )? ( LIST OF )* (nr= unique_property_type_identifier | pt= property_type ) ( ASSIGN ce= property_expression[p] )? APPLIES TO LPAREN ( (po= property_owner ( COMMA po1= property_owner )* ) | (a= ALL ) ) RPAREN SEMI ;
    public final Property property_definition_declaration() throws RecognitionException {
        Property p = null;

        Token id=null;
        Token a=null;
        ReferenceRecord nr = null;

        PropertyType pt = null;

        PropertyExpression ce = null;

        PropertyOwner po = null;

        PropertyOwner po1 = null;



            boolean inherit=false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7964:3: (id= IDENT COLON ( INHERIT )? ( LIST OF )* (nr= unique_property_type_identifier | pt= property_type ) ( ASSIGN ce= property_expression[p] )? APPLIES TO LPAREN ( (po= property_owner ( COMMA po1= property_owner )* ) | (a= ALL ) ) RPAREN SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7965:3: id= IDENT COLON ( INHERIT )? ( LIST OF )* (nr= unique_property_type_identifier | pt= property_type ) ( ASSIGN ce= property_expression[p] )? APPLIES TO LPAREN ( (po= property_owner ( COMMA po1= property_owner )* ) | (a= ALL ) ) RPAREN SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_definition_declaration21029); if (state.failed) return p;
            match(input,COLON,FOLLOW_COLON_in_property_definition_declaration21031); if (state.failed) return p;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7966:3: ( INHERIT )?
            int alt507=2;
            int LA507_0 = input.LA(1);

            if ( (LA507_0==INHERIT) ) {
                alt507=1;
            }
            switch (alt507) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7966:4: INHERIT
                    {
                    match(input,INHERIT,FOLLOW_INHERIT_in_property_definition_declaration21036); if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                            inherit=true;
                          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

                    p = Aadl2F.createProperty();
                    p.setInherit(inherit);
                    p.setName(id.getText());
                    p.setLocationReference(this.getFilename(),id.getLine());
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7977:3: ( LIST OF )*
            loop508:
            do {
                int alt508=2;
                int LA508_0 = input.LA(1);

                if ( (LA508_0==LIST) ) {
                    alt508=1;
                }


                switch (alt508) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7977:5: LIST OF
            	    {
            	    match(input,LIST,FOLLOW_LIST_in_property_definition_declaration21059); if (state.failed) return p;
            	    match(input,OF,FOLLOW_OF_in_property_definition_declaration21061); if (state.failed) return p;
            	    if ( state.backtracking==0 ) {

            	            p.setList(p.getList() + 1);
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop508;
                }
            } while (true);

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7981:3: (nr= unique_property_type_identifier | pt= property_type )
            int alt509=2;
            int LA509_0 = input.LA(1);

            if ( (LA509_0==IDENT) ) {
                alt509=1;
            }
            else if ( ((LA509_0>=RECORD && LA509_0<=UNITS)||(LA509_0>=REAL && LA509_0<=INTEGER)||(LA509_0>=RANGE && LA509_0<=CLASSIFIER)) ) {
                alt509=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return p;}
                NoViableAltException nvae =
                    new NoViableAltException("", 509, 0, input);

                throw nvae;
            }
            switch (alt509) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7981:4: nr= unique_property_type_identifier
                    {
                    pushFollow(FOLLOW_unique_property_type_identifier_in_property_definition_declaration21076);
                    nr=unique_property_type_identifier();

                    state._fsp--;
                    if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                            nr.setReferencingObject(p);
                            nr.setReferenceType(ParserReferenceType.PropertyValuePropertyTypeReference);
                            unresolvedReferences.add(nr);
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7987:5: pt= property_type
                    {
                    pushFollow(FOLLOW_property_type_in_property_definition_declaration21092);
                    pt=property_type();

                    state._fsp--;
                    if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                            p.setOwnedType(pt);
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7992:3: ( ASSIGN ce= property_expression[p] )?
            int alt510=2;
            int LA510_0 = input.LA(1);

            if ( (LA510_0==ASSIGN) ) {
                alt510=1;
            }
            switch (alt510) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:7992:5: ASSIGN ce= property_expression[p]
                    {
                    match(input,ASSIGN,FOLLOW_ASSIGN_in_property_definition_declaration21108); if (state.failed) return p;
                    pushFollow(FOLLOW_property_expression_in_property_definition_declaration21116);
                    ce=property_expression(p);

                    state._fsp--;
                    if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                              if (ce != null)
                                p.setDefaultValue(ce);
                            
                    }

                    }
                    break;

            }

            match(input,APPLIES,FOLLOW_APPLIES_in_property_definition_declaration21134); if (state.failed) return p;
            match(input,TO,FOLLOW_TO_in_property_definition_declaration21136); if (state.failed) return p;
            match(input,LPAREN,FOLLOW_LPAREN_in_property_definition_declaration21138); if (state.failed) return p;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:3: ( (po= property_owner ( COMMA po1= property_owner )* ) | (a= ALL ) )
            int alt512=2;
            int LA512_0 = input.LA(1);

            if ( (LA512_0==WITH||(LA512_0>=IDENT && LA512_0<=PACKAGE)||(LA512_0>=FEATURE && LA512_0<=GROUP)||(LA512_0>=PROPERTIES && LA512_0<=EXTENDS)||(LA512_0>=PROTOTYPES && LA512_0<=IMPLEMENTATION)||(LA512_0>=SUBCOMPONENTS && LA512_0<=LCURLY)||(LA512_0>=REFINED && LA512_0<=TO)||(LA512_0>=IN && LA512_0<=ACCESS)||(LA512_0>=FEATURES && LA512_0<=ANNEX)||(LA512_0>=PROPERTY && LA512_0<=UNITS)||(LA512_0>=REAL && LA512_0<=INTEGER)||(LA512_0>=RANGE && LA512_0<=VALUE)) ) {
                alt512=1;
            }
            else if ( (LA512_0==ALL) ) {
                int LA512_2 = input.LA(2);

                if ( (synpred699_Aadl2()) ) {
                    alt512=1;
                }
                else if ( (true) ) {
                    alt512=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return p;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 512, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return p;}
                NoViableAltException nvae =
                    new NoViableAltException("", 512, 0, input);

                throw nvae;
            }
            switch (alt512) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:5: (po= property_owner ( COMMA po1= property_owner )* )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:5: (po= property_owner ( COMMA po1= property_owner )* )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:6: po= property_owner ( COMMA po1= property_owner )*
                    {
                    pushFollow(FOLLOW_property_owner_in_property_definition_declaration21147);
                    po=property_owner();

                    state._fsp--;
                    if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                            p.getAppliesTos().add(po);
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8004:5: ( COMMA po1= property_owner )*
                    loop511:
                    do {
                        int alt511=2;
                        int LA511_0 = input.LA(1);

                        if ( (LA511_0==COMMA) ) {
                            alt511=1;
                        }


                        switch (alt511) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8004:7: COMMA po1= property_owner
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_property_definition_declaration21162); if (state.failed) return p;
                    	    pushFollow(FOLLOW_property_owner_in_property_definition_declaration21166);
                    	    po1=property_owner();

                    	    state._fsp--;
                    	    if (state.failed) return p;
                    	    if ( state.backtracking==0 ) {

                    	              p.getAppliesTos().add(po1);
                    	            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop511;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8010:5: (a= ALL )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8010:5: (a= ALL )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8010:6: a= ALL
                    {
                    a=(Token)match(input,ALL,FOLLOW_ALL_in_property_definition_declaration21194); if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                        	   MetaclassReference mrf = Aadl2F.createMetaclassReference();
                        	   mrf.setLocationReference(this.getFilename(), a.getLine());
                        	   mrf.getMetaclassNames().add("named");
                             mrf.getMetaclassNames().add("element");
                             p.getAppliesTos().add(mrf);
                        	
                    }

                    }


                    }
                    break;

            }

            match(input,RPAREN,FOLLOW_RPAREN_in_property_definition_declaration21214); if (state.failed) return p;
            match(input,SEMI,FOLLOW_SEMI_in_property_definition_declaration21216); if (state.failed) return p;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return p;
    }
    // $ANTLR end "property_definition_declaration"


    // $ANTLR start "property_owner"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8023:1: property_owner returns [PropertyOwner po] : ( ( unique_impl_name )=>ui= unique_impl_name | mi= qualified_meta_model_identifier | un= unique_type_name ) ;
    public final PropertyOwner property_owner() throws RecognitionException {
        PropertyOwner po = null;

        ReferenceRecord ui = null;

        MetaclassReference mi = null;

        ReferenceRecord un = null;



          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8026:3: ( ( ( unique_impl_name )=>ui= unique_impl_name | mi= qualified_meta_model_identifier | un= unique_type_name ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8027:2: ( ( unique_impl_name )=>ui= unique_impl_name | mi= qualified_meta_model_identifier | un= unique_type_name )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8027:2: ( ( unique_impl_name )=>ui= unique_impl_name | mi= qualified_meta_model_identifier | un= unique_type_name )
            int alt513=3;
            int LA513_0 = input.LA(1);

            if ( (LA513_0==IDENT) ) {
                int LA513_1 = input.LA(2);

                if ( (LA513_1==DOUBLECOLON) && (synpred700_Aadl2())) {
                    alt513=1;
                }
                else if ( (LA513_1==DOT) && (synpred700_Aadl2())) {
                    alt513=1;
                }
                else if ( (synpred701_Aadl2()) ) {
                    alt513=2;
                }
                else if ( (true) ) {
                    alt513=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return po;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 513, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA513_0==WITH||(LA513_0>=RENAMES && LA513_0<=PACKAGE)||(LA513_0>=FEATURE && LA513_0<=EXTENDS)||(LA513_0>=PROTOTYPES && LA513_0<=IMPLEMENTATION)||(LA513_0>=SUBCOMPONENTS && LA513_0<=LCURLY)||(LA513_0>=REFINED && LA513_0<=TO)||(LA513_0>=IN && LA513_0<=ACCESS)||(LA513_0>=FEATURES && LA513_0<=ANNEX)||(LA513_0>=PROPERTY && LA513_0<=UNITS)||(LA513_0>=REAL && LA513_0<=INTEGER)||(LA513_0>=RANGE && LA513_0<=VALUE)) ) {
                alt513=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return po;}
                NoViableAltException nvae =
                    new NoViableAltException("", 513, 0, input);

                throw nvae;
            }
            switch (alt513) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8028:3: ( unique_impl_name )=>ui= unique_impl_name
                    {
                    pushFollow(FOLLOW_unique_impl_name_in_property_owner21254);
                    ui=unique_impl_name();

                    state._fsp--;
                    if (state.failed) return po;
                    if ( state.backtracking==0 ) {

                          //XXX: Location
                            po = Aadl2F.createClassifierValue();
                            ui.setReferencingObject(po);
                            ui.setReferenceType(ParserReferenceType.ClassifierValueComponentImplementationReference);
                            unresolvedReferences.add(ui);
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8036:4: mi= qualified_meta_model_identifier
                    {
                    pushFollow(FOLLOW_qualified_meta_model_identifier_in_property_owner21267);
                    mi=qualified_meta_model_identifier();

                    state._fsp--;
                    if (state.failed) return po;
                    if ( state.backtracking==0 ) {

                              po = mi;
                            //TODO: separate in proper metaclass fields
                            //s = mi.getAnnexName()+" "+mi.getMetaclassName();
                            
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8042:4: un= unique_type_name
                    {
                    pushFollow(FOLLOW_unique_type_name_in_property_owner21282);
                    un=unique_type_name();

                    state._fsp--;
                    if (state.failed) return po;
                    if ( state.backtracking==0 ) {

                          //XXX: Location
                            po = Aadl2F.createClassifierValue();
                            un.setReferencingObject(po);
                            un.setReferenceType(ParserReferenceType.ClassifierValueComponentTypeReference);
                            unresolvedReferences.add(un);
                            //classifier reference
                            // TODO: separate in proper metaclass fields
                            //s = un.getPackageName()+"::"+un.getClassifierName();
                          
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return po;
    }
    // $ANTLR end "property_owner"


    // $ANTLR start "property_type_declaration"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8056:1: property_type_declaration returns [PropertyType pt] : id= IDENT COLON TYPE ptt= property_type SEMI ;
    public final PropertyType property_type_declaration() throws RecognitionException {
        PropertyType pt = null;

        Token id=null;
        PropertyType ptt = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8059:2: (id= IDENT COLON TYPE ptt= property_type SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8060:2: id= IDENT COLON TYPE ptt= property_type SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_type_declaration21322); if (state.failed) return pt;
            match(input,COLON,FOLLOW_COLON_in_property_type_declaration21324); if (state.failed) return pt;
            match(input,TYPE,FOLLOW_TYPE_in_property_type_declaration21326); if (state.failed) return pt;
            pushFollow(FOLLOW_property_type_in_property_type_declaration21331);
            ptt=property_type();

            state._fsp--;
            if (state.failed) return pt;
            if ( state.backtracking==0 ) {

              			pt=ptt;
              			pt.setName(id.getText());
              			pt.setLocationReference(this.getFilename(),id.getLine());
              			processComments(pt);
              		
            }
            match(input,SEMI,FOLLOW_SEMI_in_property_type_declaration21338); if (state.failed) return pt;

            }

        }
        catch (RecognitionException ex) {

            			reportError(ex);
            			consumeUntil(input,END);
            			consumeUntil(input,SEMI);
            			input.consume();
                    
        }
        finally {
        }
        return pt;
    }
    // $ANTLR end "property_type_declaration"


    // $ANTLR start "property_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8200:1: property_type returns [PropertyType pt] : (bt= boolean_type | st= string_type | et= enumeration_type | ut= units_type | rt= real_type | it= integer_type | gt= range_type | ct= classifier_type | ft= reference_type | dt= record_type );
    public final PropertyType property_type() throws RecognitionException {
        PropertyType pt = null;

        AadlBoolean bt = null;

        AadlString st = null;

        EnumerationType et = null;

        UnitsType ut = null;

        AadlReal rt = null;

        AadlInteger it = null;

        RangeType gt = null;

        ClassifierType ct = null;

        ReferenceType ft = null;

        RecordType dt = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8201:2: (bt= boolean_type | st= string_type | et= enumeration_type | ut= units_type | rt= real_type | it= integer_type | gt= range_type | ct= classifier_type | ft= reference_type | dt= record_type )
            int alt514=10;
            switch ( input.LA(1) ) {
            case BOOLEAN:
                {
                alt514=1;
                }
                break;
            case STRING:
                {
                alt514=2;
                }
                break;
            case ENUMERATION:
                {
                alt514=3;
                }
                break;
            case UNITS:
                {
                alt514=4;
                }
                break;
            case REAL:
                {
                alt514=5;
                }
                break;
            case INTEGER:
                {
                alt514=6;
                }
                break;
            case RANGE:
                {
                alt514=7;
                }
                break;
            case CLASSIFIER:
                {
                alt514=8;
                }
                break;
            case REFERENCE:
                {
                alt514=9;
                }
                break;
            case RECORD:
                {
                alt514=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pt;}
                NoViableAltException nvae =
                    new NoViableAltException("", 514, 0, input);

                throw nvae;
            }

            switch (alt514) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8202:6: bt= boolean_type
                    {
                    pushFollow(FOLLOW_boolean_type_in_property_type21495);
                    bt=boolean_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                          			pt = bt;	
                      	    	
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8206:4: st= string_type
                    {
                    pushFollow(FOLLOW_string_type_in_property_type21510);
                    st=string_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                          			pt = st;
                      	    	
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8210:4: et= enumeration_type
                    {
                    pushFollow(FOLLOW_enumeration_type_in_property_type21527);
                    et=enumeration_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = et;
                      		
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8214:4: ut= units_type
                    {
                    pushFollow(FOLLOW_units_type_in_property_type21541);
                    ut=units_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = ut;
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8218:4: rt= real_type
                    {
                    pushFollow(FOLLOW_real_type_in_property_type21554);
                    rt=real_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = rt;
                      		
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8222:4: it= integer_type
                    {
                    pushFollow(FOLLOW_integer_type_in_property_type21568);
                    it=integer_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = it;
                      		
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8226:4: gt= range_type
                    {
                    pushFollow(FOLLOW_range_type_in_property_type21582);
                    gt=range_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = gt;
                      		
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8230:4: ct= classifier_type
                    {
                    pushFollow(FOLLOW_classifier_type_in_property_type21595);
                    ct=classifier_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = ct;
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8234:4: ft= reference_type
                    {
                    pushFollow(FOLLOW_reference_type_in_property_type21608);
                    ft=reference_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt =ft;
                      		
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8238:4: dt= record_type
                    {
                    pushFollow(FOLLOW_record_type_in_property_type21621);
                    dt=record_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {

                      			pt = dt;
                      		
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pt;
    }
    // $ANTLR end "property_type"


    // $ANTLR start "record_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8249:1: record_type returns [RecordType rt] : r= RECORD LPAREN rf= record_field (rf1= record_field )* RPAREN ;
    public final RecordType record_type() throws RecognitionException {
        RecordType rt = null;

        Token r=null;
        RecordField rf = null;

        RecordField rf1 = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8252:2: (r= RECORD LPAREN rf= record_field (rf1= record_field )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8253:2: r= RECORD LPAREN rf= record_field (rf1= record_field )* RPAREN
            {
            r=(Token)match(input,RECORD,FOLLOW_RECORD_in_record_type21652); if (state.failed) return rt;
            match(input,LPAREN,FOLLOW_LPAREN_in_record_type21654); if (state.failed) return rt;
            pushFollow(FOLLOW_record_field_in_record_type21660);
            rf=record_field();

            state._fsp--;
            if (state.failed) return rt;
            if ( state.backtracking==0 ) {

              			rt = Aadl2F.createRecordType();
              			rt.setLocationReference(this.getFilename(), r.getLine());
              			rt.getOwnedFields().add(rf);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8259:3: (rf1= record_field )*
            loop515:
            do {
                int alt515=2;
                int LA515_0 = input.LA(1);

                if ( (LA515_0==IDENT) ) {
                    alt515=1;
                }


                switch (alt515) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8259:4: rf1= record_field
            	    {
            	    pushFollow(FOLLOW_record_field_in_record_type21673);
            	    rf1=record_field();

            	    state._fsp--;
            	    if (state.failed) return rt;
            	    if ( state.backtracking==0 ) {

            	      				rt.getOwnedFields().add(rf1);				
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop515;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_record_type21686); if (state.failed) return rt;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "record_type"


    // $ANTLR start "record_field"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8267:1: record_field returns [RecordField rf] : id= IDENT COLON ( LIST OF )* (pt= property_type | (ptid= IDENT DOUBLECOLON )? (ptid1= IDENT ) ) SEMI ;
    public final RecordField record_field() throws RecognitionException {
        RecordField rf = null;

        Token id=null;
        Token ptid=null;
        Token ptid1=null;
        PropertyType pt = null;



        	 String ps ="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8271:2: (id= IDENT COLON ( LIST OF )* (pt= property_type | (ptid= IDENT DOUBLECOLON )? (ptid1= IDENT ) ) SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8272:2: id= IDENT COLON ( LIST OF )* (pt= property_type | (ptid= IDENT DOUBLECOLON )? (ptid1= IDENT ) ) SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_record_field21709); if (state.failed) return rf;
            match(input,COLON,FOLLOW_COLON_in_record_field21711); if (state.failed) return rf;
            if ( state.backtracking==0 ) {

              			rf=Aadl2F.createRecordField();
              			rf.setName(id.getText());
              			rf.setLocationReference(this.getFilename(),id.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8278:2: ( LIST OF )*
            loop516:
            do {
                int alt516=2;
                int LA516_0 = input.LA(1);

                if ( (LA516_0==LIST) ) {
                    alt516=1;
                }


                switch (alt516) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8278:3: LIST OF
            	    {
            	    match(input,LIST,FOLLOW_LIST_in_record_field21719); if (state.failed) return rf;
            	    match(input,OF,FOLLOW_OF_in_record_field21721); if (state.failed) return rf;
            	    if ( state.backtracking==0 ) {

            	      			rf.setList(rf.getList() + 1);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop516;
                }
            } while (true);

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8283:2: (pt= property_type | (ptid= IDENT DOUBLECOLON )? (ptid1= IDENT ) )
            int alt518=2;
            int LA518_0 = input.LA(1);

            if ( ((LA518_0>=RECORD && LA518_0<=UNITS)||(LA518_0>=REAL && LA518_0<=INTEGER)||(LA518_0>=RANGE && LA518_0<=CLASSIFIER)) ) {
                alt518=1;
            }
            else if ( (LA518_0==IDENT) ) {
                alt518=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return rf;}
                NoViableAltException nvae =
                    new NoViableAltException("", 518, 0, input);

                throw nvae;
            }
            switch (alt518) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8283:3: pt= property_type
                    {
                    pushFollow(FOLLOW_property_type_in_record_field21735);
                    pt=property_type();

                    state._fsp--;
                    if (state.failed) return rf;
                    if ( state.backtracking==0 ) {

                      			rf.setOwnedType(pt);
                      			//rf.setPropertyType(pt);
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8288:3: (ptid= IDENT DOUBLECOLON )? (ptid1= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8288:3: (ptid= IDENT DOUBLECOLON )?
                    int alt517=2;
                    int LA517_0 = input.LA(1);

                    if ( (LA517_0==IDENT) ) {
                        int LA517_1 = input.LA(2);

                        if ( (LA517_1==DOUBLECOLON) ) {
                            alt517=1;
                        }
                    }
                    switch (alt517) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8288:5: ptid= IDENT DOUBLECOLON
                            {
                            ptid=(Token)match(input,IDENT,FOLLOW_IDENT_in_record_field21749); if (state.failed) return rf;
                            match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_record_field21751); if (state.failed) return rf;
                            if ( state.backtracking==0 ) {

                              		  ps=ptid.getText();
                              		
                            }

                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8293:3: (ptid1= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8293:4: ptid1= IDENT
                    {
                    ptid1=(Token)match(input,IDENT,FOLLOW_IDENT_in_record_field21769); if (state.failed) return rf;
                    if ( state.backtracking==0 ) {

                      			   ReferenceRecord rr = null;
                      			   if (ps.length() > 0) {
                      			     rr = new ReferenceRecord(ParserReferenceType.PropertyTypeReference,rf,new String[]{ps,ptid1.getText()});
                      			   } else {
                                 rr = new ReferenceRecord(ParserReferenceType.PropertyTypeReference,rf,new String[]{ptid1.getText()});
                      			   }
                      			  unresolvedReferences.add(rr);
                      			
                    }

                    }


                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_record_field21784); if (state.failed) return rf;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rf;
    }
    // $ANTLR end "record_field"


    // $ANTLR start "reference_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8309:1: reference_type returns [ReferenceType rt] : r= REFERENCE ( LPAREN mcr= qualified_meta_model_identifier ( COMMA mcr1= qualified_meta_model_identifier )* RPAREN )? ;
    public final ReferenceType reference_type() throws RecognitionException {
        ReferenceType rt = null;

        Token r=null;
        MetaclassReference mcr = null;

        MetaclassReference mcr1 = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8312:2: (r= REFERENCE ( LPAREN mcr= qualified_meta_model_identifier ( COMMA mcr1= qualified_meta_model_identifier )* RPAREN )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8313:2: r= REFERENCE ( LPAREN mcr= qualified_meta_model_identifier ( COMMA mcr1= qualified_meta_model_identifier )* RPAREN )?
            {
            r=(Token)match(input,REFERENCE,FOLLOW_REFERENCE_in_reference_type21810); if (state.failed) return rt;
            if ( state.backtracking==0 ) {

              			rt = Aadl2F.createReferenceType();
              			rt.setLocationReference(this.getFilename(), r.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8318:2: ( LPAREN mcr= qualified_meta_model_identifier ( COMMA mcr1= qualified_meta_model_identifier )* RPAREN )?
            int alt520=2;
            int LA520_0 = input.LA(1);

            if ( (LA520_0==LPAREN) ) {
                alt520=1;
            }
            switch (alt520) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8318:3: LPAREN mcr= qualified_meta_model_identifier ( COMMA mcr1= qualified_meta_model_identifier )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_reference_type21819); if (state.failed) return rt;
                    pushFollow(FOLLOW_qualified_meta_model_identifier_in_reference_type21825);
                    mcr=qualified_meta_model_identifier();

                    state._fsp--;
                    if (state.failed) return rt;
                    if ( state.backtracking==0 ) {

                      			rt.getNamedElementReferences().add(mcr);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8322:3: ( COMMA mcr1= qualified_meta_model_identifier )*
                    loop519:
                    do {
                        int alt519=2;
                        int LA519_0 = input.LA(1);

                        if ( (LA519_0==COMMA) ) {
                            alt519=1;
                        }


                        switch (alt519) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8322:4: COMMA mcr1= qualified_meta_model_identifier
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_reference_type21834); if (state.failed) return rt;
                    	    pushFollow(FOLLOW_qualified_meta_model_identifier_in_reference_type21840);
                    	    mcr1=qualified_meta_model_identifier();

                    	    state._fsp--;
                    	    if (state.failed) return rt;
                    	    if ( state.backtracking==0 ) {

                    	      				rt.getNamedElementReferences().add(mcr1);
                    	      			
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop519;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_reference_type21853); if (state.failed) return rt;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "reference_type"


    // $ANTLR start "unnamed_property_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8331:1: unnamed_property_type returns [PropertyType pt] : (ppt1= unnamed_boolean_type | ppt2= unnamed_string_type | ppt3= unnamed_enumeration_type | ppt4= unnamed_units_type | ppt5= unnamed_real_type | ppt6= unnamed_integer_type | ppt7= unnamed_range_type | ppt8= unnamed_classifier_type ) ;
    public final PropertyType unnamed_property_type() throws RecognitionException {
        PropertyType pt = null;

        AadlBoolean ppt1 = null;

        AadlString ppt2 = null;

        EnumerationType ppt3 = null;

        UnitsType ppt4 = null;

        AadlReal ppt5 = null;

        AadlInteger ppt6 = null;

        RangeType ppt7 = null;

        ClassifierType ppt8 = null;



        		pt=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8334:3: ( (ppt1= unnamed_boolean_type | ppt2= unnamed_string_type | ppt3= unnamed_enumeration_type | ppt4= unnamed_units_type | ppt5= unnamed_real_type | ppt6= unnamed_integer_type | ppt7= unnamed_range_type | ppt8= unnamed_classifier_type ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8335:5: (ppt1= unnamed_boolean_type | ppt2= unnamed_string_type | ppt3= unnamed_enumeration_type | ppt4= unnamed_units_type | ppt5= unnamed_real_type | ppt6= unnamed_integer_type | ppt7= unnamed_range_type | ppt8= unnamed_classifier_type )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8335:5: (ppt1= unnamed_boolean_type | ppt2= unnamed_string_type | ppt3= unnamed_enumeration_type | ppt4= unnamed_units_type | ppt5= unnamed_real_type | ppt6= unnamed_integer_type | ppt7= unnamed_range_type | ppt8= unnamed_classifier_type )
            int alt521=8;
            switch ( input.LA(1) ) {
            case BOOLEAN:
                {
                alt521=1;
                }
                break;
            case STRING:
                {
                alt521=2;
                }
                break;
            case ENUMERATION:
                {
                alt521=3;
                }
                break;
            case UNITS:
                {
                alt521=4;
                }
                break;
            case REAL:
                {
                alt521=5;
                }
                break;
            case INTEGER:
                {
                alt521=6;
                }
                break;
            case RANGE:
                {
                alt521=7;
                }
                break;
            case CLASSIFIER:
                {
                alt521=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return pt;}
                NoViableAltException nvae =
                    new NoViableAltException("", 521, 0, input);

                throw nvae;
            }

            switch (alt521) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8336:5: ppt1= unnamed_boolean_type
                    {
                    pushFollow(FOLLOW_unnamed_boolean_type_in_unnamed_property_type21890);
                    ppt1=unnamed_boolean_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt1;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8337:7: ppt2= unnamed_string_type
                    {
                    pushFollow(FOLLOW_unnamed_string_type_in_unnamed_property_type21904);
                    ppt2=unnamed_string_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt2;
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8338:4: ppt3= unnamed_enumeration_type
                    {
                    pushFollow(FOLLOW_unnamed_enumeration_type_in_unnamed_property_type21915);
                    ppt3=unnamed_enumeration_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt3;
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8339:4: ppt4= unnamed_units_type
                    {
                    pushFollow(FOLLOW_unnamed_units_type_in_unnamed_property_type21926);
                    ppt4=unnamed_units_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt4;
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8340:4: ppt5= unnamed_real_type
                    {
                    pushFollow(FOLLOW_unnamed_real_type_in_unnamed_property_type21937);
                    ppt5=unnamed_real_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt5;
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8341:4: ppt6= unnamed_integer_type
                    {
                    pushFollow(FOLLOW_unnamed_integer_type_in_unnamed_property_type21948);
                    ppt6=unnamed_integer_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt6;
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8342:4: ppt7= unnamed_range_type
                    {
                    pushFollow(FOLLOW_unnamed_range_type_in_unnamed_property_type21960);
                    ppt7=unnamed_range_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt7;
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8343:4: ppt8= unnamed_classifier_type
                    {
                    pushFollow(FOLLOW_unnamed_classifier_type_in_unnamed_property_type21971);
                    ppt8=unnamed_classifier_type();

                    state._fsp--;
                    if (state.failed) return pt;
                    if ( state.backtracking==0 ) {
                      pt=ppt8;
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pt;
    }
    // $ANTLR end "unnamed_property_type"


    // $ANTLR start "unnamed_boolean_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8349:1: unnamed_boolean_type returns [AadlBoolean ab] : b= BOOLEAN ;
    public final AadlBoolean unnamed_boolean_type() throws RecognitionException {
        AadlBoolean ab = null;

        Token b=null;


        	 	ab=Aadl2F.createAadlBoolean();
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8353:2: (b= BOOLEAN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8354:5: b= BOOLEAN
            {
            b=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_unnamed_boolean_type22008); if (state.failed) return ab;
            if ( state.backtracking==0 ) {
               
                  		processComments(ab);
                  		ab.setLocationReference(this.getFilename(), b.getLine());
                  	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ab;
    }
    // $ANTLR end "unnamed_boolean_type"


    // $ANTLR start "boolean_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8361:1: boolean_type returns [AadlBoolean ab] : b= BOOLEAN ;
    public final AadlBoolean boolean_type() throws RecognitionException {
        AadlBoolean ab = null;

        Token b=null;


        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8364:2: (b= BOOLEAN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8365:5: b= BOOLEAN
            {
            b=(Token)match(input,BOOLEAN,FOLLOW_BOOLEAN_in_boolean_type22046); if (state.failed) return ab;
            if ( state.backtracking==0 ) {
               
                    		ab = Aadl2F.createAadlBoolean();
                    		ab.setLocationReference(this.getFilename(), b.getLine());
                    	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ab;
    }
    // $ANTLR end "boolean_type"


    // $ANTLR start "string_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8372:1: string_type returns [AadlString pt] : s= STRING ;
    public final AadlString string_type() throws RecognitionException {
        AadlString pt = null;

        Token s=null;


        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8375:2: (s= STRING )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8376:2: s= STRING
            {
            s=(Token)match(input,STRING,FOLLOW_STRING_in_string_type22082); if (state.failed) return pt;
            if ( state.backtracking==0 ) {
                
                  		pt = Aadl2F.createAadlString();
                  		pt.setLocationReference(this.getFilename(), s.getLine());
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pt;
    }
    // $ANTLR end "string_type"


    // $ANTLR start "unnamed_string_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8383:1: unnamed_string_type returns [AadlString ab] : s= STRING ;
    public final AadlString unnamed_string_type() throws RecognitionException {
        AadlString ab = null;

        Token s=null;


        		ab=Aadl2F.createAadlString();
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8387:2: (s= STRING )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8388:5: s= STRING
            {
            s=(Token)match(input,STRING,FOLLOW_STRING_in_unnamed_string_type22122); if (state.failed) return ab;
            if ( state.backtracking==0 ) {

                  		processComments(ab);
                  		ab.setLocationReference(this.getFilename(), s.getLine());
                  	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ab;
    }
    // $ANTLR end "unnamed_string_type"


    // $ANTLR start "enumeration_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8395:1: enumeration_type returns [EnumerationType et] : ett= unnamed_enumeration_type ;
    public final EnumerationType enumeration_type() throws RecognitionException {
        EnumerationType et = null;

        EnumerationType ett = null;


         
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8398:2: (ett= unnamed_enumeration_type )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8399:2: ett= unnamed_enumeration_type
            {
            pushFollow(FOLLOW_unnamed_enumeration_type_in_enumeration_type22162);
            ett=unnamed_enumeration_type();

            state._fsp--;
            if (state.failed) return et;
            if ( state.backtracking==0 ) {

              			et = ett;  
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return et;
    }
    // $ANTLR end "enumeration_type"


    // $ANTLR start "unnamed_enumeration_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8405:1: unnamed_enumeration_type returns [EnumerationType et ] : e= ENUMERATION LPAREN lit= IDENT ( COMMA morelit= IDENT )* RPAREN ;
    public final EnumerationType unnamed_enumeration_type() throws RecognitionException {
        EnumerationType et = null;

        Token e=null;
        Token lit=null;
        Token morelit=null;

         
        		EnumerationLiteral el=null; 
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8409:2: (e= ENUMERATION LPAREN lit= IDENT ( COMMA morelit= IDENT )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8410:2: e= ENUMERATION LPAREN lit= IDENT ( COMMA morelit= IDENT )* RPAREN
            {
            e=(Token)match(input,ENUMERATION,FOLLOW_ENUMERATION_in_unnamed_enumeration_type22189); if (state.failed) return et;
            match(input,LPAREN,FOLLOW_LPAREN_in_unnamed_enumeration_type22192); if (state.failed) return et;
            lit=(Token)match(input,IDENT,FOLLOW_IDENT_in_unnamed_enumeration_type22199); if (state.failed) return et;
            if ( state.backtracking==0 ) {
               
              			et = Aadl2F.createEnumerationType();
              			et.setLocationReference(this.getFilename(), e.getLine());
              			el = Aadl2F.createEnumerationLiteral();
              	      	el.setName(lit.getText());
              	      	el.setLocationReference(this.getFilename(),lit.getLine());
              	      	et.getOwnedLiterals().add(el);
              	    
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8421:2: ( COMMA morelit= IDENT )*
            loop522:
            do {
                int alt522=2;
                int LA522_0 = input.LA(1);

                if ( (LA522_0==COMMA) ) {
                    alt522=1;
                }


                switch (alt522) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8421:4: COMMA morelit= IDENT
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_unnamed_enumeration_type22210); if (state.failed) return et;
            	    morelit=(Token)match(input,IDENT,FOLLOW_IDENT_in_unnamed_enumeration_type22214); if (state.failed) return et;
            	    if ( state.backtracking==0 ) {

            	      	    	el = Aadl2F.createEnumerationLiteral();
            	      	      	el.setName(morelit.getText());
            	      	      	el.setLocationReference(this.getFilename(), morelit.getLine());
            	      	      	et.getOwnedLiterals().add(el); 
            	      	     
            	    }

            	    }
            	    break;

            	default :
            	    break loop522;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_unnamed_enumeration_type22230); if (state.failed) return et;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return et;
    }
    // $ANTLR end "unnamed_enumeration_type"


    // $ANTLR start "units_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8434:1: units_type returns [UnitsType ut] : u= UNITS units_list[ut] ;
    public final UnitsType units_type() throws RecognitionException {
        UnitsType ut = null;

        Token u=null;

         
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8437:2: (u= UNITS units_list[ut] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8438:5: u= UNITS units_list[ut]
            {
            u=(Token)match(input,UNITS,FOLLOW_UNITS_in_units_type22263); if (state.failed) return ut;
            if ( state.backtracking==0 ) {

               			ut = Aadl2F.createUnitsType();
               			ut.setLocationReference(this.getFilename(), u.getLine());
                  	
            }
            pushFollow(FOLLOW_units_list_in_units_type22277);
            units_list(ut);

            state._fsp--;
            if (state.failed) return ut;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ut;
    }
    // $ANTLR end "units_type"


    // $ANTLR start "unnamed_units_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8446:1: unnamed_units_type returns [UnitsType ut] : u= UNITS units_list[ut] ;
    public final UnitsType unnamed_units_type() throws RecognitionException {
        UnitsType ut = null;

        Token u=null;


        		ut=Aadl2F.createUnitsType();
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8450:2: (u= UNITS units_list[ut] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8451:2: u= UNITS units_list[ut]
            {
            u=(Token)match(input,UNITS,FOLLOW_UNITS_in_unnamed_units_type22301); if (state.failed) return ut;
            pushFollow(FOLLOW_units_list_in_unnamed_units_type22303);
            units_list(ut);

            state._fsp--;
            if (state.failed) return ut;
            if ( state.backtracking==0 ) {

              		ut.setLocationReference(this.getFilename(), u.getLine());
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ut;
    }
    // $ANTLR end "unnamed_units_type"


    // $ANTLR start "units_list"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8457:1: units_list[UnitsType ut] : LPAREN lit= IDENT ( COMMA morelit= IDENT ASSIGN unitid= IDENT STAR nv= number_value )* RPAREN ;
    public final void units_list(UnitsType ut) throws RecognitionException {
        Token lit=null;
        Token morelit=null;
        Token unitid=null;
        NumberValue nv = null;



        		UnitLiteral el=null; 
        		//NumberValue nv = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8462:2: ( LPAREN lit= IDENT ( COMMA morelit= IDENT ASSIGN unitid= IDENT STAR nv= number_value )* RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8463:5: LPAREN lit= IDENT ( COMMA morelit= IDENT ASSIGN unitid= IDENT STAR nv= number_value )* RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_units_list22330); if (state.failed) return ;
            lit=(Token)match(input,IDENT,FOLLOW_IDENT_in_units_list22339); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               
              			el = Aadl2F.createUnitLiteral();
              		      	el.setName(lit.getText());
              		      	el.setLocationReference(this.getFilename(), lit.getLine());
              		      	ut.getOwnedLiterals().add(el);

              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8472:2: ( COMMA morelit= IDENT ASSIGN unitid= IDENT STAR nv= number_value )*
            loop523:
            do {
                int alt523=2;
                int LA523_0 = input.LA(1);

                if ( (LA523_0==COMMA) ) {
                    alt523=1;
                }


                switch (alt523) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8472:3: COMMA morelit= IDENT ASSIGN unitid= IDENT STAR nv= number_value
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_units_list22347); if (state.failed) return ;
            	    morelit=(Token)match(input,IDENT,FOLLOW_IDENT_in_units_list22352); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      			el = Aadl2F.createUnitLiteral();
            	      	      	el.setName(morelit.getText());
            	      	      	el.setLocationReference(this.getFilename(), morelit.getLine()); 
            	      	      	ut.getOwnedLiterals().add(el);
            	      	    
            	    }
            	    match(input,ASSIGN,FOLLOW_ASSIGN_in_units_list22361); if (state.failed) return ;
            	    unitid=(Token)match(input,IDENT,FOLLOW_IDENT_in_units_list22367); if (state.failed) return ;
            	    match(input,STAR,FOLLOW_STAR_in_units_list22372); if (state.failed) return ;
            	    pushFollow(FOLLOW_number_value_in_units_list22378);
            	    nv=number_value();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {
            	       
            	      	 		ut.getOwnedLiterals().add(el);
            	      	 		el.setFactor(nv);
            	      	 		ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.BaseUnitIdentifierReference, 
            	      	 		                                                            el, 
            	      	 		                                                            new String[]{unitid.getText()});
            	            unresolvedReferences.add(rr);	 		                                                        
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    break loop523;
                }
            } while (true);

            match(input,RPAREN,FOLLOW_RPAREN_in_units_list22393); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "units_list"


    // $ANTLR start "real_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8495:1: real_type returns [AadlReal ar] : arr= unnamed_real_type ;
    public final AadlReal real_type() throws RecognitionException {
        AadlReal ar = null;

        AadlReal arr = null;


         
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8498:2: (arr= unnamed_real_type )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8499:2: arr= unnamed_real_type
            {
            pushFollow(FOLLOW_unnamed_real_type_in_real_type22420);
            arr=unnamed_real_type();

            state._fsp--;
            if (state.failed) return ar;
            if ( state.backtracking==0 ) {

              			ar = arr;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ar;
    }
    // $ANTLR end "real_type"


    // $ANTLR start "unnamed_real_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8505:1: unnamed_real_type returns [AadlReal ar] : (r= REAL ) ( real_range[ar] )? (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )? ;
    public final AadlReal unnamed_real_type() throws RecognitionException {
        AadlReal ar = null;

        Token r=null;
        Token u=null;
        ReferenceRecord ppr = null;


         
        		//ParsedPropertyReference ppr = null; 
        		UnitsType ut = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8510:2: ( (r= REAL ) ( real_range[ar] )? (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8511:5: (r= REAL ) ( real_range[ar] )? (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8511:5: (r= REAL )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8511:6: r= REAL
            {
            r=(Token)match(input,REAL,FOLLOW_REAL_in_unnamed_real_type22456); if (state.failed) return ar;
            if ( state.backtracking==0 ) {

              			ar= Aadl2F.createAadlReal();
              			ar.setLocationReference(this.getFilename(),r.getLine());
                  	
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8518:5: ( real_range[ar] )?
            int alt524=2;
            int LA524_0 = input.LA(1);

            if ( (LA524_0==IDENT||(LA524_0>=PLUS && LA524_0<=MINUS)||LA524_0==REAL_LIT) ) {
                alt524=1;
            }
            switch (alt524) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8519:6: real_range[ar]
                    {
                    pushFollow(FOLLOW_real_range_in_unnamed_real_type22485);
                    real_range(ar);

                    state._fsp--;
                    if (state.failed) return ar;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8521:5: (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )?
            int alt526=2;
            int LA526_0 = input.LA(1);

            if ( (LA526_0==UNITS) ) {
                alt526=1;
            }
            switch (alt526) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8521:7: u= UNITS (ppr= unique_property_type_identifier | units_list[ut] )
                    {
                    u=(Token)match(input,UNITS,FOLLOW_UNITS_in_unnamed_real_type22507); if (state.failed) return ar;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8522:8: (ppr= unique_property_type_identifier | units_list[ut] )
                    int alt525=2;
                    int LA525_0 = input.LA(1);

                    if ( (LA525_0==IDENT) ) {
                        alt525=1;
                    }
                    else if ( (LA525_0==LPAREN) ) {
                        alt525=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ar;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 525, 0, input);

                        throw nvae;
                    }
                    switch (alt525) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8522:9: ppr= unique_property_type_identifier
                            {
                            pushFollow(FOLLOW_unique_property_type_identifier_in_unnamed_real_type22522);
                            ppr=unique_property_type_identifier();

                            state._fsp--;
                            if (state.failed) return ar;
                            if ( state.backtracking==0 ) {
                               
                              	    	  ppr.setReferencingObject(ar);
                              	    	  ppr.setReferenceType(ParserReferenceType.PropertyUnitsTypeReference);
                              	    	  unresolvedReferences.add(ppr);
                              	    	
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8529:10: units_list[ut]
                            {
                            if ( state.backtracking==0 ) {
                               
                                     			ut = Aadl2F.createUnitsType(); 
                                     			ut.setLocationReference(this.getFilename(), u.getLine());
                                     			ar.setOwnedUnitsType(ut);
                                     		
                            }
                            pushFollow(FOLLOW_units_list_in_unnamed_real_type22564);
                            units_list(ut);

                            state._fsp--;
                            if (state.failed) return ar;

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ar;
    }
    // $ANTLR end "unnamed_real_type"


    // $ANTLR start "integer_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8539:1: integer_type returns [AadlInteger ai] : aii= unnamed_integer_type ;
    public final AadlInteger integer_type() throws RecognitionException {
        AadlInteger ai = null;

        AadlInteger aii = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8540:2: (aii= unnamed_integer_type )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8541:2: aii= unnamed_integer_type
            {
            pushFollow(FOLLOW_unnamed_integer_type_in_integer_type22607);
            aii=unnamed_integer_type();

            state._fsp--;
            if (state.failed) return ai;
            if ( state.backtracking==0 ) {
                
              			ai=aii;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "integer_type"


    // $ANTLR start "unnamed_integer_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8547:1: unnamed_integer_type returns [AadlInteger ai] : (i= INTEGER ) ( integer_range[ai] )? (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )? ;
    public final AadlInteger unnamed_integer_type() throws RecognitionException {
        AadlInteger ai = null;

        Token i=null;
        Token u=null;
        ReferenceRecord ppr = null;


         
        		//ParsedPropertyReference ppr = null;
        		UnitsType ut= null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8552:2: ( (i= INTEGER ) ( integer_range[ai] )? (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8553:2: (i= INTEGER ) ( integer_range[ai] )? (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8553:2: (i= INTEGER )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8553:3: i= INTEGER
            {
            i=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_unnamed_integer_type22640); if (state.failed) return ai;
            if ( state.backtracking==0 ) {
               
              			ai= Aadl2F.createAadlInteger();
              			ai.setLocationReference(this.getFilename(), i.getLine()); 
              		
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8559:2: ( integer_range[ai] )?
            int alt527=2;
            int LA527_0 = input.LA(1);

            if ( (LA527_0==IDENT||(LA527_0>=PLUS && LA527_0<=MINUS)||LA527_0==INTEGER_LIT) ) {
                alt527=1;
            }
            switch (alt527) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8559:3: integer_range[ai]
                    {
                    pushFollow(FOLLOW_integer_range_in_unnamed_integer_type22652);
                    integer_range(ai);

                    state._fsp--;
                    if (state.failed) return ai;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8561:2: (u= UNITS (ppr= unique_property_type_identifier | units_list[ut] ) )?
            int alt529=2;
            int LA529_0 = input.LA(1);

            if ( (LA529_0==UNITS) ) {
                alt529=1;
            }
            switch (alt529) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8561:4: u= UNITS (ppr= unique_property_type_identifier | units_list[ut] )
                    {
                    u=(Token)match(input,UNITS,FOLLOW_UNITS_in_unnamed_integer_type22666); if (state.failed) return ai;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8562:3: (ppr= unique_property_type_identifier | units_list[ut] )
                    int alt528=2;
                    int LA528_0 = input.LA(1);

                    if ( (LA528_0==IDENT) ) {
                        alt528=1;
                    }
                    else if ( (LA528_0==LPAREN) ) {
                        alt528=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ai;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 528, 0, input);

                        throw nvae;
                    }
                    switch (alt528) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8562:4: ppr= unique_property_type_identifier
                            {
                            pushFollow(FOLLOW_unique_property_type_identifier_in_unnamed_integer_type22677);
                            ppr=unique_property_type_identifier();

                            state._fsp--;
                            if (state.failed) return ai;
                            if ( state.backtracking==0 ) {

                              	    	  ppr.setReferencingObject(ai);
                              	    	  ppr.setReferenceType(ParserReferenceType.PropertyUnitsTypeReference); 
                              	    	  unresolvedReferences.add(ppr);
                              	    	
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8569:7: units_list[ut]
                            {
                            if ( state.backtracking==0 ) {
                               
                              	    		ut = Aadl2F.createUnitsType(); 
                              	    		ut.setLocationReference(this.getFilename(), u.getLine());
                              	    		ai.setOwnedUnitsType(ut);
                              	    	
                            }
                            pushFollow(FOLLOW_units_list_in_unnamed_integer_type22709);
                            units_list(ut);

                            state._fsp--;
                            if (state.failed) return ai;

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ai;
    }
    // $ANTLR end "unnamed_integer_type"


    // $ANTLR start "real_range"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8583:1: real_range[AadlReal ar] : (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) d= DOTDOT (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) ;
    public final void real_range(AadlReal ar) throws RecognitionException {
        Token d=null;
        RealLiteral nv = null;

        ReferenceRecord cr = null;


         
            String lbsign="";
            String ubsign="";
            NumericRange nr = null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8589:2: ( (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) d= DOTDOT (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8591:2: (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) d= DOTDOT (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8591:2: (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) )
            int alt531=2;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                int LA531_1 = input.LA(2);

                if ( (LA531_1==REAL_LIT) ) {
                    alt531=1;
                }
                else if ( (LA531_1==IDENT) ) {
                    alt531=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 531, 1, input);

                    throw nvae;
                }
                }
                break;
            case MINUS:
                {
                int LA531_2 = input.LA(2);

                if ( (LA531_2==REAL_LIT) ) {
                    alt531=1;
                }
                else if ( (LA531_2==IDENT) ) {
                    alt531=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 531, 2, input);

                    throw nvae;
                }
                }
                break;
            case REAL_LIT:
                {
                alt531=1;
                }
                break;
            case IDENT:
                {
                alt531=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 531, 0, input);

                throw nvae;
            }

            switch (alt531) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8591:3: nv= signed_aadlreal
                    {
                    pushFollow(FOLLOW_signed_aadlreal_in_real_range22752);
                    nv=signed_aadlreal();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      		  nr = Aadl2F.createNumericRange();
                      			nr.setLowerBound(nv);
                      			ar.setRange(nr);
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8597:5: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8597:5: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8598:4: ( PLUS | MINUS )? cr= property_name_constant_reference
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8598:4: ( PLUS | MINUS )?
                    int alt530=3;
                    int LA530_0 = input.LA(1);

                    if ( (LA530_0==PLUS) ) {
                        alt530=1;
                    }
                    else if ( (LA530_0==MINUS) ) {
                        alt530=2;
                    }
                    switch (alt530) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8598:5: PLUS
                            {
                            match(input,PLUS,FOLLOW_PLUS_in_real_range22768); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 		  lbsign="+";
                              	 		
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8602:7: MINUS
                            {
                            match(input,MINUS,FOLLOW_MINUS_in_real_range22782); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 	 	 lbsign = "-";
                              	 	 	
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_property_name_constant_reference_in_real_range22802);
                    cr=property_name_constant_reference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              nr = Aadl2F.createNumericRange();
                              ar.setRange(nr);
                      			  if (lbsign.length() > 0){
                      			   String [] labels = cr.getLabels();
                      			   String [] nlabels = new String [labels.length+1];
                      			   nlabels[0] = lbsign;
                      			   for (int i=0;i<labels.length;i++)
                      			     nlabels[i+1] = labels[i];
                      			   cr.setLabels(nlabels);
                      			  }
                      			  cr.setReferencingObject(nr);
                      			  cr.setReferenceType(ParserReferenceType.RealRangeLowerBoundConstantReference);
                      			  unresolvedReferences.add(cr);
                      			
                    }

                    }


                    }
                    break;

            }

            d=(Token)match(input,DOTDOT,FOLLOW_DOTDOT_in_real_range22826); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                  	nr.setLocationReference(this.getFilename(), d.getLine());
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8633:2: (nv= signed_aadlreal | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) )
            int alt533=2;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                int LA533_1 = input.LA(2);

                if ( (LA533_1==REAL_LIT) ) {
                    alt533=1;
                }
                else if ( (LA533_1==IDENT) ) {
                    alt533=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 533, 1, input);

                    throw nvae;
                }
                }
                break;
            case MINUS:
                {
                int LA533_2 = input.LA(2);

                if ( (LA533_2==REAL_LIT) ) {
                    alt533=1;
                }
                else if ( (LA533_2==IDENT) ) {
                    alt533=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 533, 2, input);

                    throw nvae;
                }
                }
                break;
            case REAL_LIT:
                {
                alt533=1;
                }
                break;
            case IDENT:
                {
                alt533=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 533, 0, input);

                throw nvae;
            }

            switch (alt533) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8633:3: nv= signed_aadlreal
                    {
                    pushFollow(FOLLOW_signed_aadlreal_in_real_range22841);
                    nv=signed_aadlreal();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      		  if (nr != null){
                      			 nr.setUpperBound(nv);
                      		 }
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8639:5: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8639:5: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8640:4: ( PLUS | MINUS )? cr= property_name_constant_reference
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8640:4: ( PLUS | MINUS )?
                    int alt532=3;
                    int LA532_0 = input.LA(1);

                    if ( (LA532_0==PLUS) ) {
                        alt532=1;
                    }
                    else if ( (LA532_0==MINUS) ) {
                        alt532=2;
                    }
                    switch (alt532) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8640:5: PLUS
                            {
                            match(input,PLUS,FOLLOW_PLUS_in_real_range22857); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 		  ubsign="+";
                              	 		
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8644:7: MINUS
                            {
                            match(input,MINUS,FOLLOW_MINUS_in_real_range22871); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 	 	 ubsign="-";
                              	 	 	
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_property_name_constant_reference_in_real_range22891);
                    cr=property_name_constant_reference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              if (ubsign.length() > 0){
                               String [] labels = cr.getLabels();
                               String [] nlabels = new String [labels.length+1];
                               nlabels[0] = ubsign;
                               for (int i=0;i<labels.length;i++)
                                 nlabels[i+1] = labels[i];
                               cr.setLabels(nlabels);
                              }
                              cr.setReferencingObject(nr);
                              cr.setReferenceType(ParserReferenceType.RealRangeUpperBoundConstantReference);
                              unresolvedReferences.add(cr);
                      			
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "real_range"


    // $ANTLR start "integer_range"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8672:1: integer_range[AadlInteger ai] : ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) d= DOTDOT ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) ;
    public final void integer_range(AadlInteger ai) throws RecognitionException {
        Token d=null;
        IntegerLiteral bound = null;

        ReferenceRecord cr = null;


         
        	   String lbsign="";
        	   String ubsign="";
        	   NumericRange nr= null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8678:2: ( ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) d= DOTDOT ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8679:2: ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) ) d= DOTDOT ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8679:2: ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) )
            int alt535=2;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                int LA535_1 = input.LA(2);

                if ( (LA535_1==INTEGER_LIT) ) {
                    alt535=1;
                }
                else if ( (LA535_1==IDENT) ) {
                    alt535=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 535, 1, input);

                    throw nvae;
                }
                }
                break;
            case MINUS:
                {
                int LA535_2 = input.LA(2);

                if ( (LA535_2==INTEGER_LIT) ) {
                    alt535=1;
                }
                else if ( (LA535_2==IDENT) ) {
                    alt535=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 535, 2, input);

                    throw nvae;
                }
                }
                break;
            case INTEGER_LIT:
                {
                alt535=1;
                }
                break;
            case IDENT:
                {
                alt535=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 535, 0, input);

                throw nvae;
            }

            switch (alt535) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8679:4: (bound= signed_aadlinteger )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8679:4: (bound= signed_aadlinteger )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8679:5: bound= signed_aadlinteger
                    {
                    pushFollow(FOLLOW_signed_aadlinteger_in_integer_range22936);
                    bound=signed_aadlinteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       
                      			   nr = Aadl2F.createNumericRange();
                      				 nr.setLowerBound(bound);
                      				 ai.setRange(nr);
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8687:3: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8687:3: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8688:5: ( PLUS | MINUS )? cr= property_name_constant_reference
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8688:5: ( PLUS | MINUS )?
                    int alt534=3;
                    int LA534_0 = input.LA(1);

                    if ( (LA534_0==PLUS) ) {
                        alt534=1;
                    }
                    else if ( (LA534_0==MINUS) ) {
                        alt534=2;
                    }
                    switch (alt534) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8688:6: PLUS
                            {
                            match(input,PLUS,FOLLOW_PLUS_in_integer_range22960); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 				lbsign="+";
                              		 		
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8692:8: MINUS
                            {
                            match(input,MINUS,FOLLOW_MINUS_in_integer_range22976); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 	 			lbsign="-";
                              		 	 	
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_property_name_constant_reference_in_integer_range22998);
                    cr=property_name_constant_reference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              nr = Aadl2F.createNumericRange();
                              ai.setRange(nr);
                              if (lbsign.length() > 0){
                               String [] labels = cr.getLabels();
                               String [] nlabels = new String [labels.length+1];
                               nlabels[0] = lbsign;
                               for (int i=0;i<labels.length;i++)
                                 nlabels[i+1] = labels[i];
                               cr.setLabels(nlabels);
                              }
                      			  cr.setReferencingObject(nr);
                      			  cr.setReferenceType(ParserReferenceType.IntegerRangeLowerBoundConstantReference);
                      			  unresolvedReferences.add(cr);
                      			
                    }

                    }


                    }
                    break;

            }

            d=(Token)match(input,DOTDOT,FOLLOW_DOTDOT_in_integer_range23017); if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		nr.setLocationReference(this.getFilename(), d.getLine());
              	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8719:2: ( (bound= signed_aadlinteger ) | ( ( PLUS | MINUS )? cr= property_name_constant_reference ) )
            int alt537=2;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                int LA537_1 = input.LA(2);

                if ( (LA537_1==INTEGER_LIT) ) {
                    alt537=1;
                }
                else if ( (LA537_1==IDENT) ) {
                    alt537=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 537, 1, input);

                    throw nvae;
                }
                }
                break;
            case MINUS:
                {
                int LA537_2 = input.LA(2);

                if ( (LA537_2==INTEGER_LIT) ) {
                    alt537=1;
                }
                else if ( (LA537_2==IDENT) ) {
                    alt537=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 537, 2, input);

                    throw nvae;
                }
                }
                break;
            case INTEGER_LIT:
                {
                alt537=1;
                }
                break;
            case IDENT:
                {
                alt537=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 537, 0, input);

                throw nvae;
            }

            switch (alt537) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8719:4: (bound= signed_aadlinteger )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8719:4: (bound= signed_aadlinteger )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8719:5: bound= signed_aadlinteger
                    {
                    pushFollow(FOLLOW_signed_aadlinteger_in_integer_range23032);
                    bound=signed_aadlinteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      			 if (nr != null){ 
                      			   	nr.setUpperBound(bound);
                      				}
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8727:3: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8727:3: ( ( PLUS | MINUS )? cr= property_name_constant_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8728:5: ( PLUS | MINUS )? cr= property_name_constant_reference
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8728:5: ( PLUS | MINUS )?
                    int alt536=3;
                    int LA536_0 = input.LA(1);

                    if ( (LA536_0==PLUS) ) {
                        alt536=1;
                    }
                    else if ( (LA536_0==MINUS) ) {
                        alt536=2;
                    }
                    switch (alt536) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8728:6: PLUS
                            {
                            match(input,PLUS,FOLLOW_PLUS_in_integer_range23056); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 				ubsign="+";
                              		 		
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8732:8: MINUS
                            {
                            match(input,MINUS,FOLLOW_MINUS_in_integer_range23072); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              	 	 			ubsign="-";
                              		 	 	
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_property_name_constant_reference_in_integer_range23094);
                    cr=property_name_constant_reference();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				if (ubsign.length() > 0){
                               String [] labels = cr.getLabels();
                               String [] nlabels = new String [labels.length+1];
                               nlabels[0] = ubsign;
                               for (int i=0;i<labels.length;i++)
                                 nlabels[i+1] = labels[i];
                               cr.setLabels(nlabels);
                              }
                              cr.setReferencingObject(nr);
                              cr.setReferenceType(ParserReferenceType.IntegerRangeUpperBoundConstantReference);
                              unresolvedReferences.add(cr);
                      			
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "integer_range"


    // $ANTLR start "signed_aadlreal"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8756:1: signed_aadlreal returns [RealLiteral cv] : ( PLUS | MINUS )? (numericval= real_literal ) (ui= IDENT )? ;
    public final RealLiteral signed_aadlreal() throws RecognitionException {
        RealLiteral cv = null;

        Token ui=null;
        Token numericval = null;


         
        		cv=Aadl2F.createRealLiteral();
        		char sign = ' '; 
        		//Token numericval;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8762:2: ( ( PLUS | MINUS )? (numericval= real_literal ) (ui= IDENT )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8763:2: ( PLUS | MINUS )? (numericval= real_literal ) (ui= IDENT )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8763:2: ( PLUS | MINUS )?
            int alt538=3;
            int LA538_0 = input.LA(1);

            if ( (LA538_0==PLUS) ) {
                alt538=1;
            }
            else if ( (LA538_0==MINUS) ) {
                alt538=2;
            }
            switch (alt538) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8763:3: PLUS
                    {
                    match(input,PLUS,FOLLOW_PLUS_in_signed_aadlreal23131); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      			sign = '+';
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8767:4: MINUS
                    {
                    match(input,MINUS,FOLLOW_MINUS_in_signed_aadlreal23141); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      			sign = '-';
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8772:2: (numericval= real_literal )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8772:4: numericval= real_literal
            {
            pushFollow(FOLLOW_real_literal_in_signed_aadlreal23162);
            numericval=real_literal();

            state._fsp--;
            if (state.failed) return cv;
            if ( state.backtracking==0 ) {
               
                    cv.setValueString(sign == ' '?numericval.getText():sign+numericval.getText());
              	  	cv.setValue(sign == '-' ? -1.0 * Double.parseDouble(numericval.getText()): Double.parseDouble(numericval.getText()));
              			cv.setLocationReference(this.getFilename(), numericval.getLine()); 
              		
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8780:5: (ui= IDENT )?
            int alt539=2;
            int LA539_0 = input.LA(1);

            if ( (LA539_0==IDENT) ) {
                alt539=1;
            }
            switch (alt539) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8780:7: ui= IDENT
                    {
                    ui=(Token)match(input,IDENT,FOLLOW_IDENT_in_signed_aadlreal23190); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                          	   ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.PropertyUnitLiteralReference,
                          	                                                               cv,
                          	                                                               new String[]{ui.getText()});
                              unresolvedReferences.add(rr);    	                                                                
                          	
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cv;
    }
    // $ANTLR end "signed_aadlreal"


    // $ANTLR start "signed_aadlinteger"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8849:1: signed_aadlinteger returns [IntegerLiteral cv] : ( PLUS | MINUS )? (numericval= integer_literal ) (ui= IDENT )? ;
    public final IntegerLiteral signed_aadlinteger() throws RecognitionException {
        IntegerLiteral cv = null;

        Token ui=null;
        Token numericval = null;


         
        		cv=Aadl2F.createIntegerLiteral();
        		char sign = ' '; 
        		//Token numericval; 
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8855:4: ( ( PLUS | MINUS )? (numericval= integer_literal ) (ui= IDENT )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8856:4: ( PLUS | MINUS )? (numericval= integer_literal ) (ui= IDENT )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8856:4: ( PLUS | MINUS )?
            int alt540=3;
            int LA540_0 = input.LA(1);

            if ( (LA540_0==PLUS) ) {
                alt540=1;
            }
            else if ( (LA540_0==MINUS) ) {
                alt540=2;
            }
            switch (alt540) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8856:5: PLUS
                    {
                    match(input,PLUS,FOLLOW_PLUS_in_signed_aadlinteger23294); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                        			sign = '+';
                        		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8860:4: MINUS
                    {
                    match(input,MINUS,FOLLOW_MINUS_in_signed_aadlinteger23306); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      			sign = '-';
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8865:4: (numericval= integer_literal )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8865:5: numericval= integer_literal
            {
            pushFollow(FOLLOW_integer_literal_in_signed_aadlinteger23331);
            numericval=integer_literal();

            state._fsp--;
            if (state.failed) return cv;
            if ( state.backtracking==0 ) {
               
                 		cv.setValue((sign == ' ' || sign=='+')?numericval.getText():sign+numericval.getText());
                 		cv.setValueString(sign == ' '?numericval.getText():sign+numericval.getText());
              	    cv.setLocationReference(this.getFilename(), numericval.getLine()); 
              	   
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8873:5: (ui= IDENT )?
            int alt541=2;
            int LA541_0 = input.LA(1);

            if ( (LA541_0==IDENT) ) {
                alt541=1;
            }
            switch (alt541) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8873:7: ui= IDENT
                    {
                    ui=(Token)match(input,IDENT,FOLLOW_IDENT_in_signed_aadlinteger23359); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {
                       
                          	  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.PropertyUnitLiteralReference,
                          	                                                             cv,
                          	                                                             new String[]{ui.getText()});
                              unresolvedReferences.add(rr);    	                                                             
                          	
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cv;
    }
    // $ANTLR end "signed_aadlinteger"


    // $ANTLR start "signed_aadlnumeric"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8927:2: signed_aadlnumeric returns [NumberValue cv] : ( PLUS | MINUS )? ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) ) (ui= IDENT )? ;
    public final NumberValue signed_aadlnumeric() throws RecognitionException {
        NumberValue cv = null;

        Token realval=null;
        Token integerval=null;
        Token ui=null;

         
        		cv=null;
        		char sign = ' '; 
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8932:2: ( ( PLUS | MINUS )? ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) ) (ui= IDENT )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8933:2: ( PLUS | MINUS )? ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) ) (ui= IDENT )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8933:2: ( PLUS | MINUS )?
            int alt542=3;
            int LA542_0 = input.LA(1);

            if ( (LA542_0==PLUS) ) {
                alt542=1;
            }
            else if ( (LA542_0==MINUS) ) {
                alt542=2;
            }
            switch (alt542) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8933:3: PLUS
                    {
                    match(input,PLUS,FOLLOW_PLUS_in_signed_aadlnumeric23445); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      			sign = '+';
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8937:4: MINUS
                    {
                    match(input,MINUS,FOLLOW_MINUS_in_signed_aadlnumeric23455); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      			sign = '-';
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8942:2: ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) )
            int alt543=2;
            int LA543_0 = input.LA(1);

            if ( (LA543_0==REAL_LIT) ) {
                alt543=1;
            }
            else if ( (LA543_0==INTEGER_LIT) ) {
                alt543=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return cv;}
                NoViableAltException nvae =
                    new NoViableAltException("", 543, 0, input);

                throw nvae;
            }
            switch (alt543) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8943:3: (realval= REAL_LIT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8943:3: (realval= REAL_LIT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8943:4: realval= REAL_LIT
                    {
                    realval=(Token)match(input,REAL_LIT,FOLLOW_REAL_LIT_in_signed_aadlnumeric23475); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      				cv = Aadl2F.createRealLiteral();
                      				String str = realval.getText();
                      				cv.setValueString(sign == ' '? str:sign+str);
                      				cv.setLocationReference(this.getFilename(),realval.getLine());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8952:3: (integerval= INTEGER_LIT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8952:3: (integerval= INTEGER_LIT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8952:4: integerval= INTEGER_LIT
                    {
                    integerval=(Token)match(input,INTEGER_LIT,FOLLOW_INTEGER_LIT_in_signed_aadlnumeric23496); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      				cv = Aadl2F.createIntegerLiteral();
                      				String str = integerval.getText();
                      				cv.setValueString(sign == ' '? str:sign+str);
                      				cv.setLocationReference(this.getFilename(),integerval.getLine());
                      			
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8973:2: (ui= IDENT )?
            int alt544=2;
            int LA544_0 = input.LA(1);

            if ( (LA544_0==IDENT) ) {
                alt544=1;
            }
            switch (alt544) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8973:4: ui= IDENT
                    {
                    ui=(Token)match(input,IDENT,FOLLOW_IDENT_in_signed_aadlnumeric23532); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      		  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.PropertyUnitLiteralReference, 
                      		                                                              cv, 
                      		                                                              new String[]{ui.getText()});
                            unresolvedReferences.add(rr);		                                                               
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cv;
    }
    // $ANTLR end "signed_aadlnumeric"


    // $ANTLR start "number_value"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8986:1: number_value returns [NumberValue cv] : ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) ) ;
    public final NumberValue number_value() throws RecognitionException {
        NumberValue cv = null;

        Token realval=null;
        Token integerval=null;

         
        		cv=null;
        		char sign = ' '; 
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8991:2: ( ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8992:2: ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8992:2: ( (realval= REAL_LIT ) | (integerval= INTEGER_LIT ) )
            int alt545=2;
            int LA545_0 = input.LA(1);

            if ( (LA545_0==REAL_LIT) ) {
                alt545=1;
            }
            else if ( (LA545_0==INTEGER_LIT) ) {
                alt545=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return cv;}
                NoViableAltException nvae =
                    new NoViableAltException("", 545, 0, input);

                throw nvae;
            }
            switch (alt545) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8993:3: (realval= REAL_LIT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8993:3: (realval= REAL_LIT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8993:4: realval= REAL_LIT
                    {
                    realval=(Token)match(input,REAL_LIT,FOLLOW_REAL_LIT_in_number_value23573); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      				String str = realval.getText();
                      				cv = Aadl2F.createRealLiteral();
                      				cv.setValueString(sign==' '?str:sign+str);
                      				cv.setValue(cv.getValueString());
                      				cv.setLocationReference(this.getFilename(),realval.getLine());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9003:3: (integerval= INTEGER_LIT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9003:3: (integerval= INTEGER_LIT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9003:4: integerval= INTEGER_LIT
                    {
                    integerval=(Token)match(input,INTEGER_LIT,FOLLOW_INTEGER_LIT_in_number_value23593); if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      				String str = integerval.getText();
                      				cv = Aadl2F.createIntegerLiteral();
                      				cv.setValueString(sign==' '?str:sign+str);
                      				cv.setValue(cv.getValueString());
                      				cv.setLocationReference(this.getFilename(),integerval.getLine());
                      			
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cv;
    }
    // $ANTLR end "number_value"


    // $ANTLR start "signed_aadlnumeric_or_signed_constant"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9064:1: signed_aadlnumeric_or_signed_constant returns [PropertyValue cv] : (sn1= signed_aadlnumeric | ( ( PLUS | MINUS ) sn= property_name_constant_reference ) );
    public final PropertyValue signed_aadlnumeric_or_signed_constant() throws RecognitionException {
        PropertyValue cv = null;

        NumberValue sn1 = null;

        ReferenceRecord sn = null;


         
        		cv=null;
        		//ParsedPropertyReference ppr = null; 
        		String sign =null;
        		//NumberOrPropertyReference sn=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9071:2: (sn1= signed_aadlnumeric | ( ( PLUS | MINUS ) sn= property_name_constant_reference ) )
            int alt547=2;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                int LA547_1 = input.LA(2);

                if ( ((LA547_1>=REAL_LIT && LA547_1<=INTEGER_LIT)) ) {
                    alt547=1;
                }
                else if ( (LA547_1==IDENT) ) {
                    alt547=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return cv;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 547, 1, input);

                    throw nvae;
                }
                }
                break;
            case MINUS:
                {
                int LA547_2 = input.LA(2);

                if ( ((LA547_2>=REAL_LIT && LA547_2<=INTEGER_LIT)) ) {
                    alt547=1;
                }
                else if ( (LA547_2==IDENT) ) {
                    alt547=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return cv;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 547, 2, input);

                    throw nvae;
                }
                }
                break;
            case REAL_LIT:
            case INTEGER_LIT:
                {
                alt547=1;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return cv;}
                NoViableAltException nvae =
                    new NoViableAltException("", 547, 0, input);

                throw nvae;
            }

            switch (alt547) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9072:2: sn1= signed_aadlnumeric
                    {
                    pushFollow(FOLLOW_signed_aadlnumeric_in_signed_aadlnumeric_or_signed_constant23681);
                    sn1=signed_aadlnumeric();

                    state._fsp--;
                    if (state.failed) return cv;
                    if ( state.backtracking==0 ) {

                      			cv=sn1;
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9077:2: ( ( PLUS | MINUS ) sn= property_name_constant_reference )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9077:2: ( ( PLUS | MINUS ) sn= property_name_constant_reference )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9078:3: ( PLUS | MINUS ) sn= property_name_constant_reference
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9078:3: ( PLUS | MINUS )
                    int alt546=2;
                    int LA546_0 = input.LA(1);

                    if ( (LA546_0==PLUS) ) {
                        alt546=1;
                    }
                    else if ( (LA546_0==MINUS) ) {
                        alt546=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return cv;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 546, 0, input);

                        throw nvae;
                    }
                    switch (alt546) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9078:5: PLUS
                            {
                            match(input,PLUS,FOLLOW_PLUS_in_signed_aadlnumeric_or_signed_constant23698); if (state.failed) return cv;
                            if ( state.backtracking==0 ) {

                              				sign = "+";
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9082:5: MINUS
                            {
                            match(input,MINUS,FOLLOW_MINUS_in_signed_aadlnumeric_or_signed_constant23710); if (state.failed) return cv;
                            if ( state.backtracking==0 ) {

                              				sign = "-";
                              			
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_property_name_constant_reference_in_signed_aadlnumeric_or_signed_constant23729);
                    sn=property_name_constant_reference();

                    state._fsp--;
                    if (state.failed) return cv;
                    if ( state.backtracking==0 ) {
                       
                      			// TODO: wait for Lutz to fix the ranges in property types
                      //			cv=sn;
                      //			if(sign != null) 
                      //				((PropertyReference)cv).setPropertyReferenceSign(sign);
                      		
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cv;
    }
    // $ANTLR end "signed_aadlnumeric_or_signed_constant"


    // $ANTLR start "unnamed_range_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9099:1: unnamed_range_type returns [ RangeType rt ] : r= RANGE OF (urt= unnamed_real_type | uit= unnamed_integer_type | ppr= unique_property_type_identifier ) ;
    public final RangeType unnamed_range_type() throws RecognitionException {
        RangeType rt = null;

        Token r=null;
        AadlReal urt = null;

        AadlInteger uit = null;

        ReferenceRecord ppr = null;


         
        		rt = Aadl2F.createRangeType();
        		//ParsedPropertyReference ppr = null; 
        		//Aadlreal urt = null;
        		//Aadlinteger uit = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9106:2: (r= RANGE OF (urt= unnamed_real_type | uit= unnamed_integer_type | ppr= unique_property_type_identifier ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9107:2: r= RANGE OF (urt= unnamed_real_type | uit= unnamed_integer_type | ppr= unique_property_type_identifier )
            {
            r=(Token)match(input,RANGE,FOLLOW_RANGE_in_unnamed_range_type23763); if (state.failed) return rt;
            match(input,OF,FOLLOW_OF_in_unnamed_range_type23765); if (state.failed) return rt;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9108:2: (urt= unnamed_real_type | uit= unnamed_integer_type | ppr= unique_property_type_identifier )
            int alt548=3;
            switch ( input.LA(1) ) {
            case REAL:
                {
                alt548=1;
                }
                break;
            case INTEGER:
                {
                alt548=2;
                }
                break;
            case IDENT:
                {
                alt548=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return rt;}
                NoViableAltException nvae =
                    new NoViableAltException("", 548, 0, input);

                throw nvae;
            }

            switch (alt548) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9108:4: urt= unnamed_real_type
                    {
                    pushFollow(FOLLOW_unnamed_real_type_in_unnamed_range_type23775);
                    urt=unnamed_real_type();

                    state._fsp--;
                    if (state.failed) return rt;
                    if ( state.backtracking==0 ) {
                       
                      			rt.setOwnedNumberType(urt);
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9112:4: uit= unnamed_integer_type
                    {
                    pushFollow(FOLLOW_unnamed_integer_type_in_unnamed_range_type23789);
                    uit=unnamed_integer_type();

                    state._fsp--;
                    if (state.failed) return rt;
                    if ( state.backtracking==0 ) {
                       
                      			rt.setOwnedNumberType(uit);
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9116:4: ppr= unique_property_type_identifier
                    {
                    pushFollow(FOLLOW_unique_property_type_identifier_in_unnamed_range_type23803);
                    ppr=unique_property_type_identifier();

                    state._fsp--;
                    if (state.failed) return rt;
                    if ( state.backtracking==0 ) {
                       
                      		  ppr.setReferencingObject(rt);
                      		  ppr.setReferenceType(ParserReferenceType.RangeTypePropertyTypeReference);
                      		  unresolvedReferences.add(ppr);
                      		
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			rt.setLocationReference(this.getFilename(), r.getLine());
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "unnamed_range_type"


    // $ANTLR start "range_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9128:1: range_type returns [RangeType rt] : rt1= unnamed_range_type ;
    public final RangeType range_type() throws RecognitionException {
        RangeType rt = null;

        RangeType rt1 = null;



        		//RangeType rt = PF.createRangeType();
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9132:2: (rt1= unnamed_range_type )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9133:2: rt1= unnamed_range_type
            {
            pushFollow(FOLLOW_unnamed_range_type_in_range_type23841);
            rt1=unnamed_range_type();

            state._fsp--;
            if (state.failed) return rt;
            if ( state.backtracking==0 ) {
               
              			rt = rt1;			
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "range_type"


    // $ANTLR start "unnamed_classifier_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9165:1: unnamed_classifier_type returns [ClassifierType ct ] : c= CLASSIFIER ( LPAREN qmi= qualified_meta_model_identifier ( COMMA qmi1= qualified_meta_model_identifier )* RPAREN )? ;
    public final ClassifierType unnamed_classifier_type() throws RecognitionException {
        ClassifierType ct = null;

        Token c=null;
        MetaclassReference qmi = null;

        MetaclassReference qmi1 = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9168:2: (c= CLASSIFIER ( LPAREN qmi= qualified_meta_model_identifier ( COMMA qmi1= qualified_meta_model_identifier )* RPAREN )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9169:2: c= CLASSIFIER ( LPAREN qmi= qualified_meta_model_identifier ( COMMA qmi1= qualified_meta_model_identifier )* RPAREN )?
            {
            c=(Token)match(input,CLASSIFIER,FOLLOW_CLASSIFIER_in_unnamed_classifier_type23895); if (state.failed) return ct;
            if ( state.backtracking==0 ) {

              			ct = Aadl2F.createClassifierType();
              			ct.setLocationReference(this.getFilename(), c.getLine());
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9174:2: ( LPAREN qmi= qualified_meta_model_identifier ( COMMA qmi1= qualified_meta_model_identifier )* RPAREN )?
            int alt550=2;
            int LA550_0 = input.LA(1);

            if ( (LA550_0==LPAREN) ) {
                alt550=1;
            }
            switch (alt550) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9174:3: LPAREN qmi= qualified_meta_model_identifier ( COMMA qmi1= qualified_meta_model_identifier )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_unnamed_classifier_type23903); if (state.failed) return ct;
                    pushFollow(FOLLOW_qualified_meta_model_identifier_in_unnamed_classifier_type23907);
                    qmi=qualified_meta_model_identifier();

                    state._fsp--;
                    if (state.failed) return ct;
                    if ( state.backtracking==0 ) {

                      			ct.getClassifierReferences().add(qmi);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9178:3: ( COMMA qmi1= qualified_meta_model_identifier )*
                    loop549:
                    do {
                        int alt549=2;
                        int LA549_0 = input.LA(1);

                        if ( (LA549_0==COMMA) ) {
                            alt549=1;
                        }


                        switch (alt549) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9178:4: COMMA qmi1= qualified_meta_model_identifier
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_unnamed_classifier_type23916); if (state.failed) return ct;
                    	    pushFollow(FOLLOW_qualified_meta_model_identifier_in_unnamed_classifier_type23920);
                    	    qmi1=qualified_meta_model_identifier();

                    	    state._fsp--;
                    	    if (state.failed) return ct;
                    	    if ( state.backtracking==0 ) {

                    	      				ct.getClassifierReferences().add(qmi1);
                    	      			
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop549;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_unnamed_classifier_type23934); if (state.failed) return ct;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ct;
    }
    // $ANTLR end "unnamed_classifier_type"


    // $ANTLR start "qualified_meta_model_identifier"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9187:1: qualified_meta_model_identifier returns [MetaclassReference mtr] : ( LCURLY annexid= IDENT RCURLY STAR STAR )? meta_model_class_identifier[mtr] ;
    public final MetaclassReference qualified_meta_model_identifier() throws RecognitionException {
        MetaclassReference mtr = null;

        Token annexid=null;


        	//XXX: Location
        		mtr = Aadl2F.createMetaclassReference();
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9192:2: ( ( LCURLY annexid= IDENT RCURLY STAR STAR )? meta_model_class_identifier[mtr] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9193:2: ( LCURLY annexid= IDENT RCURLY STAR STAR )? meta_model_class_identifier[mtr]
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9193:2: ( LCURLY annexid= IDENT RCURLY STAR STAR )?
            int alt551=2;
            int LA551_0 = input.LA(1);

            if ( (LA551_0==LCURLY) ) {
                alt551=1;
            }
            switch (alt551) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9193:3: LCURLY annexid= IDENT RCURLY STAR STAR
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_qualified_meta_model_identifier23961); if (state.failed) return mtr;
                    annexid=(Token)match(input,IDENT,FOLLOW_IDENT_in_qualified_meta_model_identifier23965); if (state.failed) return mtr;
                    match(input,RCURLY,FOLLOW_RCURLY_in_qualified_meta_model_identifier23969); if (state.failed) return mtr;
                    match(input,STAR,FOLLOW_STAR_in_qualified_meta_model_identifier23971); if (state.failed) return mtr;
                    match(input,STAR,FOLLOW_STAR_in_qualified_meta_model_identifier23973); if (state.failed) return mtr;
                    if ( state.backtracking==0 ) {

                      	 		mtr.setAnnexName(annexid.getText());
                      	 	
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_meta_model_class_identifier_in_qualified_meta_model_identifier23985);
            meta_model_class_identifier(mtr);

            state._fsp--;
            if (state.failed) return mtr;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return mtr;
    }
    // $ANTLR end "qualified_meta_model_identifier"


    // $ANTLR start "meta_model_class_identifier"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9205:1: meta_model_class_identifier[MetaclassReference mtr] : ( ( core_metaclass_keyword )=>cm= core_metaclass_keyword | id= IDENT )+ ;
    public final void meta_model_class_identifier(MetaclassReference mtr) throws RecognitionException {
        Token id=null;
        String cm = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9208:2: ( ( ( core_metaclass_keyword )=>cm= core_metaclass_keyword | id= IDENT )+ )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9209:2: ( ( core_metaclass_keyword )=>cm= core_metaclass_keyword | id= IDENT )+
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9209:2: ( ( core_metaclass_keyword )=>cm= core_metaclass_keyword | id= IDENT )+
            int cnt552=0;
            loop552:
            do {
                int alt552=3;
                alt552 = dfa552.predict(input);
                switch (alt552) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9210:3: ( core_metaclass_keyword )=>cm= core_metaclass_keyword
            	    {
            	    pushFollow(FOLLOW_core_metaclass_keyword_in_meta_model_class_identifier24022);
            	    cm=core_metaclass_keyword();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	      		    //cid += cm;
            	      		    mtr.getMetaclassNames().add(cm);
            	      		  
            	    }

            	    }
            	    break;
            	case 2 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9215:5: id= IDENT
            	    {
            	    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_meta_model_class_identifier24036); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	            mtr.getMetaclassNames().add(id.getText());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt552 >= 1 ) break loop552;
            	    if (state.backtracking>0) {state.failed=true; return ;}
                        EarlyExitException eee =
                            new EarlyExitException(552, input);
                        throw eee;
                }
                cnt552++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "meta_model_class_identifier"


    // $ANTLR start "core_metaclass_keyword"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9223:1: core_metaclass_keyword returns [String s] : ( ABSTRACT | ACCESS | AND | ALL | ANNEX | APPLIES | BINDING | BOOLEAN | BUS | CALLS | CLASSIFIER | REFERENCE | CONNECTIONS | CONSTANT | DATA | DELTA | DEVICE | END | ENUMERATION | EVENT | EXTENDS | FALSE | FEATURE | FEATURES | FLOW | FLOWS | GROUP | IMPLEMENTATION | IN | INHERIT | INITIAL | INTEGER | INVERSE | IS | LIST | MEMORY | MODE | MODES | NONE | NOT | OF | OR | OUT | PACKAGE | PARAMETER | PATH | PORT | PRIVATE | PROCESS | PROCESSOR | PROPERTIES | PROPERTY | PROTOTYPE | PROTOTYPES | PROVIDES | PUBLIC | RANGE | REAL | RECORD | REFINED | REFINES | RENAMES | REQUIRES | SERVER | SET | SINK | SOURCE | STRING | SUBCOMPONENTS | SUBPROGRAM | SYSTEM | THREAD | TO | TRANSITIONS | TRUE | TYPE | UNITS | VALUE | VIRTUAL | WITH );
    public final String core_metaclass_keyword() throws RecognitionException {
        String s = null;


          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9226:3: ( ABSTRACT | ACCESS | AND | ALL | ANNEX | APPLIES | BINDING | BOOLEAN | BUS | CALLS | CLASSIFIER | REFERENCE | CONNECTIONS | CONSTANT | DATA | DELTA | DEVICE | END | ENUMERATION | EVENT | EXTENDS | FALSE | FEATURE | FEATURES | FLOW | FLOWS | GROUP | IMPLEMENTATION | IN | INHERIT | INITIAL | INTEGER | INVERSE | IS | LIST | MEMORY | MODE | MODES | NONE | NOT | OF | OR | OUT | PACKAGE | PARAMETER | PATH | PORT | PRIVATE | PROCESS | PROCESSOR | PROPERTIES | PROPERTY | PROTOTYPE | PROTOTYPES | PROVIDES | PUBLIC | RANGE | REAL | RECORD | REFINED | REFINES | RENAMES | REQUIRES | SERVER | SET | SINK | SOURCE | STRING | SUBCOMPONENTS | SUBPROGRAM | SYSTEM | THREAD | TO | TRANSITIONS | TRUE | TYPE | UNITS | VALUE | VIRTUAL | WITH )
            int alt553=80;
            switch ( input.LA(1) ) {
            case ABSTRACT:
                {
                alt553=1;
                }
                break;
            case ACCESS:
                {
                alt553=2;
                }
                break;
            case AND:
                {
                alt553=3;
                }
                break;
            case ALL:
                {
                alt553=4;
                }
                break;
            case ANNEX:
                {
                alt553=5;
                }
                break;
            case APPLIES:
                {
                alt553=6;
                }
                break;
            case BINDING:
                {
                alt553=7;
                }
                break;
            case BOOLEAN:
                {
                alt553=8;
                }
                break;
            case BUS:
                {
                alt553=9;
                }
                break;
            case CALLS:
                {
                alt553=10;
                }
                break;
            case CLASSIFIER:
                {
                alt553=11;
                }
                break;
            case REFERENCE:
                {
                alt553=12;
                }
                break;
            case CONNECTIONS:
                {
                alt553=13;
                }
                break;
            case CONSTANT:
                {
                alt553=14;
                }
                break;
            case DATA:
                {
                alt553=15;
                }
                break;
            case DELTA:
                {
                alt553=16;
                }
                break;
            case DEVICE:
                {
                alt553=17;
                }
                break;
            case END:
                {
                alt553=18;
                }
                break;
            case ENUMERATION:
                {
                alt553=19;
                }
                break;
            case EVENT:
                {
                alt553=20;
                }
                break;
            case EXTENDS:
                {
                alt553=21;
                }
                break;
            case FALSE:
                {
                alt553=22;
                }
                break;
            case FEATURE:
                {
                alt553=23;
                }
                break;
            case FEATURES:
                {
                alt553=24;
                }
                break;
            case FLOW:
                {
                alt553=25;
                }
                break;
            case FLOWS:
                {
                alt553=26;
                }
                break;
            case GROUP:
                {
                alt553=27;
                }
                break;
            case IMPLEMENTATION:
                {
                alt553=28;
                }
                break;
            case IN:
                {
                alt553=29;
                }
                break;
            case INHERIT:
                {
                alt553=30;
                }
                break;
            case INITIAL:
                {
                alt553=31;
                }
                break;
            case INTEGER:
                {
                alt553=32;
                }
                break;
            case INVERSE:
                {
                alt553=33;
                }
                break;
            case IS:
                {
                alt553=34;
                }
                break;
            case LIST:
                {
                alt553=35;
                }
                break;
            case MEMORY:
                {
                alt553=36;
                }
                break;
            case MODE:
                {
                alt553=37;
                }
                break;
            case MODES:
                {
                alt553=38;
                }
                break;
            case NONE:
                {
                alt553=39;
                }
                break;
            case NOT:
                {
                alt553=40;
                }
                break;
            case OF:
                {
                alt553=41;
                }
                break;
            case OR:
                {
                alt553=42;
                }
                break;
            case OUT:
                {
                alt553=43;
                }
                break;
            case PACKAGE:
                {
                alt553=44;
                }
                break;
            case PARAMETER:
                {
                alt553=45;
                }
                break;
            case PATH:
                {
                alt553=46;
                }
                break;
            case PORT:
                {
                alt553=47;
                }
                break;
            case PRIVATE:
                {
                alt553=48;
                }
                break;
            case PROCESS:
                {
                alt553=49;
                }
                break;
            case PROCESSOR:
                {
                alt553=50;
                }
                break;
            case PROPERTIES:
                {
                alt553=51;
                }
                break;
            case PROPERTY:
                {
                alt553=52;
                }
                break;
            case PROTOTYPE:
                {
                alt553=53;
                }
                break;
            case PROTOTYPES:
                {
                alt553=54;
                }
                break;
            case PROVIDES:
                {
                alt553=55;
                }
                break;
            case PUBLIC:
                {
                alt553=56;
                }
                break;
            case RANGE:
                {
                alt553=57;
                }
                break;
            case REAL:
                {
                alt553=58;
                }
                break;
            case RECORD:
                {
                alt553=59;
                }
                break;
            case REFINED:
                {
                alt553=60;
                }
                break;
            case REFINES:
                {
                alt553=61;
                }
                break;
            case RENAMES:
                {
                alt553=62;
                }
                break;
            case REQUIRES:
                {
                alt553=63;
                }
                break;
            case SERVER:
                {
                alt553=64;
                }
                break;
            case SET:
                {
                alt553=65;
                }
                break;
            case SINK:
                {
                alt553=66;
                }
                break;
            case SOURCE:
                {
                alt553=67;
                }
                break;
            case STRING:
                {
                alt553=68;
                }
                break;
            case SUBCOMPONENTS:
                {
                alt553=69;
                }
                break;
            case SUBPROGRAM:
                {
                alt553=70;
                }
                break;
            case SYSTEM:
                {
                alt553=71;
                }
                break;
            case THREAD:
                {
                alt553=72;
                }
                break;
            case TO:
                {
                alt553=73;
                }
                break;
            case TRANSITIONS:
                {
                alt553=74;
                }
                break;
            case TRUE:
                {
                alt553=75;
                }
                break;
            case TYPE:
                {
                alt553=76;
                }
                break;
            case UNITS:
                {
                alt553=77;
                }
                break;
            case VALUE:
                {
                alt553=78;
                }
                break;
            case VIRTUAL:
                {
                alt553=79;
                }
                break;
            case WITH:
                {
                alt553=80;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return s;}
                NoViableAltException nvae =
                    new NoViableAltException("", 553, 0, input);

                throw nvae;
            }

            switch (alt553) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9227:3: ABSTRACT
                    {
                    match(input,ABSTRACT,FOLLOW_ABSTRACT_in_core_metaclass_keyword24074); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="abstract";
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9231:4: ACCESS
                    {
                    match(input,ACCESS,FOLLOW_ACCESS_in_core_metaclass_keyword24085); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="access";
                          
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9235:4: AND
                    {
                    match(input,AND,FOLLOW_AND_in_core_metaclass_keyword24097); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="and";
                          
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9239:4: ALL
                    {
                    match(input,ALL,FOLLOW_ALL_in_core_metaclass_keyword24108); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="all";
                          
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9243:5: ANNEX
                    {
                    match(input,ANNEX,FOLLOW_ANNEX_in_core_metaclass_keyword24120); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="annex";
                          
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9247:5: APPLIES
                    {
                    match(input,APPLIES,FOLLOW_APPLIES_in_core_metaclass_keyword24132); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="applies";
                          
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9251:5: BINDING
                    {
                    match(input,BINDING,FOLLOW_BINDING_in_core_metaclass_keyword24144); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="binding";
                          
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9255:5: BOOLEAN
                    {
                    match(input,BOOLEAN,FOLLOW_BOOLEAN_in_core_metaclass_keyword24156); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="boolean";
                          
                    }

                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9259:5: BUS
                    {
                    match(input,BUS,FOLLOW_BUS_in_core_metaclass_keyword24168); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="bus";
                          
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9263:5: CALLS
                    {
                    match(input,CALLS,FOLLOW_CALLS_in_core_metaclass_keyword24180); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="calls";
                          
                    }

                    }
                    break;
                case 11 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9267:5: CLASSIFIER
                    {
                    match(input,CLASSIFIER,FOLLOW_CLASSIFIER_in_core_metaclass_keyword24192); if (state.failed) return s;
                    if ( state.backtracking==0 ) {
                       
                            s="classifier";
                          
                    }

                    }
                    break;
                case 12 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9271:5: REFERENCE
                    {
                    match(input,REFERENCE,FOLLOW_REFERENCE_in_core_metaclass_keyword24204); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="reference";
                          
                    }

                    }
                    break;
                case 13 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9275:5: CONNECTIONS
                    {
                    match(input,CONNECTIONS,FOLLOW_CONNECTIONS_in_core_metaclass_keyword24216); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="connections";
                          
                    }

                    }
                    break;
                case 14 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9279:5: CONSTANT
                    {
                    match(input,CONSTANT,FOLLOW_CONSTANT_in_core_metaclass_keyword24228); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="constant";
                          
                    }

                    }
                    break;
                case 15 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9283:5: DATA
                    {
                    match(input,DATA,FOLLOW_DATA_in_core_metaclass_keyword24240); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="data";
                          
                    }

                    }
                    break;
                case 16 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9287:5: DELTA
                    {
                    match(input,DELTA,FOLLOW_DELTA_in_core_metaclass_keyword24252); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="delta";
                          
                    }

                    }
                    break;
                case 17 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9291:5: DEVICE
                    {
                    match(input,DEVICE,FOLLOW_DEVICE_in_core_metaclass_keyword24264); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="device";
                          
                    }

                    }
                    break;
                case 18 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9295:5: END
                    {
                    match(input,END,FOLLOW_END_in_core_metaclass_keyword24276); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="end";
                          
                    }

                    }
                    break;
                case 19 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9299:5: ENUMERATION
                    {
                    match(input,ENUMERATION,FOLLOW_ENUMERATION_in_core_metaclass_keyword24288); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="enumeration";
                          
                    }

                    }
                    break;
                case 20 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9303:5: EVENT
                    {
                    match(input,EVENT,FOLLOW_EVENT_in_core_metaclass_keyword24300); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="event";
                          
                    }

                    }
                    break;
                case 21 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9307:5: EXTENDS
                    {
                    match(input,EXTENDS,FOLLOW_EXTENDS_in_core_metaclass_keyword24312); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="extends";
                          
                    }

                    }
                    break;
                case 22 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9311:5: FALSE
                    {
                    match(input,FALSE,FOLLOW_FALSE_in_core_metaclass_keyword24324); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="false";
                          
                    }

                    }
                    break;
                case 23 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9315:5: FEATURE
                    {
                    match(input,FEATURE,FOLLOW_FEATURE_in_core_metaclass_keyword24336); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="feature";
                          
                    }

                    }
                    break;
                case 24 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9319:5: FEATURES
                    {
                    match(input,FEATURES,FOLLOW_FEATURES_in_core_metaclass_keyword24348); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="features";
                          
                    }

                    }
                    break;
                case 25 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9323:5: FLOW
                    {
                    match(input,FLOW,FOLLOW_FLOW_in_core_metaclass_keyword24360); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="flow";
                          
                    }

                    }
                    break;
                case 26 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9327:5: FLOWS
                    {
                    match(input,FLOWS,FOLLOW_FLOWS_in_core_metaclass_keyword24372); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="flows";
                          
                    }

                    }
                    break;
                case 27 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9331:5: GROUP
                    {
                    match(input,GROUP,FOLLOW_GROUP_in_core_metaclass_keyword24384); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="group";
                          
                    }

                    }
                    break;
                case 28 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9335:4: IMPLEMENTATION
                    {
                    match(input,IMPLEMENTATION,FOLLOW_IMPLEMENTATION_in_core_metaclass_keyword24395); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="implementation";
                          
                    }

                    }
                    break;
                case 29 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9339:5: IN
                    {
                    match(input,IN,FOLLOW_IN_in_core_metaclass_keyword24407); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="in";
                          
                    }

                    }
                    break;
                case 30 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9343:5: INHERIT
                    {
                    match(input,INHERIT,FOLLOW_INHERIT_in_core_metaclass_keyword24419); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="inherit";
                          
                    }

                    }
                    break;
                case 31 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9347:5: INITIAL
                    {
                    match(input,INITIAL,FOLLOW_INITIAL_in_core_metaclass_keyword24431); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="initial";
                          
                    }

                    }
                    break;
                case 32 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9351:5: INTEGER
                    {
                    match(input,INTEGER,FOLLOW_INTEGER_in_core_metaclass_keyword24443); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="integer";
                          
                    }

                    }
                    break;
                case 33 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9355:5: INVERSE
                    {
                    match(input,INVERSE,FOLLOW_INVERSE_in_core_metaclass_keyword24455); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="inverse";
                          
                    }

                    }
                    break;
                case 34 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9359:5: IS
                    {
                    match(input,IS,FOLLOW_IS_in_core_metaclass_keyword24467); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="is";
                          
                    }

                    }
                    break;
                case 35 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9363:5: LIST
                    {
                    match(input,LIST,FOLLOW_LIST_in_core_metaclass_keyword24479); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="list";
                          
                    }

                    }
                    break;
                case 36 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9367:5: MEMORY
                    {
                    match(input,MEMORY,FOLLOW_MEMORY_in_core_metaclass_keyword24491); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="memory";
                          
                    }

                    }
                    break;
                case 37 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9371:5: MODE
                    {
                    match(input,MODE,FOLLOW_MODE_in_core_metaclass_keyword24503); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="mode";
                          
                    }

                    }
                    break;
                case 38 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9375:5: MODES
                    {
                    match(input,MODES,FOLLOW_MODES_in_core_metaclass_keyword24515); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="modes";
                          
                    }

                    }
                    break;
                case 39 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9379:4: NONE
                    {
                    match(input,NONE,FOLLOW_NONE_in_core_metaclass_keyword24527); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="none";
                          
                    }

                    }
                    break;
                case 40 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9383:4: NOT
                    {
                    match(input,NOT,FOLLOW_NOT_in_core_metaclass_keyword24538); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="not";
                          
                    }

                    }
                    break;
                case 41 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9387:4: OF
                    {
                    match(input,OF,FOLLOW_OF_in_core_metaclass_keyword24549); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="of";
                          
                    }

                    }
                    break;
                case 42 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9391:4: OR
                    {
                    match(input,OR,FOLLOW_OR_in_core_metaclass_keyword24560); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="or";
                          
                    }

                    }
                    break;
                case 43 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9395:4: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_core_metaclass_keyword24571); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="out";
                          
                    }

                    }
                    break;
                case 44 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9399:4: PACKAGE
                    {
                    match(input,PACKAGE,FOLLOW_PACKAGE_in_core_metaclass_keyword24582); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="package";
                          
                    }

                    }
                    break;
                case 45 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9403:4: PARAMETER
                    {
                    match(input,PARAMETER,FOLLOW_PARAMETER_in_core_metaclass_keyword24593); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="parameter";
                          
                    }

                    }
                    break;
                case 46 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9407:4: PATH
                    {
                    match(input,PATH,FOLLOW_PATH_in_core_metaclass_keyword24604); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="path";
                          
                    }

                    }
                    break;
                case 47 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9411:4: PORT
                    {
                    match(input,PORT,FOLLOW_PORT_in_core_metaclass_keyword24615); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="port";
                          
                    }

                    }
                    break;
                case 48 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9415:4: PRIVATE
                    {
                    match(input,PRIVATE,FOLLOW_PRIVATE_in_core_metaclass_keyword24626); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="private";
                          
                    }

                    }
                    break;
                case 49 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9419:4: PROCESS
                    {
                    match(input,PROCESS,FOLLOW_PROCESS_in_core_metaclass_keyword24637); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="process";
                          
                    }

                    }
                    break;
                case 50 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9423:4: PROCESSOR
                    {
                    match(input,PROCESSOR,FOLLOW_PROCESSOR_in_core_metaclass_keyword24648); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="processor";
                          
                    }

                    }
                    break;
                case 51 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9427:4: PROPERTIES
                    {
                    match(input,PROPERTIES,FOLLOW_PROPERTIES_in_core_metaclass_keyword24659); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="properties";
                          
                    }

                    }
                    break;
                case 52 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9431:4: PROPERTY
                    {
                    match(input,PROPERTY,FOLLOW_PROPERTY_in_core_metaclass_keyword24670); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="property";
                          
                    }

                    }
                    break;
                case 53 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9435:4: PROTOTYPE
                    {
                    match(input,PROTOTYPE,FOLLOW_PROTOTYPE_in_core_metaclass_keyword24681); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="prototype";
                          
                    }

                    }
                    break;
                case 54 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9439:4: PROTOTYPES
                    {
                    match(input,PROTOTYPES,FOLLOW_PROTOTYPES_in_core_metaclass_keyword24692); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="prototypes";
                          
                    }

                    }
                    break;
                case 55 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9443:4: PROVIDES
                    {
                    match(input,PROVIDES,FOLLOW_PROVIDES_in_core_metaclass_keyword24703); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="provides";
                          
                    }

                    }
                    break;
                case 56 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9447:4: PUBLIC
                    {
                    match(input,PUBLIC,FOLLOW_PUBLIC_in_core_metaclass_keyword24714); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="public";
                          
                    }

                    }
                    break;
                case 57 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9451:4: RANGE
                    {
                    match(input,RANGE,FOLLOW_RANGE_in_core_metaclass_keyword24725); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="range";
                          
                    }

                    }
                    break;
                case 58 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9455:4: REAL
                    {
                    match(input,REAL,FOLLOW_REAL_in_core_metaclass_keyword24736); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="real";
                          
                    }

                    }
                    break;
                case 59 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9459:4: RECORD
                    {
                    match(input,RECORD,FOLLOW_RECORD_in_core_metaclass_keyword24747); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="record";
                          
                    }

                    }
                    break;
                case 60 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9463:4: REFINED
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_core_metaclass_keyword24758); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="refined";
                          
                    }

                    }
                    break;
                case 61 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9467:4: REFINES
                    {
                    match(input,REFINES,FOLLOW_REFINES_in_core_metaclass_keyword24769); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="refines";
                          
                    }

                    }
                    break;
                case 62 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9471:4: RENAMES
                    {
                    match(input,RENAMES,FOLLOW_RENAMES_in_core_metaclass_keyword24780); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="renames";
                          
                    }

                    }
                    break;
                case 63 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9475:4: REQUIRES
                    {
                    match(input,REQUIRES,FOLLOW_REQUIRES_in_core_metaclass_keyword24791); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="requires";
                          
                    }

                    }
                    break;
                case 64 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9479:4: SERVER
                    {
                    match(input,SERVER,FOLLOW_SERVER_in_core_metaclass_keyword24802); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="server";
                          
                    }

                    }
                    break;
                case 65 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9483:4: SET
                    {
                    match(input,SET,FOLLOW_SET_in_core_metaclass_keyword24813); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="set";
                          
                    }

                    }
                    break;
                case 66 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9487:4: SINK
                    {
                    match(input,SINK,FOLLOW_SINK_in_core_metaclass_keyword24825); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="sink";
                          
                    }

                    }
                    break;
                case 67 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9491:4: SOURCE
                    {
                    match(input,SOURCE,FOLLOW_SOURCE_in_core_metaclass_keyword24836); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="source";
                          
                    }

                    }
                    break;
                case 68 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9495:4: STRING
                    {
                    match(input,STRING,FOLLOW_STRING_in_core_metaclass_keyword24847); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="string";
                          
                    }

                    }
                    break;
                case 69 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9499:4: SUBCOMPONENTS
                    {
                    match(input,SUBCOMPONENTS,FOLLOW_SUBCOMPONENTS_in_core_metaclass_keyword24858); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="subcomponents";
                          
                    }

                    }
                    break;
                case 70 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9503:4: SUBPROGRAM
                    {
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_core_metaclass_keyword24869); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="subprogram";
                          
                    }

                    }
                    break;
                case 71 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9507:4: SYSTEM
                    {
                    match(input,SYSTEM,FOLLOW_SYSTEM_in_core_metaclass_keyword24880); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="system";
                          
                    }

                    }
                    break;
                case 72 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9511:4: THREAD
                    {
                    match(input,THREAD,FOLLOW_THREAD_in_core_metaclass_keyword24891); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="thread";
                          
                    }

                    }
                    break;
                case 73 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9515:4: TO
                    {
                    match(input,TO,FOLLOW_TO_in_core_metaclass_keyword24902); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="to";
                          
                    }

                    }
                    break;
                case 74 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9519:4: TRANSITIONS
                    {
                    match(input,TRANSITIONS,FOLLOW_TRANSITIONS_in_core_metaclass_keyword24913); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="transitions";
                          
                    }

                    }
                    break;
                case 75 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9523:4: TRUE
                    {
                    match(input,TRUE,FOLLOW_TRUE_in_core_metaclass_keyword24924); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="true";
                          
                    }

                    }
                    break;
                case 76 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9527:4: TYPE
                    {
                    match(input,TYPE,FOLLOW_TYPE_in_core_metaclass_keyword24935); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="type";
                          
                    }

                    }
                    break;
                case 77 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9531:4: UNITS
                    {
                    match(input,UNITS,FOLLOW_UNITS_in_core_metaclass_keyword24946); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="units";
                          
                    }

                    }
                    break;
                case 78 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9535:4: VALUE
                    {
                    match(input,VALUE,FOLLOW_VALUE_in_core_metaclass_keyword24957); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="value";
                          
                    }

                    }
                    break;
                case 79 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9539:4: VIRTUAL
                    {
                    match(input,VIRTUAL,FOLLOW_VIRTUAL_in_core_metaclass_keyword24968); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="virtual";
                          
                    }

                    }
                    break;
                case 80 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9543:4: WITH
                    {
                    match(input,WITH,FOLLOW_WITH_in_core_metaclass_keyword24979); if (state.failed) return s;
                    if ( state.backtracking==0 ) {

                            s="with";
                          
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return s;
    }
    // $ANTLR end "core_metaclass_keyword"


    // $ANTLR start "classifier_type"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9549:1: classifier_type returns [ClassifierType ct] : ct1= unnamed_classifier_type ;
    public final ClassifierType classifier_type() throws RecognitionException {
        ClassifierType ct = null;

        ClassifierType ct1 = null;


         
        		//ClassifierType ct = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9553:2: (ct1= unnamed_classifier_type )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9554:2: ct1= unnamed_classifier_type
            {
            pushFollow(FOLLOW_unnamed_classifier_type_in_classifier_type25016);
            ct1=unnamed_classifier_type();

            state._fsp--;
            if (state.failed) return ct;
            if ( state.backtracking==0 ) {
               
              			ct = ct1;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ct;
    }
    // $ANTLR end "classifier_type"


    // $ANTLR start "unique_property_type_identifier"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9668:1: unique_property_type_identifier returns [ ReferenceRecord pr] : (pset= IDENT DOUBLECOLON )? ptype= IDENT ;
    public final ReferenceRecord unique_property_type_identifier() throws RecognitionException {
        ReferenceRecord pr = null;

        Token pset=null;
        Token ptype=null;


        		pr= new ReferenceRecord();
        		String ps="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9673:2: ( (pset= IDENT DOUBLECOLON )? ptype= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9674:2: (pset= IDENT DOUBLECOLON )? ptype= IDENT
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9674:2: (pset= IDENT DOUBLECOLON )?
            int alt554=2;
            int LA554_0 = input.LA(1);

            if ( (LA554_0==IDENT) ) {
                int LA554_1 = input.LA(2);

                if ( (LA554_1==DOUBLECOLON) ) {
                    alt554=1;
                }
            }
            switch (alt554) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9674:4: pset= IDENT DOUBLECOLON
                    {
                    pset=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_property_type_identifier25156); if (state.failed) return pr;
                    if ( state.backtracking==0 ) {

                      		  ps = pset.getText();
                      		
                    }
                    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_unique_property_type_identifier25164); if (state.failed) return pr;

                    }
                    break;

            }

            ptype=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_property_type_identifier25176); if (state.failed) return pr;
            if ( state.backtracking==0 ) {

              		  if (ps.length() >0){
              		    pr = new ReferenceRecord(new String[]{ps,ptype.getText()});
              		  } else {
              		    pr = new ReferenceRecord(new String[]{ptype.getText()});
              		  } 
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pr;
    }
    // $ANTLR end "unique_property_type_identifier"


    // $ANTLR start "property_constant"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9839:1: property_constant returns [PropertyConstant pc] : id= IDENT COLON CONSTANT ( LIST OF )* (nr= unique_property_type_identifier | pt= property_type ) ASSIGN ce= constant_property_expression[pc] SEMI ;
    public final PropertyConstant property_constant() throws RecognitionException {
        PropertyConstant pc = null;

        Token id=null;
        ReferenceRecord nr = null;

        PropertyType pt = null;

        PropertyExpression ce = null;


         
                
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9842:9: (id= IDENT COLON CONSTANT ( LIST OF )* (nr= unique_property_type_identifier | pt= property_type ) ASSIGN ce= constant_property_expression[pc] SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9843:3: id= IDENT COLON CONSTANT ( LIST OF )* (nr= unique_property_type_identifier | pt= property_type ) ASSIGN ce= constant_property_expression[pc] SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_constant25361); if (state.failed) return pc;
            match(input,COLON,FOLLOW_COLON_in_property_constant25363); if (state.failed) return pc;
            match(input,CONSTANT,FOLLOW_CONSTANT_in_property_constant25365); if (state.failed) return pc;
            if ( state.backtracking==0 ) {

                    pc = Aadl2F.createPropertyConstant();
                    pc.setName(id.getText());
                    pc.setLocationReference(this.getFilename(),id.getLine());
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9849:3: ( LIST OF )*
            loop555:
            do {
                int alt555=2;
                int LA555_0 = input.LA(1);

                if ( (LA555_0==LIST) ) {
                    alt555=1;
                }


                switch (alt555) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9850:5: LIST OF
            	    {
            	    match(input,LIST,FOLLOW_LIST_in_property_constant25381); if (state.failed) return pc;
            	    match(input,OF,FOLLOW_OF_in_property_constant25383); if (state.failed) return pc;
            	    if ( state.backtracking==0 ) {

            	            pc.setList(pc.getList() + 1);
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop555;
                }
            } while (true);

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9854:3: (nr= unique_property_type_identifier | pt= property_type )
            int alt556=2;
            int LA556_0 = input.LA(1);

            if ( (LA556_0==IDENT) ) {
                alt556=1;
            }
            else if ( ((LA556_0>=RECORD && LA556_0<=UNITS)||(LA556_0>=REAL && LA556_0<=INTEGER)||(LA556_0>=RANGE && LA556_0<=CLASSIFIER)) ) {
                alt556=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pc;}
                NoViableAltException nvae =
                    new NoViableAltException("", 556, 0, input);

                throw nvae;
            }
            switch (alt556) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9854:4: nr= unique_property_type_identifier
                    {
                    pushFollow(FOLLOW_unique_property_type_identifier_in_property_constant25398);
                    nr=unique_property_type_identifier();

                    state._fsp--;
                    if (state.failed) return pc;
                    if ( state.backtracking==0 ) {

                            nr.setReferencingObject(pc);
                            nr.setReferenceType(ParserReferenceType.PropertyTypeReference);
                            unresolvedReferences.add(nr);
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9860:5: pt= property_type
                    {
                    pushFollow(FOLLOW_property_type_in_property_constant25414);
                    pt=property_type();

                    state._fsp--;
                    if (state.failed) return pc;
                    if ( state.backtracking==0 ) {

                            pc.setOwnedType(pt);
                          
                    }

                    }
                    break;

            }

            match(input,ASSIGN,FOLLOW_ASSIGN_in_property_constant25428); if (state.failed) return pc;
            pushFollow(FOLLOW_constant_property_expression_in_property_constant25436);
            ce=constant_property_expression(pc);

            state._fsp--;
            if (state.failed) return pc;
            if ( state.backtracking==0 ) {

                      if (ce != null)
                        pc.setConstantValue(ce);
                    
            }
            match(input,SEMI,FOLLOW_SEMI_in_property_constant25449); if (state.failed) return pc;

            }

        }
        catch (RecognitionException ex) {

                        reportError(ex);
            			consumeUntil(input,SEMI);
            			input.consume();
                    
        }
        finally {
        }
        return pc;
    }
    // $ANTLR end "property_constant"

    protected static class constant_property_expression_scope {
        Element ro;
    }
    protected Stack constant_property_expression_stack = new Stack();


    // $ANTLR start "constant_property_expression"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9879:1: constant_property_expression[Element refObj] returns [PropertyExpression pe] : ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nr= numeric_range_term | bt= boolean_term | rt= real_term | it= integer_term | st= string_term | cct= component_classifier_term | ct= computed_term | li= list_term[$constant_property_expression::ro] | property_constant_or_namelike_literal[$constant_property_expression::ro] ) ;
    public final PropertyExpression constant_property_expression(Element refObj) throws RecognitionException {
        constant_property_expression_stack.push(new constant_property_expression_scope());
        PropertyExpression pe = null;

        PropertyExpression rct = null;

        RangeValue nr = null;

        PropertyExpression bt = null;

        PropertyExpression rt = null;

        PropertyExpression it = null;

        PropertyExpression st = null;

        PropertyExpression cct = null;

        PropertyExpression ct = null;

        ListValue li = null;



        	 pe = null;
        	 ((constant_property_expression_scope)constant_property_expression_stack.peek()).ro = refObj; 
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9887:2: ( ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nr= numeric_range_term | bt= boolean_term | rt= real_term | it= integer_term | st= string_term | cct= component_classifier_term | ct= computed_term | li= list_term[$constant_property_expression::ro] | property_constant_or_namelike_literal[$constant_property_expression::ro] ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9888:2: ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nr= numeric_range_term | bt= boolean_term | rt= real_term | it= integer_term | st= string_term | cct= component_classifier_term | ct= computed_term | li= list_term[$constant_property_expression::ro] | property_constant_or_namelike_literal[$constant_property_expression::ro] )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9888:2: ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nr= numeric_range_term | bt= boolean_term | rt= real_term | it= integer_term | st= string_term | cct= component_classifier_term | ct= computed_term | li= list_term[$constant_property_expression::ro] | property_constant_or_namelike_literal[$constant_property_expression::ro] )
            int alt557=10;
            alt557 = dfa557.predict(input);
            switch (alt557) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9889:4: ( LPAREN IDENT ASSIGN )=>rct= record_term
                    {
                    pushFollow(FOLLOW_record_term_in_constant_property_expression25513);
                    rct=record_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=rct;
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9893:5: ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nr= numeric_range_term
                    {
                    pushFollow(FOLLOW_numeric_range_term_in_constant_property_expression25542);
                    nr=numeric_range_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=nr;
                          
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9897:5: bt= boolean_term
                    {
                    pushFollow(FOLLOW_boolean_term_in_constant_property_expression25556);
                    bt=boolean_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=bt;
                          
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9901:4: rt= real_term
                    {
                    pushFollow(FOLLOW_real_term_in_constant_property_expression25570);
                    rt=real_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      			pe=rt;
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9905:4: it= integer_term
                    {
                    pushFollow(FOLLOW_integer_term_in_constant_property_expression25581);
                    it=integer_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      			pe=it;
                      		
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9909:4: st= string_term
                    {
                    pushFollow(FOLLOW_string_term_in_constant_property_expression25592);
                    st=string_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      			pe=st;
                      		
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9913:4: cct= component_classifier_term
                    {
                    pushFollow(FOLLOW_component_classifier_term_in_constant_property_expression25603);
                    cct=component_classifier_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      			pe=cct;
                      		
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9917:4: ct= computed_term
                    {
                    pushFollow(FOLLOW_computed_term_in_constant_property_expression25614);
                    ct=computed_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      			pe=ct;
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9921:5: li= list_term[$constant_property_expression::ro]
                    {
                    pushFollow(FOLLOW_list_term_in_constant_property_expression25628);
                    li=list_term(((constant_property_expression_scope)constant_property_expression_stack.peek()).ro);

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe = li;
                          
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9929:4: property_constant_or_namelike_literal[$constant_property_expression::ro]
                    {
                    pushFollow(FOLLOW_property_constant_or_namelike_literal_in_constant_property_expression25652);
                    property_constant_or_namelike_literal(((constant_property_expression_scope)constant_property_expression_stack.peek()).ro);

                    state._fsp--;
                    if (state.failed) return pe;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            constant_property_expression_stack.pop();
        }
        return pe;
    }
    // $ANTLR end "constant_property_expression"


    // $ANTLR start "computed_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9933:1: computed_term returns [PropertyExpression ct] : COMPUTE LPAREN id= IDENT RPAREN ;
    public final PropertyExpression computed_term() throws RecognitionException {
        PropertyExpression ct = null;

        Token id=null;


          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9936:3: ( COMPUTE LPAREN id= IDENT RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9937:3: COMPUTE LPAREN id= IDENT RPAREN
            {
            match(input,COMPUTE,FOLLOW_COMPUTE_in_computed_term25687); if (state.failed) return ct;
            match(input,LPAREN,FOLLOW_LPAREN_in_computed_term25691); if (state.failed) return ct;
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_computed_term25698); if (state.failed) return ct;
            match(input,RPAREN,FOLLOW_RPAREN_in_computed_term25702); if (state.failed) return ct;
            if ( state.backtracking==0 ) {

                  ComputedValue cv = Aadl2F.createComputedValue();
                  cv.setLocationReference(this.getFilename(), id.getLine());
                  cv.setFunction(id.getText());
                  ct = cv;
                
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ct;
    }
    // $ANTLR end "computed_term"


    // $ANTLR start "record_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9949:1: record_term returns [PropertyExpression rt] : LPAREN (id= IDENT ASSIGN ( (pv= property_expression[bpa] SEMI ) ) (id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI ) )* ) RPAREN ;
    public final PropertyExpression record_term() throws RecognitionException {
        PropertyExpression rt = null;

        Token id=null;
        Token id1=null;
        PropertyExpression pv = null;

        PropertyExpression pv1 = null;



        		rt=null;
        		RecordValue rv=null;
        		BasicPropertyAssociation bpa=null;
        		BasicPropertyAssociation bpa1=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9956:2: ( LPAREN (id= IDENT ASSIGN ( (pv= property_expression[bpa] SEMI ) ) (id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI ) )* ) RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9957:2: LPAREN (id= IDENT ASSIGN ( (pv= property_expression[bpa] SEMI ) ) (id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI ) )* ) RPAREN
            {
            match(input,LPAREN,FOLLOW_LPAREN_in_record_term25731); if (state.failed) return rt;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9958:2: (id= IDENT ASSIGN ( (pv= property_expression[bpa] SEMI ) ) (id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI ) )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9958:4: id= IDENT ASSIGN ( (pv= property_expression[bpa] SEMI ) ) (id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI ) )*
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_record_term25738); if (state.failed) return rt;
            match(input,ASSIGN,FOLLOW_ASSIGN_in_record_term25740); if (state.failed) return rt;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9959:3: ( (pv= property_expression[bpa] SEMI ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9960:4: (pv= property_expression[bpa] SEMI )
            {
            if ( state.backtracking==0 ) {

              					rv = Aadl2F.createRecordValue();
              					rv.setLocationReference(this.getFilename(),id.getLine());
              					bpa = Aadl2F.createBasicPropertyAssociation();
              					bpa.setLocationReference(this.getFilename(), id.getLine());
              					ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.PropertyRecordFieldReference,
              					                                                           bpa,
              					                                                           new String[]{id.getText()});
                        unresolvedReferences.add(rr);					                                                           
              			
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9970:4: (pv= property_expression[bpa] SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9970:5: pv= property_expression[bpa] SEMI
            {
            pushFollow(FOLLOW_property_expression_in_record_term25758);
            pv=property_expression(bpa);

            state._fsp--;
            if (state.failed) return rt;
            match(input,SEMI,FOLLOW_SEMI_in_record_term25761); if (state.failed) return rt;
            if ( state.backtracking==0 ) {

              					// if all parsing works then assign our record
              					rv.getOwnedFieldValues().add(bpa);
              					bpa.setOwnedValue(pv);
              					rt=rv;
              				
            }

            }


            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9979:3: (id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI ) )*
            loop558:
            do {
                int alt558=2;
                int LA558_0 = input.LA(1);

                if ( (LA558_0==IDENT) ) {
                    alt558=1;
                }


                switch (alt558) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9979:4: id1= IDENT ASSIGN (pv1= property_expression[bpa1] SEMI )
            	    {
            	    id1=(Token)match(input,IDENT,FOLLOW_IDENT_in_record_term25783); if (state.failed) return rt;
            	    match(input,ASSIGN,FOLLOW_ASSIGN_in_record_term25785); if (state.failed) return rt;
            	    if ( state.backtracking==0 ) {

            	      				bpa1 = Aadl2F.createBasicPropertyAssociation();
            	      				bpa1.setLocationReference(this.getFilename(), id1.getLine());
            	                ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.PropertyRecordFieldReference,
            	                                                                           bpa1,
            	                                                                           new String[]{id1.getText()});
            	                unresolvedReferences.add(rr);                                                                    
            	      			
            	    }
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9988:4: (pv1= property_expression[bpa1] SEMI )
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9988:5: pv1= property_expression[bpa1] SEMI
            	    {
            	    pushFollow(FOLLOW_property_expression_in_record_term25799);
            	    pv1=property_expression(bpa1);

            	    state._fsp--;
            	    if (state.failed) return rt;
            	    match(input,SEMI,FOLLOW_SEMI_in_record_term25802); if (state.failed) return rt;
            	    if ( state.backtracking==0 ) {

            	      					rv.getOwnedFieldValues().add(bpa1);
            	      					bpa1.setOwnedValue(pv1);
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop558;
                }
            } while (true);


            }

            match(input,RPAREN,FOLLOW_RPAREN_in_record_term25824); if (state.failed) return rt;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "record_term"

    protected static class modal_property_value_scope {
        ModalPropertyValue mpv;
    }
    protected Stack modal_property_value_stack = new Stack();


    // $ANTLR start "modal_property_value"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10000:1: modal_property_value[PropertyAssociation pa] : ( ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN ) | (pv= property_expression[$modal_property_value::mpv] ) );
    public final void modal_property_value(PropertyAssociation pa) throws RecognitionException {
        modal_property_value_stack.push(new modal_property_value_scope());
        PropertyExpression pv = null;



          //XXX: Location
            ((modal_property_value_scope)modal_property_value_stack.peek()).mpv =null; //Aadl2F.createModalPropertyValue(); 
            boolean prevInmodes = false;
            boolean currInmodes = false;
            //BasicPropertyAssociation bpa=Aadl2F.createBasicPropertyAssociation();
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10011:3: ( ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN ) | (pv= property_expression[$modal_property_value::mpv] ) )
            int alt561=2;
            alt561 = dfa561.predict(input);
            switch (alt561) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:3: ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:3: ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:4: LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_modal_property_value25855); if (state.failed) return ;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10013:4: ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10014:5: (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )?
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10014:5: (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10015:7: pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] )
                    {
                    if ( state.backtracking==0 ) {

                              ((modal_property_value_scope)modal_property_value_stack.peek()).mpv =Aadl2F.createModalPropertyValue(); 
                            
                    }
                    pushFollow(FOLLOW_property_expression_in_modal_property_value25886);
                    pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              ((modal_property_value_scope)modal_property_value_stack.peek()).mpv.setOwnedValue(pv);
                              pa.getOwnedValues().add(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);
                            
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10023:5: ( in_modes[$modal_property_value::mpv] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10024:7: in_modes[$modal_property_value::mpv]
                    {
                    pushFollow(FOLLOW_in_modes_in_modal_property_value25909);
                    in_modes(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                           
                              prevInmodes = currInmodes;
                              currInmodes = true;
                            
                    }

                    }


                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10031:5: ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )*
                    loop559:
                    do {
                        int alt559=2;
                        int LA559_0 = input.LA(1);

                        if ( (LA559_0==COMMA) ) {
                            int LA559_1 = input.LA(2);

                            if ( (synpred859_Aadl2()) ) {
                                alt559=1;
                            }


                        }


                        switch (alt559) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10031:6: COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] )
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_modal_property_value25940); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	              ((modal_property_value_scope)modal_property_value_stack.peek()).mpv =Aadl2F.createModalPropertyValue(); 
                    	            
                    	    }
                    	    pushFollow(FOLLOW_property_expression_in_modal_property_value25964);
                    	    pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	            	((modal_property_value_scope)modal_property_value_stack.peek()).mpv.setOwnedValue(pv);
                    	              pa.getOwnedValues().add(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);
                    	            
                    	    }
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10040:5: ( in_modes[$modal_property_value::mpv] )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10041:7: in_modes[$modal_property_value::mpv]
                    	    {
                    	    pushFollow(FOLLOW_in_modes_in_modal_property_value25987);
                    	    in_modes(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                    	    state._fsp--;
                    	    if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {
                    	           
                    	              prevInmodes = currInmodes;
                    	              currInmodes = true;
                    	            
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop559;
                        }
                    } while (true);

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10048:5: ( COMMA pv= property_expression[$modal_property_value::mpv] )?
                    int alt560=2;
                    int LA560_0 = input.LA(1);

                    if ( (LA560_0==COMMA) ) {
                        alt560=1;
                    }
                    switch (alt560) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10048:6: COMMA pv= property_expression[$modal_property_value::mpv]
                            {
                            match(input,COMMA,FOLLOW_COMMA_in_modal_property_value26019); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      ((modal_property_value_scope)modal_property_value_stack.peek()).mpv =Aadl2F.createModalPropertyValue(); 
                                    
                            }
                            pushFollow(FOLLOW_property_expression_in_modal_property_value26039);
                            pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      ((modal_property_value_scope)modal_property_value_stack.peek()).mpv.setOwnedValue(pv);    
                                      pa.getOwnedValues().add(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);
                                    
                            }

                            }
                            break;

                    }


                    }

                    match(input,RPAREN,FOLLOW_RPAREN_in_modal_property_value26067); if (state.failed) return ;

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10062:3: (pv= property_expression[$modal_property_value::mpv] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10062:3: (pv= property_expression[$modal_property_value::mpv] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10063:7: pv= property_expression[$modal_property_value::mpv]
                    {
                    if ( state.backtracking==0 ) {

                              ((modal_property_value_scope)modal_property_value_stack.peek()).mpv =Aadl2F.createModalPropertyValue(); 
                            
                    }
                    pushFollow(FOLLOW_property_expression_in_modal_property_value26099);
                    pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              ((modal_property_value_scope)modal_property_value_stack.peek()).mpv.setOwnedValue(pv);    
                              pa.getOwnedValues().add(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);
                            
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            modal_property_value_stack.pop();
        }
        return ;
    }
    // $ANTLR end "modal_property_value"

    protected static class property_expression_scope {
        Element ro;
    }
    protected Stack property_expression_stack = new Stack();


    // $ANTLR start "property_expression"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10123:1: property_expression[Element refObject] returns [PropertyExpression pe] : ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nt= numeric_range_term | rft= reference_term | ct= computed_term | st= string_term | rt= real_term | it= integer_term | cct= component_classifier_term | bt= boolean_term | property_constant_or_namelike_literal[$property_expression::ro] | li= list_term[$property_expression::ro] ) ;
    public final PropertyExpression property_expression(Element refObject) throws RecognitionException {
        property_expression_stack.push(new property_expression_scope());
        PropertyExpression pe = null;

        PropertyExpression rct = null;

        RangeValue nt = null;

        PropertyExpression rft = null;

        PropertyExpression ct = null;

        PropertyExpression st = null;

        PropertyExpression rt = null;

        PropertyExpression it = null;

        PropertyExpression cct = null;

        PropertyExpression bt = null;

        ListValue li = null;



        	 pe = null;
        	 ((property_expression_scope)property_expression_stack.peek()).ro = refObject;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10131:2: ( ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nt= numeric_range_term | rft= reference_term | ct= computed_term | st= string_term | rt= real_term | it= integer_term | cct= component_classifier_term | bt= boolean_term | property_constant_or_namelike_literal[$property_expression::ro] | li= list_term[$property_expression::ro] ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10132:2: ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nt= numeric_range_term | rft= reference_term | ct= computed_term | st= string_term | rt= real_term | it= integer_term | cct= component_classifier_term | bt= boolean_term | property_constant_or_namelike_literal[$property_expression::ro] | li= list_term[$property_expression::ro] )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10132:2: ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nt= numeric_range_term | rft= reference_term | ct= computed_term | st= string_term | rt= real_term | it= integer_term | cct= component_classifier_term | bt= boolean_term | property_constant_or_namelike_literal[$property_expression::ro] | li= list_term[$property_expression::ro] )
            int alt562=11;
            alt562 = dfa562.predict(input);
            switch (alt562) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10133:4: ( LPAREN IDENT ASSIGN )=>rct= record_term
                    {
                    pushFollow(FOLLOW_record_term_in_property_expression26216);
                    rct=record_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=rct;
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10141:4: ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nt= numeric_range_term
                    {
                    pushFollow(FOLLOW_numeric_range_term_in_property_expression26257);
                    nt=numeric_range_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                                    pe=nt;
                                  
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10145:5: rft= reference_term
                    {
                    pushFollow(FOLLOW_reference_term_in_property_expression26279);
                    rft=reference_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=rft;
                          
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10149:5: ct= computed_term
                    {
                    pushFollow(FOLLOW_computed_term_in_property_expression26293);
                    ct=computed_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=ct;
                          
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10153:5: st= string_term
                    {
                    pushFollow(FOLLOW_string_term_in_property_expression26307);
                    st=string_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=st;
                          
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10157:5: rt= real_term
                    {
                    pushFollow(FOLLOW_real_term_in_property_expression26321);
                    rt=real_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=rt;
                          
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10161:5: it= integer_term
                    {
                    pushFollow(FOLLOW_integer_term_in_property_expression26335);
                    it=integer_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=it;
                          
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10165:4: cct= component_classifier_term
                    {
                    pushFollow(FOLLOW_component_classifier_term_in_property_expression26348);
                    cct=component_classifier_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      			pe=cct;
                      		
                    }

                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10173:5: bt= boolean_term
                    {
                    pushFollow(FOLLOW_boolean_term_in_property_expression26368);
                    bt=boolean_term();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                            pe=bt;
                          
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10177:5: property_constant_or_namelike_literal[$property_expression::ro]
                    {
                    pushFollow(FOLLOW_property_constant_or_namelike_literal_in_property_expression26380);
                    property_constant_or_namelike_literal(((property_expression_scope)property_expression_stack.peek()).ro);

                    state._fsp--;
                    if (state.failed) return pe;

                    }
                    break;
                case 11 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10178:5: li= list_term[$property_expression::ro]
                    {
                    pushFollow(FOLLOW_list_term_in_property_expression26391);
                    li=list_term(((property_expression_scope)property_expression_stack.peek()).ro);

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      	    pe = li;
                      	  
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            property_expression_stack.pop();
        }
        return pe;
    }
    // $ANTLR end "property_expression"


    // $ANTLR start "list_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10185:1: list_term[Element refObj] returns [ListValue li] : ( ( LPAREN RPAREN ) | ( LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN ) ) ;
    public final ListValue list_term(Element refObj) throws RecognitionException {
        ListValue li = null;

        PropertyExpression exp = null;



              li = Aadl2F.createListValue();
              Element refObj1 = li;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10190:3: ( ( ( LPAREN RPAREN ) | ( LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10191:3: ( ( LPAREN RPAREN ) | ( LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10191:3: ( ( LPAREN RPAREN ) | ( LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN ) )
            int alt564=2;
            int LA564_0 = input.LA(1);

            if ( (LA564_0==LPAREN) ) {
                int LA564_1 = input.LA(2);

                if ( (LA564_1==RPAREN) ) {
                    alt564=1;
                }
                else if ( (LA564_1==IDENT||LA564_1==LPAREN||LA564_1==REFERENCE||(LA564_1>=PLUS && LA564_1<=MINUS)||(LA564_1>=REAL_LIT && LA564_1<=INTEGER_LIT)||LA564_1==CLASSIFIER||LA564_1==FALSE||LA564_1==NOT||LA564_1==TRUE||LA564_1==COMPUTE||LA564_1==STRING_LITERAL) ) {
                    alt564=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return li;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 564, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return li;}
                NoViableAltException nvae =
                    new NoViableAltException("", 564, 0, input);

                throw nvae;
            }
            switch (alt564) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10192:3: ( LPAREN RPAREN )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10192:3: ( LPAREN RPAREN )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10193:3: LPAREN RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_list_term26439); if (state.failed) return li;
                    match(input,RPAREN,FOLLOW_RPAREN_in_list_term26441); if (state.failed) return li;

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10196:3: ( LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10196:3: ( LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10197:3: LPAREN exp= property_expression[refObj1] ( COMMA exp= property_expression[refObj1] )* RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_list_term26457); if (state.failed) return li;
                    pushFollow(FOLLOW_property_expression_in_list_term26465);
                    exp=property_expression(refObj1);

                    state._fsp--;
                    if (state.failed) return li;
                    if ( state.backtracking==0 ) {

                            if (exp != null)
                            	li.getOwnedListElements().add(exp);
                        
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10202:3: ( COMMA exp= property_expression[refObj1] )*
                    loop563:
                    do {
                        int alt563=2;
                        int LA563_0 = input.LA(1);

                        if ( (LA563_0==COMMA) ) {
                            alt563=1;
                        }


                        switch (alt563) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10203:5: COMMA exp= property_expression[refObj1]
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_list_term26478); if (state.failed) return li;
                    	    pushFollow(FOLLOW_property_expression_in_list_term26488);
                    	    exp=property_expression(refObj1);

                    	    state._fsp--;
                    	    if (state.failed) return li;
                    	    if ( state.backtracking==0 ) {

                    	            if (exp != null)
                    	              li.getOwnedListElements().add(exp);
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop563;
                        }
                    } while (true);

                    match(input,RPAREN,FOLLOW_RPAREN_in_list_term26500); if (state.failed) return li;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return li;
    }
    // $ANTLR end "list_term"


    // $ANTLR start "reference_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10214:1: reference_term returns [PropertyExpression pe] : REFERENCE LPAREN contained_model_element_path[rf] RPAREN ;
    public final PropertyExpression reference_term() throws RecognitionException {
        PropertyExpression pe = null;


              ReferenceValue rf = Aadl2F.createReferenceValue();
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10218:3: ( REFERENCE LPAREN contained_model_element_path[rf] RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10219:3: REFERENCE LPAREN contained_model_element_path[rf] RPAREN
            {
            match(input,REFERENCE,FOLLOW_REFERENCE_in_reference_term26537); if (state.failed) return pe;
            match(input,LPAREN,FOLLOW_LPAREN_in_reference_term26539); if (state.failed) return pe;
            pushFollow(FOLLOW_contained_model_element_path_in_reference_term26543);
            contained_model_element_path(rf);

            state._fsp--;
            if (state.failed) return pe;
            if ( state.backtracking==0 ) {

                   pe=rf;
                 
            }
            match(input,RPAREN,FOLLOW_RPAREN_in_reference_term26553); if (state.failed) return pe;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pe;
    }
    // $ANTLR end "reference_term"


    // $ANTLR start "array_range"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10229:1: array_range returns [ArrayRange ar] : LBRACK num1= INTEGER_LIT ( DOTDOT num2= INTEGER_LIT )? RBRACK ;
    public final ArrayRange array_range() throws RecognitionException {
        ArrayRange ar = null;

        Token num1=null;
        Token num2=null;


        		int intValue;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10233:2: ( LBRACK num1= INTEGER_LIT ( DOTDOT num2= INTEGER_LIT )? RBRACK )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10234:2: LBRACK num1= INTEGER_LIT ( DOTDOT num2= INTEGER_LIT )? RBRACK
            {
            match(input,LBRACK,FOLLOW_LBRACK_in_array_range26581); if (state.failed) return ar;
            num1=(Token)match(input,INTEGER_LIT,FOLLOW_INTEGER_LIT_in_array_range26585); if (state.failed) return ar;
            if ( state.backtracking==0 ) {

              			ar = Aadl2F.createArrayRange();
              			ar.setLocationReference(this.getFilename(), num1.getLine());
              			intValue= IntegerLiteralImpl.parseInt(num1.getText());
              			if (intValue <0)
                				throw new FailedPredicateException(input, "array_range", "array range cannot be negative");
              			ar.setLowerBound(intValue);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10244:2: ( DOTDOT num2= INTEGER_LIT )?
            int alt565=2;
            int LA565_0 = input.LA(1);

            if ( (LA565_0==DOTDOT) ) {
                alt565=1;
            }
            switch (alt565) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10244:3: DOTDOT num2= INTEGER_LIT
                    {
                    match(input,DOTDOT,FOLLOW_DOTDOT_in_array_range26594); if (state.failed) return ar;
                    num2=(Token)match(input,INTEGER_LIT,FOLLOW_INTEGER_LIT_in_array_range26598); if (state.failed) return ar;
                    if ( state.backtracking==0 ) {

                      			intValue= IntegerLiteralImpl.parseInt(num2.getText());
                      			if (intValue <0)
                        				throw new FailedPredicateException(input, "array_range", "array range cannot be negative");
                      			ar.setUpperBound(intValue);
                      		
                    }

                    }
                    break;

            }

            match(input,RBRACK,FOLLOW_RBRACK_in_array_range26610); if (state.failed) return ar;

            }

        }
        catch (RecognitionException ex) {

                        reportError(ex);
            			consumeUntil(input,RBRACK);
            			consumeUntil(input,SEMI);
            			input.consume();
                    
        }
        finally {
        }
        return ar;
    }
    // $ANTLR end "array_range"


    // $ANTLR start "contained_model_element_path"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10261:1: contained_model_element_path[ContainedNamedElement cne] : ( ( (id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )* ) (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )? ) | (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY ) );
    public final void contained_model_element_path(ContainedNamedElement cne) throws RecognitionException {
        Token id=null;
        Token id1=null;
        Token annexid=null;
        Token text=null;
        ArrayRange ar = null;

        ArrayRange ar1 = null;



        		ContainmentPathElement cpe=null;
        		ContainmentPathElement cpe1=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10266:2: ( ( (id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )* ) (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )? ) | (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY ) )
            int alt570=2;
            int LA570_0 = input.LA(1);

            if ( (LA570_0==IDENT) ) {
                int LA570_1 = input.LA(2);

                if ( (LA570_1==LCURLY) ) {
                    alt570=2;
                }
                else if ( (LA570_1==EOF||(LA570_1>=COMMA && LA570_1<=IDENT)||LA570_1==RPAREN||LA570_1==DOT||LA570_1==LBRACK||LA570_1==IN) ) {
                    alt570=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 570, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 570, 0, input);

                throw nvae;
            }
            switch (alt570) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10267:2: ( (id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )* ) (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10267:2: ( (id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )* ) (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10268:3: (id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )* ) (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )?
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10268:3: (id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )* )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10268:4: id= IDENT (ar= array_range )? ( DOT id1= IDENT (ar1= array_range )? )*
                    {
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_contained_model_element_path26649); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				cne.setLocationReference(this.getFilename(),id.getLine());
                      				cpe = Aadl2F.createContainmentPathElement();
                      				cpe.setLocationReference(this.getFilename(), id.getLine());
                      				ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.ContainedPathElementReference,
                      				                                                            cpe,
                      				                                                            new String[]{id.getText()});
                      				unresolvedReferences.add(rr);
                      				cne.getContainmentPathElements().add(cpe);
                      			
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10279:4: (ar= array_range )?
                    int alt566=2;
                    int LA566_0 = input.LA(1);

                    if ( (LA566_0==LBRACK) ) {
                        alt566=1;
                    }
                    switch (alt566) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10279:5: ar= array_range
                            {
                            pushFollow(FOLLOW_array_range_in_contained_model_element_path26662);
                            ar=array_range();

                            state._fsp--;
                            if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                              					cpe.getArrayRanges().add(ar);
                              				
                            }

                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10284:4: ( DOT id1= IDENT (ar1= array_range )? )*
                    loop568:
                    do {
                        int alt568=2;
                        int LA568_0 = input.LA(1);

                        if ( (LA568_0==DOT) ) {
                            alt568=1;
                        }


                        switch (alt568) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10284:5: DOT id1= IDENT (ar1= array_range )?
                    	    {
                    	    match(input,DOT,FOLLOW_DOT_in_contained_model_element_path26680); if (state.failed) return ;
                    	    id1=(Token)match(input,IDENT,FOLLOW_IDENT_in_contained_model_element_path26684); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {

                    	      					cpe1 = Aadl2F.createContainmentPathElement();
                    	      					cpe1.setLocationReference(this.getFilename(), id1.getLine());
                    	               ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.ContainedPathElementReference,
                    	                                                                          cpe1,
                    	                                                                          new String[]{id1.getText()});
                    	                unresolvedReferences.add(rr);
                    	      					cne.getContainmentPathElements().add(cpe1);
                    	      				
                    	    }
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10294:5: (ar1= array_range )?
                    	    int alt567=2;
                    	    int LA567_0 = input.LA(1);

                    	    if ( (LA567_0==LBRACK) ) {
                    	        alt567=1;
                    	    }
                    	    switch (alt567) {
                    	        case 1 :
                    	            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10294:6: ar1= array_range
                    	            {
                    	            pushFollow(FOLLOW_array_range_in_contained_model_element_path26699);
                    	            ar1=array_range();

                    	            state._fsp--;
                    	            if (state.failed) return ;
                    	            if ( state.backtracking==0 ) {

                    	              						cpe1.getArrayRanges().add(ar1);
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop568;
                        }
                    } while (true);


                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10301:3: (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )?
                    int alt569=2;
                    int LA569_0 = input.LA(1);

                    if ( (LA569_0==IDENT) ) {
                        alt569=1;
                    }
                    switch (alt569) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10301:4: annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY
                            {
                            annexid=(Token)match(input,IDENT,FOLLOW_IDENT_in_contained_model_element_path26730); if (state.failed) return ;
                            match(input,LCURLY,FOLLOW_LCURLY_in_contained_model_element_path26736); if (state.failed) return ;
                            match(input,STARSTAR,FOLLOW_STARSTAR_in_contained_model_element_path26738); if (state.failed) return ;
                            text=(Token)match(input,ANNEX_TEXT,FOLLOW_ANNEX_TEXT_in_contained_model_element_path26746); if (state.failed) return ;
                            match(input,STARSTAR,FOLLOW_STARSTAR_in_contained_model_element_path26752); if (state.failed) return ;
                            match(input,RCURLY,FOLLOW_RCURLY_in_contained_model_element_path26754); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                          cpe = Aadl2F.createContainmentPathElement();
                                          cpe.setLocationReference(this.getFilename(), annexid.getLine());
                                          ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.AnnexElementReference,
                                                                                                      cpe,
                                                                                                      new String[]{annexid.getText(), text.getText()});
                                          unresolvedReferences.add(rr);
                                          cne.getContainmentPathElements().add(cpe);		      
                              		    
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10317:3: (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10317:3: (annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10317:4: annexid= IDENT LCURLY STARSTAR text= ANNEX_TEXT STARSTAR RCURLY
                    {
                    annexid=(Token)match(input,IDENT,FOLLOW_IDENT_in_contained_model_element_path26780); if (state.failed) return ;
                    match(input,LCURLY,FOLLOW_LCURLY_in_contained_model_element_path26788); if (state.failed) return ;
                    match(input,STARSTAR,FOLLOW_STARSTAR_in_contained_model_element_path26790); if (state.failed) return ;
                    text=(Token)match(input,ANNEX_TEXT,FOLLOW_ANNEX_TEXT_in_contained_model_element_path26800); if (state.failed) return ;
                    match(input,STARSTAR,FOLLOW_STARSTAR_in_contained_model_element_path26808); if (state.failed) return ;
                    match(input,RCURLY,FOLLOW_RCURLY_in_contained_model_element_path26810); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                                  cpe = Aadl2F.createContainmentPathElement();
                                  cpe.setLocationReference(this.getFilename(), annexid.getLine());
                                  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.AnnexElementReference,
                                                                                              cpe,
                                                                                              new String[]{annexid.getText(), text.getText()});
                                  unresolvedReferences.add(rr);
                                  cne.getContainmentPathElements().add(cpe);          
                              
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "contained_model_element_path"


    // $ANTLR start "component_classifier_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10334:1: component_classifier_term returns [PropertyExpression pe] : c= CLASSIFIER LPAREN ( (ci= unique_impl_name ) | (ct= unique_type_name ) ) RPAREN ;
    public final PropertyExpression component_classifier_term() throws RecognitionException {
        PropertyExpression pe = null;

        Token c=null;
        ReferenceRecord ci = null;

        ReferenceRecord ct = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10337:2: (c= CLASSIFIER LPAREN ( (ci= unique_impl_name ) | (ct= unique_type_name ) ) RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10338:2: c= CLASSIFIER LPAREN ( (ci= unique_impl_name ) | (ct= unique_type_name ) ) RPAREN
            {
            c=(Token)match(input,CLASSIFIER,FOLLOW_CLASSIFIER_in_component_classifier_term26850); if (state.failed) return pe;
            match(input,LPAREN,FOLLOW_LPAREN_in_component_classifier_term26852); if (state.failed) return pe;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10339:2: ( (ci= unique_impl_name ) | (ct= unique_type_name ) )
            int alt571=2;
            alt571 = dfa571.predict(input);
            switch (alt571) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10340:3: (ci= unique_impl_name )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10340:3: (ci= unique_impl_name )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10340:4: ci= unique_impl_name
                    {
                    pushFollow(FOLLOW_unique_impl_name_in_component_classifier_term26862);
                    ci=unique_impl_name();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      				ClassifierValue cv = Aadl2F.createClassifierValue();
                      				cv.setLocationReference(this.getFilename(), c.getLine());
                      				ci.setReferenceType(ParserReferenceType.ClassifierValueComponentImplementationReference);
                      				ci.setReferencingObject(cv);
                      				unresolvedReferences.add(ci);
                      				pe=cv;
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10351:3: (ct= unique_type_name )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10351:3: (ct= unique_type_name )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10351:4: ct= unique_type_name
                    {
                    pushFollow(FOLLOW_unique_type_name_in_component_classifier_term26882);
                    ct=unique_type_name();

                    state._fsp--;
                    if (state.failed) return pe;
                    if ( state.backtracking==0 ) {

                      				ClassifierValue cv = Aadl2F.createClassifierValue();
                      				cv.setLocationReference(this.getFilename(), c.getLine());
                              ct.setReferenceType(ParserReferenceType.ClassifierValueComponentTypeReference);
                              ct.setReferencingObject(cv);
                              unresolvedReferences.add(ct);
                      				pe=cv;
                      			
                    }

                    }


                    }
                    break;

            }

            match(input,RPAREN,FOLLOW_RPAREN_in_component_classifier_term26897); if (state.failed) return pe;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pe;
    }
    // $ANTLR end "component_classifier_term"


    // $ANTLR start "numeric_range_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10365:1: numeric_range_term returns [RangeValue rv] : (lowerreal= signed_aadlreal d1= DOTDOT (upperreal= signed_aadlreal | crx1= signed_property_name_constant_reference ) | lowerint= signed_aadlinteger d2= DOTDOT (upperint= signed_aadlinteger | crx2= signed_property_name_constant_reference ) | crm= signed_property_name_constant_reference d3= DOTDOT (upperreal= signed_aadlreal | upperint= signed_aadlinteger | crx= signed_property_name_constant_reference ) ) ( DELTA (incrint= signed_aadlinteger | incrreal= signed_aadlreal | crd= signed_property_name_constant_reference ) )? ;
    public final RangeValue numeric_range_term() throws RecognitionException {
        RangeValue rv = null;

        Token d1=null;
        Token d2=null;
        Token d3=null;
        RealLiteral lowerreal = null;

        RealLiteral upperreal = null;

        ReferenceRecord crx1 = null;

        IntegerLiteral lowerint = null;

        IntegerLiteral upperint = null;

        ReferenceRecord crx2 = null;

        ReferenceRecord crm = null;

        ReferenceRecord crx = null;

        IntegerLiteral incrint = null;

        RealLiteral incrreal = null;

        ReferenceRecord crd = null;



          // move it from below
          // they can be overwritten
            rv = Aadl2F.createRangeValue();
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10371:2: ( (lowerreal= signed_aadlreal d1= DOTDOT (upperreal= signed_aadlreal | crx1= signed_property_name_constant_reference ) | lowerint= signed_aadlinteger d2= DOTDOT (upperint= signed_aadlinteger | crx2= signed_property_name_constant_reference ) | crm= signed_property_name_constant_reference d3= DOTDOT (upperreal= signed_aadlreal | upperint= signed_aadlinteger | crx= signed_property_name_constant_reference ) ) ( DELTA (incrint= signed_aadlinteger | incrreal= signed_aadlreal | crd= signed_property_name_constant_reference ) )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10372:2: (lowerreal= signed_aadlreal d1= DOTDOT (upperreal= signed_aadlreal | crx1= signed_property_name_constant_reference ) | lowerint= signed_aadlinteger d2= DOTDOT (upperint= signed_aadlinteger | crx2= signed_property_name_constant_reference ) | crm= signed_property_name_constant_reference d3= DOTDOT (upperreal= signed_aadlreal | upperint= signed_aadlinteger | crx= signed_property_name_constant_reference ) ) ( DELTA (incrint= signed_aadlinteger | incrreal= signed_aadlreal | crd= signed_property_name_constant_reference ) )?
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10372:2: (lowerreal= signed_aadlreal d1= DOTDOT (upperreal= signed_aadlreal | crx1= signed_property_name_constant_reference ) | lowerint= signed_aadlinteger d2= DOTDOT (upperint= signed_aadlinteger | crx2= signed_property_name_constant_reference ) | crm= signed_property_name_constant_reference d3= DOTDOT (upperreal= signed_aadlreal | upperint= signed_aadlinteger | crx= signed_property_name_constant_reference ) )
            int alt575=3;
            switch ( input.LA(1) ) {
            case PLUS:
                {
                switch ( input.LA(2) ) {
                case REAL_LIT:
                    {
                    alt575=1;
                    }
                    break;
                case INTEGER_LIT:
                    {
                    alt575=2;
                    }
                    break;
                case IDENT:
                    {
                    alt575=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return rv;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 575, 1, input);

                    throw nvae;
                }

                }
                break;
            case MINUS:
                {
                switch ( input.LA(2) ) {
                case REAL_LIT:
                    {
                    alt575=1;
                    }
                    break;
                case INTEGER_LIT:
                    {
                    alt575=2;
                    }
                    break;
                case IDENT:
                    {
                    alt575=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return rv;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 575, 2, input);

                    throw nvae;
                }

                }
                break;
            case REAL_LIT:
                {
                alt575=1;
                }
                break;
            case INTEGER_LIT:
                {
                alt575=2;
                }
                break;
            case IDENT:
                {
                alt575=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return rv;}
                NoViableAltException nvae =
                    new NoViableAltException("", 575, 0, input);

                throw nvae;
            }

            switch (alt575) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10373:3: lowerreal= signed_aadlreal d1= DOTDOT (upperreal= signed_aadlreal | crx1= signed_property_name_constant_reference )
                    {
                    pushFollow(FOLLOW_signed_aadlreal_in_numeric_range_term26924);
                    lowerreal=signed_aadlreal();

                    state._fsp--;
                    if (state.failed) return rv;
                    d1=(Token)match(input,DOTDOT,FOLLOW_DOTDOT_in_numeric_range_term26928); if (state.failed) return rv;
                    if ( state.backtracking==0 ) {

                            rv = Aadl2F.createRangeValue();
                            rv.setLocationReference(this.getFilename(), d1.getLine());
                            rv.setMinimum(lowerreal);
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10379:5: (upperreal= signed_aadlreal | crx1= signed_property_name_constant_reference )
                    int alt572=2;
                    switch ( input.LA(1) ) {
                    case PLUS:
                        {
                        int LA572_1 = input.LA(2);

                        if ( (LA572_1==REAL_LIT) ) {
                            alt572=1;
                        }
                        else if ( (LA572_1==IDENT) ) {
                            alt572=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 572, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case MINUS:
                        {
                        int LA572_2 = input.LA(2);

                        if ( (LA572_2==REAL_LIT) ) {
                            alt572=1;
                        }
                        else if ( (LA572_2==IDENT) ) {
                            alt572=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 572, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case REAL_LIT:
                        {
                        alt572=1;
                        }
                        break;
                    case IDENT:
                        {
                        alt572=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return rv;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 572, 0, input);

                        throw nvae;
                    }

                    switch (alt572) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10379:6: upperreal= signed_aadlreal
                            {
                            pushFollow(FOLLOW_signed_aadlreal_in_numeric_range_term26943);
                            upperreal=signed_aadlreal();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                                      rv.setMaximum(upperreal);
                                    
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10383:6: crx1= signed_property_name_constant_reference
                            {
                            pushFollow(FOLLOW_signed_property_name_constant_reference_in_numeric_range_term26960);
                            crx1=signed_property_name_constant_reference();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                                      crx1.setReferencingObject(rv);
                                      crx1.setReferenceType(ParserReferenceType.UpperBoundPropertyConstantReference);
                                      unresolvedReferences.add(crx1);
                                    
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10390:4: lowerint= signed_aadlinteger d2= DOTDOT (upperint= signed_aadlinteger | crx2= signed_property_name_constant_reference )
                    {
                    pushFollow(FOLLOW_signed_aadlinteger_in_numeric_range_term26981);
                    lowerint=signed_aadlinteger();

                    state._fsp--;
                    if (state.failed) return rv;
                    d2=(Token)match(input,DOTDOT,FOLLOW_DOTDOT_in_numeric_range_term26985); if (state.failed) return rv;
                    if ( state.backtracking==0 ) {

                      			rv = Aadl2F.createRangeValue();
                      			rv.setLocationReference(this.getFilename(), d2.getLine());
                      			rv.setMinimum(lowerint);
                      		
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10396:3: (upperint= signed_aadlinteger | crx2= signed_property_name_constant_reference )
                    int alt573=2;
                    switch ( input.LA(1) ) {
                    case PLUS:
                        {
                        int LA573_1 = input.LA(2);

                        if ( (LA573_1==INTEGER_LIT) ) {
                            alt573=1;
                        }
                        else if ( (LA573_1==IDENT) ) {
                            alt573=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 573, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case MINUS:
                        {
                        int LA573_2 = input.LA(2);

                        if ( (LA573_2==INTEGER_LIT) ) {
                            alt573=1;
                        }
                        else if ( (LA573_2==IDENT) ) {
                            alt573=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 573, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case INTEGER_LIT:
                        {
                        alt573=1;
                        }
                        break;
                    case IDENT:
                        {
                        alt573=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return rv;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 573, 0, input);

                        throw nvae;
                    }

                    switch (alt573) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10396:4: upperint= signed_aadlinteger
                            {
                            pushFollow(FOLLOW_signed_aadlinteger_in_numeric_range_term26996);
                            upperint=signed_aadlinteger();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              				rv.setMaximum(upperint);
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10400:5: crx2= signed_property_name_constant_reference
                            {
                            pushFollow(FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27009);
                            crx2=signed_property_name_constant_reference();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              			 crx2.setReferencingObject(rv);
                              			 crx2.setReferenceType(ParserReferenceType.UpperBoundPropertyConstantReference);
                              			 unresolvedReferences.add(crx2);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10413:2: crm= signed_property_name_constant_reference d3= DOTDOT (upperreal= signed_aadlreal | upperint= signed_aadlinteger | crx= signed_property_name_constant_reference )
                    {
                    pushFollow(FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27031);
                    crm=signed_property_name_constant_reference();

                    state._fsp--;
                    if (state.failed) return rv;
                    d3=(Token)match(input,DOTDOT,FOLLOW_DOTDOT_in_numeric_range_term27035); if (state.failed) return rv;
                    if ( state.backtracking==0 ) {

                      	     rv.setLocationReference(this.getFilename(), d3.getLine());
                      	     crm.setReferencingObject(rv);
                      	     crm.setReferenceType(ParserReferenceType.LowerBoundPropertyConstantReference);
                      	     unresolvedReferences.add(crm);
                      	   
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10420:3: (upperreal= signed_aadlreal | upperint= signed_aadlinteger | crx= signed_property_name_constant_reference )
                    int alt574=3;
                    switch ( input.LA(1) ) {
                    case PLUS:
                        {
                        switch ( input.LA(2) ) {
                        case REAL_LIT:
                            {
                            alt574=1;
                            }
                            break;
                        case INTEGER_LIT:
                            {
                            alt574=2;
                            }
                            break;
                        case IDENT:
                            {
                            alt574=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 574, 1, input);

                            throw nvae;
                        }

                        }
                        break;
                    case MINUS:
                        {
                        switch ( input.LA(2) ) {
                        case REAL_LIT:
                            {
                            alt574=1;
                            }
                            break;
                        case INTEGER_LIT:
                            {
                            alt574=2;
                            }
                            break;
                        case IDENT:
                            {
                            alt574=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 574, 2, input);

                            throw nvae;
                        }

                        }
                        break;
                    case REAL_LIT:
                        {
                        alt574=1;
                        }
                        break;
                    case INTEGER_LIT:
                        {
                        alt574=2;
                        }
                        break;
                    case IDENT:
                        {
                        alt574=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return rv;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 574, 0, input);

                        throw nvae;
                    }

                    switch (alt574) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10420:4: upperreal= signed_aadlreal
                            {
                            pushFollow(FOLLOW_signed_aadlreal_in_numeric_range_term27048);
                            upperreal=signed_aadlreal();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              				rv.setMaximum(upperreal);
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10424:4: upperint= signed_aadlinteger
                            {
                            pushFollow(FOLLOW_signed_aadlinteger_in_numeric_range_term27060);
                            upperint=signed_aadlinteger();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              				rv.setMaximum(upperint);
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10429:3: crx= signed_property_name_constant_reference
                            {
                            pushFollow(FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27075);
                            crx=signed_property_name_constant_reference();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              			 crx.setReferencingObject(rv);
                              			 crx.setReferenceType(ParserReferenceType.UpperBoundPropertyConstantReference);
                              			 unresolvedReferences.add(crx);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10437:2: ( DELTA (incrint= signed_aadlinteger | incrreal= signed_aadlreal | crd= signed_property_name_constant_reference ) )?
            int alt577=2;
            int LA577_0 = input.LA(1);

            if ( (LA577_0==DELTA) ) {
                alt577=1;
            }
            switch (alt577) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10437:3: DELTA (incrint= signed_aadlinteger | incrreal= signed_aadlreal | crd= signed_property_name_constant_reference )
                    {
                    match(input,DELTA,FOLLOW_DELTA_in_numeric_range_term27091); if (state.failed) return rv;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10438:3: (incrint= signed_aadlinteger | incrreal= signed_aadlreal | crd= signed_property_name_constant_reference )
                    int alt576=3;
                    switch ( input.LA(1) ) {
                    case PLUS:
                        {
                        switch ( input.LA(2) ) {
                        case INTEGER_LIT:
                            {
                            alt576=1;
                            }
                            break;
                        case REAL_LIT:
                            {
                            alt576=2;
                            }
                            break;
                        case IDENT:
                            {
                            alt576=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 576, 1, input);

                            throw nvae;
                        }

                        }
                        break;
                    case MINUS:
                        {
                        switch ( input.LA(2) ) {
                        case INTEGER_LIT:
                            {
                            alt576=1;
                            }
                            break;
                        case REAL_LIT:
                            {
                            alt576=2;
                            }
                            break;
                        case IDENT:
                            {
                            alt576=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return rv;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 576, 2, input);

                            throw nvae;
                        }

                        }
                        break;
                    case INTEGER_LIT:
                        {
                        alt576=1;
                        }
                        break;
                    case REAL_LIT:
                        {
                        alt576=2;
                        }
                        break;
                    case IDENT:
                        {
                        alt576=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return rv;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 576, 0, input);

                        throw nvae;
                    }

                    switch (alt576) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10438:4: incrint= signed_aadlinteger
                            {
                            pushFollow(FOLLOW_signed_aadlinteger_in_numeric_range_term27099);
                            incrint=signed_aadlinteger();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              				rv.setDelta(incrint);
                              			
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10442:4: incrreal= signed_aadlreal
                            {
                            pushFollow(FOLLOW_signed_aadlreal_in_numeric_range_term27111);
                            incrreal=signed_aadlreal();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              				rv.setDelta(incrreal);
                              			
                            }

                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10447:3: crd= signed_property_name_constant_reference
                            {
                            pushFollow(FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27126);
                            crd=signed_property_name_constant_reference();

                            state._fsp--;
                            if (state.failed) return rv;
                            if ( state.backtracking==0 ) {

                              			 crd.setReferencingObject(rv);
                              			 crd.setReferenceType(ParserReferenceType.DeltaPropertyConstantReference);
                              			 unresolvedReferences.add(crd);
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rv;
    }
    // $ANTLR end "numeric_range_term"


    // $ANTLR start "signed_property_name_constant_reference"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10457:1: signed_property_name_constant_reference returns [ReferenceRecord rr] : ( '+' | '-' )? si= property_name_constant_reference ;
    public final ReferenceRecord signed_property_name_constant_reference() throws RecognitionException {
        ReferenceRecord rr = null;

        ReferenceRecord si = null;



        		String sign="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10461:2: ( ( '+' | '-' )? si= property_name_constant_reference )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10462:2: ( '+' | '-' )? si= property_name_constant_reference
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10462:2: ( '+' | '-' )?
            int alt578=3;
            int LA578_0 = input.LA(1);

            if ( (LA578_0==PLUS) ) {
                alt578=1;
            }
            else if ( (LA578_0==MINUS) ) {
                alt578=2;
            }
            switch (alt578) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10462:3: '+'
                    {
                    match(input,PLUS,FOLLOW_PLUS_in_signed_property_name_constant_reference27162); if (state.failed) return rr;
                    if ( state.backtracking==0 ) {

                      			sign="+";
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10466:4: '-'
                    {
                    match(input,MINUS,FOLLOW_MINUS_in_signed_property_name_constant_reference27171); if (state.failed) return rr;
                    if ( state.backtracking==0 ) {

                      			sign="-";
                      		
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_property_name_constant_reference_in_signed_property_name_constant_reference27184);
            si=property_name_constant_reference();

            state._fsp--;
            if (state.failed) return rr;
            if ( state.backtracking==0 ) {

              		    if (sign.length() > 0){
              		      String[] labels = si.getLabels();
              		      String [] nlabels = new String [labels.length+1];
              		      nlabels[0]=sign;
              		      for (int i=0; i<labels.length;i++)
              		        nlabels[i+1] = labels[i];
              		      si.setLabels(nlabels);
              		    }
              		    rr = si;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rr;
    }
    // $ANTLR end "signed_property_name_constant_reference"


    // $ANTLR start "property_constant_or_namelike_literal"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10526:1: property_constant_or_namelike_literal[Element refObj] : ( ( '+' ) | ( '-' ) )? (pct= property_constant_term ) ;
    public final void property_constant_or_namelike_literal(Element refObj) throws RecognitionException {
        ReferenceRecord pct = null;



        		String sign="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10530:2: ( ( ( '+' ) | ( '-' ) )? (pct= property_constant_term ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10531:2: ( ( '+' ) | ( '-' ) )? (pct= property_constant_term )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10531:2: ( ( '+' ) | ( '-' ) )?
            int alt579=3;
            int LA579_0 = input.LA(1);

            if ( (LA579_0==PLUS) ) {
                alt579=1;
            }
            else if ( (LA579_0==MINUS) ) {
                alt579=2;
            }
            switch (alt579) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10532:3: ( '+' )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10532:3: ( '+' )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10532:4: '+'
                    {
                    match(input,PLUS,FOLLOW_PLUS_in_property_constant_or_namelike_literal27258); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				sign="+";
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10538:3: ( '-' )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10538:3: ( '-' )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10538:4: '-'
                    {
                    match(input,MINUS,FOLLOW_MINUS_in_property_constant_or_namelike_literal27276); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                      				sign="-";
                      			
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10545:2: (pct= property_constant_term )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10545:3: pct= property_constant_term
            {
            pushFollow(FOLLOW_property_constant_term_in_property_constant_or_namelike_literal27298);
            pct=property_constant_term();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

              		  if (sign.length() >0){
              		    String[] labels = pct.getLabels();
              		    String[] nlabels = new String[labels.length+1];
              		    nlabels[0] = sign;
              		    for (int i=0;i<labels.length;i++)
              		      nlabels[i+1] = labels[i];
              		    pct.setLabels(nlabels);
              		  } 
              		  
              		  if (pct.getLabels().length>1 || sign.length() > 0) {
              		    //containes a property set designator or a sign so it 
              		    // either be a constant or a property
                      pct.setReferenceType(ParserReferenceType.PropertyOrConstantReference);
              		  } else {
              		    // without property set designator or sign
              		    // it can be any thing: constant, property or enumeration literal
                      pct.setReferenceType(ParserReferenceType.EnumerationLiteralOrPropertyOrConstantReference);
              		  }
              		  pct.setReferencingObject(refObj);
              		  unresolvedReferences.add(pct);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "property_constant_or_namelike_literal"


    // $ANTLR start "string_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10571:1: string_term returns [PropertyExpression st] : ( (sl= STRING_LITERAL ) ) ;
    public final PropertyExpression string_term() throws RecognitionException {
        PropertyExpression st = null;

        Token sl=null;


        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10574:2: ( ( (sl= STRING_LITERAL ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10575:2: ( (sl= STRING_LITERAL ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10575:2: ( (sl= STRING_LITERAL ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10576:3: (sl= STRING_LITERAL )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10576:3: (sl= STRING_LITERAL )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10576:4: sl= STRING_LITERAL
            {
            sl=(Token)match(input,STRING_LITERAL,FOLLOW_STRING_LITERAL_in_string_term27335); if (state.failed) return st;
            if ( state.backtracking==0 ) {

              				StringLiteral slit= Aadl2F.createStringLiteral();
              				slit.setLocationReference(this.getFilename(), sl.getLine());
              				String str = sl.getText();
              				// stripout the quotes
              				str = str.substring(1,str.length()-1);
              				slit.setValue(str);
              				st=slit;
              			
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return st;
    }
    // $ANTLR end "string_term"


    // $ANTLR start "integer_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10598:1: integer_term returns [PropertyExpression it] : ic= signed_aadlinteger ;
    public final PropertyExpression integer_term() throws RecognitionException {
        PropertyExpression it = null;

        IntegerLiteral ic = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10601:2: (ic= signed_aadlinteger )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10603:2: ic= signed_aadlinteger
            {
            pushFollow(FOLLOW_signed_aadlinteger_in_integer_term27383);
            ic=signed_aadlinteger();

            state._fsp--;
            if (state.failed) return it;
            if ( state.backtracking==0 ) {

              			it = ic;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return it;
    }
    // $ANTLR end "integer_term"


    // $ANTLR start "real_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10609:1: real_term returns [PropertyExpression rt] : sc= signed_aadlreal ;
    public final PropertyExpression real_term() throws RecognitionException {
        PropertyExpression rt = null;

        RealLiteral sc = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10612:2: (sc= signed_aadlreal )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10614:2: sc= signed_aadlreal
            {
            pushFollow(FOLLOW_signed_aadlreal_in_real_term27413);
            sc=signed_aadlreal();

            state._fsp--;
            if (state.failed) return rt;
            if ( state.backtracking==0 ) {

              			rt = sc;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "real_term"


    // $ANTLR start "boolean_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10621:1: boolean_term returns [PropertyExpression bt] : (at= or_term ) ;
    public final PropertyExpression boolean_term() throws RecognitionException {
        PropertyExpression bt = null;

        PropertyExpression at = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10624:2: ( (at= or_term ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10625:2: (at= or_term )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10625:2: (at= or_term )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10625:3: at= or_term
            {
            pushFollow(FOLLOW_or_term_in_boolean_term27443);
            at=or_term();

            state._fsp--;
            if (state.failed) return bt;
            if ( state.backtracking==0 ) {

              			bt=at;
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return bt;
    }
    // $ANTLR end "boolean_term"


    // $ANTLR start "and_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10633:1: and_term returns [PropertyExpression ae] : (oe= boolean_atom (andtoken= AND oe1= boolean_atom )* ) ;
    public final PropertyExpression and_term() throws RecognitionException {
        PropertyExpression ae = null;

        Token andtoken=null;
        PropertyExpression oe = null;

        PropertyExpression oe1 = null;



        		PropertyExpression tae=null;
        		Operation op=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10638:2: ( (oe= boolean_atom (andtoken= AND oe1= boolean_atom )* ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10639:2: (oe= boolean_atom (andtoken= AND oe1= boolean_atom )* )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10639:2: (oe= boolean_atom (andtoken= AND oe1= boolean_atom )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10639:3: oe= boolean_atom (andtoken= AND oe1= boolean_atom )*
            {
            pushFollow(FOLLOW_boolean_atom_in_and_term27480);
            oe=boolean_atom();

            state._fsp--;
            if (state.failed) return ae;
            if ( state.backtracking==0 ) {

              			tae=oe;
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10643:3: (andtoken= AND oe1= boolean_atom )*
            loop580:
            do {
                int alt580=2;
                int LA580_0 = input.LA(1);

                if ( (LA580_0==AND) ) {
                    int LA580_2 = input.LA(2);

                    if ( (synpred897_Aadl2()) ) {
                        alt580=1;
                    }


                }


                switch (alt580) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10643:4: andtoken= AND oe1= boolean_atom
            	    {
            	    andtoken=(Token)match(input,AND,FOLLOW_AND_in_and_term27491); if (state.failed) return ae;
            	    pushFollow(FOLLOW_boolean_atom_in_and_term27496);
            	    oe1=boolean_atom();

            	    state._fsp--;
            	    if (state.failed) return ae;
            	    if ( state.backtracking==0 ) {

            	      				if (op ==null){
            	      					op=Aadl2F.createOperation();
            	      					op.setLocationReference(this.getFilename(),andtoken.getLine());
            	      					op.setOp(OperationKind.AND);
            	      					op.getOwnedPropertyExpressions().add(oe);
            	      					tae=op;
            	      				}
            	      				op.getOwnedPropertyExpressions().add(oe1);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop580;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              			ae=tae;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ae;
    }
    // $ANTLR end "and_term"


    // $ANTLR start "or_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10661:1: or_term returns [PropertyExpression oe] : (at= and_term (ortoken= OR at1= and_term )* ) ;
    public final PropertyExpression or_term() throws RecognitionException {
        PropertyExpression oe = null;

        Token ortoken=null;
        PropertyExpression at = null;

        PropertyExpression at1 = null;



        		oe=null;
        		PropertyExpression toe=null;
        		Operation op = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10667:2: ( (at= and_term (ortoken= OR at1= and_term )* ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10668:2: (at= and_term (ortoken= OR at1= and_term )* )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10668:2: (at= and_term (ortoken= OR at1= and_term )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10668:3: at= and_term (ortoken= OR at1= and_term )*
            {
            pushFollow(FOLLOW_and_term_in_or_term27539);
            at=and_term();

            state._fsp--;
            if (state.failed) return oe;
            if ( state.backtracking==0 ) {

              			toe=at;
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10672:3: (ortoken= OR at1= and_term )*
            loop581:
            do {
                int alt581=2;
                int LA581_0 = input.LA(1);

                if ( (LA581_0==OR) ) {
                    int LA581_2 = input.LA(2);

                    if ( (synpred898_Aadl2()) ) {
                        alt581=1;
                    }


                }


                switch (alt581) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10672:4: ortoken= OR at1= and_term
            	    {
            	    ortoken=(Token)match(input,OR,FOLLOW_OR_in_or_term27550); if (state.failed) return oe;
            	    pushFollow(FOLLOW_and_term_in_or_term27554);
            	    at1=and_term();

            	    state._fsp--;
            	    if (state.failed) return oe;
            	    if ( state.backtracking==0 ) {

            	      				if (op == null){
            	      					op=Aadl2F.createOperation();
            	      					op.setLocationReference(this.getFilename(),ortoken.getLine());
            	      					op.setOp(OperationKind.OR);
            	      					op.getOwnedPropertyExpressions().add(at);
            	      					toe=op;
            	      				}
            	      				op.getOwnedPropertyExpressions().add(at1);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop581;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              			oe=toe;
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return oe;
    }
    // $ANTLR end "or_term"


    // $ANTLR start "boolean_atom"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10690:1: boolean_atom returns [PropertyExpression ba] : ( TRUE | FALSE | NOT bt1= boolean_term | pct= property_constant_term | LPAREN bt1= boolean_term RPAREN );
    public final PropertyExpression boolean_atom() throws RecognitionException {
        PropertyExpression ba = null;

        PropertyExpression bt1 = null;

        ReferenceRecord pct = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10693:2: ( TRUE | FALSE | NOT bt1= boolean_term | pct= property_constant_term | LPAREN bt1= boolean_term RPAREN )
            int alt582=5;
            switch ( input.LA(1) ) {
            case TRUE:
                {
                alt582=1;
                }
                break;
            case FALSE:
                {
                alt582=2;
                }
                break;
            case NOT:
                {
                alt582=3;
                }
                break;
            case IDENT:
                {
                alt582=4;
                }
                break;
            case LPAREN:
                {
                alt582=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ba;}
                NoViableAltException nvae =
                    new NoViableAltException("", 582, 0, input);

                throw nvae;
            }

            switch (alt582) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10694:2: TRUE
                    {
                    match(input,TRUE,FOLLOW_TRUE_in_boolean_atom27593); if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      		//XXX: Location
                      			BooleanLiteral bl = Aadl2F.createBooleanLiteral();
                      			bl.setValue(true);
                      			ba = bl;
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10701:4: FALSE
                    {
                    match(input,FALSE,FOLLOW_FALSE_in_boolean_atom27602); if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      		//XXX: Location
                      			BooleanLiteral bl = Aadl2F.createBooleanLiteral();
                      			bl.setValue(false);
                      			ba = bl;
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10708:4: NOT bt1= boolean_term
                    {
                    match(input,NOT,FOLLOW_NOT_in_boolean_atom27611); if (state.failed) return ba;
                    pushFollow(FOLLOW_boolean_term_in_boolean_atom27615);
                    bt1=boolean_term();

                    state._fsp--;
                    if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      		//XXX: Location
                      			Operation op = Aadl2F.createOperation();
                      			op.setOp(OperationKind.NOT);
                      			op.getOwnedPropertyExpressions().add(bt1);
                      			ba=op;
                      		
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10716:4: pct= property_constant_term
                    {
                    pushFollow(FOLLOW_property_constant_term_in_boolean_atom27626);
                    pct=property_constant_term();

                    state._fsp--;
                    if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      		//XXX: Location
                      			ConstantValue cv = Aadl2F.createConstantValue();
                      			pct.setReferencingObject(cv);
                      			if (pct.getLabels().length > 1) {
                      			  pct.setReferenceType(ParserReferenceType.BooleanOrConstantPropertyOrConstantReference);
                      			} else {
                      			  pct.setReferenceType(ParserReferenceType.BooleanOrConstantEnumerationLiteralOrPropertyOrConstantReference);
                      			}
                      			unresolvedReferences.add(pct);
                      			ba = cv;
                      		
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10730:4: LPAREN bt1= boolean_term RPAREN
                    {
                    match(input,LPAREN,FOLLOW_LPAREN_in_boolean_atom27637); if (state.failed) return ba;
                    pushFollow(FOLLOW_boolean_term_in_boolean_atom27641);
                    bt1=boolean_term();

                    state._fsp--;
                    if (state.failed) return ba;
                    match(input,RPAREN,FOLLOW_RPAREN_in_boolean_atom27643); if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      			ba = bt1;

                      		
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ba;
    }
    // $ANTLR end "boolean_atom"


    // $ANTLR start "property_constant_term"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10737:1: property_constant_term returns [ReferenceRecord nr] : ( (psid= IDENT DOUBLECOLON id= IDENT ) | (id= IDENT ) ) ;
    public final ReferenceRecord property_constant_term() throws RecognitionException {
        ReferenceRecord nr = null;

        Token psid=null;
        Token id=null;


        		String ps="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10741:2: ( ( (psid= IDENT DOUBLECOLON id= IDENT ) | (id= IDENT ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10742:2: ( (psid= IDENT DOUBLECOLON id= IDENT ) | (id= IDENT ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10742:2: ( (psid= IDENT DOUBLECOLON id= IDENT ) | (id= IDENT ) )
            int alt583=2;
            int LA583_0 = input.LA(1);

            if ( (LA583_0==IDENT) ) {
                int LA583_1 = input.LA(2);

                if ( (LA583_1==DOUBLECOLON) ) {
                    alt583=1;
                }
                else if ( (LA583_1==EOF||(LA583_1>=COMMA && LA583_1<=SEMI)||LA583_1==RPAREN||LA583_1==IN||LA583_1==APPLIES||LA583_1==AND||LA583_1==OR) ) {
                    alt583=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return nr;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 583, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return nr;}
                NoViableAltException nvae =
                    new NoViableAltException("", 583, 0, input);

                throw nvae;
            }
            switch (alt583) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10743:2: (psid= IDENT DOUBLECOLON id= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10743:2: (psid= IDENT DOUBLECOLON id= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10743:3: psid= IDENT DOUBLECOLON id= IDENT
                    {
                    psid=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_constant_term27675); if (state.failed) return nr;
                    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_property_constant_term27677); if (state.failed) return nr;
                    if ( state.backtracking==0 ) {

                      		  ps=psid.getText();
                      		
                    }
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_constant_term27687); if (state.failed) return nr;
                    if ( state.backtracking==0 ) {

                            if (ps.length() >0){
                              nr = new ReferenceRecord(new String[]{ps, id.getText()});
                            } else {
                              nr = new ReferenceRecord(new String[]{id.getText()});
                            }
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10757:2: (id= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10757:2: (id= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10758:2: id= IDENT
                    {
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_constant_term27707); if (state.failed) return nr;
                    if ( state.backtracking==0 ) {

                      		  if (ps.length() >0){
                      		    nr = new ReferenceRecord(new String[]{ps, id.getText()});
                      		  } else {
                      		    nr = new ReferenceRecord(new String[]{id.getText()});
                      		  }
                      		
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return nr;
    }
    // $ANTLR end "property_constant_term"


    // $ANTLR start "contained_property_association"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11043:1: contained_property_association returns [PropertyAssociation pa] : nr= property_name_reference (ap= ASSIGNPLUS | a= ASSIGN ) ( CONSTANT )? ( modal_property_value[pa] ) ( APPLIES TO contained_model_element_path[cne] ( COMMA contained_model_element_path[cne] )* )? (ib= in_binding[pa] )? SEMI ;
    public final PropertyAssociation contained_property_association() throws RecognitionException {
        PropertyAssociation pa = null;

        Token ap=null;
        Token a=null;
        ReferenceRecord nr = null;



            pa = Aadl2F.createPropertyAssociation();
            boolean notContained=false;
            ContainedNamedElement cne=null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11049:3: (nr= property_name_reference (ap= ASSIGNPLUS | a= ASSIGN ) ( CONSTANT )? ( modal_property_value[pa] ) ( APPLIES TO contained_model_element_path[cne] ( COMMA contained_model_element_path[cne] )* )? (ib= in_binding[pa] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11050:3: nr= property_name_reference (ap= ASSIGNPLUS | a= ASSIGN ) ( CONSTANT )? ( modal_property_value[pa] ) ( APPLIES TO contained_model_element_path[cne] ( COMMA contained_model_element_path[cne] )* )? (ib= in_binding[pa] )? SEMI
            {
            if ( state.backtracking==0 ) {

                  processComments(pa);
                
            }
            pushFollow(FOLLOW_property_name_reference_in_contained_property_association28029);
            nr=property_name_reference();

            state._fsp--;
            if (state.failed) return pa;
            if ( state.backtracking==0 ) {

                    nr.setReferencingObject(pa);
                    nr.setReferenceType(ParserReferenceType.PropertyDefinitionReference);
                    unresolvedReferences.add(nr);
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11059:3: (ap= ASSIGNPLUS | a= ASSIGN )
            int alt584=2;
            int LA584_0 = input.LA(1);

            if ( (LA584_0==ASSIGNPLUS) ) {
                alt584=1;
            }
            else if ( (LA584_0==ASSIGN) ) {
                alt584=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pa;}
                NoViableAltException nvae =
                    new NoViableAltException("", 584, 0, input);

                throw nvae;
            }
            switch (alt584) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11059:4: ap= ASSIGNPLUS
                    {
                    ap=(Token)match(input,ASSIGNPLUS,FOLLOW_ASSIGNPLUS_in_contained_property_association28042); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                            notContained=true;
                            pa.setAppend(true);
                            pa.setLocationReference(this.getFilename(), ap.getLine());
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11065:4: a= ASSIGN
                    {
                    a=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_contained_property_association28055); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                        		pa.setLocationReference(this.getFilename(), a.getLine());
                        	
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11070:3: ( CONSTANT )?
            int alt585=2;
            int LA585_0 = input.LA(1);

            if ( (LA585_0==CONSTANT) ) {
                alt585=1;
            }
            switch (alt585) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11070:4: CONSTANT
                    {
                    match(input,CONSTANT,FOLLOW_CONSTANT_in_contained_property_association28069); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                            pa.setConstant(true);
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11075:3: ( modal_property_value[pa] )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11075:4: modal_property_value[pa]
            {
            pushFollow(FOLLOW_modal_property_value_in_contained_property_association28085);
            modal_property_value(pa);

            state._fsp--;
            if (state.failed) return pa;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11077:3: ( APPLIES TO contained_model_element_path[cne] ( COMMA contained_model_element_path[cne] )* )?
            int alt587=2;
            int LA587_0 = input.LA(1);

            if ( (LA587_0==APPLIES) ) {
                alt587=1;
            }
            switch (alt587) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11077:4: APPLIES TO contained_model_element_path[cne] ( COMMA contained_model_element_path[cne] )*
                    {
                    match(input,APPLIES,FOLLOW_APPLIES_in_contained_property_association28095); if (state.failed) return pa;
                    match(input,TO,FOLLOW_TO_in_contained_property_association28097); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                            if (notContained){
                                  throw new FailedPredicateException(input, "property association", "contained property association cannot have an append");
                            }    
                          
                    }
                    if ( state.backtracking==0 ) {

                          cne = Aadl2F.createContainedNamedElement();
                        
                    }
                    pushFollow(FOLLOW_contained_model_element_path_in_contained_property_association28111);
                    contained_model_element_path(cne);

                    state._fsp--;
                    if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                            pa.getAppliesTos().add(cne);
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11090:3: ( COMMA contained_model_element_path[cne] )*
                    loop586:
                    do {
                        int alt586=2;
                        int LA586_0 = input.LA(1);

                        if ( (LA586_0==COMMA) ) {
                            alt586=1;
                        }


                        switch (alt586) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11091:5: COMMA contained_model_element_path[cne]
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	            cne = Aadl2F.createContainedNamedElement();     
                    	          
                    	    }
                    	    match(input,COMMA,FOLLOW_COMMA_in_contained_property_association28134); if (state.failed) return pa;
                    	    pushFollow(FOLLOW_contained_model_element_path_in_contained_property_association28136);
                    	    contained_model_element_path(cne);

                    	    state._fsp--;
                    	    if (state.failed) return pa;
                    	    if ( state.backtracking==0 ) {

                    	            pa.getAppliesTos().add(cne);
                    	          
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop586;
                        }
                    } while (true);


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11100:3: (ib= in_binding[pa] )?
            int alt588=2;
            int LA588_0 = input.LA(1);

            if ( (LA588_0==IN) ) {
                alt588=1;
            }
            switch (alt588) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11100:4: ib= in_binding[pa]
                    {
                    pushFollow(FOLLOW_in_binding_in_contained_property_association28161);
                    in_binding(pa);

                    state._fsp--;
                    if (state.failed) return pa;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_contained_property_association28171); if (state.failed) return pa;

            }

        }
        catch (RecognitionException ex) {

                  reportError(ex);
                  consumeUntil(input,SEMI);
                  input.consume();
               
        }
        finally {
        }
        return pa;
    }
    // $ANTLR end "contained_property_association"


    // $ANTLR start "property_association"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11110:1: property_association returns [PropertyAssociation pa] : nr= property_name_reference (ap= ASSIGNPLUS | a= ASSIGN ) ( CONSTANT )? modal_property_value[pa] (ib= in_binding[pa] )? SEMI ;
    public final PropertyAssociation property_association() throws RecognitionException {
        PropertyAssociation pa = null;

        Token ap=null;
        Token a=null;
        ReferenceRecord nr = null;



            pa = Aadl2F.createPropertyAssociation();
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11114:3: (nr= property_name_reference (ap= ASSIGNPLUS | a= ASSIGN ) ( CONSTANT )? modal_property_value[pa] (ib= in_binding[pa] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11115:3: nr= property_name_reference (ap= ASSIGNPLUS | a= ASSIGN ) ( CONSTANT )? modal_property_value[pa] (ib= in_binding[pa] )? SEMI
            {
            if ( state.backtracking==0 ) {

                  processComments(pa);
                
            }
            pushFollow(FOLLOW_property_name_reference_in_property_association28211);
            nr=property_name_reference();

            state._fsp--;
            if (state.failed) return pa;
            if ( state.backtracking==0 ) {

                    nr.setReferencingObject(pa);
                    nr.setReferenceType(ParserReferenceType.PropertyDefinitionReference);
                    unresolvedReferences.add(nr);
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11124:3: (ap= ASSIGNPLUS | a= ASSIGN )
            int alt589=2;
            int LA589_0 = input.LA(1);

            if ( (LA589_0==ASSIGNPLUS) ) {
                alt589=1;
            }
            else if ( (LA589_0==ASSIGN) ) {
                alt589=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pa;}
                NoViableAltException nvae =
                    new NoViableAltException("", 589, 0, input);

                throw nvae;
            }
            switch (alt589) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11124:4: ap= ASSIGNPLUS
                    {
                    ap=(Token)match(input,ASSIGNPLUS,FOLLOW_ASSIGNPLUS_in_property_association28224); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                            pa.setAppend(true);
                            pa.setLocationReference(this.getFilename(), ap.getLine());
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11129:4: a= ASSIGN
                    {
                    a=(Token)match(input,ASSIGN,FOLLOW_ASSIGN_in_property_association28237); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                        		pa.setLocationReference(this.getFilename(), a.getLine());
                        	
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11134:3: ( CONSTANT )?
            int alt590=2;
            int LA590_0 = input.LA(1);

            if ( (LA590_0==CONSTANT) ) {
                alt590=1;
            }
            switch (alt590) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11134:4: CONSTANT
                    {
                    match(input,CONSTANT,FOLLOW_CONSTANT_in_property_association28251); if (state.failed) return pa;
                    if ( state.backtracking==0 ) {

                            pa.setConstant(true);
                          
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_modal_property_value_in_property_association28266);
            modal_property_value(pa);

            state._fsp--;
            if (state.failed) return pa;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11140:3: (ib= in_binding[pa] )?
            int alt591=2;
            int LA591_0 = input.LA(1);

            if ( (LA591_0==IN) ) {
                alt591=1;
            }
            switch (alt591) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11140:4: ib= in_binding[pa]
                    {
                    pushFollow(FOLLOW_in_binding_in_property_association28274);
                    in_binding(pa);

                    state._fsp--;
                    if (state.failed) return pa;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_property_association28284); if (state.failed) return pa;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pa;
    }
    // $ANTLR end "property_association"


    // $ANTLR start "in_binding"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11145:1: in_binding[PropertyAssociation pa] : IN BINDING LPAREN (cr= classifier_reference ( COMMA cr1= classifier_reference )* ) RPAREN ;
    public final void in_binding(PropertyAssociation pa) throws RecognitionException {
        ReferenceRecord cr = null;

        ReferenceRecord cr1 = null;




        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11148:1: ( IN BINDING LPAREN (cr= classifier_reference ( COMMA cr1= classifier_reference )* ) RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11149:1: IN BINDING LPAREN (cr= classifier_reference ( COMMA cr1= classifier_reference )* ) RPAREN
            {
            match(input,IN,FOLLOW_IN_in_in_binding28303); if (state.failed) return ;
            match(input,BINDING,FOLLOW_BINDING_in_in_binding28305); if (state.failed) return ;
            match(input,LPAREN,FOLLOW_LPAREN_in_in_binding28307); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11150:1: (cr= classifier_reference ( COMMA cr1= classifier_reference )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11150:2: cr= classifier_reference ( COMMA cr1= classifier_reference )*
            {
            pushFollow(FOLLOW_classifier_reference_in_in_binding28312);
            cr=classifier_reference();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {

                  cr.setReferencingObject(pa);
                  cr.setReferenceType(ParserReferenceType.PropertyAssociationInBindingReference);
                  unresolvedReferences.add(cr);
                
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11156:3: ( COMMA cr1= classifier_reference )*
            loop592:
            do {
                int alt592=2;
                int LA592_0 = input.LA(1);

                if ( (LA592_0==COMMA) ) {
                    alt592=1;
                }


                switch (alt592) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11156:4: COMMA cr1= classifier_reference
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_in_binding28321); if (state.failed) return ;
            	    pushFollow(FOLLOW_classifier_reference_in_in_binding28325);
            	    cr1=classifier_reference();

            	    state._fsp--;
            	    if (state.failed) return ;
            	    if ( state.backtracking==0 ) {

            	            cr1.setReferencingObject(pa);
            	            cr1.setReferenceType(ParserReferenceType.PropertyAssociationInBindingReference);
            	            unresolvedReferences.add(cr1);
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop592;
                }
            } while (true);


            }

            match(input,RPAREN,FOLLOW_RPAREN_in_in_binding28340); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "in_binding"


    // $ANTLR start "unique_property_identifier"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11229:1: unique_property_identifier returns [ReferenceRecord pr] : (psid= IDENT DOUBLECOLON )? pid= IDENT ;
    public final ReferenceRecord unique_property_identifier() throws RecognitionException {
        ReferenceRecord pr = null;

        Token psid=null;
        Token pid=null;


            pr = new ReferenceRecord();
            String pslabel="";
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11234:3: ( (psid= IDENT DOUBLECOLON )? pid= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11235:3: (psid= IDENT DOUBLECOLON )? pid= IDENT
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11235:3: (psid= IDENT DOUBLECOLON )?
            int alt593=2;
            int LA593_0 = input.LA(1);

            if ( (LA593_0==IDENT) ) {
                int LA593_1 = input.LA(2);

                if ( (LA593_1==DOUBLECOLON) ) {
                    alt593=1;
                }
            }
            switch (alt593) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11235:4: psid= IDENT DOUBLECOLON
                    {
                    psid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_property_identifier28434); if (state.failed) return pr;
                    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_unique_property_identifier28436); if (state.failed) return pr;
                    if ( state.backtracking==0 ) {

                            pslabel=psid.getText();
                          
                    }

                    }
                    break;

            }

            pid=(Token)match(input,IDENT,FOLLOW_IDENT_in_unique_property_identifier28453); if (state.failed) return pr;
            if ( state.backtracking==0 ) {

                    if (pslabel.length() > 0) {
                      pr.setLabels(new String[]{pslabel,pid.getText()});
                    } else {
                      pr.setLabels(new String[]{pid.getText()});
                    }
                  
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pr;
    }
    // $ANTLR end "unique_property_identifier"


    // $ANTLR start "property_name_reference"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11250:1: property_name_reference returns [ReferenceRecord pr] : ( (psid= IDENT DOUBLECOLON pid= IDENT ) | (pid= IDENT ) ) ;
    public final ReferenceRecord property_name_reference() throws RecognitionException {
        ReferenceRecord pr = null;

        Token psid=null;
        Token pid=null;


        	 String ps="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11254:2: ( ( (psid= IDENT DOUBLECOLON pid= IDENT ) | (pid= IDENT ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11255:2: ( (psid= IDENT DOUBLECOLON pid= IDENT ) | (pid= IDENT ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11255:2: ( (psid= IDENT DOUBLECOLON pid= IDENT ) | (pid= IDENT ) )
            int alt594=2;
            int LA594_0 = input.LA(1);

            if ( (LA594_0==IDENT) ) {
                int LA594_1 = input.LA(2);

                if ( (LA594_1==DOUBLECOLON) ) {
                    alt594=1;
                }
                else if ( (LA594_1==EOF||(LA594_1>=COMMA && LA594_1<=SEMI)||LA594_1==RPAREN||LA594_1==IN||LA594_1==ASSIGN||LA594_1==APPLIES||LA594_1==UNITS||LA594_1==DOTDOT||LA594_1==DELTA||LA594_1==ASSIGNPLUS) ) {
                    alt594=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return pr;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 594, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pr;}
                NoViableAltException nvae =
                    new NoViableAltException("", 594, 0, input);

                throw nvae;
            }
            switch (alt594) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11256:2: (psid= IDENT DOUBLECOLON pid= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11256:2: (psid= IDENT DOUBLECOLON pid= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11256:4: psid= IDENT DOUBLECOLON pid= IDENT
                    {
                    psid=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_name_reference28488); if (state.failed) return pr;
                    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_property_name_reference28490); if (state.failed) return pr;
                    pid=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_name_reference28494); if (state.failed) return pr;
                    if ( state.backtracking==0 ) {

                              pr = new ReferenceRecord(new String[]{psid.getText(),pid.getText()});
                      		
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11261:3: (pid= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11261:3: (pid= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11261:4: pid= IDENT
                    {
                    pid=(Token)match(input,IDENT,FOLLOW_IDENT_in_property_name_reference28509); if (state.failed) return pr;
                    if ( state.backtracking==0 ) {

                      	    pr = new ReferenceRecord(new String[]{pid.getText()});
                      		
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pr;
    }
    // $ANTLR end "property_name_reference"


    // $ANTLR start "property_name_constant_reference"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11270:1: property_name_constant_reference returns [ReferenceRecord pr] : ppr= property_name_reference ;
    public final ReferenceRecord property_name_constant_reference() throws RecognitionException {
        ReferenceRecord pr = null;

        ReferenceRecord ppr = null;


         
        		//ParsedPropertyReference ppr;  
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11274:2: (ppr= property_name_reference )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11277:2: ppr= property_name_reference
            {
            pushFollow(FOLLOW_property_name_reference_in_property_name_constant_reference28550);
            ppr=property_name_reference();

            state._fsp--;
            if (state.failed) return pr;
            if ( state.backtracking==0 ) {

              			pr = ppr;
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pr;
    }
    // $ANTLR end "property_name_constant_reference"


    // $ANTLR start "component_category"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11635:1: component_category returns [ComponentCategory cat] : ( ABSTRACT | BUS | DATA | DEVICE | MEMORY | PROCESS | PROCESSOR | ( SUBPROGRAM GROUP ) | SUBPROGRAM | SYSTEM | ( THREAD GROUP ) | THREAD | ( VIRTUAL BUS ) | ( VIRTUAL PROCESSOR ) );
    public final ComponentCategory component_category() throws RecognitionException {
        ComponentCategory cat = null;


        		cat = null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11638:3: ( ABSTRACT | BUS | DATA | DEVICE | MEMORY | PROCESS | PROCESSOR | ( SUBPROGRAM GROUP ) | SUBPROGRAM | SYSTEM | ( THREAD GROUP ) | THREAD | ( VIRTUAL BUS ) | ( VIRTUAL PROCESSOR ) )
            int alt595=14;
            alt595 = dfa595.predict(input);
            switch (alt595) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11639:2: ABSTRACT
                    {
                    match(input,ABSTRACT,FOLLOW_ABSTRACT_in_component_category28934); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.ABSTRACT;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11640:7: BUS
                    {
                    match(input,BUS,FOLLOW_BUS_in_component_category28944); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.BUS; 
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11641:7: DATA
                    {
                    match(input,DATA,FOLLOW_DATA_in_component_category28954); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.DATA; 
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11642:7: DEVICE
                    {
                    match(input,DEVICE,FOLLOW_DEVICE_in_component_category28964); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.DEVICE; 
                    }

                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11643:7: MEMORY
                    {
                    match(input,MEMORY,FOLLOW_MEMORY_in_component_category28974); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.MEMORY; 
                    }

                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11644:7: PROCESS
                    {
                    match(input,PROCESS,FOLLOW_PROCESS_in_component_category28984); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.PROCESS; 
                    }

                    }
                    break;
                case 7 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11645:7: PROCESSOR
                    {
                    match(input,PROCESSOR,FOLLOW_PROCESSOR_in_component_category28994); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.PROCESSOR; 
                    }

                    }
                    break;
                case 8 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11646:6: ( SUBPROGRAM GROUP )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11646:6: ( SUBPROGRAM GROUP )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11646:8: SUBPROGRAM GROUP
                    {
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_component_category29005); if (state.failed) return cat;
                    match(input,GROUP,FOLLOW_GROUP_in_component_category29007); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.SUBPROGRAM_GROUP; 
                    }

                    }


                    }
                    break;
                case 9 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11647:7: SUBPROGRAM
                    {
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_component_category29018); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.SUBPROGRAM; 
                    }

                    }
                    break;
                case 10 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11648:7: SYSTEM
                    {
                    match(input,SYSTEM,FOLLOW_SYSTEM_in_component_category29028); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.SYSTEM; 
                    }

                    }
                    break;
                case 11 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11649:6: ( THREAD GROUP )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11649:6: ( THREAD GROUP )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11649:8: THREAD GROUP
                    {
                    match(input,THREAD,FOLLOW_THREAD_in_component_category29040); if (state.failed) return cat;
                    match(input,GROUP,FOLLOW_GROUP_in_component_category29042); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.THREAD_GROUP; 
                    }

                    }


                    }
                    break;
                case 12 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11650:7: THREAD
                    {
                    match(input,THREAD,FOLLOW_THREAD_in_component_category29053); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                       cat = ComponentCategory.THREAD; 
                    }

                    }
                    break;
                case 13 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11651:6: ( VIRTUAL BUS )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11651:6: ( VIRTUAL BUS )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11651:8: VIRTUAL BUS
                    {
                    match(input,VIRTUAL,FOLLOW_VIRTUAL_in_component_category29064); if (state.failed) return cat;
                    match(input,BUS,FOLLOW_BUS_in_component_category29066); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                      cat = ComponentCategory.VIRTUAL_BUS;
                    }

                    }


                    }
                    break;
                case 14 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11652:6: ( VIRTUAL PROCESSOR )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11652:6: ( VIRTUAL PROCESSOR )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11652:8: VIRTUAL PROCESSOR
                    {
                    match(input,VIRTUAL,FOLLOW_VIRTUAL_in_component_category29078); if (state.failed) return cat;
                    match(input,PROCESSOR,FOLLOW_PROCESSOR_in_component_category29080); if (state.failed) return cat;
                    if ( state.backtracking==0 ) {
                      cat = ComponentCategory.VIRTUAL_PROCESSOR;
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cat;
    }
    // $ANTLR end "component_category"


    // $ANTLR start "subprogram_call_sequence"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11693:1: subprogram_call_sequence returns [SubprogramCallSequence cs] : id= IDENT COLON LCURLY (spc= subprogram_call )+ RCURLY ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[cs] )? SEMI ;
    public final SubprogramCallSequence subprogram_call_sequence() throws RecognitionException {
        SubprogramCallSequence cs = null;

        Token id=null;
        CallSpecification spc = null;

        PropertyAssociation pa = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11696:2: (id= IDENT COLON LCURLY (spc= subprogram_call )+ RCURLY ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[cs] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11697:2: id= IDENT COLON LCURLY (spc= subprogram_call )+ RCURLY ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[cs] )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_call_sequence29143); if (state.failed) return cs;
            match(input,COLON,FOLLOW_COLON_in_subprogram_call_sequence29145); if (state.failed) return cs;
            if ( state.backtracking==0 ) {

              			cs = Aadl2F.createSubprogramCallSequence();
              			cs.setLocationReference(this.getFilename(), id.getLine());
              			cs.setName(id.getText());
              		
            }
            match(input,LCURLY,FOLLOW_LCURLY_in_subprogram_call_sequence29152); if (state.failed) return cs;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11704:2: (spc= subprogram_call )+
            int cnt596=0;
            loop596:
            do {
                int alt596=2;
                int LA596_0 = input.LA(1);

                if ( (LA596_0==IDENT) ) {
                    alt596=1;
                }


                switch (alt596) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11704:3: spc= subprogram_call
            	    {
            	    pushFollow(FOLLOW_subprogram_call_in_subprogram_call_sequence29158);
            	    spc=subprogram_call();

            	    state._fsp--;
            	    if (state.failed) return cs;
            	    if ( state.backtracking==0 ) {

            	      				cs.getOwnedCallSpecifications().add(spc);
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt596 >= 1 ) break loop596;
            	    if (state.backtracking>0) {state.failed=true; return cs;}
                        EarlyExitException eee =
                            new EarlyExitException(596, input);
                        throw eee;
                }
                cnt596++;
            } while (true);

            match(input,RCURLY,FOLLOW_RCURLY_in_subprogram_call_sequence29170); if (state.failed) return cs;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11710:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt598=2;
            int LA598_0 = input.LA(1);

            if ( (LA598_0==LCURLY) ) {
                alt598=1;
            }
            switch (alt598) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11710:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_subprogram_call_sequence29174); if (state.failed) return cs;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11711:3: (pa= property_association )+
                    int cnt597=0;
                    loop597:
                    do {
                        int alt597=2;
                        int LA597_0 = input.LA(1);

                        if ( (LA597_0==IDENT) ) {
                            alt597=1;
                        }


                        switch (alt597) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11711:4: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_subprogram_call_sequence29181);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return cs;
                    	    if ( state.backtracking==0 ) {

                    	      	     cs.getOwnedPropertyAssociations().add(pa);
                    	      	   
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt597 >= 1 ) break loop597;
                    	    if (state.backtracking>0) {state.failed=true; return cs;}
                                EarlyExitException eee =
                                    new EarlyExitException(597, input);
                                throw eee;
                        }
                        cnt597++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_subprogram_call_sequence29195); if (state.failed) return cs;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11718:3: ( in_modes[cs] )?
            int alt599=2;
            int LA599_0 = input.LA(1);

            if ( (LA599_0==IN) ) {
                alt599=1;
            }
            switch (alt599) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11718:4: in_modes[cs]
                    {
                    pushFollow(FOLLOW_in_modes_in_subprogram_call_sequence29204);
                    in_modes(cs);

                    state._fsp--;
                    if (state.failed) return cs;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_subprogram_call_sequence29213); if (state.failed) return cs;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cs;
    }
    // $ANTLR end "subprogram_call_sequence"


    // $ANTLR start "subprogram_call"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11723:1: subprogram_call returns [ CallSpecification sc] : id= IDENT COLON SUBPROGRAM cs= called_subprogram ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final CallSpecification subprogram_call() throws RecognitionException {
        CallSpecification sc = null;

        Token id=null;
        ReferenceRecord cs = null;

        PropertyAssociation pa = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11726:2: (id= IDENT COLON SUBPROGRAM cs= called_subprogram ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11727:2: id= IDENT COLON SUBPROGRAM cs= called_subprogram ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_call29235); if (state.failed) return sc;
            match(input,COLON,FOLLOW_COLON_in_subprogram_call29237); if (state.failed) return sc;
            match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_call29240); if (state.failed) return sc;
            pushFollow(FOLLOW_called_subprogram_in_subprogram_call29244);
            cs=called_subprogram();

            state._fsp--;
            if (state.failed) return sc;
            if ( state.backtracking==0 ) {

              		  if (cs.getReferenceType() == ParserReferenceType.ProcessorSubprogramCallReference){
              		    ProcessorCall pc = Aadl2F.createProcessorCall();
              		    pc.setSubprogramAccessName(cs.getLabels()[0]);
              		    sc = pc;
              		    sc.setName(id.getText());
                      sc.setLocationReference(this.getFilename(), id.getLine());		    
              		  } else {
                			sc = Aadl2F.createSubprogramCall();
              	   		sc.setName(id.getText());
                			sc.setLocationReference(this.getFilename(), id.getLine());
              	   		cs.setReferencingObject(sc);
              			   unresolvedReferences.add(cs);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11744:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt601=2;
            int LA601_0 = input.LA(1);

            if ( (LA601_0==LCURLY) ) {
                alt601=1;
            }
            switch (alt601) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11744:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_subprogram_call29252); if (state.failed) return sc;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11745:2: (pa= property_association )+
                    int cnt600=0;
                    loop600:
                    do {
                        int alt600=2;
                        int LA600_0 = input.LA(1);

                        if ( (LA600_0==IDENT) ) {
                            alt600=1;
                        }


                        switch (alt600) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11745:3: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_subprogram_call29260);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return sc;
                    	    if ( state.backtracking==0 ) {

                    	      	   sc.getOwnedPropertyAssociations().add(pa);
                    	      	 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt600 >= 1 ) break loop600;
                    	    if (state.backtracking>0) {state.failed=true; return sc;}
                                EarlyExitException eee =
                                    new EarlyExitException(600, input);
                                throw eee;
                        }
                        cnt600++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_subprogram_call29271); if (state.failed) return sc;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_subprogram_call29278); if (state.failed) return sc;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return sc;
    }
    // $ANTLR end "subprogram_call"


    // $ANTLR start "called_subprogram"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11755:1: called_subprogram returns [ReferenceRecord cs] : ( ( PROCESSOR DOT scId= IDENT ) | (pkgId= IDENT DOUBLECOLON (pkgId1= IDENT DOUBLECOLON )* ( (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) ) ) | (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) );
    public final ReferenceRecord called_subprogram() throws RecognitionException {
        ReferenceRecord cs = null;

        Token scId=null;
        Token pkgId=null;
        Token pkgId1=null;
        Token ctxId=null;


        		String contextLabel="";
        		String pkgLabel = "";
        		boolean processorProgram = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11761:2: ( ( PROCESSOR DOT scId= IDENT ) | (pkgId= IDENT DOUBLECOLON (pkgId1= IDENT DOUBLECOLON )* ( (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) ) ) | (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) )
            int alt604=4;
            int LA604_0 = input.LA(1);

            if ( (LA604_0==PROCESSOR) ) {
                alt604=1;
            }
            else if ( (LA604_0==IDENT) ) {
                switch ( input.LA(2) ) {
                case DOUBLECOLON:
                    {
                    alt604=2;
                    }
                    break;
                case DOT:
                    {
                    alt604=3;
                    }
                    break;
                case SEMI:
                case LCURLY:
                    {
                    alt604=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return cs;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 604, 2, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return cs;}
                NoViableAltException nvae =
                    new NoViableAltException("", 604, 0, input);

                throw nvae;
            }
            switch (alt604) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11762:2: ( PROCESSOR DOT scId= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11762:2: ( PROCESSOR DOT scId= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11762:3: PROCESSOR DOT scId= IDENT
                    {
                    match(input,PROCESSOR,FOLLOW_PROCESSOR_in_called_subprogram29300); if (state.failed) return cs;
                    match(input,DOT,FOLLOW_DOT_in_called_subprogram29302); if (state.failed) return cs;
                    scId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29306); if (state.failed) return cs;
                    if ( state.backtracking==0 ) {

                              cs = new ReferenceRecord(ParserReferenceType.ProcessorSubprogramCallReference,
                                                      new String[]{scId.getText()}
                                                      );
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11770:2: (pkgId= IDENT DOUBLECOLON (pkgId1= IDENT DOUBLECOLON )* ( (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) ) )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11770:2: (pkgId= IDENT DOUBLECOLON (pkgId1= IDENT DOUBLECOLON )* ( (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) ) )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11770:3: pkgId= IDENT DOUBLECOLON (pkgId1= IDENT DOUBLECOLON )* ( (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) )
                    {
                    pkgId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29324); if (state.failed) return cs;
                    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_called_subprogram29326); if (state.failed) return cs;
                    if ( state.backtracking==0 ) {

                      	   pkgLabel = pkgId.getText();
                      	 
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11774:3: (pkgId1= IDENT DOUBLECOLON )*
                    loop602:
                    do {
                        int alt602=2;
                        int LA602_0 = input.LA(1);

                        if ( (LA602_0==IDENT) ) {
                            int LA602_1 = input.LA(2);

                            if ( (LA602_1==DOUBLECOLON) ) {
                                alt602=1;
                            }


                        }


                        switch (alt602) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11774:4: pkgId1= IDENT DOUBLECOLON
                    	    {
                    	    pkgId1=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29337); if (state.failed) return cs;
                    	    match(input,DOUBLECOLON,FOLLOW_DOUBLECOLON_in_called_subprogram29339); if (state.failed) return cs;
                    	    if ( state.backtracking==0 ) {

                    	      	     pkgLabel = pkgLabel+"::"+pkgId1.getText();
                    	      	   
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop602;
                        }
                    } while (true);

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11779:3: ( (ctxId= IDENT DOT scId= IDENT ) | (scId= IDENT ) )
                    int alt603=2;
                    int LA603_0 = input.LA(1);

                    if ( (LA603_0==IDENT) ) {
                        int LA603_1 = input.LA(2);

                        if ( (LA603_1==DOT) ) {
                            alt603=1;
                        }
                        else if ( (LA603_1==SEMI||LA603_1==LCURLY) ) {
                            alt603=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return cs;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 603, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return cs;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 603, 0, input);

                        throw nvae;
                    }
                    switch (alt603) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11780:5: (ctxId= IDENT DOT scId= IDENT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11780:5: (ctxId= IDENT DOT scId= IDENT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11780:6: ctxId= IDENT DOT scId= IDENT
                            {
                            ctxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29363); if (state.failed) return cs;
                            match(input,DOT,FOLLOW_DOT_in_called_subprogram29365); if (state.failed) return cs;
                            scId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29369); if (state.failed) return cs;
                            if ( state.backtracking==0 ) {

                                       cs = new ReferenceRecord(ParserReferenceType.PackageAndContextSubprogramCallReference,
                                                              new String[]{pkgLabel,ctxId.getText(),scId.getText()}
                                                              );
                                      
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11788:5: (scId= IDENT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11788:5: (scId= IDENT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11788:6: scId= IDENT
                            {
                            scId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29400); if (state.failed) return cs;
                            if ( state.backtracking==0 ) {

                                        cs = new ReferenceRecord(ParserReferenceType.PackageSubprogramCallReference,
                                                              new String[]{pkgLabel, scId.getText()}
                                                              );        
                                      
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11798:2: (ctxId= IDENT DOT scId= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11798:2: (ctxId= IDENT DOT scId= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11798:3: ctxId= IDENT DOT scId= IDENT
                    {
                    ctxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29432); if (state.failed) return cs;
                    match(input,DOT,FOLLOW_DOT_in_called_subprogram29434); if (state.failed) return cs;
                    scId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29438); if (state.failed) return cs;
                    if ( state.backtracking==0 ) {

                             cs = new ReferenceRecord(ParserReferenceType.ContextSubprogramCallReference,
                                                      new String[]{ctxId.getText(),scId.getText()}
                                                      );
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11806:2: (scId= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11806:2: (scId= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11806:3: scId= IDENT
                    {
                    scId=(Token)match(input,IDENT,FOLLOW_IDENT_in_called_subprogram29456); if (state.failed) return cs;
                    if ( state.backtracking==0 ) {

                              cs = new ReferenceRecord(ParserReferenceType.SubprogramCallReference,
                                                      new String[]{scId.getText()}
                                                      );
                          
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cs;
    }
    // $ANTLR end "called_subprogram"


    // $ANTLR start "mode"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11896:1: mode returns [Mode mode] : id= IDENT COLON ( INITIAL )? MODE ( LCURLY ( (pa= property_association ) )+ RCURLY )? SEMI ;
    public final Mode mode() throws RecognitionException {
        Mode mode = null;

        Token id=null;
        PropertyAssociation pa = null;


         
                //Properties ps=null; 
                 
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11899:11: (id= IDENT COLON ( INITIAL )? MODE ( LCURLY ( (pa= property_association ) )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11900:6: id= IDENT COLON ( INITIAL )? MODE ( LCURLY ( (pa= property_association ) )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode29580); if (state.failed) return mode;
            match(input,COLON,FOLLOW_COLON_in_mode29582); if (state.failed) return mode;
            if ( state.backtracking==0 ) {
               
                       	mode = Aadl2F.createMode();
                       	mode.setInitial(false);
                      	mode.setName(id.getText());
                       	mode.setLocationReference(new LocationReference(this.getFilename(),id.getLine()));
                     	  processComments(mode); 
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11908:6: ( INITIAL )?
            int alt605=2;
            int LA605_0 = input.LA(1);

            if ( (LA605_0==INITIAL) ) {
                alt605=1;
            }
            switch (alt605) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11908:8: INITIAL
                    {
                    match(input,INITIAL,FOLLOW_INITIAL_in_mode29596); if (state.failed) return mode;
                    if ( state.backtracking==0 ) {
                       
                           		mode.setInitial(true);
                           	
                    }

                    }
                    break;

            }

            match(input,MODE,FOLLOW_MODE_in_mode29633); if (state.failed) return mode;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11926:5: ( LCURLY ( (pa= property_association ) )+ RCURLY )?
            int alt607=2;
            int LA607_0 = input.LA(1);

            if ( (LA607_0==LCURLY) ) {
                alt607=1;
            }
            switch (alt607) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11926:7: LCURLY ( (pa= property_association ) )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_mode29643); if (state.failed) return mode;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11927:7: ( (pa= property_association ) )+
                    int cnt606=0;
                    loop606:
                    do {
                        int alt606=2;
                        int LA606_0 = input.LA(1);

                        if ( (LA606_0==IDENT) ) {
                            alt606=1;
                        }


                        switch (alt606) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11928:9: (pa= property_association )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11928:9: (pa= property_association )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11928:10: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_mode29664);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return mode;
                    	    if ( state.backtracking==0 ) {

                    	                  mode.getOwnedPropertyAssociations().add(pa);
                    	                
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt606 >= 1 ) break loop606;
                    	    if (state.backtracking>0) {state.failed=true; return mode;}
                                EarlyExitException eee =
                                    new EarlyExitException(606, input);
                                throw eee;
                        }
                        cnt606++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_mode29704); if (state.failed) return mode;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_mode29720); if (state.failed) return mode;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return mode;
    }
    // $ANTLR end "mode"


    // $ANTLR start "mode_transition"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11965:1: mode_transition[ComponentClassifier cl] returns [ModeTransition mt] : (mtid= IDENT COLON )? id= IDENT l= LTRANS fr= mode_transition_trigger (c= COMMA fr= mode_transition_trigger )* RTRANS destination_mode= IDENT ( LCURLY ( (pa= property_association ) )+ RCURLY )? SEMI ;
    public final ModeTransition mode_transition(ComponentClassifier cl) throws RecognitionException {
        ModeTransition mt = null;

        Token mtid=null;
        Token id=null;
        Token l=null;
        Token c=null;
        Token destination_mode=null;
        ReferenceRecord fr = null;

        PropertyAssociation pa = null;


         
             	mt = Aadl2F.createModeTransition(); 
             	processComments(mt);
             	LocationReference lr=null;
             	ModeTransition cp;
           	 
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11972:6: ( (mtid= IDENT COLON )? id= IDENT l= LTRANS fr= mode_transition_trigger (c= COMMA fr= mode_transition_trigger )* RTRANS destination_mode= IDENT ( LCURLY ( (pa= property_association ) )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11973:6: (mtid= IDENT COLON )? id= IDENT l= LTRANS fr= mode_transition_trigger (c= COMMA fr= mode_transition_trigger )* RTRANS destination_mode= IDENT ( LCURLY ( (pa= property_association ) )+ RCURLY )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11973:6: (mtid= IDENT COLON )?
            int alt608=2;
            int LA608_0 = input.LA(1);

            if ( (LA608_0==IDENT) ) {
                int LA608_1 = input.LA(2);

                if ( (LA608_1==COLON) ) {
                    alt608=1;
                }
            }
            switch (alt608) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:11973:8: mtid= IDENT COLON
                    {
                    mtid=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_transition29785); if (state.failed) return mt;
                    match(input,COLON,FOLLOW_COLON_in_mode_transition29787); if (state.failed) return mt;
                    if ( state.backtracking==0 ) {
                       
                           		mt.setName(mtid.getText());
                           	
                    }

                    }
                    break;

            }

            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_transition29815); if (state.failed) return mt;
            if ( state.backtracking==0 ) {

                   	  mt.setLocationReference(this.getFilename(), id.getLine());
                   	  ReferenceRecord mr = new ReferenceRecord(ParserReferenceType.SourceModeReference,
                   	                                           mt,
                   	                                           new String[]{id.getText()}
                   	                                          ); 
                   		unresolvedReferences.add(mr);
                   	
            }
            l=(Token)match(input,LTRANS,FOLLOW_LTRANS_in_mode_transition29830); if (state.failed) return mt;
            pushFollow(FOLLOW_mode_transition_trigger_in_mode_transition29834);
            fr=mode_transition_trigger();

            state._fsp--;
            if (state.failed) return mt;
            if ( state.backtracking==0 ) {

              	 	   if (fr.getReferenceType() == ParserReferenceType.ModeTriggerFromSelfReference){
              	 	     InternalEvent ie = Aadl2F.createInternalEvent();
              	 	     ie.setLocationReference(this.getFilename(), l.getLine());
              	 	     ie.setName(fr.getLabels()[0]);
              	 	     mt.getTriggers().add(ie);
              	 	     cl.getOwnedInternalEvents().add(ie);
              	 	   } else if (fr.getReferenceType() == ParserReferenceType.ModeTriggerFromProcessorReference) {
              	 	     ProcessorPort pp = Aadl2F.createProcessorPort();
              	 	     pp.setLocationReference(this.getFilename(), l.getLine());
              	 	     pp.setName(fr.getLabels()[0]);
              	 	     mt.getTriggers().add(pp);
              	 	     cl.getOwnedProcessorPorts().add(pp); 
              	 	   } else {
              	 	     TriggerPort tp = Aadl2F.createTriggerPort();
              	 	     tp.setLocationReference(this.getFilename(), l.getLine());
              	 	     mt.getTriggers().add(tp);
              	 	     mt.getOwnedTriggers().add(tp);
                       fr.setReferencingObject(tp);
                       unresolvedReferences.add(fr);	 	     
              	 	   }
              	 	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12010:3: (c= COMMA fr= mode_transition_trigger )*
            loop609:
            do {
                int alt609=2;
                int LA609_0 = input.LA(1);

                if ( (LA609_0==COMMA) ) {
                    alt609=1;
                }


                switch (alt609) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12010:5: c= COMMA fr= mode_transition_trigger
            	    {
            	    c=(Token)match(input,COMMA,FOLLOW_COMMA_in_mode_transition29849); if (state.failed) return mt;
            	    pushFollow(FOLLOW_mode_transition_trigger_in_mode_transition29854);
            	    fr=mode_transition_trigger();

            	    state._fsp--;
            	    if (state.failed) return mt;
            	    if ( state.backtracking==0 ) {
            	       
            	            if (fr.getReferenceType() == ParserReferenceType.ModeTriggerFromSelfReference){
            	               InternalEvent ie = Aadl2F.createInternalEvent();
            	               ie.setLocationReference(this.getFilename(), c.getLine());
            	               ie.setName(fr.getLabels()[0]);
            	               mt.getTriggers().add(ie);
            	               cl.getOwnedInternalEvents().add(ie);
            	             } else if (fr.getReferenceType() == ParserReferenceType.ModeTriggerFromProcessorReference) {
            	               ProcessorPort pp = Aadl2F.createProcessorPort();
            	               pp.setLocationReference(this.getFilename(), c.getLine());
            	               pp.setName(fr.getLabels()[0]);
            	               mt.getTriggers().add(pp);
            	               cl.getOwnedProcessorPorts().add(pp); 
            	             } else {
            	               TriggerPort tp = Aadl2F.createTriggerPort();
            	               tp.setLocationReference(this.getFilename(), c.getLine());
            	               mt.getTriggers().add(tp);
            	               mt.getOwnedTriggers().add(tp);
            	               fr.setReferencingObject(tp);
            	               unresolvedReferences.add(fr);         
            	             }
            	      	 	
            	    }

            	    }
            	    break;

            	default :
            	    break loop609;
                }
            } while (true);

            match(input,RTRANS,FOLLOW_RTRANS_in_mode_transition29870); if (state.failed) return mt;
            destination_mode=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_transition29876); if (state.failed) return mt;
            if ( state.backtracking==0 ) {
               
                      ReferenceRecord mr = new ReferenceRecord(ParserReferenceType.DestinationModeReference,
                                                               mt,
                                                               new String[]{destination_mode.getText()}
                                                              ); 
                      unresolvedReferences.add(mr);
              	 	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12043:5: ( LCURLY ( (pa= property_association ) )+ RCURLY )?
            int alt611=2;
            int LA611_0 = input.LA(1);

            if ( (LA611_0==LCURLY) ) {
                alt611=1;
            }
            switch (alt611) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12043:7: LCURLY ( (pa= property_association ) )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_mode_transition29890); if (state.failed) return mt;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12044:7: ( (pa= property_association ) )+
                    int cnt610=0;
                    loop610:
                    do {
                        int alt610=2;
                        int LA610_0 = input.LA(1);

                        if ( (LA610_0==IDENT) ) {
                            alt610=1;
                        }


                        switch (alt610) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12045:9: (pa= property_association )
                    	    {
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12045:9: (pa= property_association )
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12045:10: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_mode_transition29911);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return mt;
                    	    if ( state.backtracking==0 ) {

                    	                  mt.getOwnedPropertyAssociations().add(pa);
                    	                
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt610 >= 1 ) break loop610;
                    	    if (state.backtracking>0) {state.failed=true; return mt;}
                                EarlyExitException eee =
                                    new EarlyExitException(610, input);
                                throw eee;
                        }
                        cnt610++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_mode_transition29951); if (state.failed) return mt;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_mode_transition29967); if (state.failed) return mt;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return mt;
    }
    // $ANTLR end "mode_transition"


    // $ANTLR start "mode_transition_trigger"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12055:1: mode_transition_trigger returns [ReferenceRecord rt] : ( ( ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT ) | (portId= IDENT ) ) ;
    public final ReferenceRecord mode_transition_trigger() throws RecognitionException {
        ReferenceRecord rt = null;

        Token ctxId=null;
        Token portId=null;


            boolean self=false;
            boolean processor = false;
            String ctx="";
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12061:3: ( ( ( ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT ) | (portId= IDENT ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12062:3: ( ( ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT ) | (portId= IDENT ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12062:3: ( ( ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT ) | (portId= IDENT ) )
            int alt613=2;
            int LA613_0 = input.LA(1);

            if ( (LA613_0==PROCESSOR||LA613_0==SELF) ) {
                alt613=1;
            }
            else if ( (LA613_0==IDENT) ) {
                int LA613_2 = input.LA(2);

                if ( (LA613_2==DOT) ) {
                    alt613=1;
                }
                else if ( (LA613_2==EOF||LA613_2==COMMA||LA613_2==RTRANS) ) {
                    alt613=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return rt;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 613, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return rt;}
                NoViableAltException nvae =
                    new NoViableAltException("", 613, 0, input);

                throw nvae;
            }
            switch (alt613) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12063:3: ( ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12063:3: ( ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12064:5: ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT ) portId= IDENT
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12064:5: ( SELF DOT | PROCESSOR DOT | ctxId= IDENT DOT )
                    int alt612=3;
                    switch ( input.LA(1) ) {
                    case SELF:
                        {
                        alt612=1;
                        }
                        break;
                    case PROCESSOR:
                        {
                        alt612=2;
                        }
                        break;
                    case IDENT:
                        {
                        alt612=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return rt;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 612, 0, input);

                        throw nvae;
                    }

                    switch (alt612) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12064:6: SELF DOT
                            {
                            match(input,SELF,FOLLOW_SELF_in_mode_transition_trigger30001); if (state.failed) return rt;
                            match(input,DOT,FOLLOW_DOT_in_mode_transition_trigger30003); if (state.failed) return rt;
                            if ( state.backtracking==0 ) {

                                     self = true; 
                                    
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12068:6: PROCESSOR DOT
                            {
                            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_mode_transition_trigger30018); if (state.failed) return rt;
                            match(input,DOT,FOLLOW_DOT_in_mode_transition_trigger30020); if (state.failed) return rt;
                            if ( state.backtracking==0 ) {

                                      processor = true;
                                    
                            }

                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12072:6: ctxId= IDENT DOT
                            {
                            ctxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_transition_trigger30039); if (state.failed) return rt;
                            match(input,DOT,FOLLOW_DOT_in_mode_transition_trigger30041); if (state.failed) return rt;
                            if ( state.backtracking==0 ) {

                                      ctx = ctxId.getText();
                                    
                            }

                            }
                            break;

                    }

                    portId=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_transition_trigger30063); if (state.failed) return rt;
                    if ( state.backtracking==0 ) {

                            if (self){
                              rt = new ReferenceRecord(ParserReferenceType.ModeTriggerFromSelfReference,
                                                      new String[]{portId.getText()}
                                                      );
                            } else if (processor){
                              rt = new ReferenceRecord(ParserReferenceType.ModeTriggerFromProcessorReference,
                                                       new String[]{portId.getText()}
                                                      );
                            } else {
                              rt = new ReferenceRecord(ParserReferenceType.ModeTriggerFromSubcomponentOrFeatureGroupReference,
                                                      new String[]{ctx,portId.getText()}
                                                      );
                            }
                            
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12094:4: (portId= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12094:4: (portId= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12094:5: portId= IDENT
                    {
                    portId=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_transition_trigger30085); if (state.failed) return rt;
                    if ( state.backtracking==0 ) {

                              rt = new ReferenceRecord(ParserReferenceType.ModeTriggerFromExternalPortReference,
                                                      new String[]{portId.getText()}
                                                      );
                          
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return rt;
    }
    // $ANTLR end "mode_transition_trigger"


    // $ANTLR start "component_in_modes"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12160:1: component_in_modes[Subcomponent mm] : IN MODES LPAREN ( (m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )* ) | ( ALL ) ) RPAREN ;
    public final void component_in_modes(Subcomponent mm) throws RecognitionException {
        Token m1=null;
        Token om1=null;
        Token m2=null;
        Token om2=null;

         
            LocationReference lr=null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12163:4: ( IN MODES LPAREN ( (m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )* ) | ( ALL ) ) RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12164:5: IN MODES LPAREN ( (m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )* ) | ( ALL ) ) RPAREN
            {
            match(input,IN,FOLLOW_IN_in_component_in_modes30183); if (state.failed) return ;
            match(input,MODES,FOLLOW_MODES_in_component_in_modes30185); if (state.failed) return ;
            match(input,LPAREN,FOLLOW_LPAREN_in_component_in_modes30191); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12166:5: ( (m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )* ) | ( ALL ) )
            int alt617=2;
            int LA617_0 = input.LA(1);

            if ( (LA617_0==IDENT) ) {
                alt617=1;
            }
            else if ( (LA617_0==ALL) ) {
                alt617=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 617, 0, input);

                throw nvae;
            }
            switch (alt617) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12167:7: (m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )* )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12167:7: (m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )* )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12167:9: m1= IDENT ( ASSIGN om1= IDENT )? ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )*
                    {
                    m1=(Token)match(input,IDENT,FOLLOW_IDENT_in_component_in_modes30211); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                                ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.InModesReference,
                                                                         mm,
                                                                         new String[]{m1.getText()}
                                                                         );
                                unresolvedReferences.add(rr); 
                               
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12175:9: ( ASSIGN om1= IDENT )?
                    int alt614=2;
                    int LA614_0 = input.LA(1);

                    if ( (LA614_0==ASSIGN) ) {
                        alt614=1;
                    }
                    switch (alt614) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12175:10: ASSIGN om1= IDENT
                            {
                            match(input,ASSIGN,FOLLOW_ASSIGN_in_component_in_modes30233); if (state.failed) return ;
                            om1=(Token)match(input,IDENT,FOLLOW_IDENT_in_component_in_modes30237); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                          ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.ModeMappingReference,
                                                                              mm,
                                                                              new String[]{m1.getText(), om1.getText()}
                                                                              );
                                          unresolvedReferences.add(rr); 
                                        
                            }

                            }
                            break;

                    }

                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12184:9: ( COMMA m2= IDENT ( ASSIGN om2= IDENT )? )*
                    loop616:
                    do {
                        int alt616=2;
                        int LA616_0 = input.LA(1);

                        if ( (LA616_0==COMMA) ) {
                            alt616=1;
                        }


                        switch (alt616) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12184:10: COMMA m2= IDENT ( ASSIGN om2= IDENT )?
                    	    {
                    	    match(input,COMMA,FOLLOW_COMMA_in_component_in_modes30322); if (state.failed) return ;
                    	    m2=(Token)match(input,IDENT,FOLLOW_IDENT_in_component_in_modes30326); if (state.failed) return ;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	                  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.InModesReference,
                    	                                                           mm,
                    	                                                           new String[]{m2.getText()}
                    	                                                           );
                    	                  unresolvedReferences.add(rr); 
                    	                
                    	    }
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12192:11: ( ASSIGN om2= IDENT )?
                    	    int alt615=2;
                    	    int LA615_0 = input.LA(1);

                    	    if ( (LA615_0==ASSIGN) ) {
                    	        alt615=1;
                    	    }
                    	    switch (alt615) {
                    	        case 1 :
                    	            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12192:12: ASSIGN om2= IDENT
                    	            {
                    	            match(input,ASSIGN,FOLLOW_ASSIGN_in_component_in_modes30352); if (state.failed) return ;
                    	            om2=(Token)match(input,IDENT,FOLLOW_IDENT_in_component_in_modes30356); if (state.failed) return ;
                    	            if ( state.backtracking==0 ) {

                    	                            ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.ModeMappingReference,
                    	                                                                mm,
                    	                                                                new String[]{m2.getText(), om2.getText()}
                    	                                                                );
                    	                            unresolvedReferences.add(rr); 
                    	                          
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop616;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12203:8: ( ALL )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12203:8: ( ALL )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12203:9: ALL
                    {
                    match(input,ALL,FOLLOW_ALL_in_component_in_modes30465); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                                mm.setAllModes(true);
                              
                    }

                    }


                    }
                    break;

            }

            match(input,RPAREN,FOLLOW_RPAREN_in_component_in_modes30491); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "component_in_modes"


    // $ANTLR start "in_modes"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12211:1: in_modes[ModalElement mm] : IN MODES LPAREN ( (m1= IDENT ( COMMA m2= IDENT )* ) ) RPAREN ;
    public final void in_modes(ModalElement mm) throws RecognitionException {
        Token m1=null;
        Token m2=null;

         
        		LocationReference lr=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12214:3: ( IN MODES LPAREN ( (m1= IDENT ( COMMA m2= IDENT )* ) ) RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12215:5: IN MODES LPAREN ( (m1= IDENT ( COMMA m2= IDENT )* ) ) RPAREN
            {
            match(input,IN,FOLLOW_IN_in_in_modes30519); if (state.failed) return ;
            match(input,MODES,FOLLOW_MODES_in_in_modes30521); if (state.failed) return ;
            match(input,LPAREN,FOLLOW_LPAREN_in_in_modes30527); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12217:5: ( (m1= IDENT ( COMMA m2= IDENT )* ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12218:7: (m1= IDENT ( COMMA m2= IDENT )* )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12218:7: (m1= IDENT ( COMMA m2= IDENT )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12218:9: m1= IDENT ( COMMA m2= IDENT )*
            {
            m1=(Token)match(input,IDENT,FOLLOW_IDENT_in_in_modes30547); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                        ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.InModesReference,
                                                                 mm,
                                                                 new String[]{m1.getText()}
                                                                 );
                        unresolvedReferences.add(rr); 
                       
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12226:9: ( COMMA m2= IDENT )*
            loop618:
            do {
                int alt618=2;
                int LA618_0 = input.LA(1);

                if ( (LA618_0==COMMA) ) {
                    alt618=1;
                }


                switch (alt618) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12226:10: COMMA m2= IDENT
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_in_modes30620); if (state.failed) return ;
            	    m2=(Token)match(input,IDENT,FOLLOW_IDENT_in_in_modes30624); if (state.failed) return ;
            	    if ( state.backtracking==0 ) {
            	       
            	                  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.InModesReference,
            	                                                           mm,
            	                                                           new String[]{m2.getText()}
            	                                                           );
            	                  unresolvedReferences.add(rr); 
            	                
            	    }

            	    }
            	    break;

            	default :
            	    break loop618;
                }
            } while (true);


            }


            }

            match(input,RPAREN,FOLLOW_RPAREN_in_in_modes30665); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "in_modes"


    // $ANTLR start "in_modes_and_transitions"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12239:1: in_modes_and_transitions[ModalElement mm] : IN MODES LPAREN ( ( mode_or_transition[mm] ( COMMA mode_or_transition[mm] )* ) ) RPAREN ;
    public final void in_modes_and_transitions(ModalElement mm) throws RecognitionException {
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12239:43: ( IN MODES LPAREN ( ( mode_or_transition[mm] ( COMMA mode_or_transition[mm] )* ) ) RPAREN )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12240:5: IN MODES LPAREN ( ( mode_or_transition[mm] ( COMMA mode_or_transition[mm] )* ) ) RPAREN
            {
            match(input,IN,FOLLOW_IN_in_in_modes_and_transitions30687); if (state.failed) return ;
            match(input,MODES,FOLLOW_MODES_in_in_modes_and_transitions30689); if (state.failed) return ;
            match(input,LPAREN,FOLLOW_LPAREN_in_in_modes_and_transitions30695); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12241:12: ( ( mode_or_transition[mm] ( COMMA mode_or_transition[mm] )* ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12242:6: ( mode_or_transition[mm] ( COMMA mode_or_transition[mm] )* )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12242:6: ( mode_or_transition[mm] ( COMMA mode_or_transition[mm] )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12242:8: mode_or_transition[mm] ( COMMA mode_or_transition[mm] )*
            {
            pushFollow(FOLLOW_mode_or_transition_in_in_modes_and_transitions30707);
            mode_or_transition(mm);

            state._fsp--;
            if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12243:7: ( COMMA mode_or_transition[mm] )*
            loop619:
            do {
                int alt619=2;
                int LA619_0 = input.LA(1);

                if ( (LA619_0==COMMA) ) {
                    alt619=1;
                }


                switch (alt619) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12243:9: COMMA mode_or_transition[mm]
            	    {
            	    match(input,COMMA,FOLLOW_COMMA_in_in_modes_and_transitions30719); if (state.failed) return ;
            	    pushFollow(FOLLOW_mode_or_transition_in_in_modes_and_transitions30721);
            	    mode_or_transition(mm);

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop619;
                }
            } while (true);


            }


            }

            match(input,RPAREN,FOLLOW_RPAREN_in_in_modes_and_transitions30742); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "in_modes_and_transitions"


    // $ANTLR start "mode_or_transition"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12248:1: mode_or_transition[ModalElement mm] : mode_id= IDENT ;
    public final void mode_or_transition(ModalElement mm) throws RecognitionException {
        Token mode_id=null;

         
        		LocationReference lr=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12251:3: (mode_id= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12252:5: mode_id= IDENT
            {
            mode_id=(Token)match(input,IDENT,FOLLOW_IDENT_in_mode_or_transition30766); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                  	   ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.ModeOrTransitionReference,
                  	                                                               mm,
                  	                                                               new String[]{mode_id.getText()}
                  	                                                               );
                  	   unresolvedReferences.add(rr);
                       lr = new LocationReference(this.getFilename(),mode_id.getLine());
                       mm.setLocationReference(lr);
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "mode_or_transition"


    // $ANTLR start "data_port"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12288:1: data_port[boolean extension] returns [DataPort dp] : id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( DATA PORT (cr= classifier_reference )? (ad= array_dimension )? ) ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final DataPort data_port(boolean extension) throws RecognitionException {
        DataPort dp = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		DirectionType dt=null;
        		boolean refinement=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12293:2: (id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( DATA PORT (cr= classifier_reference )? (ad= array_dimension )? ) ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12294:2: id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( DATA PORT (cr= classifier_reference )? (ad= array_dimension )? ) ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_port30825); if (state.failed) return dp;
            match(input,COLON,FOLLOW_COLON_in_data_port30827); if (state.failed) return dp;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12295:2: ( REFINED TO )?
            int alt620=2;
            int LA620_0 = input.LA(1);

            if ( (LA620_0==REFINED) ) {
                alt620=1;
            }
            switch (alt620) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12295:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_data_port30831); if (state.failed) return dp;
                    match(input,TO,FOLLOW_TO_in_data_port30833); if (state.failed) return dp;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12303:2: ( ( IN OUT ) | OUT | IN )
            int alt621=3;
            int LA621_0 = input.LA(1);

            if ( (LA621_0==IN) ) {
                int LA621_1 = input.LA(2);

                if ( (LA621_1==OUT) ) {
                    alt621=1;
                }
                else if ( (LA621_1==DATA) ) {
                    alt621=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return dp;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 621, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA621_0==OUT) ) {
                alt621=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return dp;}
                NoViableAltException nvae =
                    new NoViableAltException("", 621, 0, input);

                throw nvae;
            }
            switch (alt621) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12303:3: ( IN OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12303:3: ( IN OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12303:4: IN OUT
                    {
                    match(input,IN,FOLLOW_IN_in_data_port30846); if (state.failed) return dp;
                    match(input,OUT,FOLLOW_OUT_in_data_port30848); if (state.failed) return dp;

                    }

                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.IN_OUT;
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12307:4: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_data_port30858); if (state.failed) return dp;
                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.OUT;
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12311:4: IN
                    {
                    match(input,IN,FOLLOW_IN_in_data_port30867); if (state.failed) return dp;
                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.IN;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12316:2: ( DATA PORT (cr= classifier_reference )? (ad= array_dimension )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12316:3: DATA PORT (cr= classifier_reference )? (ad= array_dimension )?
            {
            match(input,DATA,FOLLOW_DATA_in_data_port30878); if (state.failed) return dp;
            match(input,PORT,FOLLOW_PORT_in_data_port30880); if (state.failed) return dp;
            if ( state.backtracking==0 ) {

              			dp = Aadl2F.createDataPort();
              			dp.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			dp.setLocationReference(lr);
              			dp.setDirection(dt);
              			if (refinement){
              			  ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.PortRefinementReference,
              			                                               dp,
              			                                               new String[]{id.getText()}
              			                                               );
              			  unresolvedReferences.add(refref);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12334:3: (cr= classifier_reference )?
            int alt622=2;
            int LA622_0 = input.LA(1);

            if ( (LA622_0==IDENT) ) {
                alt622=1;
            }
            switch (alt622) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12334:4: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_data_port30895);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return dp;
                    if ( state.backtracking==0 ) {

                      			  if(cr.getLabels().length > 1){
                                cr.setReferenceType(ParserReferenceType.PortClassifierReference);
                      			  } else {
                                cr.setReferenceType(ParserReferenceType.PortPrototypeOrClassifierReference);
                      			  }
                      			  cr.setReferencingObject(dp);
                      			  unresolvedReferences.add(cr);
                      			
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12345:2: (ad= array_dimension )?
            int alt623=2;
            int LA623_0 = input.LA(1);

            if ( (LA623_0==LBRACK) ) {
                alt623=1;
            }
            switch (alt623) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12345:3: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_data_port30911);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return dp;
                    if ( state.backtracking==0 ) {

                      	   dp.setArraySpecification(ad);
                      	 
                    }

                    }
                    break;

            }


            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12351:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt625=2;
            int LA625_0 = input.LA(1);

            if ( (LA625_0==LCURLY) ) {
                alt625=1;
            }
            switch (alt625) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12351:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_data_port30926); if (state.failed) return dp;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12352:3: (pa= property_association )+
                    int cnt624=0;
                    loop624:
                    do {
                        int alt624=2;
                        int LA624_0 = input.LA(1);

                        if ( (LA624_0==IDENT) ) {
                            alt624=1;
                        }


                        switch (alt624) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12352:4: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_data_port30933);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return dp;
                    	    if ( state.backtracking==0 ) {

                    	      	     dp.getOwnedPropertyAssociations().add(pa);
                    	      	   
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt624 >= 1 ) break loop624;
                    	    if (state.backtracking>0) {state.failed=true; return dp;}
                                EarlyExitException eee =
                                    new EarlyExitException(624, input);
                                throw eee;
                        }
                        cnt624++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_data_port30948); if (state.failed) return dp;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_data_port30955); if (state.failed) return dp;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return dp;
    }
    // $ANTLR end "data_port"


    // $ANTLR start "event_data_port"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12367:1: event_data_port[boolean extension] returns [EventDataPort edp] : id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( EVENT DATA PORT (cr= classifier_reference )? ) (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final EventDataPort event_data_port(boolean extension) throws RecognitionException {
        EventDataPort edp = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		DirectionType dt=null;
        		boolean refinement=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12372:2: (id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( EVENT DATA PORT (cr= classifier_reference )? ) (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12373:2: id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( EVENT DATA PORT (cr= classifier_reference )? ) (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_event_data_port30997); if (state.failed) return edp;
            match(input,COLON,FOLLOW_COLON_in_event_data_port30999); if (state.failed) return edp;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12374:2: ( REFINED TO )?
            int alt626=2;
            int LA626_0 = input.LA(1);

            if ( (LA626_0==REFINED) ) {
                alt626=1;
            }
            switch (alt626) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12374:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_event_data_port31003); if (state.failed) return edp;
                    match(input,TO,FOLLOW_TO_in_event_data_port31005); if (state.failed) return edp;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12382:2: ( ( IN OUT ) | OUT | IN )
            int alt627=3;
            int LA627_0 = input.LA(1);

            if ( (LA627_0==IN) ) {
                int LA627_1 = input.LA(2);

                if ( (LA627_1==OUT) ) {
                    alt627=1;
                }
                else if ( (LA627_1==EVENT) ) {
                    alt627=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return edp;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 627, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA627_0==OUT) ) {
                alt627=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return edp;}
                NoViableAltException nvae =
                    new NoViableAltException("", 627, 0, input);

                throw nvae;
            }
            switch (alt627) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12382:3: ( IN OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12382:3: ( IN OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12382:4: IN OUT
                    {
                    match(input,IN,FOLLOW_IN_in_event_data_port31018); if (state.failed) return edp;
                    match(input,OUT,FOLLOW_OUT_in_event_data_port31020); if (state.failed) return edp;

                    }

                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.IN_OUT;
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12386:4: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_event_data_port31030); if (state.failed) return edp;
                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.OUT;
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12390:4: IN
                    {
                    match(input,IN,FOLLOW_IN_in_event_data_port31039); if (state.failed) return edp;
                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.IN;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12395:2: ( EVENT DATA PORT (cr= classifier_reference )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12395:3: EVENT DATA PORT (cr= classifier_reference )?
            {
            match(input,EVENT,FOLLOW_EVENT_in_event_data_port31050); if (state.failed) return edp;
            match(input,DATA,FOLLOW_DATA_in_event_data_port31052); if (state.failed) return edp;
            match(input,PORT,FOLLOW_PORT_in_event_data_port31054); if (state.failed) return edp;
            if ( state.backtracking==0 ) {

              			edp = Aadl2F.createEventDataPort();
              			edp.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			edp.setLocationReference(lr);
              			edp.setDirection(dt);
              			if (refinement){
                      ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.PortRefinementReference,
                                                                   edp,
                                                                   new String[]{id.getText()}
                                                                   );
                      unresolvedReferences.add(refref);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12413:3: (cr= classifier_reference )?
            int alt628=2;
            int LA628_0 = input.LA(1);

            if ( (LA628_0==IDENT) ) {
                alt628=1;
            }
            switch (alt628) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12413:4: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_event_data_port31069);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return edp;
                    if ( state.backtracking==0 ) {

                      			  if (cr.getLabels().length>1){
                                cr.setReferenceType(ParserReferenceType.PortClassifierReference);
                      			  } else {
                                cr.setReferenceType(ParserReferenceType.PortPrototypeOrClassifierReference);
                      			  }
                              cr.setReferencingObject(edp);
                              unresolvedReferences.add(cr);
                      			
                    }

                    }
                    break;

            }


            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12425:5: (ad= array_dimension )?
            int alt629=2;
            int LA629_0 = input.LA(1);

            if ( (LA629_0==LBRACK) ) {
                alt629=1;
            }
            switch (alt629) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12425:6: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_event_data_port31091);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return edp;
                    if ( state.backtracking==0 ) {

                           edp.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12430:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt631=2;
            int LA631_0 = input.LA(1);

            if ( (LA631_0==LCURLY) ) {
                alt631=1;
            }
            switch (alt631) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12430:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_event_data_port31106); if (state.failed) return edp;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12431:4: (pa= property_association )+
                    int cnt630=0;
                    loop630:
                    do {
                        int alt630=2;
                        int LA630_0 = input.LA(1);

                        if ( (LA630_0==IDENT) ) {
                            alt630=1;
                        }


                        switch (alt630) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12431:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_event_data_port31114);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return edp;
                    	    if ( state.backtracking==0 ) {

                    	             edp.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt630 >= 1 ) break loop630;
                    	    if (state.backtracking>0) {state.failed=true; return edp;}
                                EarlyExitException eee =
                                    new EarlyExitException(630, input);
                                throw eee;
                        }
                        cnt630++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_event_data_port31132); if (state.failed) return edp;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_event_data_port31140); if (state.failed) return edp;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return edp;
    }
    // $ANTLR end "event_data_port"


    // $ANTLR start "event_port"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12446:1: event_port[boolean extension] returns [EventPort ep] : id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( EVENT PORT ) (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final EventPort event_port(boolean extension) throws RecognitionException {
        EventPort ep = null;

        Token id=null;
        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		DirectionType dt=null;
        		boolean refinement=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12451:2: (id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( EVENT PORT ) (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12452:2: id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | OUT | IN ) ( EVENT PORT ) (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_event_port31180); if (state.failed) return ep;
            match(input,COLON,FOLLOW_COLON_in_event_port31182); if (state.failed) return ep;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12453:2: ( REFINED TO )?
            int alt632=2;
            int LA632_0 = input.LA(1);

            if ( (LA632_0==REFINED) ) {
                alt632=1;
            }
            switch (alt632) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12453:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_event_port31186); if (state.failed) return ep;
                    match(input,TO,FOLLOW_TO_in_event_port31188); if (state.failed) return ep;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12461:2: ( ( IN OUT ) | OUT | IN )
            int alt633=3;
            int LA633_0 = input.LA(1);

            if ( (LA633_0==IN) ) {
                int LA633_1 = input.LA(2);

                if ( (LA633_1==OUT) ) {
                    alt633=1;
                }
                else if ( (LA633_1==EVENT) ) {
                    alt633=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ep;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 633, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA633_0==OUT) ) {
                alt633=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ep;}
                NoViableAltException nvae =
                    new NoViableAltException("", 633, 0, input);

                throw nvae;
            }
            switch (alt633) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12461:3: ( IN OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12461:3: ( IN OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12461:4: IN OUT
                    {
                    match(input,IN,FOLLOW_IN_in_event_port31201); if (state.failed) return ep;
                    match(input,OUT,FOLLOW_OUT_in_event_port31203); if (state.failed) return ep;

                    }

                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.IN_OUT;
                      		
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12465:4: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_event_port31213); if (state.failed) return ep;
                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.OUT;
                      		
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12469:4: IN
                    {
                    match(input,IN,FOLLOW_IN_in_event_port31222); if (state.failed) return ep;
                    if ( state.backtracking==0 ) {

                      			dt = DirectionType.IN;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12474:2: ( EVENT PORT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12474:3: EVENT PORT
            {
            match(input,EVENT,FOLLOW_EVENT_in_event_port31233); if (state.failed) return ep;
            match(input,PORT,FOLLOW_PORT_in_event_port31235); if (state.failed) return ep;
            if ( state.backtracking==0 ) {

              			ep = Aadl2F.createEventPort();
              			ep.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			ep.setLocationReference(lr);
              			ep.setDirection(dt);
              			if (refinement){
              			  ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.PortRefinementReference,
                                                                   ep,
                                                                   new String[]{id.getText()}
                                                                   );
                      unresolvedReferences.add(refref);
              			}
              		
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12492:3: (ad= array_dimension )?
            int alt634=2;
            int LA634_0 = input.LA(1);

            if ( (LA634_0==LBRACK) ) {
                alt634=1;
            }
            switch (alt634) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12492:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_event_port31249);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return ep;
                    if ( state.backtracking==0 ) {

                           ep.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12497:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt636=2;
            int LA636_0 = input.LA(1);

            if ( (LA636_0==LCURLY) ) {
                alt636=1;
            }
            switch (alt636) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12497:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_event_port31264); if (state.failed) return ep;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12498:4: (pa= property_association )+
                    int cnt635=0;
                    loop635:
                    do {
                        int alt635=2;
                        int LA635_0 = input.LA(1);

                        if ( (LA635_0==IDENT) ) {
                            alt635=1;
                        }


                        switch (alt635) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12498:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_event_port31272);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return ep;
                    	    if ( state.backtracking==0 ) {

                    	             ep.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt635 >= 1 ) break loop635;
                    	    if (state.backtracking>0) {state.failed=true; return ep;}
                                EarlyExitException eee =
                                    new EarlyExitException(635, input);
                                throw eee;
                        }
                        cnt635++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_event_port31290); if (state.failed) return ep;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_event_port31298); if (state.failed) return ep;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ep;
    }
    // $ANTLR end "event_port"


    // $ANTLR start "parameter"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12625:1: parameter[boolean extension] returns [ Parameter p ] : id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | ( IN ) | ( OUT ) ) PARAMETER (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final Parameter parameter(boolean extension) throws RecognitionException {
        Parameter p = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



            		DirectionType dt=null;
            		boolean refinement=false;
                ReferenceRecord rr = null;
               
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12631:8: (id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | ( IN ) | ( OUT ) ) PARAMETER (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12632:3: id= IDENT COLON ( REFINED TO )? ( ( IN OUT ) | ( IN ) | ( OUT ) ) PARAMETER (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_parameter31470); if (state.failed) return p;
            match(input,COLON,FOLLOW_COLON_in_parameter31472); if (state.failed) return p;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12633:3: ( REFINED TO )?
            int alt637=2;
            int LA637_0 = input.LA(1);

            if ( (LA637_0==REFINED) ) {
                alt637=1;
            }
            switch (alt637) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12633:4: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_parameter31477); if (state.failed) return p;
                    match(input,TO,FOLLOW_TO_in_parameter31479); if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                       			if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                       			refinement=true;
                       		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12641:6: ( ( IN OUT ) | ( IN ) | ( OUT ) )
            int alt638=3;
            int LA638_0 = input.LA(1);

            if ( (LA638_0==IN) ) {
                int LA638_1 = input.LA(2);

                if ( (LA638_1==OUT) ) {
                    alt638=1;
                }
                else if ( (LA638_1==PARAMETER) ) {
                    alt638=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return p;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 638, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA638_0==OUT) ) {
                alt638=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return p;}
                NoViableAltException nvae =
                    new NoViableAltException("", 638, 0, input);

                throw nvae;
            }
            switch (alt638) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12641:8: ( IN OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12641:8: ( IN OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12641:9: IN OUT
                    {
                    match(input,IN,FOLLOW_IN_in_parameter31499); if (state.failed) return p;
                    match(input,OUT,FOLLOW_OUT_in_parameter31501); if (state.failed) return p;
                    if ( state.backtracking==0 ) {
                       
                           			dt = DirectionType.IN_OUT;
                           			//p.setDirection(DirectionType.IN_OUT); 
                           		
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12647:8: ( IN )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12647:8: ( IN )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12647:9: IN
                    {
                    match(input,IN,FOLLOW_IN_in_parameter31529); if (state.failed) return p;
                    if ( state.backtracking==0 ) {
                       
                           			dt = DirectionType.IN;
                           			//p.setDirection(DirectionType.IN); 
                           		
                    }

                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12653:8: ( OUT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12653:8: ( OUT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12653:9: OUT
                    {
                    match(input,OUT,FOLLOW_OUT_in_parameter31557); if (state.failed) return p;
                    if ( state.backtracking==0 ) {
                       
                           			dt = DirectionType.OUT;
                           			//p.setDirection(DirectionType.OUT); 
                           		
                    }

                    }


                    }
                    break;

            }

            match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter31590); if (state.failed) return p;
            if ( state.backtracking==0 ) {

              	       	p = Aadl2F.createParameter();
              	       	p.setName(id.getText());
              	       	p.setLocationReference(this.getFilename(),id.getLine());
              	       	p.setDirection(dt);
                     		//Properties ps; 
                     		//ClassifierReference cr; 
                     		processComments(p);
                     		if (refinement){
                     		    rr = new ReferenceRecord(ParserReferenceType.ParameterRefinementReference,
                     		                                                               p,
                     		                                                               new String[]{id.getText()}
                     		                                                               ); 
                          unresolvedReferences.add(rr);
                     		}
                   	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12677:3: (cr= classifier_reference )?
            int alt639=2;
            int LA639_0 = input.LA(1);

            if ( (LA639_0==IDENT) ) {
                alt639=1;
            }
            switch (alt639) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12677:5: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_parameter31608);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                      	 	   if (cr.getLabels().length>1){
                      	 	     cr.setReferenceType(ParserReferenceType.ParameterClassifierReference);
                      	 	   } else {
                      	        cr.setReferenceType(ParserReferenceType.ParameterPrototypeOrClassifierReference);
                       	     
                      	 	   }
                      	 	   cr.setReferencingObject(p);
                      	 	   unresolvedReferences.add(cr);
                      	 	
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12689:3: (ad= array_dimension )?
            int alt640=2;
            int LA640_0 = input.LA(1);

            if ( (LA640_0==LBRACK) ) {
                alt640=1;
            }
            switch (alt640) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12689:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_parameter31627);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return p;
                    if ( state.backtracking==0 ) {

                           p.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12694:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt642=2;
            int LA642_0 = input.LA(1);

            if ( (LA642_0==LCURLY) ) {
                alt642=1;
            }
            switch (alt642) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12694:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_parameter31642); if (state.failed) return p;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12695:4: (pa= property_association )+
                    int cnt641=0;
                    loop641:
                    do {
                        int alt641=2;
                        int LA641_0 = input.LA(1);

                        if ( (LA641_0==IDENT) ) {
                            alt641=1;
                        }


                        switch (alt641) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12695:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_parameter31650);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return p;
                    	    if ( state.backtracking==0 ) {

                    	             p.getOwnedPropertyAssociations().add(pa); 
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt641 >= 1 ) break loop641;
                    	    if (state.backtracking>0) {state.failed=true; return p;}
                                EarlyExitException eee =
                                    new EarlyExitException(641, input);
                                throw eee;
                        }
                        cnt641++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_parameter31668); if (state.failed) return p;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_parameter31677); if (state.failed) return p;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return p;
    }
    // $ANTLR end "parameter"


    // $ANTLR start "data_access"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12738:1: data_access[boolean extension] returns [DataAccess da] : id= IDENT COLON ( REFINED TO )? ( PROVIDES DATA ACCESS | REQUIRES DATA ACCESS ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final DataAccess data_access(boolean extension) throws RecognitionException {
        DataAccess da = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		AccessType accessType = null;
        		boolean refinement = false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12743:2: (id= IDENT COLON ( REFINED TO )? ( PROVIDES DATA ACCESS | REQUIRES DATA ACCESS ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12744:2: id= IDENT COLON ( REFINED TO )? ( PROVIDES DATA ACCESS | REQUIRES DATA ACCESS ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_data_access31744); if (state.failed) return da;
            match(input,COLON,FOLLOW_COLON_in_data_access31746); if (state.failed) return da;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12745:2: ( REFINED TO )?
            int alt643=2;
            int LA643_0 = input.LA(1);

            if ( (LA643_0==REFINED) ) {
                alt643=1;
            }
            switch (alt643) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12745:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_data_access31750); if (state.failed) return da;
                    match(input,TO,FOLLOW_TO_in_data_access31752); if (state.failed) return da;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12753:2: ( PROVIDES DATA ACCESS | REQUIRES DATA ACCESS )
            int alt644=2;
            int LA644_0 = input.LA(1);

            if ( (LA644_0==PROVIDES) ) {
                alt644=1;
            }
            else if ( (LA644_0==REQUIRES) ) {
                alt644=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return da;}
                NoViableAltException nvae =
                    new NoViableAltException("", 644, 0, input);

                throw nvae;
            }
            switch (alt644) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12753:4: PROVIDES DATA ACCESS
                    {
                    match(input,PROVIDES,FOLLOW_PROVIDES_in_data_access31765); if (state.failed) return da;
                    match(input,DATA,FOLLOW_DATA_in_data_access31767); if (state.failed) return da;
                    match(input,ACCESS,FOLLOW_ACCESS_in_data_access31769); if (state.failed) return da;
                    if ( state.backtracking==0 ) {

                      				accessType=AccessType.PROVIDED;
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12757:5: REQUIRES DATA ACCESS
                    {
                    match(input,REQUIRES,FOLLOW_REQUIRES_in_data_access31780); if (state.failed) return da;
                    match(input,DATA,FOLLOW_DATA_in_data_access31782); if (state.failed) return da;
                    match(input,ACCESS,FOLLOW_ACCESS_in_data_access31784); if (state.failed) return da;
                    if ( state.backtracking==0 ) {

                      				accessType = AccessType.REQUIRED;
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			da = Aadl2F.createDataAccess();
              			da.setCategory(AccessCategory.DATA);
              			da.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			da.setLocationReference(lr);
              			if (accessType != null)
              			   da.setKind(accessType);
              			if (refinement){
              			   ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.AccessFeatureRefinementReference,
              			                                            da,
              			                                            new String[]{id.getText()}
              			                                            );
                      unresolvedReferences.add(rr);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12781:2: (cr= classifier_reference )?
            int alt645=2;
            int LA645_0 = input.LA(1);

            if ( (LA645_0==IDENT) ) {
                alt645=1;
            }
            switch (alt645) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12781:3: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_data_access31805);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return da;
                    if ( state.backtracking==0 ) {

                      		  if (cr.getLabels().length >1){
                      		    cr.setReferenceType(ParserReferenceType.AccessFeatureClassifierReference);
                      		   } else {
                      		    cr.setReferenceType(ParserReferenceType.AccessFeaturePrototypeOrClassifierReference);
                      		   }
                      		  cr.setReferencingObject(da);
                      		  unresolvedReferences.add(cr);
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12792:3: (ad= array_dimension )?
            int alt646=2;
            int LA646_0 = input.LA(1);

            if ( (LA646_0==LBRACK) ) {
                alt646=1;
            }
            switch (alt646) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12792:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_data_access31820);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return da;
                    if ( state.backtracking==0 ) {

                           da.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12797:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt648=2;
            int LA648_0 = input.LA(1);

            if ( (LA648_0==LCURLY) ) {
                alt648=1;
            }
            switch (alt648) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12797:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_data_access31835); if (state.failed) return da;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12798:4: (pa= property_association )+
                    int cnt647=0;
                    loop647:
                    do {
                        int alt647=2;
                        int LA647_0 = input.LA(1);

                        if ( (LA647_0==IDENT) ) {
                            alt647=1;
                        }


                        switch (alt647) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12798:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_data_access31843);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return da;
                    	    if ( state.backtracking==0 ) {

                    	             da.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt647 >= 1 ) break loop647;
                    	    if (state.backtracking>0) {state.failed=true; return da;}
                                EarlyExitException eee =
                                    new EarlyExitException(647, input);
                                throw eee;
                        }
                        cnt647++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_data_access31861); if (state.failed) return da;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_data_access31869); if (state.failed) return da;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return da;
    }
    // $ANTLR end "data_access"


    // $ANTLR start "bus_access"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12813:1: bus_access[boolean extension] returns [BusAccess ba] : id= IDENT COLON ( REFINED TO )? ( ( ( PROVIDES BUS ACCESS ) | ( REQUIRES BUS ACCESS ) ) ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final BusAccess bus_access(boolean extension) throws RecognitionException {
        BusAccess ba = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		boolean provides=false;
        		boolean refinement=false;
        		AccessType accessType=null;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12819:2: (id= IDENT COLON ( REFINED TO )? ( ( ( PROVIDES BUS ACCESS ) | ( REQUIRES BUS ACCESS ) ) ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12820:2: id= IDENT COLON ( REFINED TO )? ( ( ( PROVIDES BUS ACCESS ) | ( REQUIRES BUS ACCESS ) ) ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_bus_access31910); if (state.failed) return ba;
            match(input,COLON,FOLLOW_COLON_in_bus_access31912); if (state.failed) return ba;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12821:2: ( REFINED TO )?
            int alt649=2;
            int LA649_0 = input.LA(1);

            if ( (LA649_0==REFINED) ) {
                alt649=1;
            }
            switch (alt649) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12821:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_bus_access31916); if (state.failed) return ba;
                    match(input,TO,FOLLOW_TO_in_bus_access31918); if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12829:2: ( ( ( PROVIDES BUS ACCESS ) | ( REQUIRES BUS ACCESS ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12829:3: ( ( PROVIDES BUS ACCESS ) | ( REQUIRES BUS ACCESS ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12829:3: ( ( PROVIDES BUS ACCESS ) | ( REQUIRES BUS ACCESS ) )
            int alt650=2;
            int LA650_0 = input.LA(1);

            if ( (LA650_0==PROVIDES) ) {
                alt650=1;
            }
            else if ( (LA650_0==REQUIRES) ) {
                alt650=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ba;}
                NoViableAltException nvae =
                    new NoViableAltException("", 650, 0, input);

                throw nvae;
            }
            switch (alt650) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12829:5: ( PROVIDES BUS ACCESS )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12829:5: ( PROVIDES BUS ACCESS )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12829:6: PROVIDES BUS ACCESS
                    {
                    match(input,PROVIDES,FOLLOW_PROVIDES_in_bus_access31933); if (state.failed) return ba;
                    match(input,BUS,FOLLOW_BUS_in_bus_access31935); if (state.failed) return ba;
                    match(input,ACCESS,FOLLOW_ACCESS_in_bus_access31937); if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      					accessType = AccessType.PROVIDED;
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12835:4: ( REQUIRES BUS ACCESS )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12835:4: ( REQUIRES BUS ACCESS )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12835:5: REQUIRES BUS ACCESS
                    {
                    match(input,REQUIRES,FOLLOW_REQUIRES_in_bus_access31954); if (state.failed) return ba;
                    match(input,BUS,FOLLOW_BUS_in_bus_access31956); if (state.failed) return ba;
                    match(input,ACCESS,FOLLOW_ACCESS_in_bus_access31958); if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                      				accessType = AccessType.REQUIRED;
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			ba=Aadl2F.createBusAccess();
              			ba.setCategory(AccessCategory.BUS);
              			ba.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			ba.setLocationReference(lr);
              			if (accessType != null)
              			  ba.setKind(accessType);
              			if (refinement){
              			  ReferenceRecord refr= new ReferenceRecord(ParserReferenceType.AccessFeatureRefinementReference,
              			                                           ba,
              			                                           new String[]{id.getText()}
              			                                           );
                      unresolvedReferences.add(refr);			                                           
              			}
              		
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12860:2: (cr= classifier_reference )?
            int alt651=2;
            int LA651_0 = input.LA(1);

            if ( (LA651_0==IDENT) ) {
                alt651=1;
            }
            switch (alt651) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12860:3: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_bus_access31983);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                            if (cr.getLabels().length >1){
                              cr.setReferenceType(ParserReferenceType.AccessFeatureClassifierReference);
                             } else {
                              cr.setReferenceType(ParserReferenceType.AccessFeaturePrototypeOrClassifierReference);
                             }
                      		  cr.setReferencingObject(ba);
                      		  unresolvedReferences.add(cr);
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12871:3: (ad= array_dimension )?
            int alt652=2;
            int LA652_0 = input.LA(1);

            if ( (LA652_0==LBRACK) ) {
                alt652=1;
            }
            switch (alt652) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12871:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_bus_access31998);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return ba;
                    if ( state.backtracking==0 ) {

                           ba.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12876:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt654=2;
            int LA654_0 = input.LA(1);

            if ( (LA654_0==LCURLY) ) {
                alt654=1;
            }
            switch (alt654) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12876:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_bus_access32013); if (state.failed) return ba;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12877:4: (pa= property_association )+
                    int cnt653=0;
                    loop653:
                    do {
                        int alt653=2;
                        int LA653_0 = input.LA(1);

                        if ( (LA653_0==IDENT) ) {
                            alt653=1;
                        }


                        switch (alt653) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12877:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_bus_access32021);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return ba;
                    	    if ( state.backtracking==0 ) {

                    	             ba.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt653 >= 1 ) break loop653;
                    	    if (state.backtracking>0) {state.failed=true; return ba;}
                                EarlyExitException eee =
                                    new EarlyExitException(653, input);
                                throw eee;
                        }
                        cnt653++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_bus_access32039); if (state.failed) return ba;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_bus_access32048); if (state.failed) return ba;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return ba;
    }
    // $ANTLR end "bus_access"


    // $ANTLR start "subprogram_access"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12928:1: subprogram_access[boolean extension] returns [ SubprogramAccess sa ] : id= IDENT COLON ( REFINED TO )? ( ( PROVIDES SUBPROGRAM ACCESS ) | ( REQUIRES SUBPROGRAM ACCESS ) ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final SubprogramAccess subprogram_access(boolean extension) throws RecognitionException {
        SubprogramAccess sa = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		AccessType accessType = null;
        		boolean refinement=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12933:2: (id= IDENT COLON ( REFINED TO )? ( ( PROVIDES SUBPROGRAM ACCESS ) | ( REQUIRES SUBPROGRAM ACCESS ) ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12934:2: id= IDENT COLON ( REFINED TO )? ( ( PROVIDES SUBPROGRAM ACCESS ) | ( REQUIRES SUBPROGRAM ACCESS ) ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_access32125); if (state.failed) return sa;
            match(input,COLON,FOLLOW_COLON_in_subprogram_access32127); if (state.failed) return sa;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12935:2: ( REFINED TO )?
            int alt655=2;
            int LA655_0 = input.LA(1);

            if ( (LA655_0==REFINED) ) {
                alt655=1;
            }
            switch (alt655) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12935:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_subprogram_access32132); if (state.failed) return sa;
                    match(input,TO,FOLLOW_TO_in_subprogram_access32134); if (state.failed) return sa;
                    if ( state.backtracking==0 ) {

                            if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12943:2: ( ( PROVIDES SUBPROGRAM ACCESS ) | ( REQUIRES SUBPROGRAM ACCESS ) )
            int alt656=2;
            int LA656_0 = input.LA(1);

            if ( (LA656_0==PROVIDES) ) {
                alt656=1;
            }
            else if ( (LA656_0==REQUIRES) ) {
                alt656=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sa;}
                NoViableAltException nvae =
                    new NoViableAltException("", 656, 0, input);

                throw nvae;
            }
            switch (alt656) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12943:4: ( PROVIDES SUBPROGRAM ACCESS )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12943:4: ( PROVIDES SUBPROGRAM ACCESS )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12943:5: PROVIDES SUBPROGRAM ACCESS
                    {
                    match(input,PROVIDES,FOLLOW_PROVIDES_in_subprogram_access32148); if (state.failed) return sa;
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_access32150); if (state.failed) return sa;
                    match(input,ACCESS,FOLLOW_ACCESS_in_subprogram_access32152); if (state.failed) return sa;
                    if ( state.backtracking==0 ) {

                      				accessType = AccessType.PROVIDED;
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12948:5: ( REQUIRES SUBPROGRAM ACCESS )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12948:5: ( REQUIRES SUBPROGRAM ACCESS )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12948:6: REQUIRES SUBPROGRAM ACCESS
                    {
                    match(input,REQUIRES,FOLLOW_REQUIRES_in_subprogram_access32168); if (state.failed) return sa;
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_access32170); if (state.failed) return sa;
                    match(input,ACCESS,FOLLOW_ACCESS_in_subprogram_access32172); if (state.failed) return sa;
                    if ( state.backtracking==0 ) {

                      	 			accessType = AccessType.REQUIRED;
                      	 		
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			sa = Aadl2F.createSubprogramAccess();
              			sa.setCategory(AccessCategory.SUBPROGRAM);
              			sa.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			sa.setLocationReference(lr);
              			if (accessType != null)
              			 sa.setKind(accessType);
              			if (refinement){
              			  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.AccessFeatureRefinementReference,
              			                                           sa,
              			                                           new String[]{id.getText()}
              			                                           );
                      unresolvedReferences.add(rr);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12972:2: (cr= classifier_reference )?
            int alt657=2;
            int LA657_0 = input.LA(1);

            if ( (LA657_0==IDENT) ) {
                alt657=1;
            }
            switch (alt657) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12972:4: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_subprogram_access32201);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return sa;
                    if ( state.backtracking==0 ) {

                            if (cr.getLabels().length >1){
                              cr.setReferenceType(ParserReferenceType.AccessFeatureClassifierReference);
                             } else {
                              cr.setReferenceType(ParserReferenceType.AccessFeaturePrototypeOrClassifierReference);
                             }
                      		  cr.setReferencingObject(sa);
                      		  unresolvedReferences.add(cr);
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12983:3: (ad= array_dimension )?
            int alt658=2;
            int LA658_0 = input.LA(1);

            if ( (LA658_0==LBRACK) ) {
                alt658=1;
            }
            switch (alt658) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12983:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_subprogram_access32217);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return sa;
                    if ( state.backtracking==0 ) {

                           sa.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12988:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt660=2;
            int LA660_0 = input.LA(1);

            if ( (LA660_0==LCURLY) ) {
                alt660=1;
            }
            switch (alt660) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12988:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_subprogram_access32232); if (state.failed) return sa;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12989:4: (pa= property_association )+
                    int cnt659=0;
                    loop659:
                    do {
                        int alt659=2;
                        int LA659_0 = input.LA(1);

                        if ( (LA659_0==IDENT) ) {
                            alt659=1;
                        }


                        switch (alt659) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:12989:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_subprogram_access32240);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return sa;
                    	    if ( state.backtracking==0 ) {

                    	             sa.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt659 >= 1 ) break loop659;
                    	    if (state.backtracking>0) {state.failed=true; return sa;}
                                EarlyExitException eee =
                                    new EarlyExitException(659, input);
                                throw eee;
                        }
                        cnt659++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_subprogram_access32258); if (state.failed) return sa;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_subprogram_access32266); if (state.failed) return sa;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return sa;
    }
    // $ANTLR end "subprogram_access"


    // $ANTLR start "subprogram_group_access"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13004:1: subprogram_group_access[boolean extension] returns [SubprogramGroupAccess sga] : id= IDENT COLON ( REFINED TO )? ( PROVIDES SUBPROGRAM GROUP ACCESS | REQUIRES SUBPROGRAM GROUP ACCESS ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI ;
    public final SubprogramGroupAccess subprogram_group_access(boolean extension) throws RecognitionException {
        SubprogramGroupAccess sga = null;

        Token id=null;
        ReferenceRecord cr = null;

        ArraySpecification ad = null;

        PropertyAssociation pa = null;



        		AccessType accessType = null;
        		boolean refinement=false;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13009:2: (id= IDENT COLON ( REFINED TO )? ( PROVIDES SUBPROGRAM GROUP ACCESS | REQUIRES SUBPROGRAM GROUP ACCESS ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13010:2: id= IDENT COLON ( REFINED TO )? ( PROVIDES SUBPROGRAM GROUP ACCESS | REQUIRES SUBPROGRAM GROUP ACCESS ) (cr= classifier_reference )? (ad= array_dimension )? ( LCURLY (pa= property_association )+ RCURLY )? SEMI
            {
            id=(Token)match(input,IDENT,FOLLOW_IDENT_in_subprogram_group_access32306); if (state.failed) return sga;
            match(input,COLON,FOLLOW_COLON_in_subprogram_group_access32308); if (state.failed) return sga;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13011:2: ( REFINED TO )?
            int alt661=2;
            int LA661_0 = input.LA(1);

            if ( (LA661_0==REFINED) ) {
                alt661=1;
            }
            switch (alt661) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13011:3: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_subprogram_group_access32312); if (state.failed) return sga;
                    match(input,TO,FOLLOW_TO_in_subprogram_group_access32314); if (state.failed) return sga;
                    if ( state.backtracking==0 ) {

                      			if (!extension){
                                throw new FailedPredicateException(input,"feature ", "refinement only allowed in extension");
                            }
                      			refinement=true;
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13019:2: ( PROVIDES SUBPROGRAM GROUP ACCESS | REQUIRES SUBPROGRAM GROUP ACCESS )
            int alt662=2;
            int LA662_0 = input.LA(1);

            if ( (LA662_0==PROVIDES) ) {
                alt662=1;
            }
            else if ( (LA662_0==REQUIRES) ) {
                alt662=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sga;}
                NoViableAltException nvae =
                    new NoViableAltException("", 662, 0, input);

                throw nvae;
            }
            switch (alt662) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13019:5: PROVIDES SUBPROGRAM GROUP ACCESS
                    {
                    match(input,PROVIDES,FOLLOW_PROVIDES_in_subprogram_group_access32328); if (state.failed) return sga;
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_group_access32330); if (state.failed) return sga;
                    match(input,GROUP,FOLLOW_GROUP_in_subprogram_group_access32332); if (state.failed) return sga;
                    match(input,ACCESS,FOLLOW_ACCESS_in_subprogram_group_access32334); if (state.failed) return sga;
                    if ( state.backtracking==0 ) {

                      			  accessType = AccessType.PROVIDED;
                      			
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13023:5: REQUIRES SUBPROGRAM GROUP ACCESS
                    {
                    match(input,REQUIRES,FOLLOW_REQUIRES_in_subprogram_group_access32345); if (state.failed) return sga;
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_subprogram_group_access32347); if (state.failed) return sga;
                    match(input,GROUP,FOLLOW_GROUP_in_subprogram_group_access32349); if (state.failed) return sga;
                    match(input,ACCESS,FOLLOW_ACCESS_in_subprogram_group_access32351); if (state.failed) return sga;
                    if ( state.backtracking==0 ) {

                      				accessType = AccessType.REQUIRED;
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			sga = Aadl2F.createSubprogramGroupAccess();
              			sga.setCategory(AccessCategory.SUBPROGRAM_GROUP);
              			sga.setName(id.getText());
              			LocationReference lr = new LocationReference();
              			lr.setFilename(this.getFilename());
              			lr.setLine(id.getLine());
              			sga.setLocationReference(lr);
              			if (accessType != null)
              			 sga.setKind(accessType);
              			if (refinement){
              			  ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.AccessFeatureRefinementReference,
              			                                           sga,
              			                                           new String[]{id.getText()}
              			                                           );
              			  unresolvedReferences.add(rr);
              			}
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13047:2: (cr= classifier_reference )?
            int alt663=2;
            int LA663_0 = input.LA(1);

            if ( (LA663_0==IDENT) ) {
                alt663=1;
            }
            switch (alt663) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13047:4: cr= classifier_reference
                    {
                    pushFollow(FOLLOW_classifier_reference_in_subprogram_group_access32374);
                    cr=classifier_reference();

                    state._fsp--;
                    if (state.failed) return sga;
                    if ( state.backtracking==0 ) {

                            if (cr.getLabels().length >1){
                              cr.setReferenceType(ParserReferenceType.AccessFeatureClassifierReference);
                             } else {
                              cr.setReferenceType(ParserReferenceType.AccessFeaturePrototypeOrClassifierReference);
                             }
                      		  cr.setReferencingObject(sga);
                      		  unresolvedReferences.add(cr);
                      		
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13058:3: (ad= array_dimension )?
            int alt664=2;
            int LA664_0 = input.LA(1);

            if ( (LA664_0==LBRACK) ) {
                alt664=1;
            }
            switch (alt664) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13058:4: ad= array_dimension
                    {
                    pushFollow(FOLLOW_array_dimension_in_subprogram_group_access32389);
                    ad=array_dimension();

                    state._fsp--;
                    if (state.failed) return sga;
                    if ( state.backtracking==0 ) {

                           sga.setArraySpecification(ad);
                         
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13063:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt666=2;
            int LA666_0 = input.LA(1);

            if ( (LA666_0==LCURLY) ) {
                alt666=1;
            }
            switch (alt666) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13063:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_subprogram_group_access32404); if (state.failed) return sga;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13064:4: (pa= property_association )+
                    int cnt665=0;
                    loop665:
                    do {
                        int alt665=2;
                        int LA665_0 = input.LA(1);

                        if ( (LA665_0==IDENT) ) {
                            alt665=1;
                        }


                        switch (alt665) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13064:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_subprogram_group_access32412);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return sga;
                    	    if ( state.backtracking==0 ) {

                    	             sga.getOwnedPropertyAssociations().add(pa);
                    	           
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt665 >= 1 ) break loop665;
                    	    if (state.backtracking>0) {state.failed=true; return sga;}
                                EarlyExitException eee =
                                    new EarlyExitException(665, input);
                                throw eee;
                        }
                        cnt665++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_subprogram_group_access32430); if (state.failed) return sga;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_subprogram_group_access32438); if (state.failed) return sga;

            }

        }
        catch (RecognitionException ex) {

                reportError(ex);
                consumeUntil(input,SEMI);
                input.consume();
              
        }
        finally {
        }
        return sga;
    }
    // $ANTLR end "subprogram_group_access"


    // $ANTLR start "connection"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13173:1: connection[boolean extension] returns [Connection conn] : ( (pconn= port_connection[extension] ) | (pgconn= feature_group_connection[extension] ) | (pmconn= parameter_connection[extension] ) | (aconn= access_connection[extension] ) | (fconn= feature_connection[extension] ) ) ;
    public final Connection connection(boolean extension) throws RecognitionException {
        Connection conn = null;

        PortConnection pconn = null;

        FeatureGroupConnection pgconn = null;

        ParameterConnection pmconn = null;

        AccessConnection aconn = null;

        FeatureConnection fconn = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13174:2: ( ( (pconn= port_connection[extension] ) | (pgconn= feature_group_connection[extension] ) | (pmconn= parameter_connection[extension] ) | (aconn= access_connection[extension] ) | (fconn= feature_connection[extension] ) ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13175:3: ( (pconn= port_connection[extension] ) | (pgconn= feature_group_connection[extension] ) | (pmconn= parameter_connection[extension] ) | (aconn= access_connection[extension] ) | (fconn= feature_connection[extension] ) )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13175:3: ( (pconn= port_connection[extension] ) | (pgconn= feature_group_connection[extension] ) | (pmconn= parameter_connection[extension] ) | (aconn= access_connection[extension] ) | (fconn= feature_connection[extension] ) )
            int alt667=5;
            alt667 = dfa667.predict(input);
            switch (alt667) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13176:4: (pconn= port_connection[extension] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13176:4: (pconn= port_connection[extension] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13176:5: pconn= port_connection[extension]
                    {
                    pushFollow(FOLLOW_port_connection_in_connection32575);
                    pconn=port_connection(extension);

                    state._fsp--;
                    if (state.failed) return conn;
                    if ( state.backtracking==0 ) {

                      					conn = pconn;
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13181:6: (pgconn= feature_group_connection[extension] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13181:6: (pgconn= feature_group_connection[extension] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13181:7: pgconn= feature_group_connection[extension]
                    {
                    pushFollow(FOLLOW_feature_group_connection_in_connection32601);
                    pgconn=feature_group_connection(extension);

                    state._fsp--;
                    if (state.failed) return conn;
                    if ( state.backtracking==0 ) {

                      		 			conn = pgconn;
                      		 		
                    }

                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13186:6: (pmconn= parameter_connection[extension] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13186:6: (pmconn= parameter_connection[extension] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13186:7: pmconn= parameter_connection[extension]
                    {
                    pushFollow(FOLLOW_parameter_connection_in_connection32628);
                    pmconn=parameter_connection(extension);

                    state._fsp--;
                    if (state.failed) return conn;
                    if ( state.backtracking==0 ) {

                      		 			conn = pmconn;
                      		 		
                    }

                    }


                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13191:6: (aconn= access_connection[extension] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13191:6: (aconn= access_connection[extension] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13191:8: aconn= access_connection[extension]
                    {
                    pushFollow(FOLLOW_access_connection_in_connection32656);
                    aconn=access_connection(extension);

                    state._fsp--;
                    if (state.failed) return conn;
                    if ( state.backtracking==0 ) {

                      		 	    conn = aconn;
                      		 	  
                    }

                    }


                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13196:5: (fconn= feature_connection[extension] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13196:5: (fconn= feature_connection[extension] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13196:7: fconn= feature_connection[extension]
                    {
                    pushFollow(FOLLOW_feature_connection_in_connection32683);
                    fconn=feature_connection(extension);

                    state._fsp--;
                    if (state.failed) return conn;
                    if ( state.backtracking==0 ) {

                      			   conn = fconn;
                      			 
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException ex) {

                	reportError(ex);
            		consumeUntil(input,SEMI);
            		input.consume();
                
        }
        finally {
        }
        return conn;
    }
    // $ANTLR end "connection"


    // $ANTLR start "feature_connection"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13237:1: feature_connection[boolean extension] returns [FeatureConnection fc] : (connid= IDENT COLON )? ( REFINED TO )? (srcCtxId= IDENT DOT )? srcid= IDENT ( ARROW | ( BARROW ) ) (dstCtxId= IDENT DOT )? dstid= IDENT ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fc] )? SEMI ;
    public final FeatureConnection feature_connection(boolean extension) throws RecognitionException {
        FeatureConnection fc = null;

        Token connid=null;
        Token srcCtxId=null;
        Token srcid=null;
        Token dstCtxId=null;
        Token dstid=null;
        PropertyAssociation pa = null;



            String srcContextLabel="";
            String dstContextLabel="";
            boolean bidirectional = false;
            boolean refinement = false;
            String idString="";
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13245:3: ( (connid= IDENT COLON )? ( REFINED TO )? (srcCtxId= IDENT DOT )? srcid= IDENT ( ARROW | ( BARROW ) ) (dstCtxId= IDENT DOT )? dstid= IDENT ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fc] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13246:3: (connid= IDENT COLON )? ( REFINED TO )? (srcCtxId= IDENT DOT )? srcid= IDENT ( ARROW | ( BARROW ) ) (dstCtxId= IDENT DOT )? dstid= IDENT ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fc] )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13246:3: (connid= IDENT COLON )?
            int alt668=2;
            int LA668_0 = input.LA(1);

            if ( (LA668_0==IDENT) ) {
                int LA668_1 = input.LA(2);

                if ( (LA668_1==COLON) ) {
                    alt668=1;
                }
            }
            switch (alt668) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13246:4: connid= IDENT COLON
                    {
                    connid=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_connection32770); if (state.failed) return fc;
                    match(input,COLON,FOLLOW_COLON_in_feature_connection32772); if (state.failed) return fc;
                    if ( state.backtracking==0 ) {

                            idString = connid.getText();
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13251:3: ( REFINED TO )?
            int alt669=2;
            int LA669_0 = input.LA(1);

            if ( (LA669_0==REFINED) ) {
                alt669=1;
            }
            switch (alt669) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13251:4: REFINED TO
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_feature_connection32788); if (state.failed) return fc;
                    match(input,TO,FOLLOW_TO_in_feature_connection32790); if (state.failed) return fc;
                    if ( state.backtracking==0 ) {

                             //refinement only allowed in extensions
                             if (!extension){
                              throw new FailedPredicateException(input, "port connection", "refinement only allowed in extensions");
                             }
                             if (idString.length() == 0){
                              throw new FailedPredicateException(input, "port connection", "refinement requires a name");
                             }
                            refinement = true;
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13263:3: (srcCtxId= IDENT DOT )?
            int alt670=2;
            int LA670_0 = input.LA(1);

            if ( (LA670_0==IDENT) ) {
                int LA670_1 = input.LA(2);

                if ( (LA670_1==DOT) ) {
                    alt670=1;
                }
            }
            switch (alt670) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13263:4: srcCtxId= IDENT DOT
                    {
                    srcCtxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_connection32808); if (state.failed) return fc;
                    match(input,DOT,FOLLOW_DOT_in_feature_connection32810); if (state.failed) return fc;
                    if ( state.backtracking==0 ) {
                       
                            srcContextLabel = srcCtxId.getText();
                          
                    }

                    }
                    break;

            }

            srcid=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_connection32827); if (state.failed) return fc;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13269:3: ( ARROW | ( BARROW ) )
            int alt671=2;
            int LA671_0 = input.LA(1);

            if ( (LA671_0==ARROW) ) {
                alt671=1;
            }
            else if ( (LA671_0==BARROW) ) {
                alt671=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return fc;}
                NoViableAltException nvae =
                    new NoViableAltException("", 671, 0, input);

                throw nvae;
            }
            switch (alt671) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13269:4: ARROW
                    {
                    match(input,ARROW,FOLLOW_ARROW_in_feature_connection32832); if (state.failed) return fc;

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13270:4: ( BARROW )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13270:4: ( BARROW )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13270:5: BARROW
                    {
                    match(input,BARROW,FOLLOW_BARROW_in_feature_connection32839); if (state.failed) return fc;
                    if ( state.backtracking==0 ) {

                              bidirectional = true;
                            
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13276:3: (dstCtxId= IDENT DOT )?
            int alt672=2;
            int LA672_0 = input.LA(1);

            if ( (LA672_0==IDENT) ) {
                int LA672_1 = input.LA(2);

                if ( (LA672_1==DOT) ) {
                    alt672=1;
                }
            }
            switch (alt672) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13276:4: dstCtxId= IDENT DOT
                    {
                    dstCtxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_connection32866); if (state.failed) return fc;
                    match(input,DOT,FOLLOW_DOT_in_feature_connection32868); if (state.failed) return fc;
                    if ( state.backtracking==0 ) {

                            dstContextLabel = dstCtxId.getText();
                          
                    }

                    }
                    break;

            }

            dstid=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_connection32885); if (state.failed) return fc;
            if ( state.backtracking==0 ) {

                  fc = Aadl2F.createFeatureConnection();
                  fc.setLocationReference(this.getFilename(), srcid.getLine());
                  fc.setName(idString);
                  fc.setBidirectional(bidirectional);
                  fc.setKind(ConnectionKind.FEATURE);
                  if (srcContextLabel.length() > 0){
                    ReferenceRecord srcContextReference = new ReferenceRecord(ParserReferenceType.FeatureConnectionSourceContextReference,
                                                                              fc,
                                                                              new String[]{srcContextLabel}
                                                                              );
                    unresolvedReferences.add(srcContextReference);                                                               
                  }
                  if (dstContextLabel.length() >0){
                    ReferenceRecord dstContextReference = new ReferenceRecord(ParserReferenceType.FeatureConnectionDestinationContextReference,
                                                                              fc,
                                                                              new String[]{dstContextLabel}
                                                                              );
                    unresolvedReferences.add(dstContextReference);                                                                
                  }
                  
                  ReferenceRecord srcReference = new ReferenceRecord(ParserReferenceType.FeatureConnectionSourceReference,
                                                                     fc,
                                                                      new String[]{srcid.getText()}
                                                                     );
                  unresolvedReferences.add(srcReference);
                                                                         
                  ReferenceRecord dstReference = new ReferenceRecord(ParserReferenceType.FeatureConnectionDestinationReference,
                                                                     fc,
                                                                     new String[]{dstid.getText()}
                                                                     );
                  unresolvedReferences.add(dstReference);
                  if (refinement){
                    ReferenceRecord refRef = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                                                                 fc,
                                                                 new String[]{idString}
                                                                 );
                    unresolvedReferences.add(refRef);                                                  
                  }                                                             
                
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13322:5: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt674=2;
            int LA674_0 = input.LA(1);

            if ( (LA674_0==LCURLY) ) {
                alt674=1;
            }
            switch (alt674) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13322:7: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_feature_connection32897); if (state.failed) return fc;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13323:7: (pa= property_association )+
                    int cnt673=0;
                    loop673:
                    do {
                        int alt673=2;
                        int LA673_0 = input.LA(1);

                        if ( (LA673_0==IDENT) ) {
                            alt673=1;
                        }


                        switch (alt673) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13323:8: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_feature_connection32911);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return fc;
                    	    if ( state.backtracking==0 ) {

                    	                fc.getOwnedPropertyAssociations().add(pa);
                    	              
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt673 >= 1 ) break loop673;
                    	    if (state.backtracking>0) {state.failed=true; return fc;}
                                EarlyExitException eee =
                                    new EarlyExitException(673, input);
                                throw eee;
                        }
                        cnt673++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_feature_connection32939); if (state.failed) return fc;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13330:5: ( in_modes_and_transitions[fc] )?
            int alt675=2;
            int LA675_0 = input.LA(1);

            if ( (LA675_0==IN) ) {
                alt675=1;
            }
            switch (alt675) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13330:7: in_modes_and_transitions[fc]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_feature_connection32954);
                    in_modes_and_transitions(fc);

                    state._fsp--;
                    if (state.failed) return fc;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_feature_connection32967); if (state.failed) return fc;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fc;
    }
    // $ANTLR end "feature_connection"


    // $ANTLR start "port_connection_port_association"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13335:1: port_connection_port_association[boolean extension, boolean refinement, PortConnection dc] : ( ( ( SELF ) | ( PROCESSOR ) | (srcCtxId= IDENT ) ) DOT )? srcportid= IDENT ( ARROW | BARROW ) ( ( ( SELF ) | ( PROCESSOR ) | (dstCtxId= IDENT ) ) DOT )? dstportid= IDENT ;
    public final void port_connection_port_association(boolean extension, boolean refinement, PortConnection dc) throws RecognitionException {
        Token srcCtxId=null;
        Token srcportid=null;
        Token dstCtxId=null;
        Token dstportid=null;


            boolean srcSelf = false;
            boolean srcProcessor = false;
            boolean dstSelf = false;
            boolean dstProcessor = false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13342:3: ( ( ( ( SELF ) | ( PROCESSOR ) | (srcCtxId= IDENT ) ) DOT )? srcportid= IDENT ( ARROW | BARROW ) ( ( ( SELF ) | ( PROCESSOR ) | (dstCtxId= IDENT ) ) DOT )? dstportid= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13343:4: ( ( ( SELF ) | ( PROCESSOR ) | (srcCtxId= IDENT ) ) DOT )? srcportid= IDENT ( ARROW | BARROW ) ( ( ( SELF ) | ( PROCESSOR ) | (dstCtxId= IDENT ) ) DOT )? dstportid= IDENT
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13343:4: ( ( ( SELF ) | ( PROCESSOR ) | (srcCtxId= IDENT ) ) DOT )?
            int alt677=2;
            int LA677_0 = input.LA(1);

            if ( (LA677_0==PROCESSOR||LA677_0==SELF) ) {
                alt677=1;
            }
            else if ( (LA677_0==IDENT) ) {
                int LA677_2 = input.LA(2);

                if ( (LA677_2==DOT) ) {
                    alt677=1;
                }
            }
            switch (alt677) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13344:5: ( ( SELF ) | ( PROCESSOR ) | (srcCtxId= IDENT ) ) DOT
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13344:5: ( ( SELF ) | ( PROCESSOR ) | (srcCtxId= IDENT ) )
                    int alt676=3;
                    switch ( input.LA(1) ) {
                    case SELF:
                        {
                        alt676=1;
                        }
                        break;
                    case PROCESSOR:
                        {
                        alt676=2;
                        }
                        break;
                    case IDENT:
                        {
                        alt676=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 676, 0, input);

                        throw nvae;
                    }

                    switch (alt676) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13345:6: ( SELF )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13345:6: ( SELF )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13345:7: SELF
                            {
                            match(input,SELF,FOLLOW_SELF_in_port_connection_port_association33005); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      srcSelf= true;
                                     
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13350:7: ( PROCESSOR )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13350:7: ( PROCESSOR )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13350:8: PROCESSOR
                            {
                            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_port_connection_port_association33030); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      srcProcessor = true;
                                     
                            }

                            }


                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13355:7: (srcCtxId= IDENT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13355:7: (srcCtxId= IDENT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13355:8: srcCtxId= IDENT
                            {
                            srcCtxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_port_connection_port_association33057); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                         ReferenceRecord cref = new ReferenceRecord(ParserReferenceType.PortConnectionSourceContextReference,
                                                                                    dc,
                                                                                    new String[]{srcCtxId.getText()}
                                                                                    );
                                        unresolvedReferences.add(cref);
                                      
                            }

                            }


                            }
                            break;

                    }

                    match(input,DOT,FOLLOW_DOT_in_port_connection_port_association33087); if (state.failed) return ;

                    }
                    break;

            }

            srcportid=(Token)match(input,IDENT,FOLLOW_IDENT_in_port_connection_port_association33100); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                       if (srcProcessor){
                        ProcessorPort srcProcPort = Aadl2F.createProcessorPort();
                        srcProcPort.setLocationReference(this.getFilename(), srcportid.getLine());
                        srcProcPort.setName(srcportid.getText());
                        dc.setSource(srcProcPort);
                       } else if (srcSelf){
                        InternalEvent ie = Aadl2F.createInternalEvent();
                        ie.setLocationReference(this.getFilename(), srcportid.getLine());
                        ie.setName(srcportid.getText());
                        dc.setSource(ie);
                       } else {
                         ReferenceRecord pref = new ReferenceRecord(ParserReferenceType.PortConnectionSourcePortReference,
                                                                  dc,
                                                                  new String[]{srcportid.getText()}
                                                                 );
                        unresolvedReferences.add(pref);
                      }
                   
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13387:4: ( ARROW | BARROW )
            int alt678=2;
            int LA678_0 = input.LA(1);

            if ( (LA678_0==ARROW) ) {
                alt678=1;
            }
            else if ( (LA678_0==BARROW) ) {
                alt678=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 678, 0, input);

                throw nvae;
            }
            switch (alt678) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13387:6: ARROW
                    {
                    match(input,ARROW,FOLLOW_ARROW_in_port_connection_port_association33114); if (state.failed) return ;

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13388:6: BARROW
                    {
                    match(input,BARROW,FOLLOW_BARROW_in_port_connection_port_association33122); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                           dc.setBidirectional(true); 
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13393:5: ( ( ( SELF ) | ( PROCESSOR ) | (dstCtxId= IDENT ) ) DOT )?
            int alt680=2;
            int LA680_0 = input.LA(1);

            if ( (LA680_0==PROCESSOR||LA680_0==SELF) ) {
                alt680=1;
            }
            else if ( (LA680_0==IDENT) ) {
                int LA680_2 = input.LA(2);

                if ( (LA680_2==DOT) ) {
                    alt680=1;
                }
            }
            switch (alt680) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13394:6: ( ( SELF ) | ( PROCESSOR ) | (dstCtxId= IDENT ) ) DOT
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13394:6: ( ( SELF ) | ( PROCESSOR ) | (dstCtxId= IDENT ) )
                    int alt679=3;
                    switch ( input.LA(1) ) {
                    case SELF:
                        {
                        alt679=1;
                        }
                        break;
                    case PROCESSOR:
                        {
                        alt679=2;
                        }
                        break;
                    case IDENT:
                        {
                        alt679=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 679, 0, input);

                        throw nvae;
                    }

                    switch (alt679) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13395:6: ( SELF )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13395:6: ( SELF )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13395:7: SELF
                            {
                            match(input,SELF,FOLLOW_SELF_in_port_connection_port_association33156); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      dstSelf = true;
                                     
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13400:7: ( PROCESSOR )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13400:7: ( PROCESSOR )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13400:8: PROCESSOR
                            {
                            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_port_connection_port_association33181); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      dstProcessor = true;
                                     
                            }

                            }


                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13405:7: (dstCtxId= IDENT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13405:7: (dstCtxId= IDENT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13405:8: dstCtxId= IDENT
                            {
                            dstCtxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_port_connection_port_association33208); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                       ReferenceRecord cref = new ReferenceRecord(ParserReferenceType.PortConnectionDestinationContextReference,
                                                                                  dc,
                                                                                  new String[]{dstCtxId.getText()}
                                                                                  );
                                      unresolvedReferences.add(cref);
                                     
                            }

                            }


                            }
                            break;

                    }

                    match(input,DOT,FOLLOW_DOT_in_port_connection_port_association33238); if (state.failed) return ;

                    }
                    break;

            }

            dstportid=(Token)match(input,IDENT,FOLLOW_IDENT_in_port_connection_port_association33251); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                    if (dstSelf){
                      InternalEvent ie = Aadl2F.createInternalEvent();
                      ie.setLocationReference(this.getFilename(), dstportid.getLine());
                      ie.setName(dstportid.getText());
                      dc.setDestination(ie);
                    } else if (dstProcessor) {
                      ProcessorPort pp = Aadl2F.createProcessorPort();
                      pp.setLocationReference(this.getFilename(), dstportid.getLine());
                      pp.setName(dstportid.getText());
                      dc.setDestination(pp);      
                    } else {
                       ReferenceRecord pref = new ReferenceRecord(ParserReferenceType.PortConnectionDestinationPortReference,
                                                                  dc,
                                                                  new String[]{dstportid.getText()}
                                                                 );
                        unresolvedReferences.add(pref);
                      }
                   
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "port_connection_port_association"


    // $ANTLR start "port_connection"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13439:1: port_connection[boolean extension] returns [PortConnection dc] : (id= IDENT COLON )? ( REFINED TO (lbl= PORT ( port_connection_port_association[extension, refinement, dc] )? ) | (lbl= PORT port_connection_port_association[extension, refinement, dc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[dc] )? SEMI ;
    public final PortConnection port_connection(boolean extension) throws RecognitionException {
        PortConnection dc = null;

        Token id=null;
        Token lbl=null;
        PropertyAssociation pa = null;


         
              	//FeatureReference cr;
              boolean refinement = false;
              boolean self=false;
              boolean processor=false;
              String srcContext = "";
              String idString="";
           
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13447:5: ( (id= IDENT COLON )? ( REFINED TO (lbl= PORT ( port_connection_port_association[extension, refinement, dc] )? ) | (lbl= PORT port_connection_port_association[extension, refinement, dc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[dc] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13448:3: (id= IDENT COLON )? ( REFINED TO (lbl= PORT ( port_connection_port_association[extension, refinement, dc] )? ) | (lbl= PORT port_connection_port_association[extension, refinement, dc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[dc] )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13448:3: (id= IDENT COLON )?
            int alt681=2;
            int LA681_0 = input.LA(1);

            if ( (LA681_0==IDENT) ) {
                alt681=1;
            }
            switch (alt681) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13448:4: id= IDENT COLON
                    {
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_port_connection33291); if (state.failed) return dc;
                    match(input,COLON,FOLLOW_COLON_in_port_connection33293); if (state.failed) return dc;
                    if ( state.backtracking==0 ) {

                      	     idString = id.getText();
                      	   
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13453:3: ( REFINED TO (lbl= PORT ( port_connection_port_association[extension, refinement, dc] )? ) | (lbl= PORT port_connection_port_association[extension, refinement, dc] ) )
            int alt683=2;
            int LA683_0 = input.LA(1);

            if ( (LA683_0==REFINED) ) {
                alt683=1;
            }
            else if ( (LA683_0==PORT) ) {
                alt683=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return dc;}
                NoViableAltException nvae =
                    new NoViableAltException("", 683, 0, input);

                throw nvae;
            }
            switch (alt683) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13454:3: REFINED TO (lbl= PORT ( port_connection_port_association[extension, refinement, dc] )? )
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_port_connection33312); if (state.failed) return dc;
                    match(input,TO,FOLLOW_TO_in_port_connection33314); if (state.failed) return dc;
                    if ( state.backtracking==0 ) {

                      	     //refinement only allowed in extensions
                      	     if (!extension){
                              throw new FailedPredicateException(input, "port connection", "refinement only allowed in extensions");
                      	     }
                      	     if (idString.length() == 0){
                              throw new FailedPredicateException(input, "port connection", "refinement requires a name");
                      	     }
                      	     refinement=true;
                      	   
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13465:4: (lbl= PORT ( port_connection_port_association[extension, refinement, dc] )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13465:5: lbl= PORT ( port_connection_port_association[extension, refinement, dc] )?
                    {
                    lbl=(Token)match(input,PORT,FOLLOW_PORT_in_port_connection33329); if (state.failed) return dc;
                    if ( state.backtracking==0 ) {
                       
                            dc=Aadl2F.createPortConnection();
                            dc.setName(idString);
                            dc.setLocationReference(this.getFilename(),lbl.getLine());
                            dc.setKind(ConnectionKind.PORT);
                            if (refinement){
                              ReferenceRecord rref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                                                                         dc,
                                                                         new String[]{idString}
                                                                        );
                              unresolvedReferences.add(rref);
                            }
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13479:5: ( port_connection_port_association[extension, refinement, dc] )?
                    int alt682=2;
                    int LA682_0 = input.LA(1);

                    if ( (LA682_0==IDENT||LA682_0==PROCESSOR||LA682_0==SELF) ) {
                        alt682=1;
                    }
                    switch (alt682) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13479:6: port_connection_port_association[extension, refinement, dc]
                            {
                            pushFollow(FOLLOW_port_connection_port_association_in_port_connection33343);
                            port_connection_port_association(extension, refinement, dc);

                            state._fsp--;
                            if (state.failed) return dc;

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13483:3: (lbl= PORT port_connection_port_association[extension, refinement, dc] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13483:3: (lbl= PORT port_connection_port_association[extension, refinement, dc] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13483:4: lbl= PORT port_connection_port_association[extension, refinement, dc]
                    {
                    lbl=(Token)match(input,PORT,FOLLOW_PORT_in_port_connection33371); if (state.failed) return dc;
                    if ( state.backtracking==0 ) {
                       
                            dc=Aadl2F.createPortConnection();
                            dc.setName(idString);
                            dc.setLocationReference(this.getFilename(),lbl.getLine());
                            dc.setKind(ConnectionKind.PORT);
                            if (refinement){
                              ReferenceRecord rref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                                                                         dc,
                                                                         new String[]{idString}
                                                                        );
                              unresolvedReferences.add(rref);
                            }
                          
                    }
                    pushFollow(FOLLOW_port_connection_port_association_in_port_connection33382);
                    port_connection_port_association(extension, refinement, dc);

                    state._fsp--;
                    if (state.failed) return dc;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              				processComments(dc);
              				dc.setName(idString);
              			
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13504:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt685=2;
            int LA685_0 = input.LA(1);

            if ( (LA685_0==LCURLY) ) {
                alt685=1;
            }
            switch (alt685) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13504:5: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_port_connection33402); if (state.failed) return dc;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13505:4: (pa= property_association )+
                    int cnt684=0;
                    loop684:
                    do {
                        int alt684=2;
                        int LA684_0 = input.LA(1);

                        if ( (LA684_0==IDENT) ) {
                            alt684=1;
                        }


                        switch (alt684) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13505:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_port_connection33413);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return dc;
                    	    if ( state.backtracking==0 ) {

                    	      					dc.getOwnedPropertyAssociations().add(pa);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt684 >= 1 ) break loop684;
                    	    if (state.backtracking>0) {state.failed=true; return dc;}
                                EarlyExitException eee =
                                    new EarlyExitException(684, input);
                                throw eee;
                        }
                        cnt684++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_port_connection33432); if (state.failed) return dc;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13512:3: ( in_modes_and_transitions[dc] )?
            int alt686=2;
            int LA686_0 = input.LA(1);

            if ( (LA686_0==IN) ) {
                alt686=1;
            }
            switch (alt686) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13512:5: in_modes_and_transitions[dc]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_port_connection33443);
                    in_modes_and_transitions(dc);

                    state._fsp--;
                    if (state.failed) return dc;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_port_connection33452); if (state.failed) return dc;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return dc;
    }
    // $ANTLR end "port_connection"


    // $ANTLR start "parameter_connection_parameter_association"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13614:1: parameter_connection_parameter_association[boolean extension, boolean refined, ParameterConnection pc] : (srcCtx= IDENT DOT )? (srcPort= IDENT ) ARROW (dstCtx= IDENT DOT )? (dstPort= IDENT ) ;
    public final void parameter_connection_parameter_association(boolean extension, boolean refined, ParameterConnection pc) throws RecognitionException {
        Token srcCtx=null;
        Token srcPort=null;
        Token dstCtx=null;
        Token dstPort=null;

        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13615:3: ( (srcCtx= IDENT DOT )? (srcPort= IDENT ) ARROW (dstCtx= IDENT DOT )? (dstPort= IDENT ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13616:6: (srcCtx= IDENT DOT )? (srcPort= IDENT ) ARROW (dstCtx= IDENT DOT )? (dstPort= IDENT )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13616:6: (srcCtx= IDENT DOT )?
            int alt687=2;
            int LA687_0 = input.LA(1);

            if ( (LA687_0==IDENT) ) {
                int LA687_1 = input.LA(2);

                if ( (LA687_1==DOT) ) {
                    alt687=1;
                }
            }
            switch (alt687) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13616:7: srcCtx= IDENT DOT
                    {
                    srcCtx=(Token)match(input,IDENT,FOLLOW_IDENT_in_parameter_connection_parameter_association33571); if (state.failed) return ;
                    match(input,DOT,FOLLOW_DOT_in_parameter_connection_parameter_association33573); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                             ReferenceRecord srcCtxRef = new ReferenceRecord(ParserReferenceType.ParameterConnectionSourceContextReference,
                                                                             pc,
                                                                             new String[]{srcCtx.getText()}
                                                                             );
                             unresolvedReferences.add(srcCtxRef);
                           
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13625:4: (srcPort= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13625:5: srcPort= IDENT
            {
            srcPort=(Token)match(input,IDENT,FOLLOW_IDENT_in_parameter_connection_parameter_association33596); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                     ReferenceRecord srcRef = new ReferenceRecord(ParserReferenceType.ParameterConnectionSourceReference,
                                                                     pc,
                                                                     new String[]{srcPort.getText()}
                                                                     );
                     unresolvedReferences.add(srcRef);       
                   
            }

            }

            match(input,ARROW,FOLLOW_ARROW_in_parameter_connection_parameter_association33613); if (state.failed) return ;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13635:4: (dstCtx= IDENT DOT )?
            int alt688=2;
            int LA688_0 = input.LA(1);

            if ( (LA688_0==IDENT) ) {
                int LA688_1 = input.LA(2);

                if ( (LA688_1==DOT) ) {
                    alt688=1;
                }
            }
            switch (alt688) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13635:5: dstCtx= IDENT DOT
                    {
                    dstCtx=(Token)match(input,IDENT,FOLLOW_IDENT_in_parameter_connection_parameter_association33621); if (state.failed) return ;
                    match(input,DOT,FOLLOW_DOT_in_parameter_connection_parameter_association33623); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                             ReferenceRecord dstCtxRef = new ReferenceRecord(ParserReferenceType.ParameterConnectionDestinationContextReference,
                                                                             pc,
                                                                             new String[]{dstCtx.getText()}
                                                                             );
                             unresolvedReferences.add(dstCtxRef);
                           
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13644:4: (dstPort= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13644:5: dstPort= IDENT
            {
            dstPort=(Token)match(input,IDENT,FOLLOW_IDENT_in_parameter_connection_parameter_association33644); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                     ReferenceRecord dstRef = new ReferenceRecord(ParserReferenceType.ParameterConnectionDestinationReference,
                                                                     pc,
                                                                     new String[]{dstPort.getText()}
                                                                     );
                     unresolvedReferences.add(dstRef);      
                   
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "parameter_connection_parameter_association"


    // $ANTLR start "parameter_connection"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13655:1: parameter_connection[boolean extension] returns [ParameterConnection pc] : (id= IDENT COLON )? ( ( REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )? ) | (lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[pc] )? SEMI ;
    public final ParameterConnection parameter_connection(boolean extension) throws RecognitionException {
        ParameterConnection pc = null;

        Token id=null;
        Token lbl=null;
        PropertyAssociation pa = null;


         
              	boolean refined = false;
              	String idString="";
           
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13660:4: ( (id= IDENT COLON )? ( ( REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )? ) | (lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[pc] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13661:3: (id= IDENT COLON )? ( ( REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )? ) | (lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[pc] )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13661:3: (id= IDENT COLON )?
            int alt689=2;
            int LA689_0 = input.LA(1);

            if ( (LA689_0==IDENT) ) {
                alt689=1;
            }
            switch (alt689) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13661:4: id= IDENT COLON
                    {
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_parameter_connection33688); if (state.failed) return pc;
                    match(input,COLON,FOLLOW_COLON_in_parameter_connection33690); if (state.failed) return pc;
                    if ( state.backtracking==0 ) {

                      	     idString = id.getText();
                      	   
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13666:3: ( ( REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )? ) | (lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc] ) )
            int alt691=2;
            int LA691_0 = input.LA(1);

            if ( (LA691_0==REFINED) ) {
                alt691=1;
            }
            else if ( (LA691_0==PARAMETER) ) {
                alt691=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return pc;}
                NoViableAltException nvae =
                    new NoViableAltException("", 691, 0, input);

                throw nvae;
            }
            switch (alt691) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13667:3: ( REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13667:3: ( REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13667:4: REFINED TO lbl= PARAMETER ( parameter_connection_parameter_association[extension, refined, pc] )?
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_parameter_connection33710); if (state.failed) return pc;
                    match(input,TO,FOLLOW_TO_in_parameter_connection33712); if (state.failed) return pc;
                    if ( state.backtracking==0 ) {

                             //refinement only allowed in extensions
                             if (!extension){
                              throw new FailedPredicateException(input, "port connection", "refinement only allowed in extensions");
                             }
                             if (idString.length() == 0){
                              throw new FailedPredicateException(input, "port connection", "refinement requires a name");
                             }
                      	     refined=true;
                      	   
                    }
                    lbl=(Token)match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter_connection33727); if (state.failed) return pc;
                    if ( state.backtracking==0 ) {
                       
                            pc=Aadl2F.createParameterConnection();
                            pc.setName(idString);
                            pc.setKind(ConnectionKind.PARAMETER);
                            pc.setLocationReference(this.getFilename(),lbl.getLine());
                            
                            if (refined) {
                               ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                                                 pc,
                                                 new String[]{idString}
                                                 );
                              unresolvedReferences.add(refref);
                            }
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13693:5: ( parameter_connection_parameter_association[extension, refined, pc] )?
                    int alt690=2;
                    int LA690_0 = input.LA(1);

                    if ( (LA690_0==IDENT) ) {
                        alt690=1;
                    }
                    switch (alt690) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13693:6: parameter_connection_parameter_association[extension, refined, pc]
                            {
                            pushFollow(FOLLOW_parameter_connection_parameter_association_in_parameter_connection33741);
                            parameter_connection_parameter_association(extension, refined, pc);

                            state._fsp--;
                            if (state.failed) return pc;

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13697:3: (lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13697:3: (lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13697:4: lbl= PARAMETER parameter_connection_parameter_association[extension, refined, pc]
                    {
                    lbl=(Token)match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter_connection33765); if (state.failed) return pc;
                    if ( state.backtracking==0 ) {
                       
                            pc=Aadl2F.createParameterConnection();
                            pc.setName(idString);
                            pc.setKind(ConnectionKind.PARAMETER);
                      	 	  pc.setLocationReference(this.getFilename(),lbl.getLine());
                      	 	  
                      	 	  if (refined) {
                      	 	     ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                      	 	                       pc,
                      	 	                       new String[]{idString}
                      	 	                       );
                              unresolvedReferences.add(refref);
                      	 	  }
                      	 	
                    }
                    pushFollow(FOLLOW_parameter_connection_parameter_association_in_parameter_connection33777);
                    parameter_connection_parameter_association(extension, refined, pc);

                    state._fsp--;
                    if (state.failed) return pc;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              				processComments(pc);
              			
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13718:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt693=2;
            int LA693_0 = input.LA(1);

            if ( (LA693_0==LCURLY) ) {
                alt693=1;
            }
            switch (alt693) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13718:5: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_parameter_connection33797); if (state.failed) return pc;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13719:4: (pa= property_association )+
                    int cnt692=0;
                    loop692:
                    do {
                        int alt692=2;
                        int LA692_0 = input.LA(1);

                        if ( (LA692_0==IDENT) ) {
                            alt692=1;
                        }


                        switch (alt692) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13719:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_parameter_connection33808);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return pc;
                    	    if ( state.backtracking==0 ) {

                    	      					pc.getOwnedPropertyAssociations().add(pa);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt692 >= 1 ) break loop692;
                    	    if (state.backtracking>0) {state.failed=true; return pc;}
                                EarlyExitException eee =
                                    new EarlyExitException(692, input);
                                throw eee;
                        }
                        cnt692++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_parameter_connection33827); if (state.failed) return pc;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13726:3: ( in_modes_and_transitions[pc] )?
            int alt694=2;
            int LA694_0 = input.LA(1);

            if ( (LA694_0==IN) ) {
                alt694=1;
            }
            switch (alt694) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13726:5: in_modes_and_transitions[pc]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_parameter_connection33838);
                    in_modes_and_transitions(pc);

                    state._fsp--;
                    if (state.failed) return pc;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_parameter_connection33847); if (state.failed) return pc;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return pc;
    }
    // $ANTLR end "parameter_connection"


    // $ANTLR start "access_connection_access_association"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13732:1: access_connection_access_association[boolean extension, boolean refinement, AccessConnection ac] : ( ( ( PROCESSOR ) | (srcCtx= IDENT ) ) DOT )? (srcPort= IDENT ) ( BARROW | ARROW ) (dstCtx= IDENT DOT )? (dstPort= IDENT ) ;
    public final void access_connection_access_association(boolean extension, boolean refinement, AccessConnection ac) throws RecognitionException {
        Token srcCtx=null;
        Token srcPort=null;
        Token dstCtx=null;
        Token dstPort=null;


            boolean srcProcSubp=false;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13736:3: ( ( ( ( PROCESSOR ) | (srcCtx= IDENT ) ) DOT )? (srcPort= IDENT ) ( BARROW | ARROW ) (dstCtx= IDENT DOT )? (dstPort= IDENT ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13737:3: ( ( ( PROCESSOR ) | (srcCtx= IDENT ) ) DOT )? (srcPort= IDENT ) ( BARROW | ARROW ) (dstCtx= IDENT DOT )? (dstPort= IDENT )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13737:3: ( ( ( PROCESSOR ) | (srcCtx= IDENT ) ) DOT )?
            int alt696=2;
            int LA696_0 = input.LA(1);

            if ( (LA696_0==PROCESSOR) ) {
                alt696=1;
            }
            else if ( (LA696_0==IDENT) ) {
                int LA696_2 = input.LA(2);

                if ( (LA696_2==DOT) ) {
                    alt696=1;
                }
            }
            switch (alt696) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13738:5: ( ( PROCESSOR ) | (srcCtx= IDENT ) ) DOT
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13738:5: ( ( PROCESSOR ) | (srcCtx= IDENT ) )
                    int alt695=2;
                    int LA695_0 = input.LA(1);

                    if ( (LA695_0==PROCESSOR) ) {
                        alt695=1;
                    }
                    else if ( (LA695_0==IDENT) ) {
                        alt695=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 695, 0, input);

                        throw nvae;
                    }
                    switch (alt695) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13739:5: ( PROCESSOR )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13739:5: ( PROCESSOR )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13739:6: PROCESSOR
                            {
                            match(input,PROCESSOR,FOLLOW_PROCESSOR_in_access_connection_access_association33882); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      srcProcSubp=true;
                                    
                            }

                            }


                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13744:6: (srcCtx= IDENT )
                            {
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13744:6: (srcCtx= IDENT )
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13744:7: srcCtx= IDENT
                            {
                            srcCtx=(Token)match(input,IDENT,FOLLOW_IDENT_in_access_connection_access_association33906); if (state.failed) return ;
                            if ( state.backtracking==0 ) {

                                      ReferenceRecord srcCtxRef = new ReferenceRecord(ParserReferenceType.AccessConnectionSourceContextReference,
                                                                                      ac,
                                                                                      new String[]{srcCtx.getText()}
                                                                                      );
                                      unresolvedReferences.add(srcCtxRef);                                                        
                                    
                            }

                            }


                            }
                            break;

                    }

                    match(input,DOT,FOLLOW_DOT_in_access_connection_access_association33932); if (state.failed) return ;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13756:3: (srcPort= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13756:4: srcPort= IDENT
            {
            srcPort=(Token)match(input,IDENT,FOLLOW_IDENT_in_access_connection_access_association33944); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                    // this part should not exist if it is refinement
                    // so it should throw an exception
                    
                    if (refinement){
                      throw new FailedPredicateException(input, "access connection", "access connection refinement should not include the actual port connection");
                    }
                    if (srcProcSubp){
                      ProcessorSubprogram psubp = Aadl2F.createProcessorSubprogram();
                      psubp.setLocationReference(this.getFilename(), srcPort.getLine());
                      psubp.setName(srcPort.getText());
                      ac.setSource(psubp);
                    } else {      
                      ReferenceRecord srcRef = new ReferenceRecord(ParserReferenceType.AccessConnectionSourceReference,
                                                                  ac,
                                                                  new String[]{srcPort.getText()}
                                                                  );
                      unresolvedReferences.add(srcRef);
                    }                                                  
                  
            }

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13778:3: ( BARROW | ARROW )
            int alt697=2;
            int LA697_0 = input.LA(1);

            if ( (LA697_0==BARROW) ) {
                alt697=1;
            }
            else if ( (LA697_0==ARROW) ) {
                alt697=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 697, 0, input);

                throw nvae;
            }
            switch (alt697) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13778:4: BARROW
                    {
                    match(input,BARROW,FOLLOW_BARROW_in_access_connection_access_association33959); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                            ac.setBidirectional(true);
                          
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13782:5: ARROW
                    {
                    match(input,ARROW,FOLLOW_ARROW_in_access_connection_access_association33972); if (state.failed) return ;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13784:3: (dstCtx= IDENT DOT )?
            int alt698=2;
            int LA698_0 = input.LA(1);

            if ( (LA698_0==IDENT) ) {
                int LA698_1 = input.LA(2);

                if ( (LA698_1==DOT) ) {
                    alt698=1;
                }
            }
            switch (alt698) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13784:4: dstCtx= IDENT DOT
                    {
                    dstCtx=(Token)match(input,IDENT,FOLLOW_IDENT_in_access_connection_access_association33985); if (state.failed) return ;
                    match(input,DOT,FOLLOW_DOT_in_access_connection_access_association33987); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                              ReferenceRecord dstCtxRef = new ReferenceRecord(ParserReferenceType.AccessConnectionDestinationContextReference,
                                                                              ac,
                                                                              new String[]{dstCtx.getText()}
                                                                              );
                              unresolvedReferences.add(dstCtxRef);
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13793:3: (dstPort= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13793:4: dstPort= IDENT
            {
            dstPort=(Token)match(input,IDENT,FOLLOW_IDENT_in_access_connection_access_association34063); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                    ReferenceRecord dstRef = new ReferenceRecord(ParserReferenceType.AccessConnectionDestinationReference,
                                                                ac,
                                                                new String[]{dstPort.getText()}
                                                                );
                    unresolvedReferences.add(dstRef);
                  
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "access_connection_access_association"


    // $ANTLR start "access_connection_access_definition"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13804:1: access_connection_access_definition[boolean refinement, String idString] returns [AccessConnection ac] : ( ( BUS ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) | ( DATA ) )? (a= ACCESS ) ;
    public final AccessConnection access_connection_access_definition(boolean refinement, String idString) throws RecognitionException {
        AccessConnection ac = null;

        Token a=null;


            AccessCategory accessCategory=null;
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13808:3: ( ( ( BUS ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) | ( DATA ) )? (a= ACCESS ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13809:3: ( ( BUS ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) | ( DATA ) )? (a= ACCESS )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13809:3: ( ( BUS ) | ( SUBPROGRAM GROUP ) | ( SUBPROGRAM ) | ( DATA ) )?
            int alt699=5;
            switch ( input.LA(1) ) {
                case BUS:
                    {
                    alt699=1;
                    }
                    break;
                case SUBPROGRAM:
                    {
                    int LA699_2 = input.LA(2);

                    if ( (LA699_2==GROUP) ) {
                        alt699=2;
                    }
                    else if ( (LA699_2==ACCESS) ) {
                        alt699=3;
                    }
                    }
                    break;
                case DATA:
                    {
                    alt699=4;
                    }
                    break;
            }

            switch (alt699) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13810:3: ( BUS )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13810:3: ( BUS )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13810:4: BUS
                    {
                    match(input,BUS,FOLLOW_BUS_in_access_connection_access_definition34157); if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                            accessCategory = AccessCategory.BUS;
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13815:4: ( SUBPROGRAM GROUP )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13815:4: ( SUBPROGRAM GROUP )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13815:5: SUBPROGRAM GROUP
                    {
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_access_connection_access_definition34173); if (state.failed) return ac;
                    match(input,GROUP,FOLLOW_GROUP_in_access_connection_access_definition34175); if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                            accessCategory = AccessCategory.SUBPROGRAM_GROUP;
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13820:4: ( SUBPROGRAM )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13820:4: ( SUBPROGRAM )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13820:5: SUBPROGRAM
                    {
                    match(input,SUBPROGRAM,FOLLOW_SUBPROGRAM_in_access_connection_access_definition34191); if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                            accessCategory = AccessCategory.SUBPROGRAM;
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13825:4: ( DATA )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13825:4: ( DATA )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13825:5: DATA
                    {
                    match(input,DATA,FOLLOW_DATA_in_access_connection_access_definition34208); if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                            accessCategory = AccessCategory.DATA;
                          
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13831:3: (a= ACCESS )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13831:4: a= ACCESS
            {
            a=(Token)match(input,ACCESS,FOLLOW_ACCESS_in_access_connection_access_definition34231); if (state.failed) return ac;
            if ( state.backtracking==0 ) {

                    ac = Aadl2F.createAccessConnection();
                    ac.setLocationReference(this.getFilename(), a.getLine());
                    if (accessCategory!= null){
                      ac.setAccessCategory(accessCategory);
                    }
                    ac.setName(idString);
                    if (refinement){
                      ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                                                                  ac,
                                                                  new String[]{idString}
                                                                  );
                      unresolvedReferences.add(refref);                                                    
                    }
                  
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ac;
    }
    // $ANTLR end "access_connection_access_definition"


    // $ANTLR start "access_connection"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13850:1: access_connection[boolean extension] returns [AccessConnection ac] : (id= IDENT COLON )? ( ( REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )? ) | (ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[ac] )? SEMI ;
    public final AccessConnection access_connection(boolean extension) throws RecognitionException {
        AccessConnection ac = null;

        Token id=null;
        AccessConnection ad = null;

        PropertyAssociation pa = null;



            boolean refinement = false;
            String idString=""; 
          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13855:3: ( (id= IDENT COLON )? ( ( REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )? ) | (ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[ac] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13856:3: (id= IDENT COLON )? ( ( REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )? ) | (ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[ac] )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13856:3: (id= IDENT COLON )?
            int alt700=2;
            int LA700_0 = input.LA(1);

            if ( (LA700_0==IDENT) ) {
                alt700=1;
            }
            switch (alt700) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13856:4: id= IDENT COLON
                    {
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_access_connection34275); if (state.failed) return ac;
                    match(input,COLON,FOLLOW_COLON_in_access_connection34277); if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                            idString = id.getText();
                          
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13861:3: ( ( REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )? ) | (ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac] ) )
            int alt702=2;
            int LA702_0 = input.LA(1);

            if ( (LA702_0==REFINED) ) {
                alt702=1;
            }
            else if ( ((LA702_0>=BUS && LA702_0<=DATA)||LA702_0==SUBPROGRAM||LA702_0==ACCESS) ) {
                alt702=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ac;}
                NoViableAltException nvae =
                    new NoViableAltException("", 702, 0, input);

                throw nvae;
            }
            switch (alt702) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13862:3: ( REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13862:3: ( REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13862:4: REFINED TO ad= access_connection_access_definition[refinement, idString] ( access_connection_access_association[ extension, refinement, ac] )?
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_access_connection34297); if (state.failed) return ac;
                    match(input,TO,FOLLOW_TO_in_access_connection34299); if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                             //refinement only allowed in extensions
                             if (!extension){
                              throw new FailedPredicateException(input, "port connection", "refinement only allowed in extensions");
                             }
                             if (idString.length() == 0){
                              throw new FailedPredicateException(input, "port connection", "refinement requires a name");
                             }
                            refinement=true;
                          
                    }
                    pushFollow(FOLLOW_access_connection_access_definition_in_access_connection34313);
                    ad=access_connection_access_definition(refinement, idString);

                    state._fsp--;
                    if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                              ac = ad;
                            
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13877:5: ( access_connection_access_association[ extension, refinement, ac] )?
                    int alt701=2;
                    int LA701_0 = input.LA(1);

                    if ( (LA701_0==IDENT||LA701_0==PROCESSOR) ) {
                        alt701=1;
                    }
                    switch (alt701) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13877:6: access_connection_access_association[ extension, refinement, ac]
                            {
                            pushFollow(FOLLOW_access_connection_access_association_in_access_connection34330);
                            access_connection_access_association(extension, refinement, ac);

                            state._fsp--;
                            if (state.failed) return ac;

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13881:3: (ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13881:3: (ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13882:3: ad= access_connection_access_definition[refinement, idString] access_connection_access_association[ extension, refinement, ac]
                    {
                    pushFollow(FOLLOW_access_connection_access_definition_in_access_connection34356);
                    ad=access_connection_access_definition(refinement, idString);

                    state._fsp--;
                    if (state.failed) return ac;
                    if ( state.backtracking==0 ) {

                            ac = ad;
                          
                    }
                    pushFollow(FOLLOW_access_connection_access_association_in_access_connection34368);
                    access_connection_access_association(extension, refinement, ac);

                    state._fsp--;
                    if (state.failed) return ac;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13889:5: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt704=2;
            int LA704_0 = input.LA(1);

            if ( (LA704_0==LCURLY) ) {
                alt704=1;
            }
            switch (alt704) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13889:7: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_access_connection34389); if (state.failed) return ac;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13890:7: (pa= property_association )+
                    int cnt703=0;
                    loop703:
                    do {
                        int alt703=2;
                        int LA703_0 = input.LA(1);

                        if ( (LA703_0==IDENT) ) {
                            alt703=1;
                        }


                        switch (alt703) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13890:8: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_access_connection34403);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return ac;
                    	    if ( state.backtracking==0 ) {

                    	                ac.getOwnedPropertyAssociations().add(pa);
                    	              
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt703 >= 1 ) break loop703;
                    	    if (state.backtracking>0) {state.failed=true; return ac;}
                                EarlyExitException eee =
                                    new EarlyExitException(703, input);
                                throw eee;
                        }
                        cnt703++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_access_connection34431); if (state.failed) return ac;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13897:5: ( in_modes_and_transitions[ac] )?
            int alt705=2;
            int LA705_0 = input.LA(1);

            if ( (LA705_0==IN) ) {
                alt705=1;
            }
            switch (alt705) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:13897:7: in_modes_and_transitions[ac]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_access_connection34446);
                    in_modes_and_transitions(ac);

                    state._fsp--;
                    if (state.failed) return ac;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_access_connection34458); if (state.failed) return ac;
            if ( state.backtracking==0 ) {
               processComments(ac); 
            }

            }

        }
        catch (RecognitionException ex) {

              reportError(ex);
              consumeUntil(input,SEMI);
              input.consume();

        }
        finally {
        }
        return ac;
    }
    // $ANTLR end "access_connection"


    // $ANTLR start "feature_group_connection_port_association"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14152:1: feature_group_connection_port_association[boolean extension, boolean refinement, FeatureGroupConnection sc] : (srcCtx= IDENT DOT )? (srcPort= IDENT ) BARROW (dstCtx= IDENT DOT )? (dstPort= IDENT ) ;
    public final void feature_group_connection_port_association(boolean extension, boolean refinement, FeatureGroupConnection sc) throws RecognitionException {
        Token srcCtx=null;
        Token srcPort=null;
        Token dstCtx=null;
        Token dstPort=null;

        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14153:3: ( (srcCtx= IDENT DOT )? (srcPort= IDENT ) BARROW (dstCtx= IDENT DOT )? (dstPort= IDENT ) )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14154:4: (srcCtx= IDENT DOT )? (srcPort= IDENT ) BARROW (dstCtx= IDENT DOT )? (dstPort= IDENT )
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14154:4: (srcCtx= IDENT DOT )?
            int alt706=2;
            int LA706_0 = input.LA(1);

            if ( (LA706_0==IDENT) ) {
                int LA706_1 = input.LA(2);

                if ( (LA706_1==DOT) ) {
                    alt706=1;
                }
            }
            switch (alt706) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14154:5: srcCtx= IDENT DOT
                    {
                    srcCtx=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_connection_port_association34740); if (state.failed) return ;
                    match(input,DOT,FOLLOW_DOT_in_feature_group_connection_port_association34742); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                             // a refinement should not have the repetition of the connection again
                             if (refinement){
                              throw new FailedPredicateException(input, "feature group connection", "feature group connection refinement should not include the actual port connection");
                             }
                               
                             ReferenceRecord srcCtxRef = new ReferenceRecord(ParserReferenceType.FeatureGroupConnectionSourceContextReference,
                                                                             sc,
                                                                             new String []{srcCtx.getText()}
                                                                             );
                              unresolvedReferences.add(srcCtxRef);
                           
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14168:4: (srcPort= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14168:5: srcPort= IDENT
            {
            srcPort=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_connection_port_association34763); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                     ReferenceRecord srcRef = new ReferenceRecord(ParserReferenceType.FeatureGroupConnectionSourceReference,
                                                                 sc,
                                                                 new String[]{srcPort.getText()}
                                                                 );
                     unresolvedReferences.add(srcRef);
                   
            }

            }

            match(input,BARROW,FOLLOW_BARROW_in_feature_group_connection_port_association34780); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                     sc.setBidirectional(true);
                   
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14181:4: (dstCtx= IDENT DOT )?
            int alt707=2;
            int LA707_0 = input.LA(1);

            if ( (LA707_0==IDENT) ) {
                int LA707_1 = input.LA(2);

                if ( (LA707_1==DOT) ) {
                    alt707=1;
                }
            }
            switch (alt707) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14181:5: dstCtx= IDENT DOT
                    {
                    dstCtx=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_connection_port_association34797); if (state.failed) return ;
                    match(input,DOT,FOLLOW_DOT_in_feature_group_connection_port_association34799); if (state.failed) return ;
                    if ( state.backtracking==0 ) {

                             ReferenceRecord dstCtxRef = new ReferenceRecord(ParserReferenceType.FeatureGroupConnectionDestinationContextReference,
                                                                             sc,
                                                                             new String []{dstCtx.getText()}
                                                                             );
                              unresolvedReferences.add(dstCtxRef);
                           
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14190:4: (dstPort= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14190:5: dstPort= IDENT
            {
            dstPort=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_connection_port_association34821); if (state.failed) return ;
            if ( state.backtracking==0 ) {

                     ReferenceRecord dstRef = new ReferenceRecord(ParserReferenceType.FeatureGroupConnectionDestinationReference,
                                                                 sc,
                                                                 new String[]{dstPort.getText()}
                                                                 );
                     unresolvedReferences.add(dstRef);
                     processComments(sc);
                   
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "feature_group_connection_port_association"


    // $ANTLR start "feature_group_connection"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14202:1: feature_group_connection[boolean extension] returns [FeatureGroupConnection sc ] : (id= IDENT COLON )? ( ( REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )? ) | (lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[sc] )? SEMI ;
    public final FeatureGroupConnection feature_group_connection(boolean extension) throws RecognitionException {
        FeatureGroupConnection sc = null;

        Token id=null;
        Token lbl=null;
        PropertyAssociation pa = null;


         
                	//FeatureReference cr; 
                	boolean refinement = false;
                	String idString ="";
                
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14207:10: ( (id= IDENT COLON )? ( ( REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )? ) | (lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[sc] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14208:2: (id= IDENT COLON )? ( ( REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )? ) | (lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc] ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[sc] )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14208:2: (id= IDENT COLON )?
            int alt708=2;
            int LA708_0 = input.LA(1);

            if ( (LA708_0==IDENT) ) {
                alt708=1;
            }
            switch (alt708) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14208:3: id= IDENT COLON
                    {
                    id=(Token)match(input,IDENT,FOLLOW_IDENT_in_feature_group_connection34868); if (state.failed) return sc;
                    match(input,COLON,FOLLOW_COLON_in_feature_group_connection34870); if (state.failed) return sc;
                    if ( state.backtracking==0 ) {

                      	   idString = id.getText();
                      	 
                    }

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14213:2: ( ( REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )? ) | (lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc] ) )
            int alt710=2;
            int LA710_0 = input.LA(1);

            if ( (LA710_0==REFINED) ) {
                alt710=1;
            }
            else if ( (LA710_0==FEATURE) ) {
                alt710=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return sc;}
                NoViableAltException nvae =
                    new NoViableAltException("", 710, 0, input);

                throw nvae;
            }
            switch (alt710) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14214:2: ( REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )? )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14214:2: ( REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )? )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14214:3: REFINED TO lbl= FEATURE GROUP ( feature_group_connection_port_association[extension, refinement, sc] )?
                    {
                    match(input,REFINED,FOLLOW_REFINED_in_feature_group_connection34885); if (state.failed) return sc;
                    match(input,TO,FOLLOW_TO_in_feature_group_connection34887); if (state.failed) return sc;
                    if ( state.backtracking==0 ) {

                             //refinement only allowed in extensions
                             if (!extension){
                              throw new FailedPredicateException(input, "port connection", "refinement only allowed in extensions");
                             }
                             if (idString.length() == 0){
                              throw new FailedPredicateException(input, "port connection", "refinement requires a name");
                             }
                      	   refinement = true;
                      	 
                    }
                    lbl=(Token)match(input,FEATURE,FOLLOW_FEATURE_in_feature_group_connection34898); if (state.failed) return sc;
                    match(input,GROUP,FOLLOW_GROUP_in_feature_group_connection34900); if (state.failed) return sc;
                    if ( state.backtracking==0 ) {
                       
                             sc = Aadl2F.createFeatureGroupConnection();
                             sc.setName(idString);
                             sc.setLocationReference(this.getFilename(),lbl.getLine());
                             if (refinement){
                               ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                                                                           sc,
                                                                           new String[]{idString}
                                                                           );
                              unresolvedReferences.add(refref);
                             }
                          
                    }
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14238:3: ( feature_group_connection_port_association[extension, refinement, sc] )?
                    int alt709=2;
                    int LA709_0 = input.LA(1);

                    if ( (LA709_0==IDENT) ) {
                        alt709=1;
                    }
                    switch (alt709) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14238:4: feature_group_connection_port_association[extension, refinement, sc]
                            {
                            pushFollow(FOLLOW_feature_group_connection_port_association_in_feature_group_connection34911);
                            feature_group_connection_port_association(extension, refinement, sc);

                            state._fsp--;
                            if (state.failed) return sc;

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14242:2: (lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc] )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14242:2: (lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc] )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14242:3: lbl= FEATURE GROUP feature_group_connection_port_association[extension, refinement, sc]
                    {
                    lbl=(Token)match(input,FEATURE,FOLLOW_FEATURE_in_feature_group_connection34930); if (state.failed) return sc;
                    match(input,GROUP,FOLLOW_GROUP_in_feature_group_connection34932); if (state.failed) return sc;
                    if ( state.backtracking==0 ) {
                       
                             sc = Aadl2F.createFeatureGroupConnection();
                             sc.setName(idString);
                      	 	   sc.setLocationReference(this.getFilename(),lbl.getLine());
                      	 	   if (refinement){
                      	 	     ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.ConnectionRefinementReference,
                      	 	                                                 sc,
                      	 	                                                 new String[]{idString}
                      	 	                                                 );
                              unresolvedReferences.add(refref);
                      	 	   }
                      	 	
                    }
                    pushFollow(FOLLOW_feature_group_connection_port_association_in_feature_group_connection34942);
                    feature_group_connection_port_association(extension, refinement, sc);

                    state._fsp--;
                    if (state.failed) return sc;

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14258:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt712=2;
            int LA712_0 = input.LA(1);

            if ( (LA712_0==LCURLY) ) {
                alt712=1;
            }
            switch (alt712) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14258:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_feature_group_connection34956); if (state.failed) return sc;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14259:4: (pa= property_association )+
                    int cnt711=0;
                    loop711:
                    do {
                        int alt711=2;
                        int LA711_0 = input.LA(1);

                        if ( (LA711_0==IDENT) ) {
                            alt711=1;
                        }


                        switch (alt711) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14259:5: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_feature_group_connection34967);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return sc;
                    	    if ( state.backtracking==0 ) {

                    	      					sc.getOwnedPropertyAssociations().add(pa);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt711 >= 1 ) break loop711;
                    	    if (state.backtracking>0) {state.failed=true; return sc;}
                                EarlyExitException eee =
                                    new EarlyExitException(711, input);
                                throw eee;
                        }
                        cnt711++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_feature_group_connection34986); if (state.failed) return sc;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14266:2: ( in_modes_and_transitions[sc] )?
            int alt713=2;
            int LA713_0 = input.LA(1);

            if ( (LA713_0==IN) ) {
                alt713=1;
            }
            switch (alt713) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14266:4: in_modes_and_transitions[sc]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_feature_group_connection34995);
                    in_modes_and_transitions(sc);

                    state._fsp--;
                    if (state.failed) return sc;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_feature_group_connection35003); if (state.failed) return sc;

            }

        }
        catch (RecognitionException ex) {

              reportError(ex);
              consumeUntil(input,SEMI);
              input.consume();

        }
        finally {
        }
        return sc;
    }
    // $ANTLR end "feature_group_connection"


    // $ANTLR start "flow_spec"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14527:1: flow_spec[boolean extension] returns [FlowSpecification flowSpec] : (fss= flow_source_spec | fks= flow_sink_spec | fps= flow_path_spec | ( (fssr= flow_source_spec_refinement | fksr= flow_sink_spec_refinement | fpsr= flow_path_spec_refinement ) ) );
    public final FlowSpecification flow_spec(boolean extension) throws RecognitionException {
        FlowSpecification flowSpec = null;

        FlowSpecification fss = null;

        FlowSpecification fks = null;

        FlowSpecification fps = null;

        FlowSpecification fssr = null;

        FlowSpecification fksr = null;

        FlowSpecification fpsr = null;


        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14528:2: (fss= flow_source_spec | fks= flow_sink_spec | fps= flow_path_spec | ( (fssr= flow_source_spec_refinement | fksr= flow_sink_spec_refinement | fpsr= flow_path_spec_refinement ) ) )
            int alt715=4;
            int LA715_0 = input.LA(1);

            if ( (LA715_0==IDENT) ) {
                int LA715_1 = input.LA(2);

                if ( (LA715_1==COLON) ) {
                    int LA715_2 = input.LA(3);

                    if ( (LA715_2==FLOW) ) {
                        switch ( input.LA(4) ) {
                        case SOURCE:
                            {
                            alt715=1;
                            }
                            break;
                        case SINK:
                            {
                            alt715=2;
                            }
                            break;
                        case PATH:
                            {
                            alt715=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return flowSpec;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 715, 3, input);

                            throw nvae;
                        }

                    }
                    else if ( (LA715_2==REFINED) ) {
                        alt715=4;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return flowSpec;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 715, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return flowSpec;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 715, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return flowSpec;}
                NoViableAltException nvae =
                    new NoViableAltException("", 715, 0, input);

                throw nvae;
            }
            switch (alt715) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14529:2: fss= flow_source_spec
                    {
                    pushFollow(FOLLOW_flow_source_spec_in_flow_spec35281);
                    fss=flow_source_spec();

                    state._fsp--;
                    if (state.failed) return flowSpec;
                    if ( state.backtracking==0 ) {
                      flowSpec = fss;
                    }

                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14530:4: fks= flow_sink_spec
                    {
                    pushFollow(FOLLOW_flow_sink_spec_in_flow_spec35290);
                    fks=flow_sink_spec();

                    state._fsp--;
                    if (state.failed) return flowSpec;
                    if ( state.backtracking==0 ) {
                      flowSpec = fks;
                    }

                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14531:4: fps= flow_path_spec
                    {
                    pushFollow(FOLLOW_flow_path_spec_in_flow_spec35299);
                    fps=flow_path_spec();

                    state._fsp--;
                    if (state.failed) return flowSpec;
                    if ( state.backtracking==0 ) {
                      flowSpec = fps;
                    }

                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14532:4: ( (fssr= flow_source_spec_refinement | fksr= flow_sink_spec_refinement | fpsr= flow_path_spec_refinement ) )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14532:4: ( (fssr= flow_source_spec_refinement | fksr= flow_sink_spec_refinement | fpsr= flow_path_spec_refinement ) )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14533:7: (fssr= flow_source_spec_refinement | fksr= flow_sink_spec_refinement | fpsr= flow_path_spec_refinement )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14533:7: (fssr= flow_source_spec_refinement | fksr= flow_sink_spec_refinement | fpsr= flow_path_spec_refinement )
                    int alt714=3;
                    int LA714_0 = input.LA(1);

                    if ( (LA714_0==IDENT) ) {
                        int LA714_1 = input.LA(2);

                        if ( (LA714_1==COLON) ) {
                            int LA714_2 = input.LA(3);

                            if ( (LA714_2==REFINED) ) {
                                int LA714_3 = input.LA(4);

                                if ( (LA714_3==TO) ) {
                                    int LA714_4 = input.LA(5);

                                    if ( (LA714_4==FLOW) ) {
                                        switch ( input.LA(6) ) {
                                        case SOURCE:
                                            {
                                            alt714=1;
                                            }
                                            break;
                                        case SINK:
                                            {
                                            alt714=2;
                                            }
                                            break;
                                        case PATH:
                                            {
                                            alt714=3;
                                            }
                                            break;
                                        default:
                                            if (state.backtracking>0) {state.failed=true; return flowSpec;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 714, 5, input);

                                            throw nvae;
                                        }

                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return flowSpec;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 714, 4, input);

                                        throw nvae;
                                    }
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return flowSpec;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 714, 3, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return flowSpec;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 714, 2, input);

                                throw nvae;
                            }
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return flowSpec;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 714, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return flowSpec;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 714, 0, input);

                        throw nvae;
                    }
                    switch (alt714) {
                        case 1 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14533:8: fssr= flow_source_spec_refinement
                            {
                            pushFollow(FOLLOW_flow_source_spec_refinement_in_flow_spec35317);
                            fssr=flow_source_spec_refinement();

                            state._fsp--;
                            if (state.failed) return flowSpec;
                            if ( state.backtracking==0 ) {
                              flowSpec = fssr;
                            }

                            }
                            break;
                        case 2 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14534:9: fksr= flow_sink_spec_refinement
                            {
                            pushFollow(FOLLOW_flow_sink_spec_refinement_in_flow_spec35331);
                            fksr=flow_sink_spec_refinement();

                            state._fsp--;
                            if (state.failed) return flowSpec;
                            if ( state.backtracking==0 ) {
                              flowSpec = fksr;
                            }

                            }
                            break;
                        case 3 :
                            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14535:9: fpsr= flow_path_spec_refinement
                            {
                            pushFollow(FOLLOW_flow_path_spec_refinement_in_flow_spec35345);
                            fpsr=flow_path_spec_refinement();

                            state._fsp--;
                            if (state.failed) return flowSpec;
                            if ( state.backtracking==0 ) {
                              flowSpec = fpsr;
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                                if (!extension){
                                  throw new FailedPredicateException(input,"flow spec ", "refinement only allowed in extension");
                                }
                      	     
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException ex) {

                reportError(ex);
              
        }
        finally {
        }
        return flowSpec;
    }
    // $ANTLR end "flow_spec"


    // $ANTLR start "flow_source_spec"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14548:1: flow_source_spec returns [FlowSpecification flowSrcSpec] : flowident= IDENT COLON FLOW SOURCE cr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSrcSpec] )? SEMI ;
    public final FlowSpecification flow_source_spec() throws RecognitionException {
        FlowSpecification flowSrcSpec = null;

        Token flowident=null;
        ReferenceRecord cr = null;

        PropertyAssociation pa = null;



        		flowSrcSpec = Aadl2F.createFlowSpecification();
        		flowSrcSpec.setKind(FlowKind.SOURCE);
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14553:2: (flowident= IDENT COLON FLOW SOURCE cr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSrcSpec] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14554:2: flowident= IDENT COLON FLOW SOURCE cr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSrcSpec] )? SEMI
            {
            flowident=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_source_spec35404); if (state.failed) return flowSrcSpec;
            match(input,COLON,FOLLOW_COLON_in_flow_source_spec35406); if (state.failed) return flowSrcSpec;
            match(input,FLOW,FOLLOW_FLOW_in_flow_source_spec35408); if (state.failed) return flowSrcSpec;
            match(input,SOURCE,FOLLOW_SOURCE_in_flow_source_spec35410); if (state.failed) return flowSrcSpec;
            pushFollow(FOLLOW_flow_feature_identifier_in_flow_source_spec35414);
            cr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return flowSrcSpec;
            if ( state.backtracking==0 ) {

              			flowSrcSpec.setName(flowident.getText());
              			processComments(flowSrcSpec);
              			flowSrcSpec.setLocationReference(new LocationReference(this.getFilename(),flowident.getLine()));
              			cr.setReferencingObject(flowSrcSpec);
              			cr.setReferenceType(ParserReferenceType.FlowSpecificationOutFeatureReference);
              			unresolvedReferences.add(cr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14563:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt717=2;
            int LA717_0 = input.LA(1);

            if ( (LA717_0==LCURLY) ) {
                alt717=1;
            }
            switch (alt717) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14563:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_source_spec35424); if (state.failed) return flowSrcSpec;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14563:11: (pa= property_association )+
                    int cnt716=0;
                    loop716:
                    do {
                        int alt716=2;
                        int LA716_0 = input.LA(1);

                        if ( (LA716_0==IDENT) ) {
                            alt716=1;
                        }


                        switch (alt716) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14563:12: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_source_spec35429);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowSrcSpec;
                    	    if ( state.backtracking==0 ) {

                    	      					flowSrcSpec.getOwnedPropertyAssociations().add(pa);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt716 >= 1 ) break loop716;
                    	    if (state.backtracking>0) {state.failed=true; return flowSrcSpec;}
                                EarlyExitException eee =
                                    new EarlyExitException(716, input);
                                throw eee;
                        }
                        cnt716++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_source_spec35450); if (state.failed) return flowSrcSpec;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14570:2: ( in_modes[flowSrcSpec] )?
            int alt718=2;
            int LA718_0 = input.LA(1);

            if ( (LA718_0==IN) ) {
                alt718=1;
            }
            switch (alt718) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14570:3: in_modes[flowSrcSpec]
                    {
                    pushFollow(FOLLOW_in_modes_in_flow_source_spec35459);
                    in_modes(flowSrcSpec);

                    state._fsp--;
                    if (state.failed) return flowSrcSpec;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_source_spec35465); if (state.failed) return flowSrcSpec;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return flowSrcSpec;
    }
    // $ANTLR end "flow_source_spec"


    // $ANTLR start "flow_sink_spec"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14574:1: flow_sink_spec returns [FlowSpecification flowSinkSpec] : flowident= IDENT COLON FLOW SINK cr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSinkSpec] )? SEMI ;
    public final FlowSpecification flow_sink_spec() throws RecognitionException {
        FlowSpecification flowSinkSpec = null;

        Token flowident=null;
        ReferenceRecord cr = null;

        PropertyAssociation pa = null;



        		flowSinkSpec = Aadl2F.createFlowSpecification();
        		flowSinkSpec.setKind(FlowKind.SINK);
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14579:2: (flowident= IDENT COLON FLOW SINK cr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSinkSpec] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14580:2: flowident= IDENT COLON FLOW SINK cr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSinkSpec] )? SEMI
            {
            flowident=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_sink_spec35488); if (state.failed) return flowSinkSpec;
            match(input,COLON,FOLLOW_COLON_in_flow_sink_spec35490); if (state.failed) return flowSinkSpec;
            match(input,FLOW,FOLLOW_FLOW_in_flow_sink_spec35492); if (state.failed) return flowSinkSpec;
            match(input,SINK,FOLLOW_SINK_in_flow_sink_spec35494); if (state.failed) return flowSinkSpec;
            pushFollow(FOLLOW_flow_feature_identifier_in_flow_sink_spec35498);
            cr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return flowSinkSpec;
            if ( state.backtracking==0 ) {

              			flowSinkSpec.setName(flowident.getText());
              			processComments(flowSinkSpec);
              			flowSinkSpec.setLocationReference(new LocationReference(this.getFilename(),flowident.getLine()));
              			cr.setReferencingObject(flowSinkSpec);
              			cr.setReferenceType(ParserReferenceType.FlowSpecificationInFeatureReference);
              			unresolvedReferences.add(cr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14589:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt720=2;
            int LA720_0 = input.LA(1);

            if ( (LA720_0==LCURLY) ) {
                alt720=1;
            }
            switch (alt720) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14589:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_sink_spec35507); if (state.failed) return flowSinkSpec;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14589:11: (pa= property_association )+
                    int cnt719=0;
                    loop719:
                    do {
                        int alt719=2;
                        int LA719_0 = input.LA(1);

                        if ( (LA719_0==IDENT) ) {
                            alt719=1;
                        }


                        switch (alt719) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14589:12: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_sink_spec35512);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowSinkSpec;
                    	    if ( state.backtracking==0 ) {

                    	      					flowSinkSpec.getOwnedPropertyAssociations().add(pa);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt719 >= 1 ) break loop719;
                    	    if (state.backtracking>0) {state.failed=true; return flowSinkSpec;}
                                EarlyExitException eee =
                                    new EarlyExitException(719, input);
                                throw eee;
                        }
                        cnt719++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_sink_spec35533); if (state.failed) return flowSinkSpec;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14596:2: ( in_modes[flowSinkSpec] )?
            int alt721=2;
            int LA721_0 = input.LA(1);

            if ( (LA721_0==IN) ) {
                alt721=1;
            }
            switch (alt721) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14596:3: in_modes[flowSinkSpec]
                    {
                    pushFollow(FOLLOW_in_modes_in_flow_sink_spec35542);
                    in_modes(flowSinkSpec);

                    state._fsp--;
                    if (state.failed) return flowSinkSpec;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_sink_spec35548); if (state.failed) return flowSinkSpec;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return flowSinkSpec;
    }
    // $ANTLR end "flow_sink_spec"


    // $ANTLR start "flow_path_spec"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14600:1: flow_path_spec returns [FlowSpecification flowPathSpec] : flowident= IDENT COLON FLOW PATH incr= flow_feature_identifier ARROW outcr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowPathSpec] )? SEMI ;
    public final FlowSpecification flow_path_spec() throws RecognitionException {
        FlowSpecification flowPathSpec = null;

        Token flowident=null;
        ReferenceRecord incr = null;

        ReferenceRecord outcr = null;

        PropertyAssociation pa = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14603:2: (flowident= IDENT COLON FLOW PATH incr= flow_feature_identifier ARROW outcr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowPathSpec] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14604:2: flowident= IDENT COLON FLOW PATH incr= flow_feature_identifier ARROW outcr= flow_feature_identifier ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowPathSpec] )? SEMI
            {
            flowident=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_path_spec35574); if (state.failed) return flowPathSpec;
            match(input,COLON,FOLLOW_COLON_in_flow_path_spec35576); if (state.failed) return flowPathSpec;
            match(input,FLOW,FOLLOW_FLOW_in_flow_path_spec35578); if (state.failed) return flowPathSpec;
            match(input,PATH,FOLLOW_PATH_in_flow_path_spec35580); if (state.failed) return flowPathSpec;
            pushFollow(FOLLOW_flow_feature_identifier_in_flow_path_spec35584);
            incr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return flowPathSpec;
            match(input,ARROW,FOLLOW_ARROW_in_flow_path_spec35586); if (state.failed) return flowPathSpec;
            pushFollow(FOLLOW_flow_feature_identifier_in_flow_path_spec35590);
            outcr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return flowPathSpec;
            if ( state.backtracking==0 ) {

                    flowPathSpec = Aadl2F.createFlowSpecification();
                    flowPathSpec.setKind(FlowKind.PATH);
              			flowPathSpec.setName(flowident.getText());
              			processComments(flowPathSpec);
              			flowPathSpec.setLocationReference(new LocationReference(this.getFilename(),flowident.getLine()));
              			incr.setReferencingObject(flowPathSpec);
              			incr.setReferenceType(ParserReferenceType.FlowSpecificationInFeatureReference);
              			outcr.setReferencingObject(flowPathSpec);
                    outcr.setReferenceType(ParserReferenceType.FlowSpecificationOutFeatureReference);
                    unresolvedReferences.add(incr);
                    unresolvedReferences.add(outcr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14618:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt723=2;
            int LA723_0 = input.LA(1);

            if ( (LA723_0==LCURLY) ) {
                alt723=1;
            }
            switch (alt723) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14618:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_path_spec35599); if (state.failed) return flowPathSpec;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14618:11: (pa= property_association )+
                    int cnt722=0;
                    loop722:
                    do {
                        int alt722=2;
                        int LA722_0 = input.LA(1);

                        if ( (LA722_0==IDENT) ) {
                            alt722=1;
                        }


                        switch (alt722) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14618:12: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_path_spec35604);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowPathSpec;
                    	    if ( state.backtracking==0 ) {

                    	      					flowPathSpec.getOwnedPropertyAssociations().add(pa);
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt722 >= 1 ) break loop722;
                    	    if (state.backtracking>0) {state.failed=true; return flowPathSpec;}
                                EarlyExitException eee =
                                    new EarlyExitException(722, input);
                                throw eee;
                        }
                        cnt722++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_path_spec35625); if (state.failed) return flowPathSpec;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14625:2: ( in_modes[flowPathSpec] )?
            int alt724=2;
            int LA724_0 = input.LA(1);

            if ( (LA724_0==IN) ) {
                alt724=1;
            }
            switch (alt724) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14625:3: in_modes[flowPathSpec]
                    {
                    pushFollow(FOLLOW_in_modes_in_flow_path_spec35634);
                    in_modes(flowPathSpec);

                    state._fsp--;
                    if (state.failed) return flowPathSpec;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_path_spec35640); if (state.failed) return flowPathSpec;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return flowPathSpec;
    }
    // $ANTLR end "flow_path_spec"


    // $ANTLR start "flow_source_spec_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14629:1: flow_source_spec_refinement returns [FlowSpecification flowSrcSpec] : flowident= IDENT COLON REFINED TO FLOW SOURCE ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSrcSpec] )? SEMI ;
    public final FlowSpecification flow_source_spec_refinement() throws RecognitionException {
        FlowSpecification flowSrcSpec = null;

        Token flowident=null;
        PropertyAssociation pa = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14632:2: (flowident= IDENT COLON REFINED TO FLOW SOURCE ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSrcSpec] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14633:2: flowident= IDENT COLON REFINED TO FLOW SOURCE ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSrcSpec] )? SEMI
            {
            flowident=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_source_spec_refinement35665); if (state.failed) return flowSrcSpec;
            match(input,COLON,FOLLOW_COLON_in_flow_source_spec_refinement35667); if (state.failed) return flowSrcSpec;
            match(input,REFINED,FOLLOW_REFINED_in_flow_source_spec_refinement35669); if (state.failed) return flowSrcSpec;
            match(input,TO,FOLLOW_TO_in_flow_source_spec_refinement35671); if (state.failed) return flowSrcSpec;
            match(input,FLOW,FOLLOW_FLOW_in_flow_source_spec_refinement35673); if (state.failed) return flowSrcSpec;
            match(input,SOURCE,FOLLOW_SOURCE_in_flow_source_spec_refinement35675); if (state.failed) return flowSrcSpec;
            if ( state.backtracking==0 ) {

              			flowSrcSpec = Aadl2F.createFlowSpecification();
              			flowSrcSpec.setKind(FlowKind.SOURCE);
              			flowSrcSpec.setName(flowident.getText());
              			processComments(flowSrcSpec);
              			flowSrcSpec.setLocationReference(new LocationReference(this.getFilename(), flowident.getLine()));
              			ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FlowSpecificationRefinementReference,
              			                                         flowSrcSpec,
              			                                         new String[]{flowident.getText()}
              			                                         );
                    unresolvedReferences.add(rr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14646:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt726=2;
            int LA726_0 = input.LA(1);

            if ( (LA726_0==LCURLY) ) {
                alt726=1;
            }
            switch (alt726) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14646:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_source_spec_refinement35684); if (state.failed) return flowSrcSpec;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14646:10: (pa= property_association )+
                    int cnt725=0;
                    loop725:
                    do {
                        int alt725=2;
                        int LA725_0 = input.LA(1);

                        if ( (LA725_0==IDENT) ) {
                            alt725=1;
                        }


                        switch (alt725) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14646:11: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_source_spec_refinement35689);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowSrcSpec;
                    	    if ( state.backtracking==0 ) {

                    	      				flowSrcSpec.getOwnedPropertyAssociations().add(pa);
                    	      			
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt725 >= 1 ) break loop725;
                    	    if (state.backtracking>0) {state.failed=true; return flowSrcSpec;}
                                EarlyExitException eee =
                                    new EarlyExitException(725, input);
                                throw eee;
                        }
                        cnt725++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_source_spec_refinement35708); if (state.failed) return flowSrcSpec;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14653:2: ( in_modes[flowSrcSpec] )?
            int alt727=2;
            int LA727_0 = input.LA(1);

            if ( (LA727_0==IN) ) {
                alt727=1;
            }
            switch (alt727) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14653:3: in_modes[flowSrcSpec]
                    {
                    pushFollow(FOLLOW_in_modes_in_flow_source_spec_refinement35716);
                    in_modes(flowSrcSpec);

                    state._fsp--;
                    if (state.failed) return flowSrcSpec;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_source_spec_refinement35722); if (state.failed) return flowSrcSpec;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return flowSrcSpec;
    }
    // $ANTLR end "flow_source_spec_refinement"


    // $ANTLR start "flow_sink_spec_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14657:1: flow_sink_spec_refinement returns [FlowSpecification flowSinkSpec] : flowident= IDENT COLON REFINED TO FLOW SINK ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSinkSpec] )? SEMI ;
    public final FlowSpecification flow_sink_spec_refinement() throws RecognitionException {
        FlowSpecification flowSinkSpec = null;

        Token flowident=null;
        PropertyAssociation pa = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14660:2: (flowident= IDENT COLON REFINED TO FLOW SINK ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSinkSpec] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14661:2: flowident= IDENT COLON REFINED TO FLOW SINK ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowSinkSpec] )? SEMI
            {
            flowident=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_sink_spec_refinement35746); if (state.failed) return flowSinkSpec;
            match(input,COLON,FOLLOW_COLON_in_flow_sink_spec_refinement35748); if (state.failed) return flowSinkSpec;
            match(input,REFINED,FOLLOW_REFINED_in_flow_sink_spec_refinement35750); if (state.failed) return flowSinkSpec;
            match(input,TO,FOLLOW_TO_in_flow_sink_spec_refinement35752); if (state.failed) return flowSinkSpec;
            match(input,FLOW,FOLLOW_FLOW_in_flow_sink_spec_refinement35754); if (state.failed) return flowSinkSpec;
            match(input,SINK,FOLLOW_SINK_in_flow_sink_spec_refinement35756); if (state.failed) return flowSinkSpec;
            if ( state.backtracking==0 ) {

                    flowSinkSpec = Aadl2F.createFlowSpecification();
                    flowSinkSpec.setKind(FlowKind.SINK);
              			flowSinkSpec.setName(flowident.getText());
              			processComments(flowSinkSpec);
              			flowSinkSpec.setLocationReference(new LocationReference(this.getFilename(), flowident.getLine()));
                    ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FlowSpecificationRefinementReference,
                                                             flowSinkSpec,
                                                             new String[]{flowident.getText()}
                                                             );
                    unresolvedReferences.add(rr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14674:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt729=2;
            int LA729_0 = input.LA(1);

            if ( (LA729_0==LCURLY) ) {
                alt729=1;
            }
            switch (alt729) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14674:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_sink_spec_refinement35764); if (state.failed) return flowSinkSpec;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14675:3: (pa= property_association )+
                    int cnt728=0;
                    loop728:
                    do {
                        int alt728=2;
                        int LA728_0 = input.LA(1);

                        if ( (LA728_0==IDENT) ) {
                            alt728=1;
                        }


                        switch (alt728) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14675:4: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_sink_spec_refinement35772);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowSinkSpec;
                    	    if ( state.backtracking==0 ) {

                    	      	     flowSinkSpec.getOwnedPropertyAssociations().add(pa);
                    	      	   
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt728 >= 1 ) break loop728;
                    	    if (state.backtracking>0) {state.failed=true; return flowSinkSpec;}
                                EarlyExitException eee =
                                    new EarlyExitException(728, input);
                                throw eee;
                        }
                        cnt728++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_sink_spec_refinement35790); if (state.failed) return flowSinkSpec;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14682:2: ( in_modes[flowSinkSpec] )?
            int alt730=2;
            int LA730_0 = input.LA(1);

            if ( (LA730_0==IN) ) {
                alt730=1;
            }
            switch (alt730) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14682:3: in_modes[flowSinkSpec]
                    {
                    pushFollow(FOLLOW_in_modes_in_flow_sink_spec_refinement35799);
                    in_modes(flowSinkSpec);

                    state._fsp--;
                    if (state.failed) return flowSinkSpec;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_sink_spec_refinement35805); if (state.failed) return flowSinkSpec;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return flowSinkSpec;
    }
    // $ANTLR end "flow_sink_spec_refinement"


    // $ANTLR start "flow_path_spec_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14686:1: flow_path_spec_refinement returns [FlowSpecification flowPathSpec] : flowident= IDENT COLON REFINED TO FLOW PATH ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowPathSpec] )? SEMI ;
    public final FlowSpecification flow_path_spec_refinement() throws RecognitionException {
        FlowSpecification flowPathSpec = null;

        Token flowident=null;
        PropertyAssociation pa = null;


         
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14689:2: (flowident= IDENT COLON REFINED TO FLOW PATH ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowPathSpec] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14690:2: flowident= IDENT COLON REFINED TO FLOW PATH ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes[flowPathSpec] )? SEMI
            {
            flowident=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_path_spec_refinement35829); if (state.failed) return flowPathSpec;
            match(input,COLON,FOLLOW_COLON_in_flow_path_spec_refinement35831); if (state.failed) return flowPathSpec;
            match(input,REFINED,FOLLOW_REFINED_in_flow_path_spec_refinement35833); if (state.failed) return flowPathSpec;
            match(input,TO,FOLLOW_TO_in_flow_path_spec_refinement35835); if (state.failed) return flowPathSpec;
            match(input,FLOW,FOLLOW_FLOW_in_flow_path_spec_refinement35837); if (state.failed) return flowPathSpec;
            match(input,PATH,FOLLOW_PATH_in_flow_path_spec_refinement35839); if (state.failed) return flowPathSpec;
            if ( state.backtracking==0 ) {

                    flowPathSpec = Aadl2F.createFlowSpecification();
                    flowPathSpec.setKind(FlowKind.PATH);
              			flowPathSpec.setName(flowident.getText());
              			processComments(flowPathSpec);
              			flowPathSpec.setLocationReference(new LocationReference(this.getFilename(), flowident.getLine()));
                    ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FlowSpecificationRefinementReference,
                                                             flowPathSpec,
                                                             new String[]{flowident.getText()}
                                                             );
                    unresolvedReferences.add(rr);
              		
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14703:2: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt732=2;
            int LA732_0 = input.LA(1);

            if ( (LA732_0==LCURLY) ) {
                alt732=1;
            }
            switch (alt732) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14703:3: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_path_spec_refinement35847); if (state.failed) return flowPathSpec;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14704:5: (pa= property_association )+
                    int cnt731=0;
                    loop731:
                    do {
                        int alt731=2;
                        int LA731_0 = input.LA(1);

                        if ( (LA731_0==IDENT) ) {
                            alt731=1;
                        }


                        switch (alt731) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14704:6: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_path_spec_refinement35857);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowPathSpec;
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	       flowPathSpec.getOwnedPropertyAssociations().add(pa);
                    	      	     
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt731 >= 1 ) break loop731;
                    	    if (state.backtracking>0) {state.failed=true; return flowPathSpec;}
                                EarlyExitException eee =
                                    new EarlyExitException(731, input);
                                throw eee;
                        }
                        cnt731++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_path_spec_refinement35879); if (state.failed) return flowPathSpec;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14711:2: ( in_modes[flowPathSpec] )?
            int alt733=2;
            int LA733_0 = input.LA(1);

            if ( (LA733_0==IN) ) {
                alt733=1;
            }
            switch (alt733) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14711:3: in_modes[flowPathSpec]
                    {
                    pushFollow(FOLLOW_in_modes_in_flow_path_spec_refinement35887);
                    in_modes(flowPathSpec);

                    state._fsp--;
                    if (state.failed) return flowPathSpec;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_path_spec_refinement35893); if (state.failed) return flowPathSpec;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return flowPathSpec;
    }
    // $ANTLR end "flow_path_spec_refinement"


    // $ANTLR start "end_to_end_flow_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14835:1: end_to_end_flow_implementation[boolean extension] returns [EndToEndFlow e2e] : ( (e2ef= end_to_end_flow ) | (e2efr= end_to_end_flow_refinement ) ) SEMI ;
    public final EndToEndFlow end_to_end_flow_implementation(boolean extension) throws RecognitionException {
        EndToEndFlow e2e = null;

        EndToEndFlow e2ef = null;

        EndToEndFlow e2efr = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14838:2: ( ( (e2ef= end_to_end_flow ) | (e2efr= end_to_end_flow_refinement ) ) SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14839:6: ( (e2ef= end_to_end_flow ) | (e2efr= end_to_end_flow_refinement ) ) SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14839:6: ( (e2ef= end_to_end_flow ) | (e2efr= end_to_end_flow_refinement ) )
            int alt734=2;
            int LA734_0 = input.LA(1);

            if ( (LA734_0==IDENT) ) {
                int LA734_1 = input.LA(2);

                if ( (LA734_1==COLON) ) {
                    int LA734_2 = input.LA(3);

                    if ( (LA734_2==END) ) {
                        alt734=1;
                    }
                    else if ( (LA734_2==REFINED) ) {
                        alt734=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return e2e;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 734, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return e2e;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 734, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return e2e;}
                NoViableAltException nvae =
                    new NoViableAltException("", 734, 0, input);

                throw nvae;
            }
            switch (alt734) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14840:7: (e2ef= end_to_end_flow )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14840:7: (e2ef= end_to_end_flow )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14840:8: e2ef= end_to_end_flow
                    {
                    pushFollow(FOLLOW_end_to_end_flow_in_end_to_end_flow_implementation36063);
                    e2ef=end_to_end_flow();

                    state._fsp--;
                    if (state.failed) return e2e;
                    if ( state.backtracking==0 ) {

                           			e2e = e2ef; 
                           		
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14846:7: (e2efr= end_to_end_flow_refinement )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14846:7: (e2efr= end_to_end_flow_refinement )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14846:8: e2efr= end_to_end_flow_refinement
                    {
                    pushFollow(FOLLOW_end_to_end_flow_refinement_in_end_to_end_flow_implementation36100);
                    e2efr=end_to_end_flow_refinement();

                    state._fsp--;
                    if (state.failed) return e2e;
                    if ( state.backtracking==0 ) {

                                //refinement only allowed in extensions
                                if (!extension){
                                  throw new FailedPredicateException(input, "end to end flow implementation", "refinement only allowed in extensions");
                                }
                           	 		e2e = e2efr;
                           	 	
                    }

                    }


                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_end_to_end_flow_implementation36130); if (state.failed) return e2e;

            }

        }
        catch (RecognitionException ex) {

                  reportError(ex);
            		  consumeUntil(input,SEMI);
            		  input.consume();
               
        }
        finally {
        }
        return e2e;
    }
    // $ANTLR end "end_to_end_flow_implementation"


    // $ANTLR start "flow_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14864:1: flow_implementation[boolean extension] returns [FlowImplementation flowImpl] : ( (fsi= flow_source_implementation ) | (fsir= flow_source_implementation_refinement ) | (fki= flow_sink_implementation ) | (fkir= flow_sink_implementation_refinement ) | (fpi= flow_path_implementation ) | (fpir= flow_path_implementation_refinement ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[flowImpl] )? SEMI ;
    public final FlowImplementation flow_implementation(boolean extension) throws RecognitionException {
        FlowImplementation flowImpl = null;

        FlowImplementation fsi = null;

        FlowImplementation fsir = null;

        FlowImplementation fki = null;

        FlowImplementation fkir = null;

        FlowImplementation fpi = null;

        FlowImplementation fpir = null;

        PropertyAssociation pa = null;



        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14867:2: ( ( (fsi= flow_source_implementation ) | (fsir= flow_source_implementation_refinement ) | (fki= flow_sink_implementation ) | (fkir= flow_sink_implementation_refinement ) | (fpi= flow_path_implementation ) | (fpir= flow_path_implementation_refinement ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[flowImpl] )? SEMI )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14868:6: ( (fsi= flow_source_implementation ) | (fsir= flow_source_implementation_refinement ) | (fki= flow_sink_implementation ) | (fkir= flow_sink_implementation_refinement ) | (fpi= flow_path_implementation ) | (fpir= flow_path_implementation_refinement ) ) ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[flowImpl] )? SEMI
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14868:6: ( (fsi= flow_source_implementation ) | (fsir= flow_source_implementation_refinement ) | (fki= flow_sink_implementation ) | (fkir= flow_sink_implementation_refinement ) | (fpi= flow_path_implementation ) | (fpir= flow_path_implementation_refinement ) )
            int alt735=6;
            alt735 = dfa735.predict(input);
            switch (alt735) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14869:7: (fsi= flow_source_implementation )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14869:7: (fsi= flow_source_implementation )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14869:8: fsi= flow_source_implementation
                    {
                    pushFollow(FOLLOW_flow_source_implementation_in_flow_implementation36178);
                    fsi=flow_source_implementation();

                    state._fsp--;
                    if (state.failed) return flowImpl;
                    if ( state.backtracking==0 ) {

                           			flowImpl = fsi;
                           		
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14875:7: (fsir= flow_source_implementation_refinement )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14875:7: (fsir= flow_source_implementation_refinement )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14875:8: fsir= flow_source_implementation_refinement
                    {
                    pushFollow(FOLLOW_flow_source_implementation_refinement_in_flow_implementation36213);
                    fsir=flow_source_implementation_refinement();

                    state._fsp--;
                    if (state.failed) return flowImpl;
                    if ( state.backtracking==0 ) {

                               //refinement only allowed in extensions
                               if (!extension){
                                throw new FailedPredicateException(input, "flow implementation", "refinement only allowed in extensions");
                               }
                               flowImpl = fsir;            
                              
                    }

                    }


                    }
                    break;
                case 3 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14885:7: (fki= flow_sink_implementation )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14885:7: (fki= flow_sink_implementation )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14885:8: fki= flow_sink_implementation
                    {
                    pushFollow(FOLLOW_flow_sink_implementation_in_flow_implementation36251);
                    fki=flow_sink_implementation();

                    state._fsp--;
                    if (state.failed) return flowImpl;
                    if ( state.backtracking==0 ) {

                           			flowImpl = fki;
                           		
                    }

                    }


                    }
                    break;
                case 4 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14891:6: (fkir= flow_sink_implementation_refinement )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14891:6: (fkir= flow_sink_implementation_refinement )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14891:7: fkir= flow_sink_implementation_refinement
                    {
                    pushFollow(FOLLOW_flow_sink_implementation_refinement_in_flow_implementation36285);
                    fkir=flow_sink_implementation_refinement();

                    state._fsp--;
                    if (state.failed) return flowImpl;
                    if ( state.backtracking==0 ) {

                               //refinement only allowed in extensions
                               if (!extension){
                                throw new FailedPredicateException(input, "flow implementation", "refinement only allowed in extensions");
                               }
                               
                               flowImpl = fkir;            
                              
                    }

                    }


                    }
                    break;
                case 5 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14902:7: (fpi= flow_path_implementation )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14902:7: (fpi= flow_path_implementation )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14902:8: fpi= flow_path_implementation
                    {
                    pushFollow(FOLLOW_flow_path_implementation_in_flow_implementation36326);
                    fpi=flow_path_implementation();

                    state._fsp--;
                    if (state.failed) return flowImpl;
                    if ( state.backtracking==0 ) {

                           	 		flowImpl = fpi;
                           	 	
                    }

                    }


                    }
                    break;
                case 6 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14908:9: (fpir= flow_path_implementation_refinement )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14908:9: (fpir= flow_path_implementation_refinement )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14908:10: fpir= flow_path_implementation_refinement
                    {
                    pushFollow(FOLLOW_flow_path_implementation_refinement_in_flow_implementation36368);
                    fpir=flow_path_implementation_refinement();

                    state._fsp--;
                    if (state.failed) return flowImpl;
                    if ( state.backtracking==0 ) {

                                     //refinement only allowed in extensions
                                     if (!extension){
                                        throw new FailedPredicateException(input, "flow implementation", "refinement only allowed in extensions");
                                     }
                               
                                     flowImpl = fkir;            
                                  
                    }

                    }


                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14919:5: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt737=2;
            int LA737_0 = input.LA(1);

            if ( (LA737_0==LCURLY) ) {
                alt737=1;
            }
            switch (alt737) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14919:6: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_flow_implementation36409); if (state.failed) return flowImpl;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14920:7: (pa= property_association )+
                    int cnt736=0;
                    loop736:
                    do {
                        int alt736=2;
                        int LA736_0 = input.LA(1);

                        if ( (LA736_0==IDENT) ) {
                            alt736=1;
                        }


                        switch (alt736) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14920:8: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_flow_implementation36420);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return flowImpl;
                    	    if ( state.backtracking==0 ) {

                    	                flowImpl.getOwnedPropertyAssociations().add(pa);
                    	              
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt736 >= 1 ) break loop736;
                    	    if (state.backtracking>0) {state.failed=true; return flowImpl;}
                                EarlyExitException eee =
                                    new EarlyExitException(736, input);
                                throw eee;
                        }
                        cnt736++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_flow_implementation36446); if (state.failed) return flowImpl;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14927:5: ( in_modes_and_transitions[flowImpl] )?
            int alt738=2;
            int LA738_0 = input.LA(1);

            if ( (LA738_0==IN) ) {
                alt738=1;
            }
            switch (alt738) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14927:6: in_modes_and_transitions[flowImpl]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_flow_implementation36460);
                    in_modes_and_transitions(flowImpl);

                    state._fsp--;
                    if (state.failed) return flowImpl;

                    }
                    break;

            }

            match(input,SEMI,FOLLOW_SEMI_in_flow_implementation36472); if (state.failed) return flowImpl;

            }

        }
        catch (RecognitionException ex) {

                    reportError(ex);
            		    consumeUntil(input,SEMI);
            		    input.consume();
                
        }
        finally {
        }
        return flowImpl;
    }
    // $ANTLR end "flow_implementation"


    // $ANTLR start "flow_source_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14970:1: flow_source_implementation returns [FlowImplementation fi] : flow_identifier= IDENT COLON FLOW SOURCE (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )* cr= flow_feature_identifier ;
    public final FlowImplementation flow_source_implementation() throws RecognitionException {
        FlowImplementation fi = null;

        Token flow_identifier=null;
        Token cid=null;
        ReferenceRecord cr = null;



        		LocationReference fr;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14974:2: (flow_identifier= IDENT COLON FLOW SOURCE (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )* cr= flow_feature_identifier )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14975:3: flow_identifier= IDENT COLON FLOW SOURCE (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )* cr= flow_feature_identifier
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_source_implementation36538); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_flow_source_implementation36540); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_flow_source_implementation36545); if (state.failed) return fi;
            match(input,SOURCE,FOLLOW_SOURCE_in_flow_source_implementation36547); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
                      		fi = Aadl2F.createFlowImplementation();
                      		fi.setKind(FlowKind.SOURCE);
              				    processComments(fi);
              				    // Flow implementations do not have a name 
                       		//fi.setName(flow_identifier.getText());
                       		
                       		ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FlowImplementationSpecificationReference,
                       		                                         fi,
                       		                                         new String[]{flow_identifier.getText()}
                       		                                         );
                          unresolvedReferences.add(rr);         		                                         
                       		fr = new LocationReference(this.getFilename(),flow_identifier.getLine());
                       		fi.setLocationReference(fr);
                   	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14992:8: (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )*
            loop739:
            do {
                int alt739=2;
                int LA739_0 = input.LA(1);

                if ( (LA739_0==IDENT) ) {
                    int LA739_1 = input.LA(2);

                    if ( (LA739_1==DOT) ) {
                        int LA739_2 = input.LA(3);

                        if ( (LA739_2==IDENT) ) {
                            int LA739_5 = input.LA(4);

                            if ( (LA739_5==ARROW) ) {
                                alt739=1;
                            }


                        }


                    }
                    else if ( (LA739_1==ARROW) ) {
                        alt739=1;
                    }


                }


                switch (alt739) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:14993:11: cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW
            	    {
            	    pushFollow(FOLLOW_subcomponent_flow_identifier_in_flow_source_implementation36580);
            	    cr=subcomponent_flow_identifier();

            	    state._fsp--;
            	    if (state.failed) return fi;
            	    if ( state.backtracking==0 ) {

            	                    cr.setReferenceType(ParserReferenceType.FlowImplementationFlowElementReference);
            	                    cr.setReferencingObject(fi);
            	                    unresolvedReferences.add(cr);
            	                  
            	    }
            	    match(input,ARROW,FOLLOW_ARROW_in_flow_source_implementation36606); if (state.failed) return fi;
            	    cid=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_source_implementation36631); if (state.failed) return fi;
            	    if ( state.backtracking==0 ) {

            	             			  ReferenceRecord cref = new ReferenceRecord(ParserReferenceType.FlowImplementationConnectionReference,
            	             			                                        fi,
            	             			                                        new String[]{cid.getText()}
            	             			                                        );
            	                    unresolvedReferences.add(cref);                                                    
            	             			
            	    }
            	    match(input,ARROW,FOLLOW_ARROW_in_flow_source_implementation36654); if (state.failed) return fi;

            	    }
            	    break;

            	default :
            	    break loop739;
                }
            } while (true);

            pushFollow(FOLLOW_flow_feature_identifier_in_flow_source_implementation36680);
            cr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return fi;
            if ( state.backtracking==0 ) {

                          cr.setReferenceType(ParserReferenceType.FlowImplementationOutFeatureReference);
                          cr.setReferencingObject(fi);
                          unresolvedReferences.add(cr); 
                        
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "flow_source_implementation"


    // $ANTLR start "flow_sink_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15019:1: flow_sink_implementation returns [FlowImplementation fi] : flow_identifier= IDENT COLON FLOW SINK cr= flow_feature_identifier ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )* ;
    public final FlowImplementation flow_sink_implementation() throws RecognitionException {
        FlowImplementation fi = null;

        Token flow_identifier=null;
        Token cid=null;
        ReferenceRecord cr = null;



        		LocationReference fr;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15022:3: (flow_identifier= IDENT COLON FLOW SINK cr= flow_feature_identifier ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )* )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15023:3: flow_identifier= IDENT COLON FLOW SINK cr= flow_feature_identifier ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )*
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_sink_implementation36715); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_flow_sink_implementation36717); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_flow_sink_implementation36725); if (state.failed) return fi;
            match(input,SINK,FOLLOW_SINK_in_flow_sink_implementation36727); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
                   		fi = Aadl2F.createFlowImplementation();
                   		fi.setKind(FlowKind.SINK);
              			  processComments(fi);
                      //fi.setName(flow_identifier.getText());
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FlowImplementationSpecificationReference,
                                                               fi,
                                                               new String[]{flow_identifier.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                      
                      fr = new LocationReference(this.getFilename(),flow_identifier.getLine());
                      fi.setLocationReference(fr);
                      
            }
            pushFollow(FOLLOW_flow_feature_identifier_in_flow_sink_implementation36747);
            cr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return fi;
            if ( state.backtracking==0 ) {

                   	    cr.setReferenceType(ParserReferenceType.FlowImplementationInFeatureReference);
                   	    cr.setReferencingObject(fi);
                   	    unresolvedReferences.add(cr); 
                   	  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15044:6: ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )*
            loop740:
            do {
                int alt740=2;
                int LA740_0 = input.LA(1);

                if ( (LA740_0==ARROW) ) {
                    alt740=1;
                }


                switch (alt740) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15045:7: ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier
            	    {
            	    match(input,ARROW,FOLLOW_ARROW_in_flow_sink_implementation36774); if (state.failed) return fi;
            	    cid=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_sink_implementation36780); if (state.failed) return fi;
            	    if ( state.backtracking==0 ) {

            	                ReferenceRecord cref=new ReferenceRecord(ParserReferenceType.FlowImplementationConnectionReference,
            	                                                        fi,
            	                                                        new String[]{cid.getText()}
            	                                                        );  
            	                unresolvedReferences.add(cref);
            	           		
            	    }
            	    match(input,ARROW,FOLLOW_ARROW_in_flow_sink_implementation36798); if (state.failed) return fi;
            	    pushFollow(FOLLOW_subcomponent_flow_identifier_in_flow_sink_implementation36804);
            	    cr=subcomponent_flow_identifier();

            	    state._fsp--;
            	    if (state.failed) return fi;
            	    if ( state.backtracking==0 ) {

            	           		  cr.setReferenceType(ParserReferenceType.FlowImplementationFlowElementReference);
            	           		  cr.setReferencingObject(fi);
            	           		  unresolvedReferences.add(cr);
            	           		
            	    }

            	    }
            	    break;

            	default :
            	    break loop740;
                }
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "flow_sink_implementation"


    // $ANTLR start "flow_path_implementation"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15062:1: flow_path_implementation returns [FlowImplementation fi] : flow_identifier= IDENT COLON FLOW PATH cr= flow_feature_identifier ARROW (cid= IDENT ARROW (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )+ )? cr= flow_feature_identifier ;
    public final FlowImplementation flow_path_implementation() throws RecognitionException {
        FlowImplementation fi = null;

        Token flow_identifier=null;
        Token cid=null;
        ReferenceRecord cr = null;



        		LocationReference fr;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15066:2: (flow_identifier= IDENT COLON FLOW PATH cr= flow_feature_identifier ARROW (cid= IDENT ARROW (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )+ )? cr= flow_feature_identifier )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15067:2: flow_identifier= IDENT COLON FLOW PATH cr= flow_feature_identifier ARROW (cid= IDENT ARROW (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )+ )? cr= flow_feature_identifier
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_path_implementation36845); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_flow_path_implementation36847); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_flow_path_implementation36854); if (state.failed) return fi;
            match(input,PATH,FOLLOW_PATH_in_flow_path_implementation36856); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
                      fi = Aadl2F.createFlowImplementation();
                      fi.setKind(FlowKind.PATH);
                      processComments(fi);
                      ReferenceRecord rr = new ReferenceRecord(ParserReferenceType.FlowImplementationSpecificationReference,
                                                               fi,
                                                               new String[]{flow_identifier.getText()}
                                                               );
                      unresolvedReferences.add(rr);                                                      
                      //fi.setName(flow_identifier.getText());
                      fr = new LocationReference(); 
                      fr.setFilename(this.getFilename()); 
                      fr.setLine(flow_identifier.getLine());
                      fi.setLocationReference(fr);
                     
            }
            pushFollow(FOLLOW_flow_feature_identifier_in_flow_path_implementation36874);
            cr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
                       cr.setReferenceType(ParserReferenceType.FlowImplementationInFeatureReference);
                       cr.setReferencingObject(fi);
                       unresolvedReferences.add(cr); 
                  	 
            }
            match(input,ARROW,FOLLOW_ARROW_in_flow_path_implementation36889); if (state.failed) return fi;
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15091:8: (cid= IDENT ARROW (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )+ )?
            int alt742=2;
            int LA742_0 = input.LA(1);

            if ( (LA742_0==IDENT) ) {
                int LA742_1 = input.LA(2);

                if ( (LA742_1==ARROW) ) {
                    alt742=1;
                }
            }
            switch (alt742) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15092:10: cid= IDENT ARROW (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )+
                    {
                    cid=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_path_implementation36915); if (state.failed) return fi;
                    if ( state.backtracking==0 ) {

                                    ReferenceRecord cref=new ReferenceRecord(ParserReferenceType.FlowImplementationConnectionReference,
                                                                            fi,
                                                                            new String[]{cid.getText()}
                                                                            );  
                                    unresolvedReferences.add(cref);
                                  
                    }
                    match(input,ARROW,FOLLOW_ARROW_in_flow_path_implementation36942); if (state.failed) return fi;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15101:12: (cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW )+
                    int cnt741=0;
                    loop741:
                    do {
                        int alt741=2;
                        int LA741_0 = input.LA(1);

                        if ( (LA741_0==IDENT) ) {
                            int LA741_1 = input.LA(2);

                            if ( (LA741_1==DOT) ) {
                                int LA741_2 = input.LA(3);

                                if ( (LA741_2==IDENT) ) {
                                    int LA741_5 = input.LA(4);

                                    if ( (LA741_5==ARROW) ) {
                                        alt741=1;
                                    }


                                }


                            }
                            else if ( (LA741_1==ARROW) ) {
                                alt741=1;
                            }


                        }


                        switch (alt741) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15102:13: cr= subcomponent_flow_identifier ARROW cid= IDENT ARROW
                    	    {
                    	    pushFollow(FOLLOW_subcomponent_flow_identifier_in_flow_path_implementation36975);
                    	    cr=subcomponent_flow_identifier();

                    	    state._fsp--;
                    	    if (state.failed) return fi;
                    	    if ( state.backtracking==0 ) {

                    	                        cr.setReferenceType(ParserReferenceType.FlowImplementationFlowElementReference);
                    	                        cr.setReferencingObject(fi);
                    	                        unresolvedReferences.add(cr);
                    	                      
                    	    }
                    	    match(input,ARROW,FOLLOW_ARROW_in_flow_path_implementation37008); if (state.failed) return fi;
                    	    cid=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_path_implementation37014); if (state.failed) return fi;
                    	    if ( state.backtracking==0 ) {

                    	               					 ReferenceRecord cref=new ReferenceRecord(ParserReferenceType.FlowImplementationConnectionReference,
                    	                                                                 fi,
                    	                                                                 new String[]{cid.getText()}
                    	                                                                 );  
                    	                         unresolvedReferences.add(cref);
                    	           					  
                    	    }
                    	    match(input,ARROW,FOLLOW_ARROW_in_flow_path_implementation37045); if (state.failed) return fi;

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt741 >= 1 ) break loop741;
                    	    if (state.backtracking>0) {state.failed=true; return fi;}
                                EarlyExitException eee =
                                    new EarlyExitException(741, input);
                                throw eee;
                        }
                        cnt741++;
                    } while (true);


                    }
                    break;

            }

            pushFollow(FOLLOW_flow_feature_identifier_in_flow_path_implementation37082);
            cr=flow_feature_identifier();

            state._fsp--;
            if (state.failed) return fi;
            if ( state.backtracking==0 ) {

                       cr.setReferenceType(ParserReferenceType.FlowImplementationOutFeatureReference);
                       cr.setReferencingObject(fi);
                       unresolvedReferences.add(cr); 
                    	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "flow_path_implementation"


    // $ANTLR start "flow_source_implementation_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15127:1: flow_source_implementation_refinement returns [FlowImplementation fi] : flow_identifier= IDENT COLON FLOW SOURCE REFINED TO ;
    public final FlowImplementation flow_source_implementation_refinement() throws RecognitionException {
        FlowImplementation fi = null;

        Token flow_identifier=null;


             
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15130:6: (flow_identifier= IDENT COLON FLOW SOURCE REFINED TO )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15131:2: flow_identifier= IDENT COLON FLOW SOURCE REFINED TO
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_source_implementation_refinement37123); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_flow_source_implementation_refinement37125); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_flow_source_implementation_refinement37130); if (state.failed) return fi;
            match(input,SOURCE,FOLLOW_SOURCE_in_flow_source_implementation_refinement37132); if (state.failed) return fi;
            match(input,REFINED,FOLLOW_REFINED_in_flow_source_implementation_refinement37135); if (state.failed) return fi;
            match(input,TO,FOLLOW_TO_in_flow_source_implementation_refinement37137); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
              			fi = Aadl2F.createFlowImplementation();
              			fi.setLocationReference(this.getFilename(), flow_identifier.getLine());
              			fi.setKind(FlowKind.SOURCE);
              			processComments(fi);
              			ReferenceRecord refref = new ReferenceRecord(ParserReferenceType.RefinementReference,
              			                                             fi,
              			                                             new String[]{flow_identifier.getText()}
              			                                             );
                    unresolvedReferences.add(refref);			                                             
                    fi.setName(flow_identifier.getText());
                  	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "flow_source_implementation_refinement"


    // $ANTLR start "flow_sink_implementation_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15148:1: flow_sink_implementation_refinement returns [FlowImplementation fi] : flow_identifier= IDENT COLON FLOW SINK REFINED TO ;
    public final FlowImplementation flow_sink_implementation_refinement() throws RecognitionException {
        FlowImplementation fi = null;

        Token flow_identifier=null;


          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15151:3: (flow_identifier= IDENT COLON FLOW SINK REFINED TO )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15152:3: flow_identifier= IDENT COLON FLOW SINK REFINED TO
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_sink_implementation_refinement37167); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_flow_sink_implementation_refinement37169); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_flow_sink_implementation_refinement37174); if (state.failed) return fi;
            match(input,SINK,FOLLOW_SINK_in_flow_sink_implementation_refinement37176); if (state.failed) return fi;
            match(input,REFINED,FOLLOW_REFINED_in_flow_sink_implementation_refinement37179); if (state.failed) return fi;
            match(input,TO,FOLLOW_TO_in_flow_sink_implementation_refinement37181); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
              			fi = Aadl2F.createFlowImplementation();
              			fi.setLocationReference(this.getFilename(), flow_identifier.getLine());
              			fi.setKind(FlowKind.SINK);
              			processComments(fi);
                    fi.setName(flow_identifier.getText());
                    ReferenceRecord rref = new ReferenceRecord(ParserReferenceType.RefinementReference,
                                                              fi,
                                                              new String[]{flow_identifier.getText()}
                                                              );
                    unresolvedReferences.add(rref);                                                
              		
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "flow_sink_implementation_refinement"


    // $ANTLR start "flow_path_implementation_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15169:1: flow_path_implementation_refinement returns [FlowImplementation fi] : flow_identifier= IDENT COLON FLOW PATH REFINED TO ;
    public final FlowImplementation flow_path_implementation_refinement() throws RecognitionException {
        FlowImplementation fi = null;

        Token flow_identifier=null;


          
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15172:3: (flow_identifier= IDENT COLON FLOW PATH REFINED TO )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15173:3: flow_identifier= IDENT COLON FLOW PATH REFINED TO
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_path_implementation_refinement37211); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_flow_path_implementation_refinement37213); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_flow_path_implementation_refinement37218); if (state.failed) return fi;
            match(input,PATH,FOLLOW_PATH_in_flow_path_implementation_refinement37220); if (state.failed) return fi;
            match(input,REFINED,FOLLOW_REFINED_in_flow_path_implementation_refinement37223); if (state.failed) return fi;
            match(input,TO,FOLLOW_TO_in_flow_path_implementation_refinement37225); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
              			fi = Aadl2F.createFlowImplementation();
              			fi.setLocationReference(this.getFilename(), flow_identifier.getLine());
              			fi.setKind(FlowKind.PATH);
              			processComments(fi);
                    fi.setName(flow_identifier.getText());
                    ReferenceRecord rref = new ReferenceRecord(ParserReferenceType.RefinementReference,
                                                              fi,
                                                              new String[]{flow_identifier.getText()}
                                                              );
                    unresolvedReferences.add(rref);                                                
                  
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "flow_path_implementation_refinement"


    // $ANTLR start "subcomponent_flow_identifier"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15190:1: subcomponent_flow_identifier returns [ReferenceRecord cr] : ( (subcompid= IDENT DOT flowid= IDENT ) | (flowid= IDENT ) );
    public final ReferenceRecord subcomponent_flow_identifier() throws RecognitionException {
        ReferenceRecord cr = null;

        Token subcompid=null;
        Token flowid=null;


        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15192:3: ( (subcompid= IDENT DOT flowid= IDENT ) | (flowid= IDENT ) )
            int alt743=2;
            int LA743_0 = input.LA(1);

            if ( (LA743_0==IDENT) ) {
                int LA743_1 = input.LA(2);

                if ( (LA743_1==DOT) ) {
                    alt743=1;
                }
                else if ( (LA743_1==EOF||LA743_1==SEMI||LA743_1==LCURLY||LA743_1==IN||LA743_1==ARROW) ) {
                    alt743=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return cr;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 743, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return cr;}
                NoViableAltException nvae =
                    new NoViableAltException("", 743, 0, input);

                throw nvae;
            }
            switch (alt743) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15193:3: (subcompid= IDENT DOT flowid= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15193:3: (subcompid= IDENT DOT flowid= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15193:4: subcompid= IDENT DOT flowid= IDENT
                    {
                    subcompid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subcomponent_flow_identifier37253); if (state.failed) return cr;
                    match(input,DOT,FOLLOW_DOT_in_subcomponent_flow_identifier37255); if (state.failed) return cr;
                    flowid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subcomponent_flow_identifier37259); if (state.failed) return cr;
                    if ( state.backtracking==0 ) {

                       	    cr = new ReferenceRecord(new String[]{subcompid.getText(),flowid.getText()});
                       	  
                    }

                    }


                    }
                    break;
                case 2 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15198:4: (flowid= IDENT )
                    {
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15198:4: (flowid= IDENT )
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15198:5: flowid= IDENT
                    {
                    flowid=(Token)match(input,IDENT,FOLLOW_IDENT_in_subcomponent_flow_identifier37278); if (state.failed) return cr;
                    if ( state.backtracking==0 ) {

                       	    cr = new ReferenceRecord(new String[]{flowid.getText()});
                       	  
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cr;
    }
    // $ANTLR end "subcomponent_flow_identifier"


    // $ANTLR start "end_to_end_flow"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15205:1: end_to_end_flow returns [EndToEndFlow fi] : flow_identifier= IDENT COLON END TO END FLOW cr= subcomponent_flow_identifier ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )+ ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fi] )? ;
    public final EndToEndFlow end_to_end_flow() throws RecognitionException {
        EndToEndFlow fi = null;

        Token flow_identifier=null;
        Token cid=null;
        ReferenceRecord cr = null;

        PropertyAssociation pa = null;



            
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15208:5: (flow_identifier= IDENT COLON END TO END FLOW cr= subcomponent_flow_identifier ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )+ ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fi] )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15209:5: flow_identifier= IDENT COLON END TO END FLOW cr= subcomponent_flow_identifier ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )+ ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fi] )?
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_end_to_end_flow37317); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_end_to_end_flow37319); if (state.failed) return fi;
            match(input,END,FOLLOW_END_in_end_to_end_flow37326); if (state.failed) return fi;
            match(input,TO,FOLLOW_TO_in_end_to_end_flow37328); if (state.failed) return fi;
            match(input,END,FOLLOW_END_in_end_to_end_flow37330); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_end_to_end_flow37332); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
                  		fi = Aadl2F.createEndToEndFlow();
                      processComments(fi);
                      fi.setName(flow_identifier.getText());
                      LocationReference lr = new LocationReference(); 
                      lr.setFilename(this.getFilename()); 
                      lr.setLine(flow_identifier.getLine());
                      fi.setLocationReference(lr);
                    
            }
            pushFollow(FOLLOW_subcomponent_flow_identifier_in_end_to_end_flow37352);
            cr=subcomponent_flow_identifier();

            state._fsp--;
            if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
                   	  cr.setReferenceType(ParserReferenceType.FlowImplementationFlowElementReference);
                   	  cr.setReferencingObject(fi);
                   	  unresolvedReferences.add(cr);
                   	
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15226:6: ( ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier )+
            int cnt744=0;
            loop744:
            do {
                int alt744=2;
                int LA744_0 = input.LA(1);

                if ( (LA744_0==ARROW) ) {
                    alt744=1;
                }


                switch (alt744) {
            	case 1 :
            	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15227:7: ARROW cid= IDENT ARROW cr= subcomponent_flow_identifier
            	    {
            	    match(input,ARROW,FOLLOW_ARROW_in_end_to_end_flow37377); if (state.failed) return fi;
            	    cid=(Token)match(input,IDENT,FOLLOW_IDENT_in_end_to_end_flow37383); if (state.failed) return fi;
            	    if ( state.backtracking==0 ) {

            	           		 ReferenceRecord cref = new ReferenceRecord(ParserReferenceType.FlowImplementationConnectionReference,
            	           		                                           fi,
            	           		                                           new String[]{cid.getText()}
            	           		                                           );
            	                unresolvedReferences.add(cref);
            	           		
            	    }
            	    match(input,ARROW,FOLLOW_ARROW_in_end_to_end_flow37401); if (state.failed) return fi;
            	    pushFollow(FOLLOW_subcomponent_flow_identifier_in_end_to_end_flow37407);
            	    cr=subcomponent_flow_identifier();

            	    state._fsp--;
            	    if (state.failed) return fi;
            	    if ( state.backtracking==0 ) {

            	           			cr.setReferenceType(ParserReferenceType.FlowImplementationFlowElementReference);
            	                cr.setReferencingObject(fi);
            	                unresolvedReferences.add(cr);
            	           		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt744 >= 1 ) break loop744;
            	    if (state.backtracking>0) {state.failed=true; return fi;}
                        EarlyExitException eee =
                            new EarlyExitException(744, input);
                        throw eee;
                }
                cnt744++;
            } while (true);

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15242:6: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt746=2;
            int LA746_0 = input.LA(1);

            if ( (LA746_0==LCURLY) ) {
                alt746=1;
            }
            switch (alt746) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15242:7: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_end_to_end_flow37433); if (state.failed) return fi;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15243:7: (pa= property_association )+
                    int cnt745=0;
                    loop745:
                    do {
                        int alt745=2;
                        int LA745_0 = input.LA(1);

                        if ( (LA745_0==IDENT) ) {
                            alt745=1;
                        }


                        switch (alt745) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15243:8: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_end_to_end_flow37444);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return fi;
                    	    if ( state.backtracking==0 ) {

                    	                fi.getOwnedPropertyAssociations().add(pa);
                    	              
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt745 >= 1 ) break loop745;
                    	    if (state.backtracking>0) {state.failed=true; return fi;}
                                EarlyExitException eee =
                                    new EarlyExitException(745, input);
                                throw eee;
                        }
                        cnt745++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_end_to_end_flow37471); if (state.failed) return fi;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15250:6: ( in_modes_and_transitions[fi] )?
            int alt747=2;
            int LA747_0 = input.LA(1);

            if ( (LA747_0==IN) ) {
                alt747=1;
            }
            switch (alt747) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15250:7: in_modes_and_transitions[fi]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_end_to_end_flow37487);
                    in_modes_and_transitions(fi);

                    state._fsp--;
                    if (state.failed) return fi;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "end_to_end_flow"


    // $ANTLR start "end_to_end_flow_refinement"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15254:1: end_to_end_flow_refinement returns [EndToEndFlow fi] : flow_identifier= IDENT COLON REFINED TO END TO END FLOW ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fi] )? ;
    public final EndToEndFlow end_to_end_flow_refinement() throws RecognitionException {
        EndToEndFlow fi = null;

        Token flow_identifier=null;
        PropertyAssociation pa = null;



                LocationReference lr;
            
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15258:5: (flow_identifier= IDENT COLON REFINED TO END TO END FLOW ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fi] )? )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15259:3: flow_identifier= IDENT COLON REFINED TO END TO END FLOW ( LCURLY (pa= property_association )+ RCURLY )? ( in_modes_and_transitions[fi] )?
            {
            flow_identifier=(Token)match(input,IDENT,FOLLOW_IDENT_in_end_to_end_flow_refinement37523); if (state.failed) return fi;
            match(input,COLON,FOLLOW_COLON_in_end_to_end_flow_refinement37525); if (state.failed) return fi;
            match(input,REFINED,FOLLOW_REFINED_in_end_to_end_flow_refinement37529); if (state.failed) return fi;
            match(input,TO,FOLLOW_TO_in_end_to_end_flow_refinement37531); if (state.failed) return fi;
            match(input,END,FOLLOW_END_in_end_to_end_flow_refinement37536); if (state.failed) return fi;
            match(input,TO,FOLLOW_TO_in_end_to_end_flow_refinement37538); if (state.failed) return fi;
            match(input,END,FOLLOW_END_in_end_to_end_flow_refinement37540); if (state.failed) return fi;
            match(input,FLOW,FOLLOW_FLOW_in_end_to_end_flow_refinement37542); if (state.failed) return fi;
            if ( state.backtracking==0 ) {
               
              			fi = Aadl2F.createEndToEndFlow();
              			processComments(fi);
                    fi.setName(flow_identifier.getText());
                    ReferenceRecord rref = new ReferenceRecord(ParserReferenceType.EndToEndFlowRefinementReference,
                                                               fi,
                                                               new String[]{flow_identifier.getText()}
                                                               );
                    unresolvedReferences.add(rref);                                                 
                    lr = new LocationReference(); 
                    lr.setFilename(this.getFilename()); 
                    lr.setLine(flow_identifier.getLine());
                    fi.setLocationReference(lr);
                  
            }
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15276:3: ( LCURLY (pa= property_association )+ RCURLY )?
            int alt749=2;
            int LA749_0 = input.LA(1);

            if ( (LA749_0==LCURLY) ) {
                alt749=1;
            }
            switch (alt749) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15276:4: LCURLY (pa= property_association )+ RCURLY
                    {
                    match(input,LCURLY,FOLLOW_LCURLY_in_end_to_end_flow_refinement37552); if (state.failed) return fi;
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15277:5: (pa= property_association )+
                    int cnt748=0;
                    loop748:
                    do {
                        int alt748=2;
                        int LA748_0 = input.LA(1);

                        if ( (LA748_0==IDENT) ) {
                            alt748=1;
                        }


                        switch (alt748) {
                    	case 1 :
                    	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15277:6: pa= property_association
                    	    {
                    	    pushFollow(FOLLOW_property_association_in_end_to_end_flow_refinement37561);
                    	    pa=property_association();

                    	    state._fsp--;
                    	    if (state.failed) return fi;
                    	    if ( state.backtracking==0 ) {

                    	              fi.getOwnedPropertyAssociations().add(pa);
                    	            
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt748 >= 1 ) break loop748;
                    	    if (state.backtracking>0) {state.failed=true; return fi;}
                                EarlyExitException eee =
                                    new EarlyExitException(748, input);
                                throw eee;
                        }
                        cnt748++;
                    } while (true);

                    match(input,RCURLY,FOLLOW_RCURLY_in_end_to_end_flow_refinement37581); if (state.failed) return fi;

                    }
                    break;

            }

            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15284:3: ( in_modes_and_transitions[fi] )?
            int alt750=2;
            int LA750_0 = input.LA(1);

            if ( (LA750_0==IN) ) {
                alt750=1;
            }
            switch (alt750) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15284:4: in_modes_and_transitions[fi]
                    {
                    pushFollow(FOLLOW_in_modes_and_transitions_in_end_to_end_flow_refinement37591);
                    in_modes_and_transitions(fi);

                    state._fsp--;
                    if (state.failed) return fi;

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return fi;
    }
    // $ANTLR end "end_to_end_flow_refinement"


    // $ANTLR start "flow_feature_identifier"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15300:1: flow_feature_identifier returns [ReferenceRecord cr ] : (ctxId= IDENT DOT )? portId= IDENT ;
    public final ReferenceRecord flow_feature_identifier() throws RecognitionException {
        ReferenceRecord cr = null;

        Token ctxId=null;
        Token portId=null;


        	 String ctx="";
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15303:3: ( (ctxId= IDENT DOT )? portId= IDENT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15304:2: (ctxId= IDENT DOT )? portId= IDENT
            {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15304:2: (ctxId= IDENT DOT )?
            int alt751=2;
            int LA751_0 = input.LA(1);

            if ( (LA751_0==IDENT) ) {
                int LA751_1 = input.LA(2);

                if ( (LA751_1==DOT) ) {
                    alt751=1;
                }
            }
            switch (alt751) {
                case 1 :
                    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15304:3: ctxId= IDENT DOT
                    {
                    ctxId=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_feature_identifier37632); if (state.failed) return cr;
                    match(input,DOT,FOLLOW_DOT_in_flow_feature_identifier37634); if (state.failed) return cr;
                    if ( state.backtracking==0 ) {

                      	     ctx = ctxId.getText();	   
                      	   
                    }

                    }
                    break;

            }

            portId=(Token)match(input,IDENT,FOLLOW_IDENT_in_flow_feature_identifier37650); if (state.failed) return cr;
            if ( state.backtracking==0 ) {

              	   if (ctx.length()>0){
                     cr = new ReferenceRecord(new String[]{ctx,portId.getText()});
              	   } else {
                     cr = new ReferenceRecord(new String[]{portId.getText()});
              	   }
              	 
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return cr;
    }
    // $ANTLR end "flow_feature_identifier"


    // $ANTLR start "real_literal"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15319:1: real_literal returns [Token tok] : id= REAL_LIT ;
    public final Token real_literal() throws RecognitionException {
        Token tok = null;

        Token id=null;


        		tok=null;
        		String str;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15323:3: (id= REAL_LIT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15325:5: id= REAL_LIT
            {
            id=(Token)match(input,REAL_LIT,FOLLOW_REAL_LIT_in_real_literal37683); if (state.failed) return tok;
            if ( state.backtracking==0 ) {
               
              	str = id.getText();
              	tok = id;
                      if ( str.indexOf('.') == -1 ) 
                      	//throw new SemanticException("Expected a real value: "+str,getFilename(),id.getLine(), id.getCharPositionInLine()); 
                      	throw new FailedPredicateException(input,"real literal","Expected a real value: "+str);
                     
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return tok;
    }
    // $ANTLR end "real_literal"


    // $ANTLR start "integer_literal"
    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15335:1: integer_literal returns [Token tok] : id= INTEGER_LIT ;
    public final Token integer_literal() throws RecognitionException {
        Token tok = null;

        Token id=null;


        		tok =null;
        		String str;
        	
        try {
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15339:3: (id= INTEGER_LIT )
            // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:15340:5: id= INTEGER_LIT
            {
            id=(Token)match(input,INTEGER_LIT,FOLLOW_INTEGER_LIT_in_integer_literal37712); if (state.failed) return tok;
            if ( state.backtracking==0 ) {
               
              	 	str = id.getText();
              		tok = id;
                       	if ( str.indexOf('.') != -1 ) 
                       		//throw new SemanticException("Expected an integer value: "+str,getFilename(),id.getLine(), id.getCharPositionInLine()); 
                       		throw new FailedPredicateException(input,"integer literal","Expected an integer value: "+str);
                      
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return tok;
    }
    // $ANTLR end "integer_literal"

    // $ANTLR start synpred476_Aadl2
    public final void synpred476_Aadl2_fragment() throws RecognitionException {   
        Mode md = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:3: ( ( REQUIRES MODES ( (md= mode )+ ) | none_stmt ) )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:3: ( REQUIRES MODES ( (md= mode )+ ) | none_stmt )
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:3: ( REQUIRES MODES ( (md= mode )+ ) | none_stmt )
        int alt907=2;
        int LA907_0 = input.LA(1);

        if ( (LA907_0==REQUIRES) ) {
            alt907=1;
        }
        else if ( (LA907_0==NONE) ) {
            alt907=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 907, 0, input);

            throw nvae;
        }
        switch (alt907) {
            case 1 :
                // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4977:4: REQUIRES MODES ( (md= mode )+ )
                {
                match(input,REQUIRES,FOLLOW_REQUIRES_in_synpred476_Aadl214207); if (state.failed) return ;
                match(input,MODES,FOLLOW_MODES_in_synpred476_Aadl214209); if (state.failed) return ;
                // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4978:5: ( (md= mode )+ )
                // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4979:7: (md= mode )+
                {
                // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4979:7: (md= mode )+
                int cnt906=0;
                loop906:
                do {
                    int alt906=2;
                    int LA906_0 = input.LA(1);

                    if ( (LA906_0==IDENT) ) {
                        alt906=1;
                    }


                    switch (alt906) {
                	case 1 :
                	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4979:8: md= mode
                	    {
                	    pushFollow(FOLLOW_mode_in_synpred476_Aadl214226);
                	    md=mode();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    if ( cnt906 >= 1 ) break loop906;
                	    if (state.backtracking>0) {state.failed=true; return ;}
                            EarlyExitException eee =
                                new EarlyExitException(906, input);
                            throw eee;
                    }
                    cnt906++;
                } while (true);


                }


                }
                break;
            case 2 :
                // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:4987:5: none_stmt
                {
                pushFollow(FOLLOW_none_stmt_in_synpred476_Aadl214263);
                none_stmt();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred476_Aadl2

    // $ANTLR start synpred615_Aadl2
    public final void synpred615_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:5: ( ( none_stmt ) )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:5: ( none_stmt )
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:5: ( none_stmt )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:5853:6: none_stmt
        {
        pushFollow(FOLLOW_none_stmt_in_synpred615_Aadl217463);
        none_stmt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred615_Aadl2

    // $ANTLR start synpred699_Aadl2
    public final void synpred699_Aadl2_fragment() throws RecognitionException {   
        PropertyOwner po = null;

        PropertyOwner po1 = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:5: ( (po= property_owner ( COMMA po1= property_owner )* ) )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:5: (po= property_owner ( COMMA po1= property_owner )* )
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:5: (po= property_owner ( COMMA po1= property_owner )* )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8000:6: po= property_owner ( COMMA po1= property_owner )*
        {
        pushFollow(FOLLOW_property_owner_in_synpred699_Aadl221147);
        po=property_owner();

        state._fsp--;
        if (state.failed) return ;
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8004:5: ( COMMA po1= property_owner )*
        loop955:
        do {
            int alt955=2;
            int LA955_0 = input.LA(1);

            if ( (LA955_0==COMMA) ) {
                alt955=1;
            }


            switch (alt955) {
        	case 1 :
        	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8004:7: COMMA po1= property_owner
        	    {
        	    match(input,COMMA,FOLLOW_COMMA_in_synpred699_Aadl221162); if (state.failed) return ;
        	    pushFollow(FOLLOW_property_owner_in_synpred699_Aadl221166);
        	    po1=property_owner();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop955;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred699_Aadl2

    // $ANTLR start synpred700_Aadl2
    public final void synpred700_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8028:3: ( unique_impl_name )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8028:4: unique_impl_name
        {
        pushFollow(FOLLOW_unique_impl_name_in_synpred700_Aadl221245);
        unique_impl_name();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred700_Aadl2

    // $ANTLR start synpred701_Aadl2
    public final void synpred701_Aadl2_fragment() throws RecognitionException {   
        MetaclassReference mi = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8036:4: (mi= qualified_meta_model_identifier )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:8036:4: mi= qualified_meta_model_identifier
        {
        pushFollow(FOLLOW_qualified_meta_model_identifier_in_synpred701_Aadl221267);
        mi=qualified_meta_model_identifier();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred701_Aadl2

    // $ANTLR start synpred762_Aadl2
    public final void synpred762_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9210:3: ( core_metaclass_keyword )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9210:4: core_metaclass_keyword
        {
        pushFollow(FOLLOW_core_metaclass_keyword_in_synpred762_Aadl224015);
        core_metaclass_keyword();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred762_Aadl2

    // $ANTLR start synpred846_Aadl2
    public final void synpred846_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9889:4: ( LPAREN IDENT ASSIGN )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9889:5: LPAREN IDENT ASSIGN
        {
        match(input,LPAREN,FOLLOW_LPAREN_in_synpred846_Aadl225502); if (state.failed) return ;
        match(input,IDENT,FOLLOW_IDENT_in_synpred846_Aadl225504); if (state.failed) return ;
        match(input,ASSIGN,FOLLOW_ASSIGN_in_synpred846_Aadl225506); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred846_Aadl2

    // $ANTLR start synpred850_Aadl2
    public final void synpred850_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9893:5: ( (~ ( DOTDOT | SEMI ) )* DOTDOT )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9893:6: (~ ( DOTDOT | SEMI ) )* DOTDOT
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9893:6: (~ ( DOTDOT | SEMI ) )*
        loop960:
        do {
            int alt960=2;
            int LA960_0 = input.LA(1);

            if ( ((LA960_0>=WITH && LA960_0<=COMMA)||(LA960_0>=IDENT && LA960_0<=MINUS)||(LA960_0>=REAL_LIT && LA960_0<=SL_COMMENT)) ) {
                alt960=1;
            }


            switch (alt960) {
        	case 1 :
        	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:0:0: ~ ( DOTDOT | SEMI )
        	    {
        	    if ( (input.LA(1)>=WITH && input.LA(1)<=COMMA)||(input.LA(1)>=IDENT && input.LA(1)<=MINUS)||(input.LA(1)>=REAL_LIT && input.LA(1)<=SL_COMMENT) ) {
        	        input.consume();
        	        state.errorRecovery=false;state.failed=false;
        	    }
        	    else {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        MismatchedSetException mse = new MismatchedSetException(null,input);
        	        throw mse;
        	    }


        	    }
        	    break;

        	default :
        	    break loop960;
            }
        } while (true);

        match(input,DOTDOT,FOLLOW_DOTDOT_in_synpred850_Aadl225534); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred850_Aadl2

    // $ANTLR start synpred851_Aadl2
    public final void synpred851_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression bt = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9897:5: (bt= boolean_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9897:5: bt= boolean_term
        {
        pushFollow(FOLLOW_boolean_term_in_synpred851_Aadl225556);
        bt=boolean_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred851_Aadl2

    // $ANTLR start synpred852_Aadl2
    public final void synpred852_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression rt = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9901:4: (rt= real_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9901:4: rt= real_term
        {
        pushFollow(FOLLOW_real_term_in_synpred852_Aadl225570);
        rt=real_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred852_Aadl2

    // $ANTLR start synpred853_Aadl2
    public final void synpred853_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression it = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9905:4: (it= integer_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9905:4: it= integer_term
        {
        pushFollow(FOLLOW_integer_term_in_synpred853_Aadl225581);
        it=integer_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred853_Aadl2

    // $ANTLR start synpred857_Aadl2
    public final void synpred857_Aadl2_fragment() throws RecognitionException {   
        ListValue li = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9921:5: (li= list_term[$constant_property_expression::ro] )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:9921:5: li= list_term[$constant_property_expression::ro]
        {
        pushFollow(FOLLOW_list_term_in_synpred857_Aadl225628);
        li=list_term(((constant_property_expression_scope)constant_property_expression_stack.peek()).ro);

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred857_Aadl2

    // $ANTLR start synpred859_Aadl2
    public final void synpred859_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression pv = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10031:6: ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10031:6: COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] )
        {
        match(input,COMMA,FOLLOW_COMMA_in_synpred859_Aadl225940); if (state.failed) return ;
        pushFollow(FOLLOW_property_expression_in_synpred859_Aadl225964);
        pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

        state._fsp--;
        if (state.failed) return ;
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10040:5: ( in_modes[$modal_property_value::mpv] )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10041:7: in_modes[$modal_property_value::mpv]
        {
        pushFollow(FOLLOW_in_modes_in_synpred859_Aadl225987);
        in_modes(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred859_Aadl2

    // $ANTLR start synpred861_Aadl2
    public final void synpred861_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression pv = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:3: ( ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN ) )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:3: ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN )
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:3: ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10012:4: LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN
        {
        match(input,LPAREN,FOLLOW_LPAREN_in_synpred861_Aadl225855); if (state.failed) return ;
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10013:4: ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10014:5: (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )?
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10014:5: (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10015:7: pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] )
        {
        if ( state.backtracking==0 ) {

                  ((modal_property_value_scope)modal_property_value_stack.peek()).mpv =Aadl2F.createModalPropertyValue(); 
                
        }
        pushFollow(FOLLOW_property_expression_in_synpred861_Aadl225886);
        pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

        state._fsp--;
        if (state.failed) return ;
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10023:5: ( in_modes[$modal_property_value::mpv] )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10024:7: in_modes[$modal_property_value::mpv]
        {
        pushFollow(FOLLOW_in_modes_in_synpred861_Aadl225909);
        in_modes(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10031:5: ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )*
        loop961:
        do {
            int alt961=2;
            int LA961_0 = input.LA(1);

            if ( (LA961_0==COMMA) ) {
                int LA961_1 = input.LA(2);

                if ( (synpred859_Aadl2()) ) {
                    alt961=1;
                }


            }


            switch (alt961) {
        	case 1 :
        	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10031:6: COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] )
        	    {
        	    match(input,COMMA,FOLLOW_COMMA_in_synpred861_Aadl225940); if (state.failed) return ;
        	    pushFollow(FOLLOW_property_expression_in_synpred861_Aadl225964);
        	    pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

        	    state._fsp--;
        	    if (state.failed) return ;
        	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10040:5: ( in_modes[$modal_property_value::mpv] )
        	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10041:7: in_modes[$modal_property_value::mpv]
        	    {
        	    pushFollow(FOLLOW_in_modes_in_synpred861_Aadl225987);
        	    in_modes(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop961;
            }
        } while (true);

        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10048:5: ( COMMA pv= property_expression[$modal_property_value::mpv] )?
        int alt962=2;
        int LA962_0 = input.LA(1);

        if ( (LA962_0==COMMA) ) {
            alt962=1;
        }
        switch (alt962) {
            case 1 :
                // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10048:6: COMMA pv= property_expression[$modal_property_value::mpv]
                {
                match(input,COMMA,FOLLOW_COMMA_in_synpred861_Aadl226019); if (state.failed) return ;
                pushFollow(FOLLOW_property_expression_in_synpred861_Aadl226039);
                pv=property_expression(((modal_property_value_scope)modal_property_value_stack.peek()).mpv);

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }

        match(input,RPAREN,FOLLOW_RPAREN_in_synpred861_Aadl226067); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred861_Aadl2

    // $ANTLR start synpred862_Aadl2
    public final void synpred862_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10133:4: ( LPAREN IDENT ASSIGN )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10133:5: LPAREN IDENT ASSIGN
        {
        match(input,LPAREN,FOLLOW_LPAREN_in_synpred862_Aadl226205); if (state.failed) return ;
        match(input,IDENT,FOLLOW_IDENT_in_synpred862_Aadl226207); if (state.failed) return ;
        match(input,ASSIGN,FOLLOW_ASSIGN_in_synpred862_Aadl226209); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred862_Aadl2

    // $ANTLR start synpred866_Aadl2
    public final void synpred866_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10141:4: ( (~ ( DOTDOT | SEMI ) )* DOTDOT )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10141:5: (~ ( DOTDOT | SEMI ) )* DOTDOT
        {
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10141:5: (~ ( DOTDOT | SEMI ) )*
        loop963:
        do {
            int alt963=2;
            int LA963_0 = input.LA(1);

            if ( ((LA963_0>=WITH && LA963_0<=COMMA)||(LA963_0>=IDENT && LA963_0<=MINUS)||(LA963_0>=REAL_LIT && LA963_0<=SL_COMMENT)) ) {
                alt963=1;
            }


            switch (alt963) {
        	case 1 :
        	    // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:0:0: ~ ( DOTDOT | SEMI )
        	    {
        	    if ( (input.LA(1)>=WITH && input.LA(1)<=COMMA)||(input.LA(1)>=IDENT && input.LA(1)<=MINUS)||(input.LA(1)>=REAL_LIT && input.LA(1)<=SL_COMMENT) ) {
        	        input.consume();
        	        state.errorRecovery=false;state.failed=false;
        	    }
        	    else {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        MismatchedSetException mse = new MismatchedSetException(null,input);
        	        throw mse;
        	    }


        	    }
        	    break;

        	default :
        	    break loop963;
            }
        } while (true);

        match(input,DOTDOT,FOLLOW_DOTDOT_in_synpred866_Aadl226248); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred866_Aadl2

    // $ANTLR start synpred870_Aadl2
    public final void synpred870_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression rt = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10157:5: (rt= real_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10157:5: rt= real_term
        {
        pushFollow(FOLLOW_real_term_in_synpred870_Aadl226321);
        rt=real_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred870_Aadl2

    // $ANTLR start synpred871_Aadl2
    public final void synpred871_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression it = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10161:5: (it= integer_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10161:5: it= integer_term
        {
        pushFollow(FOLLOW_integer_term_in_synpred871_Aadl226335);
        it=integer_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred871_Aadl2

    // $ANTLR start synpred873_Aadl2
    public final void synpred873_Aadl2_fragment() throws RecognitionException {   
        PropertyExpression bt = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10173:5: (bt= boolean_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10173:5: bt= boolean_term
        {
        pushFollow(FOLLOW_boolean_term_in_synpred873_Aadl226368);
        bt=boolean_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred873_Aadl2

    // $ANTLR start synpred874_Aadl2
    public final void synpred874_Aadl2_fragment() throws RecognitionException {   
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10177:5: ( property_constant_or_namelike_literal[$property_expression::ro] )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10177:5: property_constant_or_namelike_literal[$property_expression::ro]
        {
        pushFollow(FOLLOW_property_constant_or_namelike_literal_in_synpred874_Aadl226380);
        property_constant_or_namelike_literal(((property_expression_scope)property_expression_stack.peek()).ro);

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred874_Aadl2

    // $ANTLR start synpred897_Aadl2
    public final void synpred897_Aadl2_fragment() throws RecognitionException {   
        Token andtoken=null;
        PropertyExpression oe1 = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10643:4: (andtoken= AND oe1= boolean_atom )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10643:4: andtoken= AND oe1= boolean_atom
        {
        andtoken=(Token)match(input,AND,FOLLOW_AND_in_synpred897_Aadl227491); if (state.failed) return ;
        pushFollow(FOLLOW_boolean_atom_in_synpred897_Aadl227496);
        oe1=boolean_atom();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred897_Aadl2

    // $ANTLR start synpred898_Aadl2
    public final void synpred898_Aadl2_fragment() throws RecognitionException {   
        Token ortoken=null;
        PropertyExpression at1 = null;


        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10672:4: (ortoken= OR at1= and_term )
        // /home/lw/projects/osate2-dev-ws/core/org.osate.aadl2.parser/src/org/osate/aadl2/parser/Aadl2.g:10672:4: ortoken= OR at1= and_term
        {
        ortoken=(Token)match(input,OR,FOLLOW_OR_in_synpred898_Aadl227550); if (state.failed) return ;
        pushFollow(FOLLOW_and_term_in_synpred898_Aadl227554);
        at1=and_term();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred898_Aadl2

    // Delegated rules

    public final boolean synpred762_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred762_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred850_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred850_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred898_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred898_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred846_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred846_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred851_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred851_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred615_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred615_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred852_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred852_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred897_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred897_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred874_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred874_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred862_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred862_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred861_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred861_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred476_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred476_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred701_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred701_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred873_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred873_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred871_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred871_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred857_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred857_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred870_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred870_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred853_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred853_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred859_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred859_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred699_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred699_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred700_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred700_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred866_Aadl2() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred866_Aadl2_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA19 dfa19 = new DFA19(this);
    protected DFA20 dfa20 = new DFA20(this);
    protected DFA21 dfa21 = new DFA21(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA168 dfa168 = new DFA168(this);
    protected DFA194 dfa194 = new DFA194(this);
    protected DFA352 dfa352 = new DFA352(this);
    protected DFA371 dfa371 = new DFA371(this);
    protected DFA382 dfa382 = new DFA382(this);
    protected DFA395 dfa395 = new DFA395(this);
    protected DFA406 dfa406 = new DFA406(this);
    protected DFA417 dfa417 = new DFA417(this);
    protected DFA428 dfa428 = new DFA428(this);
    protected DFA439 dfa439 = new DFA439(this);
    protected DFA450 dfa450 = new DFA450(this);
    protected DFA457 dfa457 = new DFA457(this);
    protected DFA463 dfa463 = new DFA463(this);
    protected DFA474 dfa474 = new DFA474(this);
    protected DFA482 dfa482 = new DFA482(this);
    protected DFA490 dfa490 = new DFA490(this);
    protected DFA552 dfa552 = new DFA552(this);
    protected DFA557 dfa557 = new DFA557(this);
    protected DFA561 dfa561 = new DFA561(this);
    protected DFA562 dfa562 = new DFA562(this);
    protected DFA571 dfa571 = new DFA571(this);
    protected DFA595 dfa595 = new DFA595(this);
    protected DFA667 dfa667 = new DFA667(this);
    protected DFA735 dfa735 = new DFA735(this);
    static final String DFA19_eotS =
        "\22\uffff";
    static final String DFA19_eofS =
        "\22\uffff";
    static final String DFA19_minS =
        "\1\27\12\7\1\36\2\uffff\4\7";
    static final String DFA19_maxS =
        "\1\47\12\30\1\43\2\uffff\4\30";
    static final String DFA19_acceptS =
        "\14\uffff\1\1\1\2\4\uffff";
    static final String DFA19_specialS =
        "\22\uffff}>";
    static final String[] DFA19_transitionS = {
            "\1\1\6\uffff\1\11\1\4\1\12\1\10\1\6\1\7\1\5\1\3\1\2\1\13",
            "\1\15\20\uffff\1\14",
            "\1\15\4\uffff\1\16\13\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\4\uffff\1\17\13\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\20\4\uffff\1\21",
            "",
            "",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14",
            "\1\15\20\uffff\1\14"
    };

    static final short[] DFA19_eot = DFA.unpackEncodedString(DFA19_eotS);
    static final short[] DFA19_eof = DFA.unpackEncodedString(DFA19_eofS);
    static final char[] DFA19_min = DFA.unpackEncodedStringToUnsignedChars(DFA19_minS);
    static final char[] DFA19_max = DFA.unpackEncodedStringToUnsignedChars(DFA19_maxS);
    static final short[] DFA19_accept = DFA.unpackEncodedString(DFA19_acceptS);
    static final short[] DFA19_special = DFA.unpackEncodedString(DFA19_specialS);
    static final short[][] DFA19_transition;

    static {
        int numStates = DFA19_transitionS.length;
        DFA19_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA19_transition[i] = DFA.unpackEncodedString(DFA19_transitionS[i]);
        }
    }

    class DFA19 extends DFA {

        public DFA19(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 19;
            this.eot = DFA19_eot;
            this.eof = DFA19_eof;
            this.min = DFA19_min;
            this.max = DFA19_max;
            this.accept = DFA19_accept;
            this.special = DFA19_special;
            this.transition = DFA19_transition;
        }
        public String getDescription() {
            return "991:1: component_classifier_declaration returns [Classifier classifier] : (classifier2= component_implementation | classifier1= component_type );";
        }
    }
    static final String DFA20_eotS =
        "\22\uffff";
    static final String DFA20_eofS =
        "\22\uffff";
    static final String DFA20_minS =
        "\1\27\1\uffff\1\14\2\uffff\1\14\5\uffff\1\36\6\uffff";
    static final String DFA20_maxS =
        "\1\47\1\uffff\1\30\2\uffff\1\30\5\uffff\1\43\6\uffff";
    static final String DFA20_acceptS =
        "\1\uffff\1\1\1\uffff\1\4\1\5\1\uffff\1\7\1\10\1\11\1\12\1\13\1\uffff"+
        "\1\2\1\3\1\6\1\14\1\15\1\16";
    static final String DFA20_specialS =
        "\22\uffff}>";
    static final String[] DFA20_transitionS = {
            "\1\1\6\uffff\1\11\1\4\1\12\1\10\1\6\1\7\1\5\1\3\1\2\1\13",
            "",
            "\1\15\13\uffff\1\14",
            "",
            "",
            "\1\17\13\uffff\1\16",
            "",
            "",
            "",
            "",
            "",
            "\1\20\4\uffff\1\21",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA20_eot = DFA.unpackEncodedString(DFA20_eotS);
    static final short[] DFA20_eof = DFA.unpackEncodedString(DFA20_eofS);
    static final char[] DFA20_min = DFA.unpackEncodedStringToUnsignedChars(DFA20_minS);
    static final char[] DFA20_max = DFA.unpackEncodedStringToUnsignedChars(DFA20_maxS);
    static final short[] DFA20_accept = DFA.unpackEncodedString(DFA20_acceptS);
    static final short[] DFA20_special = DFA.unpackEncodedString(DFA20_specialS);
    static final short[][] DFA20_transition;

    static {
        int numStates = DFA20_transitionS.length;
        DFA20_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA20_transition[i] = DFA.unpackEncodedString(DFA20_transitionS[i]);
        }
    }

    class DFA20 extends DFA {

        public DFA20(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 20;
            this.eot = DFA20_eot;
            this.eof = DFA20_eof;
            this.min = DFA20_min;
            this.max = DFA20_max;
            this.accept = DFA20_accept;
            this.special = DFA20_special;
            this.transition = DFA20_transition;
        }
        public String getDescription() {
            return "1004:4: (tt1= abstract_implementation | tt2= thread_implementation | tt4= thread_group_implementation | tt6= system_implementation | tt8= data_implementation | tt10= subprogram_implementation | tt12= process_implementation | tt14= processor_implementation | tt16= memory_implementation | tt18= bus_implementation | tt20= device_implementation | tt21= subprogram_group_implementation | tt22= virtual_bus_implementation | tt23= virtual_processor_implementation )";
        }
    }
    static final String DFA21_eotS =
        "\22\uffff";
    static final String DFA21_eofS =
        "\22\uffff";
    static final String DFA21_minS =
        "\1\27\1\7\2\uffff\1\7\6\uffff\1\36\6\uffff";
    static final String DFA21_maxS =
        "\1\47\1\14\2\uffff\1\14\6\uffff\1\43\6\uffff";
    static final String DFA21_acceptS =
        "\2\uffff\1\3\1\4\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\1"+
        "\1\2\1\5\1\14\1\15\1\16";
    static final String DFA21_specialS =
        "\22\uffff}>";
    static final String[] DFA21_transitionS = {
            "\1\12\6\uffff\1\10\1\3\1\11\1\7\1\5\1\6\1\4\1\2\1\1\1\13",
            "\1\14\4\uffff\1\15",
            "",
            "",
            "\1\16\4\uffff\1\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\20\4\uffff\1\21",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA21_eot = DFA.unpackEncodedString(DFA21_eotS);
    static final short[] DFA21_eof = DFA.unpackEncodedString(DFA21_eofS);
    static final char[] DFA21_min = DFA.unpackEncodedStringToUnsignedChars(DFA21_minS);
    static final char[] DFA21_max = DFA.unpackEncodedStringToUnsignedChars(DFA21_maxS);
    static final short[] DFA21_accept = DFA.unpackEncodedString(DFA21_acceptS);
    static final short[] DFA21_special = DFA.unpackEncodedString(DFA21_specialS);
    static final short[][] DFA21_transition;

    static {
        int numStates = DFA21_transitionS.length;
        DFA21_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA21_transition[i] = DFA.unpackEncodedString(DFA21_transitionS[i]);
        }
    }

    class DFA21 extends DFA {

        public DFA21(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 21;
            this.eot = DFA21_eot;
            this.eof = DFA21_eof;
            this.min = DFA21_min;
            this.max = DFA21_max;
            this.accept = DFA21_accept;
            this.special = DFA21_special;
            this.transition = DFA21_transition;
        }
        public String getDescription() {
            return "1025:7: (tt1= thread_type | tt3= thread_group_type | tt5= system_type | tt7= data_type | tt9= subprogram_type | tt11= process_type | tt13= processor_type | tt15= memory_type | tt17= bus_type | tt19= device_type | tt20= abstract_type | tt21= subprogram_group_type | tt22= virtual_bus_type | tt23= virtual_processor_type )";
        }
    }
    static final String DFA33_eotS =
        "\27\uffff";
    static final String DFA33_eofS =
        "\27\uffff";
    static final String DFA33_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\uffff\2\6\2\uffff\1\36\5\uffff\1\27"+
        "\6\uffff";
    static final String DFA33_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\uffff\2\57\2\uffff\1\43\5\uffff\1"+
        "\47\6\uffff";
    static final String DFA33_acceptS =
        "\1\uffff\1\17\3\uffff\1\1\2\uffff\1\6\1\7\1\uffff\1\11\1\12\1\13"+
        "\1\14\1\15\1\uffff\1\3\1\2\1\5\1\4\1\10\1\16";
    static final String DFA33_specialS =
        "\27\uffff}>";
    static final String[] DFA33_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\4\uffff\3\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\16\6\uffff\1\17\1\5\1\14\1\13\1\10\1\11\1\6\1\15\1\7\1\12"+
            "\3\uffff\1\4",
            "\1\20",
            "",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22\1\uffff\1\22",
            "\2\24\4\uffff\1\23\33\uffff\1\24\4\uffff\1\24\1\uffff\1\24",
            "",
            "",
            "\1\26\4\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "\1\16\6\uffff\1\17\1\5\1\14\1\13\1\10\1\11\1\6\1\15\1\7\1\12",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA33_eot = DFA.unpackEncodedString(DFA33_eotS);
    static final short[] DFA33_eof = DFA.unpackEncodedString(DFA33_eofS);
    static final char[] DFA33_min = DFA.unpackEncodedStringToUnsignedChars(DFA33_minS);
    static final char[] DFA33_max = DFA.unpackEncodedStringToUnsignedChars(DFA33_maxS);
    static final short[] DFA33_accept = DFA.unpackEncodedString(DFA33_acceptS);
    static final short[] DFA33_special = DFA.unpackEncodedString(DFA33_specialS);
    static final short[][] DFA33_transition;

    static {
        int numStates = DFA33_transitionS.length;
        DFA33_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA33_transition[i] = DFA.unpackEncodedString(DFA33_transitionS[i]);
        }
    }

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = DFA33_eot;
            this.eof = DFA33_eof;
            this.min = DFA33_min;
            this.max = DFA33_max;
            this.accept = DFA33_accept;
            this.special = DFA33_special;
            this.transition = DFA33_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1199:4: ( (ds= data_subcomponent[$abstract_implementation::extension] ) | (ss= subprogram_subcomponent[$abstract_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$abstract_implementation::extension] ) | (ts= thread_subcomponent[$abstract_implementation::extension] ) | (tgs= thread_group_subcomponent[$abstract_implementation::extension] ) | (ps= process_subcomponent[$abstract_implementation::extension] ) | (procs= processor_subcomponent[$abstract_implementation::extension] ) | (vps= virtual_processor_subcomponent[$abstract_implementation::extension] ) | (ms= memory_subcomponent[$abstract_implementation::extension] ) | (devs= device_subcomponent[$abstract_implementation::extension] ) | (syss= system_subcomponent[$abstract_implementation::extension] ) | (as= abstract_subcomponent[$abstract_implementation::extension] ) | (bs= bus_subcomponent[$abstract_implementation::extension] ) | (vbs= virtual_bus_subcomponent[$abstract_implementation::extension] ) )+";
        }
    }
    static final String DFA89_eotS =
        "\16\uffff";
    static final String DFA89_eofS =
        "\16\uffff";
    static final String DFA89_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\uffff\2\6\1\uffff\1\27\4\uffff";
    static final String DFA89_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\uffff\2\57\1\uffff\1\46\4\uffff";
    static final String DFA89_acceptS =
        "\1\uffff\1\7\3\uffff\1\1\2\uffff\1\6\1\uffff\1\3\1\2\1\5\1\4";
    static final String DFA89_specialS =
        "\16\uffff}>";
    static final String[] DFA89_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\5\uffff\2\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\10\7\uffff\1\5\4\uffff\1\6\1\uffff\1\7\4\uffff\1\4",
            "\1\11",
            "",
            "\2\13\4\uffff\1\12\33\uffff\1\13\4\uffff\1\13\1\uffff\1\13",
            "\2\15\4\uffff\1\14\33\uffff\1\15\4\uffff\1\15\1\uffff\1\15",
            "",
            "\1\10\7\uffff\1\5\4\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA89_eot = DFA.unpackEncodedString(DFA89_eotS);
    static final short[] DFA89_eof = DFA.unpackEncodedString(DFA89_eofS);
    static final char[] DFA89_min = DFA.unpackEncodedStringToUnsignedChars(DFA89_minS);
    static final char[] DFA89_max = DFA.unpackEncodedStringToUnsignedChars(DFA89_maxS);
    static final short[] DFA89_accept = DFA.unpackEncodedString(DFA89_acceptS);
    static final short[] DFA89_special = DFA.unpackEncodedString(DFA89_specialS);
    static final short[][] DFA89_transition;

    static {
        int numStates = DFA89_transitionS.length;
        DFA89_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA89_transition[i] = DFA.unpackEncodedString(DFA89_transitionS[i]);
        }
    }

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = DFA89_eot;
            this.eof = DFA89_eof;
            this.min = DFA89_min;
            this.max = DFA89_max;
            this.accept = DFA89_accept;
            this.special = DFA89_special;
            this.transition = DFA89_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1748:4: ( (ds= data_subcomponent[$process_implementation::extension] ) | (ss= subprogram_subcomponent[$process_implementation::extension] ) | (sgs= subprogram_group_subcomponent[$process_implementation::extension] ) | (ts= thread_subcomponent[$process_implementation::extension] ) | (tgs= thread_group_subcomponent[$process_implementation::extension] ) | (as= abstract_subcomponent[$process_implementation::extension] ) )+";
        }
    }
    static final String DFA102_eotS =
        "\14\uffff";
    static final String DFA102_eofS =
        "\14\uffff";
    static final String DFA102_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\36\3\uffff\1\27\2\uffff";
    static final String DFA102_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\43\3\uffff\1\47\2\uffff";
    static final String DFA102_acceptS =
        "\1\uffff\1\6\4\uffff\1\2\1\3\1\4\1\uffff\1\1\1\5";
    static final String DFA102_specialS =
        "\14\uffff}>";
    static final String[] DFA102_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\5\uffff\2\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\7\6\uffff\1\10\2\uffff\1\6\5\uffff\1\5\3\uffff\1\4",
            "\1\11",
            "\1\13\4\uffff\1\12",
            "",
            "",
            "",
            "\1\7\6\uffff\1\10\2\uffff\1\6\5\uffff\1\5",
            "",
            ""
    };

    static final short[] DFA102_eot = DFA.unpackEncodedString(DFA102_eotS);
    static final short[] DFA102_eof = DFA.unpackEncodedString(DFA102_eofS);
    static final char[] DFA102_min = DFA.unpackEncodedStringToUnsignedChars(DFA102_minS);
    static final char[] DFA102_max = DFA.unpackEncodedStringToUnsignedChars(DFA102_maxS);
    static final short[] DFA102_accept = DFA.unpackEncodedString(DFA102_acceptS);
    static final short[] DFA102_special = DFA.unpackEncodedString(DFA102_specialS);
    static final short[][] DFA102_transition;

    static {
        int numStates = DFA102_transitionS.length;
        DFA102_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA102_transition[i] = DFA.unpackEncodedString(DFA102_transitionS[i]);
        }
    }

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = DFA102_eot;
            this.eof = DFA102_eof;
            this.min = DFA102_min;
            this.max = DFA102_max;
            this.accept = DFA102_accept;
            this.special = DFA102_special;
            this.transition = DFA102_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1877:4: ( (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+";
        }
    }
    static final String DFA139_eotS =
        "\24\uffff";
    static final String DFA139_eofS =
        "\24\uffff";
    static final String DFA139_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\uffff\1\6\2\uffff\1\36\5\uffff\1\27"+
        "\4\uffff";
    static final String DFA139_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\uffff\1\57\2\uffff\1\43\5\uffff\1"+
        "\47\4\uffff";
    static final String DFA139_acceptS =
        "\1\uffff\1\15\3\uffff\1\1\1\uffff\1\4\1\5\1\uffff\1\7\1\10\1\11"+
        "\1\12\1\13\1\uffff\1\3\1\2\1\6\1\14";
    static final String DFA139_specialS =
        "\24\uffff}>";
    static final String[] DFA139_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\5\uffff\2\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\15\6\uffff\1\16\1\5\1\13\1\12\1\7\1\10\1\6\1\14\1\uffff"+
            "\1\11\3\uffff\1\4",
            "\1\17",
            "",
            "\2\21\4\uffff\1\20\33\uffff\1\21\4\uffff\1\21\1\uffff\1\21",
            "",
            "",
            "\1\23\4\uffff\1\22",
            "",
            "",
            "",
            "",
            "",
            "\1\15\6\uffff\1\16\1\5\1\13\1\12\1\7\1\10\1\6\1\14\1\uffff"+
            "\1\11",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA139_eot = DFA.unpackEncodedString(DFA139_eotS);
    static final short[] DFA139_eof = DFA.unpackEncodedString(DFA139_eofS);
    static final char[] DFA139_min = DFA.unpackEncodedStringToUnsignedChars(DFA139_minS);
    static final char[] DFA139_max = DFA.unpackEncodedStringToUnsignedChars(DFA139_maxS);
    static final short[] DFA139_accept = DFA.unpackEncodedString(DFA139_acceptS);
    static final short[] DFA139_special = DFA.unpackEncodedString(DFA139_specialS);
    static final short[][] DFA139_transition;

    static {
        int numStates = DFA139_transitionS.length;
        DFA139_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA139_transition[i] = DFA.unpackEncodedString(DFA139_transitionS[i]);
        }
    }

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = DFA139_eot;
            this.eof = DFA139_eof;
            this.min = DFA139_min;
            this.max = DFA139_max;
            this.accept = DFA139_accept;
            this.special = DFA139_special;
            this.transition = DFA139_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2196:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ps= process_subcomponent[extension] ) | (procs= processor_subcomponent[extension] ) | (vps= virtual_processor_subcomponent[extension] ) | (ms= memory_subcomponent[extension] ) | (devs= device_subcomponent[extension] ) | (syss= system_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (bs= bus_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+";
        }
    }
    static final String DFA152_eotS =
        "\13\uffff";
    static final String DFA152_eofS =
        "\13\uffff";
    static final String DFA152_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\uffff\1\6\1\uffff\1\27\2\uffff";
    static final String DFA152_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\uffff\1\57\1\uffff\1\44\2\uffff";
    static final String DFA152_acceptS =
        "\1\uffff\1\5\3\uffff\1\1\1\uffff\1\4\1\uffff\1\3\1\2";
    static final String DFA152_specialS =
        "\13\uffff}>";
    static final String[] DFA152_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\4\uffff\3\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\7\7\uffff\1\5\4\uffff\1\6\6\uffff\1\4",
            "\1\10",
            "",
            "\2\12\4\uffff\1\11\33\uffff\1\12\4\uffff\1\12\1\uffff\1\12",
            "",
            "\1\7\7\uffff\1\5\4\uffff\1\6",
            "",
            ""
    };

    static final short[] DFA152_eot = DFA.unpackEncodedString(DFA152_eotS);
    static final short[] DFA152_eof = DFA.unpackEncodedString(DFA152_eofS);
    static final char[] DFA152_min = DFA.unpackEncodedStringToUnsignedChars(DFA152_minS);
    static final char[] DFA152_max = DFA.unpackEncodedStringToUnsignedChars(DFA152_maxS);
    static final short[] DFA152_accept = DFA.unpackEncodedString(DFA152_acceptS);
    static final short[] DFA152_special = DFA.unpackEncodedString(DFA152_specialS);
    static final short[][] DFA152_transition;

    static {
        int numStates = DFA152_transitionS.length;
        DFA152_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA152_transition[i] = DFA.unpackEncodedString(DFA152_transitionS[i]);
        }
    }

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = DFA152_eot;
            this.eof = DFA152_eof;
            this.min = DFA152_min;
            this.max = DFA152_max;
            this.accept = DFA152_accept;
            this.special = DFA152_special;
            this.transition = DFA152_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2355:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+";
        }
    }
    static final String DFA168_eotS =
        "\16\uffff";
    static final String DFA168_eofS =
        "\16\uffff";
    static final String DFA168_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\uffff\2\6\1\uffff\1\27\4\uffff";
    static final String DFA168_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\uffff\2\57\1\uffff\1\46\4\uffff";
    static final String DFA168_acceptS =
        "\1\uffff\1\7\3\uffff\1\1\2\uffff\1\6\1\uffff\1\3\1\2\1\5\1\4";
    static final String DFA168_specialS =
        "\16\uffff}>";
    static final String[] DFA168_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\5\uffff\2\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\10\7\uffff\1\5\4\uffff\1\6\1\uffff\1\7\4\uffff\1\4",
            "\1\11",
            "",
            "\2\13\4\uffff\1\12\33\uffff\1\13\4\uffff\1\13\1\uffff\1\13",
            "\2\15\4\uffff\1\14\33\uffff\1\15\4\uffff\1\15\1\uffff\1\15",
            "",
            "\1\10\7\uffff\1\5\4\uffff\1\6\1\uffff\1\7",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA168_eot = DFA.unpackEncodedString(DFA168_eotS);
    static final short[] DFA168_eof = DFA.unpackEncodedString(DFA168_eofS);
    static final char[] DFA168_min = DFA.unpackEncodedStringToUnsignedChars(DFA168_minS);
    static final char[] DFA168_max = DFA.unpackEncodedStringToUnsignedChars(DFA168_maxS);
    static final short[] DFA168_accept = DFA.unpackEncodedString(DFA168_acceptS);
    static final short[] DFA168_special = DFA.unpackEncodedString(DFA168_specialS);
    static final short[][] DFA168_transition;

    static {
        int numStates = DFA168_transitionS.length;
        DFA168_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA168_transition[i] = DFA.unpackEncodedString(DFA168_transitionS[i]);
        }
    }

    class DFA168 extends DFA {

        public DFA168(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 168;
            this.eot = DFA168_eot;
            this.eof = DFA168_eof;
            this.min = DFA168_min;
            this.max = DFA168_max;
            this.accept = DFA168_accept;
            this.special = DFA168_special;
            this.transition = DFA168_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2491:4: ( (ds= data_subcomponent[extension] ) | (ss= subprogram_subcomponent[extension] ) | (sgs= subprogram_group_subcomponent[extension] ) | (ts= thread_subcomponent[extension] ) | (tgs= thread_group_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) )+";
        }
    }
    static final String DFA194_eotS =
        "\12\uffff";
    static final String DFA194_eofS =
        "\12\uffff";
    static final String DFA194_minS =
        "\1\7\1\uffff\1\52\1\27\1\54\1\36\1\uffff\1\27\2\uffff";
    static final String DFA194_maxS =
        "\1\73\1\uffff\1\52\1\53\1\54\1\43\1\uffff\1\47\2\uffff";
    static final String DFA194_acceptS =
        "\1\uffff\1\4\4\uffff\1\2\1\uffff\1\1\1\3";
    static final String DFA194_specialS =
        "\12\uffff}>";
    static final String[] DFA194_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\5\uffff\2\1\35\uffff\1\1",
            "",
            "\1\3",
            "\1\6\17\uffff\1\5\3\uffff\1\4",
            "\1\7",
            "\1\11\4\uffff\1\10",
            "",
            "\1\6\17\uffff\1\5",
            "",
            ""
    };

    static final short[] DFA194_eot = DFA.unpackEncodedString(DFA194_eotS);
    static final short[] DFA194_eof = DFA.unpackEncodedString(DFA194_eofS);
    static final char[] DFA194_min = DFA.unpackEncodedStringToUnsignedChars(DFA194_minS);
    static final char[] DFA194_max = DFA.unpackEncodedStringToUnsignedChars(DFA194_maxS);
    static final short[] DFA194_accept = DFA.unpackEncodedString(DFA194_acceptS);
    static final short[] DFA194_special = DFA.unpackEncodedString(DFA194_specialS);
    static final short[][] DFA194_transition;

    static {
        int numStates = DFA194_transitionS.length;
        DFA194_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA194_transition[i] = DFA.unpackEncodedString(DFA194_transitionS[i]);
        }
    }

    class DFA194 extends DFA {

        public DFA194(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 194;
            this.eot = DFA194_eot;
            this.eof = DFA194_eof;
            this.min = DFA194_min;
            this.max = DFA194_max;
            this.accept = DFA194_accept;
            this.special = DFA194_special;
            this.transition = DFA194_transition;
        }
        public String getDescription() {
            return "()+ loopback of 2725:4: ( (vps= virtual_processor_subcomponent[extension] ) | (as= abstract_subcomponent[extension] ) | (vbs= virtual_bus_subcomponent[extension] ) )+";
        }
    }
    static final String DFA352_eotS =
        "\31\uffff";
    static final String DFA352_eofS =
        "\31\uffff";
    static final String DFA352_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\13\1\6\2\36\1\13\1\37\2\uffff\1\37"+
        "\4\uffff\2\14\4\uffff";
    static final String DFA352_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\136\1\55\2\44\1\67\1\136\2\uffff"+
        "\1\65\4\uffff\2\70\4\uffff";
    static final String DFA352_acceptS =
        "\1\uffff\1\13\12\uffff\1\1\1\10\1\uffff\1\7\1\2\1\3\1\4\2\uffff"+
        "\1\11\1\12\1\5\1\6";
    static final String DFA352_specialS =
        "\31\uffff}>";
    static final String[] DFA352_transitionS = {
            "\1\2\6\uffff\2\1\42\uffff\1\1\10\uffff\1\1",
            "",
            "\1\3",
            "\1\7\37\uffff\1\4\3\uffff\1\5\1\6\5\uffff\1\11\1\10",
            "\1\12",
            "\1\7\23\uffff\1\15\20\uffff\1\13\3\uffff\1\16\51\uffff\1\14",
            "\1\7\23\uffff\1\15\24\uffff\1\16\51\uffff\1\14",
            "\2\20\4\uffff\1\17\33\uffff\1\20\4\uffff\1\20",
            "\1\21\1\22\4\uffff\1\23",
            "\1\21\1\22\4\uffff\1\24",
            "\1\7\43\uffff\1\5\1\6\5\uffff\1\11\1\10",
            "\1\15\24\uffff\1\16\51\uffff\1\14",
            "",
            "",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "\1\30\53\uffff\1\27",
            "\1\30\53\uffff\1\27",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA352_eot = DFA.unpackEncodedString(DFA352_eotS);
    static final short[] DFA352_eof = DFA.unpackEncodedString(DFA352_eofS);
    static final char[] DFA352_min = DFA.unpackEncodedStringToUnsignedChars(DFA352_minS);
    static final char[] DFA352_max = DFA.unpackEncodedStringToUnsignedChars(DFA352_maxS);
    static final short[] DFA352_accept = DFA.unpackEncodedString(DFA352_acceptS);
    static final short[] DFA352_special = DFA.unpackEncodedString(DFA352_specialS);
    static final short[][] DFA352_transition;

    static {
        int numStates = DFA352_transitionS.length;
        DFA352_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA352_transition[i] = DFA.unpackEncodedString(DFA352_transitionS[i]);
        }
    }

    class DFA352 extends DFA {

        public DFA352(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 352;
            this.eot = DFA352_eot;
            this.eof = DFA352_eof;
            this.min = DFA352_min;
            this.max = DFA352_max;
            this.accept = DFA352_accept;
            this.special = DFA352_special;
            this.transition = DFA352_transition;
        }
        public String getDescription() {
            return "()+ loopback of 4836:3: ( (par= parameter[extension] ) | (af= abstract_feature ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) )+";
        }
    }
    static final String DFA371_eotS =
        "\30\uffff";
    static final String DFA371_eofS =
        "\30\uffff";
    static final String DFA371_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\13\1\6\2\36\1\13\1\37\1\uffff\1\37"+
        "\4\uffff\2\14\4\uffff";
    static final String DFA371_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\64\1\55\2\44\1\67\1\64\1\uffff\1"+
        "\65\4\uffff\2\70\4\uffff";
    static final String DFA371_acceptS =
        "\1\uffff\1\12\12\uffff\1\3\1\uffff\1\1\1\2\1\6\1\7\2\uffff\1\4\1"+
        "\5\1\10\1\11";
    static final String DFA371_specialS =
        "\30\uffff}>";
    static final String[] DFA371_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\7\37\uffff\1\4\3\uffff\1\5\1\6\5\uffff\1\11\1\10",
            "\1\12",
            "\1\7\23\uffff\1\14\20\uffff\1\13\3\uffff\1\15",
            "\1\7\23\uffff\1\14\24\uffff\1\15",
            "\2\17\4\uffff\1\16\33\uffff\1\17\4\uffff\1\17",
            "\1\20\1\21\4\uffff\1\22",
            "\1\20\1\21\4\uffff\1\23",
            "\1\7\43\uffff\1\5\1\6\5\uffff\1\11\1\10",
            "\1\14\24\uffff\1\15",
            "",
            "\1\24\25\uffff\1\25",
            "",
            "",
            "",
            "",
            "\1\27\53\uffff\1\26",
            "\1\27\53\uffff\1\26",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA371_eot = DFA.unpackEncodedString(DFA371_eotS);
    static final short[] DFA371_eof = DFA.unpackEncodedString(DFA371_eofS);
    static final char[] DFA371_min = DFA.unpackEncodedStringToUnsignedChars(DFA371_minS);
    static final char[] DFA371_max = DFA.unpackEncodedStringToUnsignedChars(DFA371_maxS);
    static final short[] DFA371_accept = DFA.unpackEncodedString(DFA371_acceptS);
    static final short[] DFA371_special = DFA.unpackEncodedString(DFA371_specialS);
    static final short[][] DFA371_transition;

    static {
        int numStates = DFA371_transitionS.length;
        DFA371_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA371_transition[i] = DFA.unpackEncodedString(DFA371_transitionS[i]);
        }
    }

    class DFA371 extends DFA {

        public DFA371(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 371;
            this.eot = DFA371_eot;
            this.eof = DFA371_eof;
            this.min = DFA371_min;
            this.max = DFA371_max;
            this.accept = DFA371_accept;
            this.special = DFA371_special;
            this.transition = DFA371_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5039:5: ( (fg= feature_group[extension] ) | (af= abstract_feature ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) )+";
        }
    }
    static final String DFA382_eotS =
        "\15\uffff";
    static final String DFA382_eofS =
        "\15\uffff";
    static final String DFA382_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\44\1\uffff\1\13\2\14\2\uffff";
    static final String DFA382_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\1\uffff\1\67\2\70\2\uffff";
    static final String DFA382_acceptS =
        "\1\uffff\1\4\5\uffff\1\3\3\uffff\1\1\1\2";
    static final String DFA382_specialS =
        "\15\uffff}>";
    static final String[] DFA382_transitionS = {
            "\1\2\6\uffff\2\1\53\uffff\1\1",
            "",
            "\1\3",
            "\1\7\37\uffff\1\4\3\uffff\2\7\5\uffff\1\6\1\5",
            "\1\10",
            "\1\11",
            "\1\12",
            "",
            "\1\7\43\uffff\2\7\5\uffff\1\6\1\5",
            "\1\14\53\uffff\1\13",
            "\1\14\53\uffff\1\13",
            "",
            ""
    };

    static final short[] DFA382_eot = DFA.unpackEncodedString(DFA382_eotS);
    static final short[] DFA382_eof = DFA.unpackEncodedString(DFA382_eofS);
    static final char[] DFA382_min = DFA.unpackEncodedStringToUnsignedChars(DFA382_minS);
    static final char[] DFA382_max = DFA.unpackEncodedStringToUnsignedChars(DFA382_maxS);
    static final short[] DFA382_accept = DFA.unpackEncodedString(DFA382_acceptS);
    static final short[] DFA382_special = DFA.unpackEncodedString(DFA382_specialS);
    static final short[][] DFA382_transition;

    static {
        int numStates = DFA382_transitionS.length;
        DFA382_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA382_transition[i] = DFA.unpackEncodedString(DFA382_transitionS[i]);
        }
    }

    class DFA382 extends DFA {

        public DFA382(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 382;
            this.eot = DFA382_eot;
            this.eof = DFA382_eof;
            this.min = DFA382_min;
            this.max = DFA382_max;
            this.accept = DFA382_accept;
            this.special = DFA382_special;
            this.transition = DFA382_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5149:5: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA395_eotS =
        "\26\uffff";
    static final String DFA395_eofS =
        "\26\uffff";
    static final String DFA395_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\44\2\13\1\6\1\13\2\14\1\37\1\uffff"+
        "\1\37\6\uffff";
    static final String DFA395_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\2\70\1\64\1\uffff"+
        "\1\65\6\uffff";
    static final String DFA395_acceptS =
        "\1\uffff\1\10\14\uffff\1\4\1\uffff\1\3\1\7\1\1\1\2\1\5\1\6";
    static final String DFA395_specialS =
        "\26\uffff}>";
    static final String[] DFA395_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13",
            "\1\14",
            "\1\11\23\uffff\1\16\20\uffff\1\15\3\uffff\1\17",
            "\1\11\23\uffff\1\16\24\uffff\1\17",
            "\2\21\4\uffff\1\20\33\uffff\1\21\4\uffff\1\21",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\23\53\uffff\1\22",
            "\1\23\53\uffff\1\22",
            "\1\16\24\uffff\1\17",
            "",
            "\1\24\25\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA395_eot = DFA.unpackEncodedString(DFA395_eotS);
    static final short[] DFA395_eof = DFA.unpackEncodedString(DFA395_eofS);
    static final char[] DFA395_min = DFA.unpackEncodedStringToUnsignedChars(DFA395_minS);
    static final char[] DFA395_max = DFA.unpackEncodedStringToUnsignedChars(DFA395_maxS);
    static final short[] DFA395_accept = DFA.unpackEncodedString(DFA395_acceptS);
    static final short[] DFA395_special = DFA.unpackEncodedString(DFA395_specialS);
    static final short[][] DFA395_transition;

    static {
        int numStates = DFA395_transitionS.length;
        DFA395_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA395_transition[i] = DFA.unpackEncodedString(DFA395_transitionS[i]);
        }
    }

    class DFA395 extends DFA {

        public DFA395(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 395;
            this.eot = DFA395_eot;
            this.eof = DFA395_eof;
            this.min = DFA395_min;
            this.max = DFA395_max;
            this.accept = DFA395_accept;
            this.special = DFA395_special;
            this.transition = DFA395_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5274:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA406_eotS =
        "\27\uffff";
    static final String DFA406_eofS =
        "\27\uffff";
    static final String DFA406_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\37\2\13\1\6\1\13\1\uffff\2\14\1\37"+
        "\1\uffff\1\37\6\uffff";
    static final String DFA406_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\1\uffff\2\70\1"+
        "\64\1\uffff\1\65\6\uffff";
    static final String DFA406_acceptS =
        "\1\uffff\1\11\11\uffff\1\1\3\uffff\1\5\1\uffff\1\4\1\10\1\2\1\3"+
        "\1\6\1\7";
    static final String DFA406_specialS =
        "\27\uffff}>";
    static final String[] DFA406_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13\4\uffff\1\14",
            "\1\13\4\uffff\1\15",
            "\1\11\23\uffff\1\17\20\uffff\1\16\3\uffff\1\20",
            "\1\11\23\uffff\1\17\24\uffff\1\20",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "",
            "\1\24\53\uffff\1\23",
            "\1\24\53\uffff\1\23",
            "\1\17\24\uffff\1\20",
            "",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA406_eot = DFA.unpackEncodedString(DFA406_eotS);
    static final short[] DFA406_eof = DFA.unpackEncodedString(DFA406_eofS);
    static final char[] DFA406_min = DFA.unpackEncodedStringToUnsignedChars(DFA406_minS);
    static final char[] DFA406_max = DFA.unpackEncodedStringToUnsignedChars(DFA406_maxS);
    static final short[] DFA406_accept = DFA.unpackEncodedString(DFA406_acceptS);
    static final short[] DFA406_special = DFA.unpackEncodedString(DFA406_specialS);
    static final short[][] DFA406_transition;

    static {
        int numStates = DFA406_transitionS.length;
        DFA406_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA406_transition[i] = DFA.unpackEncodedString(DFA406_transitionS[i]);
        }
    }

    class DFA406 extends DFA {

        public DFA406(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 406;
            this.eot = DFA406_eot;
            this.eof = DFA406_eof;
            this.min = DFA406_min;
            this.max = DFA406_max;
            this.accept = DFA406_accept;
            this.special = DFA406_special;
            this.transition = DFA406_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5378:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA417_eotS =
        "\27\uffff";
    static final String DFA417_eofS =
        "\27\uffff";
    static final String DFA417_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\37\2\13\1\6\1\13\1\uffff\2\14\1\37"+
        "\1\uffff\1\37\6\uffff";
    static final String DFA417_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\1\uffff\2\70\1"+
        "\64\1\uffff\1\65\6\uffff";
    static final String DFA417_acceptS =
        "\1\uffff\1\11\11\uffff\1\1\3\uffff\1\5\1\uffff\1\4\1\10\1\2\1\3"+
        "\1\6\1\7";
    static final String DFA417_specialS =
        "\27\uffff}>";
    static final String[] DFA417_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13\4\uffff\1\14",
            "\1\13\4\uffff\1\15",
            "\1\11\23\uffff\1\17\20\uffff\1\16\3\uffff\1\20",
            "\1\11\23\uffff\1\17\24\uffff\1\20",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "",
            "\1\24\53\uffff\1\23",
            "\1\24\53\uffff\1\23",
            "\1\17\24\uffff\1\20",
            "",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA417_eot = DFA.unpackEncodedString(DFA417_eotS);
    static final short[] DFA417_eof = DFA.unpackEncodedString(DFA417_eofS);
    static final char[] DFA417_min = DFA.unpackEncodedStringToUnsignedChars(DFA417_minS);
    static final char[] DFA417_max = DFA.unpackEncodedStringToUnsignedChars(DFA417_maxS);
    static final short[] DFA417_accept = DFA.unpackEncodedString(DFA417_acceptS);
    static final short[] DFA417_special = DFA.unpackEncodedString(DFA417_specialS);
    static final short[][] DFA417_transition;

    static {
        int numStates = DFA417_transitionS.length;
        DFA417_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA417_transition[i] = DFA.unpackEncodedString(DFA417_transitionS[i]);
        }
    }

    class DFA417 extends DFA {

        public DFA417(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 417;
            this.eot = DFA417_eot;
            this.eof = DFA417_eof;
            this.min = DFA417_min;
            this.max = DFA417_max;
            this.accept = DFA417_accept;
            this.special = DFA417_special;
            this.transition = DFA417_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5485:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA428_eotS =
        "\27\uffff";
    static final String DFA428_eofS =
        "\27\uffff";
    static final String DFA428_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\37\2\13\1\6\1\13\1\uffff\2\14\1\37"+
        "\1\uffff\1\37\6\uffff";
    static final String DFA428_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\1\uffff\2\70\1"+
        "\64\1\uffff\1\65\6\uffff";
    static final String DFA428_acceptS =
        "\1\uffff\1\11\11\uffff\1\1\3\uffff\1\5\1\uffff\1\4\1\10\1\2\1\3"+
        "\1\6\1\7";
    static final String DFA428_specialS =
        "\27\uffff}>";
    static final String[] DFA428_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13\4\uffff\1\14",
            "\1\13\4\uffff\1\15",
            "\1\11\23\uffff\1\17\20\uffff\1\16\3\uffff\1\20",
            "\1\11\23\uffff\1\17\24\uffff\1\20",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "",
            "\1\24\53\uffff\1\23",
            "\1\24\53\uffff\1\23",
            "\1\17\24\uffff\1\20",
            "",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA428_eot = DFA.unpackEncodedString(DFA428_eotS);
    static final short[] DFA428_eof = DFA.unpackEncodedString(DFA428_eofS);
    static final char[] DFA428_min = DFA.unpackEncodedStringToUnsignedChars(DFA428_minS);
    static final char[] DFA428_max = DFA.unpackEncodedStringToUnsignedChars(DFA428_maxS);
    static final short[] DFA428_accept = DFA.unpackEncodedString(DFA428_acceptS);
    static final short[] DFA428_special = DFA.unpackEncodedString(DFA428_specialS);
    static final short[][] DFA428_transition;

    static {
        int numStates = DFA428_transitionS.length;
        DFA428_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA428_transition[i] = DFA.unpackEncodedString(DFA428_transitionS[i]);
        }
    }

    class DFA428 extends DFA {

        public DFA428(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 428;
            this.eot = DFA428_eot;
            this.eof = DFA428_eof;
            this.min = DFA428_min;
            this.max = DFA428_max;
            this.accept = DFA428_accept;
            this.special = DFA428_special;
            this.transition = DFA428_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5591:5: ( (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA439_eotS =
        "\30\uffff";
    static final String DFA439_eofS =
        "\30\uffff";
    static final String DFA439_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\36\2\13\1\6\1\13\2\uffff\2\14\1\37"+
        "\1\uffff\1\37\6\uffff";
    static final String DFA439_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\2\uffff\2\70\1"+
        "\64\1\uffff\1\65\6\uffff";
    static final String DFA439_acceptS =
        "\1\uffff\1\12\11\uffff\1\1\1\2\3\uffff\1\6\1\uffff\1\5\1\11\1\3"+
        "\1\4\1\7\1\10";
    static final String DFA439_specialS =
        "\30\uffff}>";
    static final String[] DFA439_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13\1\14\4\uffff\1\15",
            "\1\13\1\14\4\uffff\1\16",
            "\1\11\23\uffff\1\20\20\uffff\1\17\3\uffff\1\21",
            "\1\11\23\uffff\1\20\24\uffff\1\21",
            "\2\23\4\uffff\1\22\33\uffff\1\23\4\uffff\1\23",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "",
            "",
            "\1\25\53\uffff\1\24",
            "\1\25\53\uffff\1\24",
            "\1\20\24\uffff\1\21",
            "",
            "\1\26\25\uffff\1\27",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA439_eot = DFA.unpackEncodedString(DFA439_eotS);
    static final short[] DFA439_eof = DFA.unpackEncodedString(DFA439_eofS);
    static final char[] DFA439_min = DFA.unpackEncodedStringToUnsignedChars(DFA439_minS);
    static final char[] DFA439_max = DFA.unpackEncodedStringToUnsignedChars(DFA439_maxS);
    static final short[] DFA439_accept = DFA.unpackEncodedString(DFA439_acceptS);
    static final short[] DFA439_special = DFA.unpackEncodedString(DFA439_specialS);
    static final short[][] DFA439_transition;

    static {
        int numStates = DFA439_transitionS.length;
        DFA439_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA439_transition[i] = DFA.unpackEncodedString(DFA439_transitionS[i]);
        }
    }

    class DFA439 extends DFA {

        public DFA439(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 439;
            this.eot = DFA439_eot;
            this.eof = DFA439_eof;
            this.min = DFA439_min;
            this.max = DFA439_max;
            this.accept = DFA439_accept;
            this.special = DFA439_special;
            this.transition = DFA439_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5697:5: ( (ba= bus_access[extension] ) | (da= data_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA450_eotS =
        "\27\uffff";
    static final String DFA450_eofS =
        "\27\uffff";
    static final String DFA450_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\37\2\13\1\6\1\13\1\14\1\uffff\1\14"+
        "\1\64\1\37\7\uffff";
    static final String DFA450_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\136\1\55\1\67\1\70\1\uffff\1"+
        "\70\1\136\1\65\7\uffff";
    static final String DFA450_acceptS =
        "\1\uffff\1\11\12\uffff\1\6\3\uffff\1\7\1\5\1\10\1\1\1\2\1\3\1\4";
    static final String DFA450_specialS =
        "\27\uffff}>";
    static final String[] DFA450_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\32\uffff\1\1\4\uffff\1\1\4\uffff"+
            "\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\14\4\uffff\1\13",
            "\1\14\4\uffff\1\15",
            "\1\11\44\uffff\1\16\3\uffff\1\17\51\uffff\1\20",
            "\1\11\50\uffff\1\17\51\uffff\1\20",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\24\53\uffff\1\23",
            "",
            "\1\24\53\uffff\1\23",
            "\1\17\51\uffff\1\20",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA450_eot = DFA.unpackEncodedString(DFA450_eotS);
    static final short[] DFA450_eof = DFA.unpackEncodedString(DFA450_eofS);
    static final char[] DFA450_min = DFA.unpackEncodedStringToUnsignedChars(DFA450_minS);
    static final char[] DFA450_max = DFA.unpackEncodedStringToUnsignedChars(DFA450_maxS);
    static final short[] DFA450_accept = DFA.unpackEncodedString(DFA450_acceptS);
    static final short[] DFA450_special = DFA.unpackEncodedString(DFA450_specialS);
    static final short[][] DFA450_transition;

    static {
        int numStates = DFA450_transitionS.length;
        DFA450_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA450_transition[i] = DFA.unpackEncodedString(DFA450_transitionS[i]);
        }
    }

    class DFA450 extends DFA {

        public DFA450(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 450;
            this.eot = DFA450_eot;
            this.eof = DFA450_eof;
            this.min = DFA450_min;
            this.max = DFA450_max;
            this.accept = DFA450_accept;
            this.special = DFA450_special;
            this.transition = DFA450_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5803:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (fg= feature_group[extension] ) | (da= data_access[extension] ) | (pa= parameter[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA457_eotS =
        "\15\uffff";
    static final String DFA457_eofS =
        "\15\uffff";
    static final String DFA457_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\44\1\uffff\1\13\2\14\2\uffff";
    static final String DFA457_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\1\uffff\1\67\2\70\2\uffff";
    static final String DFA457_acceptS =
        "\1\uffff\1\4\5\uffff\1\3\3\uffff\1\1\1\2";
    static final String DFA457_specialS =
        "\15\uffff}>";
    static final String[] DFA457_transitionS = {
            "\1\2\6\uffff\2\1\53\uffff\1\1",
            "",
            "\1\3",
            "\1\7\37\uffff\1\4\3\uffff\2\7\5\uffff\1\6\1\5",
            "\1\10",
            "\1\11",
            "\1\12",
            "",
            "\1\7\43\uffff\2\7\5\uffff\1\6\1\5",
            "\1\14\53\uffff\1\13",
            "\1\14\53\uffff\1\13",
            "",
            ""
    };

    static final short[] DFA457_eot = DFA.unpackEncodedString(DFA457_eotS);
    static final short[] DFA457_eof = DFA.unpackEncodedString(DFA457_eofS);
    static final char[] DFA457_min = DFA.unpackEncodedStringToUnsignedChars(DFA457_minS);
    static final char[] DFA457_max = DFA.unpackEncodedStringToUnsignedChars(DFA457_maxS);
    static final short[] DFA457_accept = DFA.unpackEncodedString(DFA457_acceptS);
    static final short[] DFA457_special = DFA.unpackEncodedString(DFA457_specialS);
    static final short[][] DFA457_transition;

    static {
        int numStates = DFA457_transitionS.length;
        DFA457_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA457_transition[i] = DFA.unpackEncodedString(DFA457_transitionS[i]);
        }
    }

    class DFA457 extends DFA {

        public DFA457(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 457;
            this.eot = DFA457_eot;
            this.eof = DFA457_eof;
            this.min = DFA457_min;
            this.max = DFA457_max;
            this.accept = DFA457_accept;
            this.special = DFA457_special;
            this.transition = DFA457_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5904:4: ( (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA463_eotS =
        "\27\uffff";
    static final String DFA463_eofS =
        "\27\uffff";
    static final String DFA463_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\36\2\13\1\6\1\13\1\uffff\2\14\1\37"+
        "\1\uffff\1\37\6\uffff";
    static final String DFA463_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\1\uffff\2\70\1"+
        "\64\1\uffff\1\65\6\uffff";
    static final String DFA463_acceptS =
        "\1\uffff\1\11\11\uffff\1\1\3\uffff\1\5\1\uffff\1\4\1\10\1\2\1\3"+
        "\1\6\1\7";
    static final String DFA463_specialS =
        "\27\uffff}>";
    static final String[] DFA463_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13\5\uffff\1\14",
            "\1\13\5\uffff\1\15",
            "\1\11\23\uffff\1\17\20\uffff\1\16\3\uffff\1\20",
            "\1\11\23\uffff\1\17\24\uffff\1\20",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "",
            "\1\24\53\uffff\1\23",
            "\1\24\53\uffff\1\23",
            "\1\17\24\uffff\1\20",
            "",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA463_eot = DFA.unpackEncodedString(DFA463_eotS);
    static final short[] DFA463_eof = DFA.unpackEncodedString(DFA463_eofS);
    static final char[] DFA463_min = DFA.unpackEncodedStringToUnsignedChars(DFA463_minS);
    static final char[] DFA463_max = DFA.unpackEncodedStringToUnsignedChars(DFA463_maxS);
    static final short[] DFA463_accept = DFA.unpackEncodedString(DFA463_acceptS);
    static final short[] DFA463_special = DFA.unpackEncodedString(DFA463_specialS);
    static final short[][] DFA463_transition;

    static {
        int numStates = DFA463_transitionS.length;
        DFA463_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA463_transition[i] = DFA.unpackEncodedString(DFA463_transitionS[i]);
        }
    }

    class DFA463 extends DFA {

        public DFA463(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 463;
            this.eot = DFA463_eot;
            this.eof = DFA463_eof;
            this.min = DFA463_min;
            this.max = DFA463_max;
            this.accept = DFA463_accept;
            this.special = DFA463_special;
            this.transition = DFA463_transition;
        }
        public String getDescription() {
            return "()+ loopback of 5974:5: ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA474_eotS =
        "\14\uffff";
    static final String DFA474_eofS =
        "\14\uffff";
    static final String DFA474_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\1\uffff\2\13\1\6\1\13\2\uffff";
    static final String DFA474_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\1\uffff\2\13\1\55\1\67\2\uffff";
    static final String DFA474_acceptS =
        "\1\uffff\1\4\3\uffff\1\1\4\uffff\1\2\1\3";
    static final String DFA474_specialS =
        "\14\uffff}>";
    static final String[] DFA474_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\32\uffff\1\1\4\uffff\1\1\4\uffff"+
            "\1\1",
            "",
            "\1\3",
            "\1\10\37\uffff\1\4\3\uffff\1\6\1\7\5\uffff\2\5",
            "\1\11",
            "",
            "\1\10",
            "\1\10",
            "\2\13\4\uffff\1\12\33\uffff\1\13\4\uffff\1\13",
            "\1\10\43\uffff\1\6\1\7\5\uffff\2\5",
            "",
            ""
    };

    static final short[] DFA474_eot = DFA.unpackEncodedString(DFA474_eotS);
    static final short[] DFA474_eof = DFA.unpackEncodedString(DFA474_eofS);
    static final char[] DFA474_min = DFA.unpackEncodedStringToUnsignedChars(DFA474_minS);
    static final char[] DFA474_max = DFA.unpackEncodedStringToUnsignedChars(DFA474_maxS);
    static final short[] DFA474_accept = DFA.unpackEncodedString(DFA474_acceptS);
    static final short[] DFA474_special = DFA.unpackEncodedString(DFA474_specialS);
    static final short[][] DFA474_transition;

    static {
        int numStates = DFA474_transitionS.length;
        DFA474_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA474_transition[i] = DFA.unpackEncodedString(DFA474_transitionS[i]);
        }
    }

    class DFA474 extends DFA {

        public DFA474(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 474;
            this.eot = DFA474_eot;
            this.eof = DFA474_eof;
            this.min = DFA474_min;
            this.max = DFA474_max;
            this.accept = DFA474_accept;
            this.special = DFA474_special;
            this.transition = DFA474_transition;
        }
        public String getDescription() {
            return "()+ loopback of 6080:5: ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA482_eotS =
        "\14\uffff";
    static final String DFA482_eofS =
        "\14\uffff";
    static final String DFA482_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\1\uffff\2\13\1\6\1\13\2\uffff";
    static final String DFA482_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\1\uffff\2\13\1\55\1\67\2\uffff";
    static final String DFA482_acceptS =
        "\1\uffff\1\4\3\uffff\1\1\4\uffff\1\2\1\3";
    static final String DFA482_specialS =
        "\14\uffff}>";
    static final String[] DFA482_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\32\uffff\1\1\4\uffff\1\1\4\uffff"+
            "\1\1",
            "",
            "\1\3",
            "\1\10\37\uffff\1\4\3\uffff\1\6\1\7\5\uffff\2\5",
            "\1\11",
            "",
            "\1\10",
            "\1\10",
            "\2\13\4\uffff\1\12\33\uffff\1\13\4\uffff\1\13",
            "\1\10\43\uffff\1\6\1\7\5\uffff\2\5",
            "",
            ""
    };

    static final short[] DFA482_eot = DFA.unpackEncodedString(DFA482_eotS);
    static final short[] DFA482_eof = DFA.unpackEncodedString(DFA482_eofS);
    static final char[] DFA482_min = DFA.unpackEncodedStringToUnsignedChars(DFA482_minS);
    static final char[] DFA482_max = DFA.unpackEncodedStringToUnsignedChars(DFA482_maxS);
    static final short[] DFA482_accept = DFA.unpackEncodedString(DFA482_acceptS);
    static final short[] DFA482_special = DFA.unpackEncodedString(DFA482_specialS);
    static final short[][] DFA482_transition;

    static {
        int numStates = DFA482_transitionS.length;
        DFA482_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA482_transition[i] = DFA.unpackEncodedString(DFA482_transitionS[i]);
        }
    }

    class DFA482 extends DFA {

        public DFA482(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 482;
            this.eot = DFA482_eot;
            this.eof = DFA482_eof;
            this.min = DFA482_min;
            this.max = DFA482_max;
            this.accept = DFA482_accept;
            this.special = DFA482_special;
            this.transition = DFA482_transition;
        }
        public String getDescription() {
            return "()+ loopback of 6145:5: ( (ba= bus_access[extension] ) | (fg= feature_group[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA490_eotS =
        "\27\uffff";
    static final String DFA490_eofS =
        "\27\uffff";
    static final String DFA490_minS =
        "\1\7\1\uffff\1\52\1\13\1\54\2\36\2\13\1\6\1\13\1\uffff\2\14\1\37"+
        "\1\uffff\1\37\6\uffff";
    static final String DFA490_maxS =
        "\1\73\1\uffff\1\52\1\67\1\54\2\44\2\64\1\55\1\67\1\uffff\2\70\1"+
        "\64\1\uffff\1\65\6\uffff";
    static final String DFA490_acceptS =
        "\1\uffff\1\11\11\uffff\1\1\3\uffff\1\5\1\uffff\1\4\1\10\1\2\1\3"+
        "\1\6\1\7";
    static final String DFA490_specialS =
        "\27\uffff}>";
    static final String[] DFA490_transitionS = {
            "\1\2\6\uffff\2\1\6\uffff\1\1\6\uffff\1\1\23\uffff\1\1\4\uffff"+
            "\1\1\4\uffff\1\1",
            "",
            "\1\3",
            "\1\11\37\uffff\1\4\3\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "\1\12",
            "\1\13\5\uffff\1\14",
            "\1\13\5\uffff\1\15",
            "\1\11\23\uffff\1\17\20\uffff\1\16\3\uffff\1\20",
            "\1\11\23\uffff\1\17\24\uffff\1\20",
            "\2\22\4\uffff\1\21\33\uffff\1\22\4\uffff\1\22",
            "\1\11\43\uffff\1\7\1\10\5\uffff\1\6\1\5",
            "",
            "\1\24\53\uffff\1\23",
            "\1\24\53\uffff\1\23",
            "\1\17\24\uffff\1\20",
            "",
            "\1\25\25\uffff\1\26",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA490_eot = DFA.unpackEncodedString(DFA490_eotS);
    static final short[] DFA490_eof = DFA.unpackEncodedString(DFA490_eofS);
    static final char[] DFA490_min = DFA.unpackEncodedStringToUnsignedChars(DFA490_minS);
    static final char[] DFA490_max = DFA.unpackEncodedStringToUnsignedChars(DFA490_maxS);
    static final short[] DFA490_accept = DFA.unpackEncodedString(DFA490_acceptS);
    static final short[] DFA490_special = DFA.unpackEncodedString(DFA490_specialS);
    static final short[][] DFA490_transition;

    static {
        int numStates = DFA490_transitionS.length;
        DFA490_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA490_transition[i] = DFA.unpackEncodedString(DFA490_transitionS[i]);
        }
    }

    class DFA490 extends DFA {

        public DFA490(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 490;
            this.eot = DFA490_eot;
            this.eof = DFA490_eof;
            this.min = DFA490_min;
            this.max = DFA490_max;
            this.accept = DFA490_accept;
            this.special = DFA490_special;
            this.transition = DFA490_transition;
        }
        public String getDescription() {
            return "()+ loopback of 6209:5: ( (ba= bus_access[extension] ) | (sa= subprogram_access[extension] ) | (sga= subprogram_group_access[extension] ) | (fg= feature_group[extension] ) | (dp= data_port[extension] ) | (edp= event_data_port[extension] ) | (ep= event_port[extension] ) | (af= abstract_feature ) )+";
        }
    }
    static final String DFA552_eotS =
        "\123\uffff";
    static final String DFA552_eofS =
        "\1\1\122\uffff";
    static final String DFA552_minS =
        "\1\4\122\uffff";
    static final String DFA552_maxS =
        "\1\147\122\uffff";
    static final String DFA552_acceptS =
        "\1\uffff\1\3\120\1\1\2";
    static final String DFA552_specialS =
        "\1\0\122\uffff}>";
    static final String[] DFA552_transitionS = {
            "\1\121\1\1\1\uffff\1\122\1\77\1\55\1\uffff\1\30\1\34\1\5\1\64"+
            "\1\23\1\71\1\61\1\26\1\uffff\1\1\1\67\1\47\1\2\1\35\1\uffff"+
            "\1\106\1\13\1\16\1\33\1\12\1\20\1\22\1\45\1\62\1\63\1\107\1"+
            "\110\1\111\1\120\3\uffff\1\75\1\112\2\uffff\1\36\1\54\1\50\1"+
            "\42\1\52\1\25\1\60\1\100\1\70\1\3\1\uffff\1\31\1\6\1\uffff\1"+
            "\65\1\102\1\43\1\37\1\44\1\7\1\115\1\74\1\15\1\11\1\105\1\24"+
            "\1\116\1\uffff\1\73\1\41\5\uffff\1\72\1\14\1\4\1\10\1\17\1\21"+
            "\1\27\1\32\1\40\1\46\1\51\1\53\1\56\1\57\1\66\1\76\1\101\1\103"+
            "\1\104\1\113\1\114\1\117",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA552_eot = DFA.unpackEncodedString(DFA552_eotS);
    static final short[] DFA552_eof = DFA.unpackEncodedString(DFA552_eofS);
    static final char[] DFA552_min = DFA.unpackEncodedStringToUnsignedChars(DFA552_minS);
    static final char[] DFA552_max = DFA.unpackEncodedStringToUnsignedChars(DFA552_maxS);
    static final short[] DFA552_accept = DFA.unpackEncodedString(DFA552_acceptS);
    static final short[] DFA552_special = DFA.unpackEncodedString(DFA552_specialS);
    static final short[][] DFA552_transition;

    static {
        int numStates = DFA552_transitionS.length;
        DFA552_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA552_transition[i] = DFA.unpackEncodedString(DFA552_transitionS[i]);
        }
    }

    class DFA552 extends DFA {

        public DFA552(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 552;
            this.eot = DFA552_eot;
            this.eof = DFA552_eof;
            this.min = DFA552_min;
            this.max = DFA552_max;
            this.accept = DFA552_accept;
            this.special = DFA552_special;
            this.transition = DFA552_transition;
        }
        public String getDescription() {
            return "()+ loopback of 9209:2: ( ( core_metaclass_keyword )=>cm= core_metaclass_keyword | id= IDENT )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA552_0 = input.LA(1);

                         
                        int index552_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA552_0==EOF||LA552_0==COMMA||LA552_0==RPAREN) ) {s = 1;}

                        else if ( (LA552_0==ABSTRACT) && (synpred762_Aadl2())) {s = 2;}

                        else if ( (LA552_0==ACCESS) && (synpred762_Aadl2())) {s = 3;}

                        else if ( (LA552_0==AND) && (synpred762_Aadl2())) {s = 4;}

                        else if ( (LA552_0==ALL) && (synpred762_Aadl2())) {s = 5;}

                        else if ( (LA552_0==ANNEX) && (synpred762_Aadl2())) {s = 6;}

                        else if ( (LA552_0==APPLIES) && (synpred762_Aadl2())) {s = 7;}

                        else if ( (LA552_0==BINDING) && (synpred762_Aadl2())) {s = 8;}

                        else if ( (LA552_0==BOOLEAN) && (synpred762_Aadl2())) {s = 9;}

                        else if ( (LA552_0==BUS) && (synpred762_Aadl2())) {s = 10;}

                        else if ( (LA552_0==CALLS) && (synpred762_Aadl2())) {s = 11;}

                        else if ( (LA552_0==CLASSIFIER) && (synpred762_Aadl2())) {s = 12;}

                        else if ( (LA552_0==REFERENCE) && (synpred762_Aadl2())) {s = 13;}

                        else if ( (LA552_0==CONNECTIONS) && (synpred762_Aadl2())) {s = 14;}

                        else if ( (LA552_0==CONSTANT) && (synpred762_Aadl2())) {s = 15;}

                        else if ( (LA552_0==DATA) && (synpred762_Aadl2())) {s = 16;}

                        else if ( (LA552_0==DELTA) && (synpred762_Aadl2())) {s = 17;}

                        else if ( (LA552_0==DEVICE) && (synpred762_Aadl2())) {s = 18;}

                        else if ( (LA552_0==END) && (synpred762_Aadl2())) {s = 19;}

                        else if ( (LA552_0==ENUMERATION) && (synpred762_Aadl2())) {s = 20;}

                        else if ( (LA552_0==EVENT) && (synpred762_Aadl2())) {s = 21;}

                        else if ( (LA552_0==EXTENDS) && (synpred762_Aadl2())) {s = 22;}

                        else if ( (LA552_0==FALSE) && (synpred762_Aadl2())) {s = 23;}

                        else if ( (LA552_0==FEATURE) && (synpred762_Aadl2())) {s = 24;}

                        else if ( (LA552_0==FEATURES) && (synpred762_Aadl2())) {s = 25;}

                        else if ( (LA552_0==FLOW) && (synpred762_Aadl2())) {s = 26;}

                        else if ( (LA552_0==FLOWS) && (synpred762_Aadl2())) {s = 27;}

                        else if ( (LA552_0==GROUP) && (synpred762_Aadl2())) {s = 28;}

                        else if ( (LA552_0==IMPLEMENTATION) && (synpred762_Aadl2())) {s = 29;}

                        else if ( (LA552_0==IN) && (synpred762_Aadl2())) {s = 30;}

                        else if ( (LA552_0==INHERIT) && (synpred762_Aadl2())) {s = 31;}

                        else if ( (LA552_0==INITIAL) && (synpred762_Aadl2())) {s = 32;}

                        else if ( (LA552_0==INTEGER) && (synpred762_Aadl2())) {s = 33;}

                        else if ( (LA552_0==INVERSE) && (synpred762_Aadl2())) {s = 34;}

                        else if ( (LA552_0==IS) && (synpred762_Aadl2())) {s = 35;}

                        else if ( (LA552_0==LIST) && (synpred762_Aadl2())) {s = 36;}

                        else if ( (LA552_0==MEMORY) && (synpred762_Aadl2())) {s = 37;}

                        else if ( (LA552_0==MODE) && (synpred762_Aadl2())) {s = 38;}

                        else if ( (LA552_0==MODES) && (synpred762_Aadl2())) {s = 39;}

                        else if ( (LA552_0==NONE) && (synpred762_Aadl2())) {s = 40;}

                        else if ( (LA552_0==NOT) && (synpred762_Aadl2())) {s = 41;}

                        else if ( (LA552_0==OF) && (synpred762_Aadl2())) {s = 42;}

                        else if ( (LA552_0==OR) && (synpred762_Aadl2())) {s = 43;}

                        else if ( (LA552_0==OUT) && (synpred762_Aadl2())) {s = 44;}

                        else if ( (LA552_0==PACKAGE) && (synpred762_Aadl2())) {s = 45;}

                        else if ( (LA552_0==PARAMETER) && (synpred762_Aadl2())) {s = 46;}

                        else if ( (LA552_0==PATH) && (synpred762_Aadl2())) {s = 47;}

                        else if ( (LA552_0==PORT) && (synpred762_Aadl2())) {s = 48;}

                        else if ( (LA552_0==PRIVATE) && (synpred762_Aadl2())) {s = 49;}

                        else if ( (LA552_0==PROCESS) && (synpred762_Aadl2())) {s = 50;}

                        else if ( (LA552_0==PROCESSOR) && (synpred762_Aadl2())) {s = 51;}

                        else if ( (LA552_0==PROPERTIES) && (synpred762_Aadl2())) {s = 52;}

                        else if ( (LA552_0==PROPERTY) && (synpred762_Aadl2())) {s = 53;}

                        else if ( (LA552_0==PROTOTYPE) && (synpred762_Aadl2())) {s = 54;}

                        else if ( (LA552_0==PROTOTYPES) && (synpred762_Aadl2())) {s = 55;}

                        else if ( (LA552_0==PROVIDES) && (synpred762_Aadl2())) {s = 56;}

                        else if ( (LA552_0==PUBLIC) && (synpred762_Aadl2())) {s = 57;}

                        else if ( (LA552_0==RANGE) && (synpred762_Aadl2())) {s = 58;}

                        else if ( (LA552_0==REAL) && (synpred762_Aadl2())) {s = 59;}

                        else if ( (LA552_0==RECORD) && (synpred762_Aadl2())) {s = 60;}

                        else if ( (LA552_0==REFINED) && (synpred762_Aadl2())) {s = 61;}

                        else if ( (LA552_0==REFINES) && (synpred762_Aadl2())) {s = 62;}

                        else if ( (LA552_0==RENAMES) && (synpred762_Aadl2())) {s = 63;}

                        else if ( (LA552_0==REQUIRES) && (synpred762_Aadl2())) {s = 64;}

                        else if ( (LA552_0==SERVER) && (synpred762_Aadl2())) {s = 65;}

                        else if ( (LA552_0==SET) && (synpred762_Aadl2())) {s = 66;}

                        else if ( (LA552_0==SINK) && (synpred762_Aadl2())) {s = 67;}

                        else if ( (LA552_0==SOURCE) && (synpred762_Aadl2())) {s = 68;}

                        else if ( (LA552_0==STRING) && (synpred762_Aadl2())) {s = 69;}

                        else if ( (LA552_0==SUBCOMPONENTS) && (synpred762_Aadl2())) {s = 70;}

                        else if ( (LA552_0==SUBPROGRAM) && (synpred762_Aadl2())) {s = 71;}

                        else if ( (LA552_0==SYSTEM) && (synpred762_Aadl2())) {s = 72;}

                        else if ( (LA552_0==THREAD) && (synpred762_Aadl2())) {s = 73;}

                        else if ( (LA552_0==TO) && (synpred762_Aadl2())) {s = 74;}

                        else if ( (LA552_0==TRANSITIONS) && (synpred762_Aadl2())) {s = 75;}

                        else if ( (LA552_0==TRUE) && (synpred762_Aadl2())) {s = 76;}

                        else if ( (LA552_0==TYPE) && (synpred762_Aadl2())) {s = 77;}

                        else if ( (LA552_0==UNITS) && (synpred762_Aadl2())) {s = 78;}

                        else if ( (LA552_0==VALUE) && (synpred762_Aadl2())) {s = 79;}

                        else if ( (LA552_0==VIRTUAL) && (synpred762_Aadl2())) {s = 80;}

                        else if ( (LA552_0==WITH) && (synpred762_Aadl2())) {s = 81;}

                        else if ( (LA552_0==IDENT) ) {s = 82;}

                         
                        input.seek(index552_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 552, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA557_eotS =
        "\23\uffff";
    static final String DFA557_eofS =
        "\23\uffff";
    static final String DFA557_minS =
        "\1\7\6\0\14\uffff";
    static final String DFA557_maxS =
        "\1\152\6\0\14\uffff";
    static final String DFA557_acceptS =
        "\7\uffff\1\3\2\uffff\1\6\1\7\1\10\1\1\1\11\1\2\1\4\1\5\1\12";
    static final String DFA557_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\14\uffff}>";
    static final String[] DFA557_transitionS = {
            "\1\6\13\uffff\1\1\71\uffff\1\2\1\3\1\uffff\1\4\1\5\1\uffff\1"+
            "\13\4\uffff\1\7\3\uffff\1\7\11\uffff\1\7\1\uffff\1\14\1\uffff"+
            "\1\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA557_eot = DFA.unpackEncodedString(DFA557_eotS);
    static final short[] DFA557_eof = DFA.unpackEncodedString(DFA557_eofS);
    static final char[] DFA557_min = DFA.unpackEncodedStringToUnsignedChars(DFA557_minS);
    static final char[] DFA557_max = DFA.unpackEncodedStringToUnsignedChars(DFA557_maxS);
    static final short[] DFA557_accept = DFA.unpackEncodedString(DFA557_acceptS);
    static final short[] DFA557_special = DFA.unpackEncodedString(DFA557_specialS);
    static final short[][] DFA557_transition;

    static {
        int numStates = DFA557_transitionS.length;
        DFA557_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA557_transition[i] = DFA.unpackEncodedString(DFA557_transitionS[i]);
        }
    }

    class DFA557 extends DFA {

        public DFA557(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 557;
            this.eot = DFA557_eot;
            this.eof = DFA557_eof;
            this.min = DFA557_min;
            this.max = DFA557_max;
            this.accept = DFA557_accept;
            this.special = DFA557_special;
            this.transition = DFA557_transition;
        }
        public String getDescription() {
            return "9888:2: ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nr= numeric_range_term | bt= boolean_term | rt= real_term | it= integer_term | st= string_term | cct= component_classifier_term | ct= computed_term | li= list_term[$constant_property_expression::ro] | property_constant_or_namelike_literal[$constant_property_expression::ro] )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA557_1 = input.LA(1);

                         
                        int index557_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred846_Aadl2()) ) {s = 13;}

                        else if ( (synpred851_Aadl2()) ) {s = 7;}

                        else if ( (synpred857_Aadl2()) ) {s = 14;}

                         
                        input.seek(index557_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA557_2 = input.LA(1);

                         
                        int index557_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred850_Aadl2()) ) {s = 15;}

                        else if ( (synpred852_Aadl2()) ) {s = 16;}

                        else if ( (synpred853_Aadl2()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index557_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA557_3 = input.LA(1);

                         
                        int index557_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred850_Aadl2()) ) {s = 15;}

                        else if ( (synpred852_Aadl2()) ) {s = 16;}

                        else if ( (synpred853_Aadl2()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index557_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA557_4 = input.LA(1);

                         
                        int index557_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred850_Aadl2()) ) {s = 15;}

                        else if ( (synpred852_Aadl2()) ) {s = 16;}

                         
                        input.seek(index557_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA557_5 = input.LA(1);

                         
                        int index557_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred850_Aadl2()) ) {s = 15;}

                        else if ( (synpred853_Aadl2()) ) {s = 17;}

                         
                        input.seek(index557_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA557_6 = input.LA(1);

                         
                        int index557_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred850_Aadl2()) ) {s = 15;}

                        else if ( (synpred851_Aadl2()) ) {s = 7;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index557_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 557, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA561_eotS =
        "\17\uffff";
    static final String DFA561_eofS =
        "\17\uffff";
    static final String DFA561_minS =
        "\1\7\1\0\15\uffff";
    static final String DFA561_maxS =
        "\1\152\1\0\15\uffff";
    static final String DFA561_acceptS =
        "\2\uffff\1\2\13\uffff\1\1";
    static final String DFA561_specialS =
        "\1\uffff\1\0\15\uffff}>";
    static final String[] DFA561_transitionS = {
            "\1\2\13\uffff\1\1\61\uffff\1\2\7\uffff\2\2\1\uffff\2\2\1\uffff"+
            "\1\2\4\uffff\1\2\3\uffff\1\2\11\uffff\1\2\1\uffff\1\2\1\uffff"+
            "\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA561_eot = DFA.unpackEncodedString(DFA561_eotS);
    static final short[] DFA561_eof = DFA.unpackEncodedString(DFA561_eofS);
    static final char[] DFA561_min = DFA.unpackEncodedStringToUnsignedChars(DFA561_minS);
    static final char[] DFA561_max = DFA.unpackEncodedStringToUnsignedChars(DFA561_maxS);
    static final short[] DFA561_accept = DFA.unpackEncodedString(DFA561_acceptS);
    static final short[] DFA561_special = DFA.unpackEncodedString(DFA561_specialS);
    static final short[][] DFA561_transition;

    static {
        int numStates = DFA561_transitionS.length;
        DFA561_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA561_transition[i] = DFA.unpackEncodedString(DFA561_transitionS[i]);
        }
    }

    class DFA561 extends DFA {

        public DFA561(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 561;
            this.eot = DFA561_eot;
            this.eof = DFA561_eof;
            this.min = DFA561_min;
            this.max = DFA561_max;
            this.accept = DFA561_accept;
            this.special = DFA561_special;
            this.transition = DFA561_transition;
        }
        public String getDescription() {
            return "10000:1: modal_property_value[PropertyAssociation pa] : ( ( LPAREN ( (pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) ) ( COMMA pv= property_expression[$modal_property_value::mpv] ( in_modes[$modal_property_value::mpv] ) )* ( COMMA pv= property_expression[$modal_property_value::mpv] )? ) RPAREN ) | (pv= property_expression[$modal_property_value::mpv] ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA561_1 = input.LA(1);

                         
                        int index561_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred861_Aadl2()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index561_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 561, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA562_eotS =
        "\24\uffff";
    static final String DFA562_eofS =
        "\24\uffff";
    static final String DFA562_minS =
        "\1\7\6\0\15\uffff";
    static final String DFA562_maxS =
        "\1\152\6\0\15\uffff";
    static final String DFA562_acceptS =
        "\7\uffff\1\3\1\4\1\5\1\10\1\11\2\uffff\1\1\1\13\1\2\1\6\1\7\1\12";
    static final String DFA562_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\15\uffff}>";
    static final String[] DFA562_transitionS = {
            "\1\6\13\uffff\1\1\61\uffff\1\7\7\uffff\1\2\1\3\1\uffff\1\4\1"+
            "\5\1\uffff\1\12\4\uffff\1\13\3\uffff\1\13\11\uffff\1\13\1\uffff"+
            "\1\10\1\uffff\1\11",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA562_eot = DFA.unpackEncodedString(DFA562_eotS);
    static final short[] DFA562_eof = DFA.unpackEncodedString(DFA562_eofS);
    static final char[] DFA562_min = DFA.unpackEncodedStringToUnsignedChars(DFA562_minS);
    static final char[] DFA562_max = DFA.unpackEncodedStringToUnsignedChars(DFA562_maxS);
    static final short[] DFA562_accept = DFA.unpackEncodedString(DFA562_acceptS);
    static final short[] DFA562_special = DFA.unpackEncodedString(DFA562_specialS);
    static final short[][] DFA562_transition;

    static {
        int numStates = DFA562_transitionS.length;
        DFA562_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA562_transition[i] = DFA.unpackEncodedString(DFA562_transitionS[i]);
        }
    }

    class DFA562 extends DFA {

        public DFA562(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 562;
            this.eot = DFA562_eot;
            this.eof = DFA562_eof;
            this.min = DFA562_min;
            this.max = DFA562_max;
            this.accept = DFA562_accept;
            this.special = DFA562_special;
            this.transition = DFA562_transition;
        }
        public String getDescription() {
            return "10132:2: ( ( LPAREN IDENT ASSIGN )=>rct= record_term | ( (~ ( DOTDOT | SEMI ) )* DOTDOT )=>nt= numeric_range_term | rft= reference_term | ct= computed_term | st= string_term | rt= real_term | it= integer_term | cct= component_classifier_term | bt= boolean_term | property_constant_or_namelike_literal[$property_expression::ro] | li= list_term[$property_expression::ro] )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA562_1 = input.LA(1);

                         
                        int index562_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred862_Aadl2()) ) {s = 14;}

                        else if ( (synpred873_Aadl2()) ) {s = 11;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index562_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA562_2 = input.LA(1);

                         
                        int index562_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred866_Aadl2()) ) {s = 16;}

                        else if ( (synpred870_Aadl2()) ) {s = 17;}

                        else if ( (synpred871_Aadl2()) ) {s = 18;}

                        else if ( (synpred874_Aadl2()) ) {s = 19;}

                         
                        input.seek(index562_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA562_3 = input.LA(1);

                         
                        int index562_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred866_Aadl2()) ) {s = 16;}

                        else if ( (synpred870_Aadl2()) ) {s = 17;}

                        else if ( (synpred871_Aadl2()) ) {s = 18;}

                        else if ( (synpred874_Aadl2()) ) {s = 19;}

                         
                        input.seek(index562_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA562_4 = input.LA(1);

                         
                        int index562_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred866_Aadl2()) ) {s = 16;}

                        else if ( (synpred870_Aadl2()) ) {s = 17;}

                         
                        input.seek(index562_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA562_5 = input.LA(1);

                         
                        int index562_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred866_Aadl2()) ) {s = 16;}

                        else if ( (synpred871_Aadl2()) ) {s = 18;}

                         
                        input.seek(index562_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA562_6 = input.LA(1);

                         
                        int index562_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred866_Aadl2()) ) {s = 16;}

                        else if ( (synpred873_Aadl2()) ) {s = 11;}

                        else if ( (synpred874_Aadl2()) ) {s = 19;}

                         
                        input.seek(index562_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 562, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA571_eotS =
        "\5\uffff";
    static final String DFA571_eofS =
        "\5\uffff";
    static final String DFA571_minS =
        "\1\7\1\12\1\7\2\uffff";
    static final String DFA571_maxS =
        "\1\7\1\31\1\7\2\uffff";
    static final String DFA571_acceptS =
        "\3\uffff\1\1\1\2";
    static final String DFA571_specialS =
        "\5\uffff}>";
    static final String[] DFA571_transitionS = {
            "\1\1",
            "\1\2\11\uffff\1\4\4\uffff\1\3",
            "\1\1",
            "",
            ""
    };

    static final short[] DFA571_eot = DFA.unpackEncodedString(DFA571_eotS);
    static final short[] DFA571_eof = DFA.unpackEncodedString(DFA571_eofS);
    static final char[] DFA571_min = DFA.unpackEncodedStringToUnsignedChars(DFA571_minS);
    static final char[] DFA571_max = DFA.unpackEncodedStringToUnsignedChars(DFA571_maxS);
    static final short[] DFA571_accept = DFA.unpackEncodedString(DFA571_acceptS);
    static final short[] DFA571_special = DFA.unpackEncodedString(DFA571_specialS);
    static final short[][] DFA571_transition;

    static {
        int numStates = DFA571_transitionS.length;
        DFA571_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA571_transition[i] = DFA.unpackEncodedString(DFA571_transitionS[i]);
        }
    }

    class DFA571 extends DFA {

        public DFA571(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 571;
            this.eot = DFA571_eot;
            this.eof = DFA571_eof;
            this.min = DFA571_min;
            this.max = DFA571_max;
            this.accept = DFA571_accept;
            this.special = DFA571_special;
            this.transition = DFA571_transition;
        }
        public String getDescription() {
            return "10339:2: ( (ci= unique_impl_name ) | (ct= unique_type_name ) )";
        }
    }
    static final String DFA595_eotS =
        "\22\uffff";
    static final String DFA595_eofS =
        "\10\uffff\1\15\1\uffff\1\17\7\uffff";
    static final String DFA595_minS =
        "\1\27\7\uffff\1\6\1\uffff\1\6\1\36\6\uffff";
    static final String DFA595_maxS =
        "\1\47\7\uffff\1\55\1\uffff\1\55\1\43\6\uffff";
    static final String DFA595_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\12\2\uffff\1\10\1"+
        "\11\1\13\1\14\1\15\1\16";
    static final String DFA595_specialS =
        "\22\uffff}>";
    static final String[] DFA595_transitionS = {
            "\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\2\15\4\uffff\1\14\33\uffff\1\15\4\uffff\1\15",
            "",
            "\2\17\4\uffff\1\16\33\uffff\1\17\4\uffff\1\17",
            "\1\20\4\uffff\1\21",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA595_eot = DFA.unpackEncodedString(DFA595_eotS);
    static final short[] DFA595_eof = DFA.unpackEncodedString(DFA595_eofS);
    static final char[] DFA595_min = DFA.unpackEncodedStringToUnsignedChars(DFA595_minS);
    static final char[] DFA595_max = DFA.unpackEncodedStringToUnsignedChars(DFA595_maxS);
    static final short[] DFA595_accept = DFA.unpackEncodedString(DFA595_acceptS);
    static final short[] DFA595_special = DFA.unpackEncodedString(DFA595_specialS);
    static final short[][] DFA595_transition;

    static {
        int numStates = DFA595_transitionS.length;
        DFA595_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA595_transition[i] = DFA.unpackEncodedString(DFA595_transitionS[i]);
        }
    }

    class DFA595 extends DFA {

        public DFA595(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 595;
            this.eot = DFA595_eot;
            this.eof = DFA595_eof;
            this.min = DFA595_min;
            this.max = DFA595_max;
            this.accept = DFA595_accept;
            this.special = DFA595_special;
            this.transition = DFA595_transition;
        }
        public String getDescription() {
            return "11635:1: component_category returns [ComponentCategory cat] : ( ABSTRACT | BUS | DATA | DEVICE | MEMORY | PROCESS | PROCESSOR | ( SUBPROGRAM GROUP ) | SUBPROGRAM | SYSTEM | ( THREAD GROUP ) | THREAD | ( VIRTUAL BUS ) | ( VIRTUAL PROCESSOR ) );";
        }
    }
    static final String DFA667_eotS =
        "\12\uffff";
    static final String DFA667_eofS =
        "\12\uffff";
    static final String DFA667_minS =
        "\1\7\1\31\1\54\4\uffff\1\7\1\uffff\1\7";
    static final String DFA667_maxS =
        "\1\136\1\160\1\54\4\uffff\1\136\1\uffff\1\136";
    static final String DFA667_acceptS =
        "\3\uffff\1\1\1\2\1\3\1\4\1\uffff\1\5\1\uffff";
    static final String DFA667_specialS =
        "\12\uffff}>";
    static final String[] DFA667_transitionS = {
            "\1\1\3\uffff\1\4\22\uffff\2\6\4\uffff\1\6\6\uffff\1\2\11\uffff"+
            "\1\3\2\uffff\1\6\45\uffff\1\5",
            "\1\10\20\uffff\1\7\104\uffff\2\10",
            "\1\11",
            "",
            "",
            "",
            "",
            "\1\10\3\uffff\1\4\22\uffff\2\6\4\uffff\1\6\6\uffff\1\2\11\uffff"+
            "\1\3\2\uffff\1\6\45\uffff\1\5",
            "",
            "\1\10\3\uffff\1\4\22\uffff\2\6\4\uffff\1\6\20\uffff\1\3\2\uffff"+
            "\1\6\45\uffff\1\5"
    };

    static final short[] DFA667_eot = DFA.unpackEncodedString(DFA667_eotS);
    static final short[] DFA667_eof = DFA.unpackEncodedString(DFA667_eofS);
    static final char[] DFA667_min = DFA.unpackEncodedStringToUnsignedChars(DFA667_minS);
    static final char[] DFA667_max = DFA.unpackEncodedStringToUnsignedChars(DFA667_maxS);
    static final short[] DFA667_accept = DFA.unpackEncodedString(DFA667_acceptS);
    static final short[] DFA667_special = DFA.unpackEncodedString(DFA667_specialS);
    static final short[][] DFA667_transition;

    static {
        int numStates = DFA667_transitionS.length;
        DFA667_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA667_transition[i] = DFA.unpackEncodedString(DFA667_transitionS[i]);
        }
    }

    class DFA667 extends DFA {

        public DFA667(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 667;
            this.eot = DFA667_eot;
            this.eof = DFA667_eof;
            this.min = DFA667_min;
            this.max = DFA667_max;
            this.accept = DFA667_accept;
            this.special = DFA667_special;
            this.transition = DFA667_transition;
        }
        public String getDescription() {
            return "13175:3: ( (pconn= port_connection[extension] ) | (pgconn= feature_group_connection[extension] ) | (pmconn= parameter_connection[extension] ) | (aconn= access_connection[extension] ) | (fconn= feature_connection[extension] ) )";
        }
    }
    static final String DFA735_eotS =
        "\15\uffff";
    static final String DFA735_eofS =
        "\15\uffff";
    static final String DFA735_minS =
        "\1\7\1\52\1\131\1\137\3\7\6\uffff";
    static final String DFA735_maxS =
        "\1\7\1\52\1\131\1\144\3\53\6\uffff";
    static final String DFA735_acceptS =
        "\7\uffff\1\2\1\1\1\4\1\3\1\6\1\5";
    static final String DFA735_specialS =
        "\15\uffff}>";
    static final String[] DFA735_transitionS = {
            "\1\1",
            "\1\2",
            "\1\3",
            "\1\6\3\uffff\1\5\1\4",
            "\1\10\43\uffff\1\7",
            "\1\12\43\uffff\1\11",
            "\1\14\43\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA735_eot = DFA.unpackEncodedString(DFA735_eotS);
    static final short[] DFA735_eof = DFA.unpackEncodedString(DFA735_eofS);
    static final char[] DFA735_min = DFA.unpackEncodedStringToUnsignedChars(DFA735_minS);
    static final char[] DFA735_max = DFA.unpackEncodedStringToUnsignedChars(DFA735_maxS);
    static final short[] DFA735_accept = DFA.unpackEncodedString(DFA735_acceptS);
    static final short[] DFA735_special = DFA.unpackEncodedString(DFA735_specialS);
    static final short[][] DFA735_transition;

    static {
        int numStates = DFA735_transitionS.length;
        DFA735_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA735_transition[i] = DFA.unpackEncodedString(DFA735_transitionS[i]);
        }
    }

    class DFA735 extends DFA {

        public DFA735(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 735;
            this.eot = DFA735_eot;
            this.eof = DFA735_eof;
            this.min = DFA735_min;
            this.max = DFA735_max;
            this.accept = DFA735_accept;
            this.special = DFA735_special;
            this.transition = DFA735_transition;
        }
        public String getDescription() {
            return "14868:6: ( (fsi= flow_source_implementation ) | (fsir= flow_source_implementation_refinement ) | (fki= flow_sink_implementation ) | (fkir= flow_sink_implementation_refinement ) | (fpi= flow_path_implementation ) | (fpir= flow_path_implementation_refinement ) )";
        }
    }
 

    public static final BitSet FOLLOW_package_spec_in_aadl_specification87 = new BitSet(new long[]{0x2000000000000200L});
    public static final BitSet FOLLOW_property_set_in_aadl_specification92 = new BitSet(new long[]{0x2000000000000200L});
    public static final BitSet FOLLOW_EOF_in_aadl_specification100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WITH_in_name_visibility_declaration123 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_package_name_in_name_visibility_declaration130 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_COMMA_in_name_visibility_declaration142 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_package_name_in_name_visibility_declaration148 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_SEMI_in_name_visibility_declaration163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias_declaration_in_name_visibility_declaration167 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_alias_declaration192 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_RENAMES_in_alias_declaration194 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_PACKAGE_in_alias_declaration196 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_package_name_in_alias_declaration200 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_alias_declaration202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_alias_declaration216 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_RENAMES_in_alias_declaration238 = new BitSet(new long[]{0x000000FFC0800800L});
    public static final BitSet FOLLOW_component_category_in_alias_declaration249 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_alias_declaration259 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_alias_declaration261 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_alias_declaration292 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_alias_declaration294 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FEATURE_in_alias_declaration310 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_alias_declaration312 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_alias_declaration323 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_alias_declaration325 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_alias_declaration352 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_alias_declaration354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RENAMES_in_alias_declaration377 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_package_name_in_alias_declaration381 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_alias_declaration383 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_ALL_in_alias_declaration385 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_alias_declaration387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_package_spec533 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_package_name_in_package_spec539 = new BitSet(new long[]{0x0000000000030000L});
    public static final BitSet FOLLOW_public_part_in_package_spec562 = new BitSet(new long[]{0x000000000003C000L});
    public static final BitSet FOLLOW_private_part_in_package_spec584 = new BitSet(new long[]{0x000000000000C000L});
    public static final BitSet FOLLOW_private_part_in_package_spec610 = new BitSet(new long[]{0x000000000000C000L});
    public static final BitSet FOLLOW_PROPERTIES_in_package_spec637 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_package_spec647 = new BitSet(new long[]{0x0000000000008080L});
    public static final BitSet FOLLOW_END_in_package_spec674 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_package_name_in_package_spec680 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_package_spec684 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_public_part756 = new BitSet(new long[]{0x080000FFC0800990L});
    public static final BitSet FOLLOW_name_visibility_declaration_in_public_part774 = new BitSet(new long[]{0x080000FFC0800990L});
    public static final BitSet FOLLOW_package_items_in_public_part779 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_private_part825 = new BitSet(new long[]{0x080000FFC0800990L});
    public static final BitSet FOLLOW_name_visibility_declaration_in_private_part843 = new BitSet(new long[]{0x080000FFC0800990L});
    public static final BitSet FOLLOW_package_items_in_private_part848 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_package_item_in_package_items881 = new BitSet(new long[]{0x080000FFC0800992L});
    public static final BitSet FOLLOW_annex_library_in_package_item947 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classifier_declaration_in_package_item970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_package_name1025 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_package_name1047 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_package_name1051 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_component_classifier_declaration_in_classifier_declaration1102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_feature_group_type_in_classifier_declaration1111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_implementation_in_component_classifier_declaration1137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_type_in_component_classifier_declaration1146 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_abstract_implementation_in_component_implementation1178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thread_implementation_in_component_implementation1196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thread_group_implementation_in_component_implementation1214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_system_implementation_in_component_implementation1232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_data_implementation_in_component_implementation1250 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subprogram_implementation_in_component_implementation1268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_process_implementation_in_component_implementation1286 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_processor_implementation_in_component_implementation1304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memory_implementation_in_component_implementation1322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bus_implementation_in_component_implementation1340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_device_implementation_in_component_implementation1358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subprogram_group_implementation_in_component_implementation1376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_virtual_bus_implementation_in_component_implementation1394 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_virtual_processor_implementation_in_component_implementation1412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thread_type_in_component_type1454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_thread_group_type_in_component_type1471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_system_type_in_component_type1487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_data_type_in_component_type1503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subprogram_type_in_component_type1520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_process_type_in_component_type1536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_processor_type_in_component_type1553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_memory_type_in_component_type1569 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_bus_type_in_component_type1585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_device_type_in_component_type1601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_abstract_type_in_component_type1617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subprogram_group_type_in_component_type1633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_virtual_bus_type_in_component_type1649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_virtual_processor_type_in_component_type1665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROPERTIES_in_properties_for_classifiers1692 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_properties_for_classifiers1703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_contained_property_association_in_properties_for_classifiers1737 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_EXTENDS_in_implementation_extension1789 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_unique_impl_name_in_implementation_extension1795 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_LPAREN_in_implementation_extension1806 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_implementation_extension1810 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_implementation_extension1821 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_implementation_extension1825 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_implementation_extension1842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTOTYPES_in_prototypes_for_implementation1861 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_prototypes_for_implementation1866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prototype_in_prototypes_for_implementation1887 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_MODES_in_modes_for_implementations1924 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_modes_for_implementations1937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_mode_in_modes_for_implementations1978 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_mode_transition_in_modes_for_implementations2016 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_connection_in_connections2097 = new BitSet(new long[]{0x01200810C0000882L,0x0000000040000000L});
    public static final BitSet FOLLOW_ABSTRACT_in_abstract_implementation2137 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_abstract_implementation2139 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_abstract_implementation2143 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_abstract_implementation2145 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_abstract_implementation2149 = new BitSet(new long[]{0x080000003C64C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_abstract_implementation2156 = new BitSet(new long[]{0x080000003C64C000L});
    public static final BitSet FOLLOW_implementation_extension_in_abstract_implementation2161 = new BitSet(new long[]{0x080000003C60C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_abstract_implementation2174 = new BitSet(new long[]{0x080000003C40C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_abstract_implementation2184 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_abstract_implementation2206 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_abstract_implementation2227 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_subprogram_group_subcomponent_in_abstract_implementation2248 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_thread_subcomponent_in_abstract_implementation2269 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_thread_group_subcomponent_in_abstract_implementation2293 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_process_subcomponent_in_abstract_implementation2314 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_processor_subcomponent_in_abstract_implementation2335 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_virtual_processor_subcomponent_in_abstract_implementation2356 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_memory_subcomponent_in_abstract_implementation2377 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_device_subcomponent_in_abstract_implementation2398 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_system_subcomponent_in_abstract_implementation2419 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_abstract_implementation2440 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_bus_subcomponent_in_abstract_implementation2461 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_virtual_bus_subcomponent_in_abstract_implementation2482 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_none_stmt_in_abstract_implementation2521 = new BitSet(new long[]{0x080000003840C000L});
    public static final BitSet FOLLOW_CALLS_in_abstract_implementation2545 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_subprogram_call_sequence_in_abstract_implementation2559 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_abstract_implementation2588 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_abstract_implementation2611 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_abstract_implementation2621 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_abstract_implementation2643 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_abstract_implementation2667 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_abstract_implementation2692 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_abstract_implementation2724 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_abstract_implementation2769 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_abstract_implementation2793 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_abstract_implementation2802 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_abstract_implementation2813 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_abstract_implementation2824 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_abstract_implementation2828 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_abstract_implementation2830 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_abstract_implementation2834 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_abstract_implementation2841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BUS_in_bus_implementation2882 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_bus_implementation2884 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_bus_implementation2888 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_bus_implementation2890 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_bus_implementation2894 = new BitSet(new long[]{0x080000000464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_bus_implementation2902 = new BitSet(new long[]{0x080000000464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_bus_implementation2909 = new BitSet(new long[]{0x080000000460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_bus_implementation2922 = new BitSet(new long[]{0x080000000440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_bus_implementation2932 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_virtual_bus_subcomponent_in_bus_implementation2954 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_bus_implementation2975 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_bus_implementation3014 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_bus_implementation3038 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_bus_implementation3048 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_bus_implementation3060 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_bus_implementation3071 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_bus_implementation3075 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_bus_implementation3077 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_bus_implementation3081 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_bus_implementation3088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DATA_in_data_implementation3129 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_data_implementation3131 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_data_implementation3135 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_data_implementation3137 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_data_implementation3141 = new BitSet(new long[]{0x080000001424C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_data_implementation3149 = new BitSet(new long[]{0x080000001424C000L});
    public static final BitSet FOLLOW_implementation_extension_in_data_implementation3155 = new BitSet(new long[]{0x080000001420C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_data_implementation3168 = new BitSet(new long[]{0x080000001400C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_data_implementation3178 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_data_implementation3200 = new BitSet(new long[]{0x080000001000C080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_data_implementation3221 = new BitSet(new long[]{0x080000001000C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_data_implementation3249 = new BitSet(new long[]{0x080000001000C080L});
    public static final BitSet FOLLOW_none_stmt_in_data_implementation3288 = new BitSet(new long[]{0x080000001000C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_data_implementation3312 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_data_implementation3327 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_none_stmt_in_data_implementation3349 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_data_implementation3374 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_data_implementation3386 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_data_implementation3397 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_data_implementation3401 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_data_implementation3403 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_data_implementation3407 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_data_implementation3414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEVICE_in_device_implementation3450 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_device_implementation3452 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_device_implementation3456 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_device_implementation3458 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_device_implementation3462 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_device_implementation3470 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_device_implementation3477 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_device_implementation3490 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_device_implementation3500 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_bus_subcomponent_in_device_implementation3525 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_device_implementation3557 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_device_implementation3601 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_device_implementation3625 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_device_implementation3644 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_device_implementation3666 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_device_implementation3690 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_device_implementation3715 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_device_implementation3747 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_device_implementation3792 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_device_implementation3816 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_device_implementation3826 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_device_implementation3838 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_device_implementation3849 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_device_implementation3853 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_device_implementation3855 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_device_implementation3859 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_device_implementation3866 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMORY_in_memory_implementation3908 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_memory_implementation3910 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_memory_implementation3914 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_memory_implementation3916 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_memory_implementation3920 = new BitSet(new long[]{0x080000001464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_memory_implementation3928 = new BitSet(new long[]{0x080000001464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_memory_implementation3935 = new BitSet(new long[]{0x080000001460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_memory_implementation3950 = new BitSet(new long[]{0x080000001440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_memory_implementation3960 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_memory_subcomponent_in_memory_implementation3982 = new BitSet(new long[]{0x080000001040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_memory_implementation4003 = new BitSet(new long[]{0x080000001040C080L});
    public static final BitSet FOLLOW_bus_subcomponent_in_memory_implementation4024 = new BitSet(new long[]{0x080000001040C080L});
    public static final BitSet FOLLOW_none_stmt_in_memory_implementation4063 = new BitSet(new long[]{0x080000001040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_memory_implementation4087 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_memory_implementation4103 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_none_stmt_in_memory_implementation4125 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_memory_implementation4149 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_memory_implementation4159 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_memory_implementation4171 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_memory_implementation4182 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_memory_implementation4186 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_memory_implementation4188 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_memory_implementation4192 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_memory_implementation4199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESS_in_process_implementation4240 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_process_implementation4242 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_process_implementation4246 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_process_implementation4248 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_process_implementation4252 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_process_implementation4260 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_process_implementation4267 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_process_implementation4282 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_process_implementation4292 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_process_implementation4314 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_process_implementation4335 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_subprogram_group_subcomponent_in_process_implementation4356 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_thread_subcomponent_in_process_implementation4377 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_thread_group_subcomponent_in_process_implementation4401 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_process_implementation4422 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_process_implementation4461 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_process_implementation4485 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_process_implementation4500 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_process_implementation4522 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_process_implementation4546 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_process_implementation4571 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_process_implementation4603 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_process_implementation4648 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_process_implementation4672 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_process_implementation4682 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_process_implementation4694 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_process_implementation4705 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_process_implementation4709 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_process_implementation4711 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_process_implementation4715 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_process_implementation4722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESSOR_in_processor_implementation4758 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_processor_implementation4760 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_processor_implementation4764 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_processor_implementation4766 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_processor_implementation4770 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_processor_implementation4778 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_processor_implementation4785 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_processor_implementation4800 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_processor_implementation4810 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_virtual_processor_subcomponent_in_processor_implementation4832 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_memory_subcomponent_in_processor_implementation4853 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_processor_implementation4874 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_bus_subcomponent_in_processor_implementation4895 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_virtual_bus_subcomponent_in_processor_implementation4916 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_processor_implementation4955 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_processor_implementation4979 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_processor_implementation4994 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_processor_implementation5016 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_processor_implementation5040 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_processor_implementation5065 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_processor_implementation5097 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_processor_implementation5142 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_processor_implementation5166 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_processor_implementation5176 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_processor_implementation5188 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_processor_implementation5199 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_processor_implementation5203 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_processor_implementation5205 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_processor_implementation5209 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_processor_implementation5216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_implementation5252 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_subprogram_implementation5254 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_implementation5258 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_subprogram_implementation5260 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_implementation5264 = new BitSet(new long[]{0x080000003C64C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_subprogram_implementation5272 = new BitSet(new long[]{0x080000003C64C000L});
    public static final BitSet FOLLOW_implementation_extension_in_subprogram_implementation5279 = new BitSet(new long[]{0x080000003C60C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_subprogram_implementation5294 = new BitSet(new long[]{0x080000003C40C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_subprogram_implementation5304 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_subprogram_implementation5326 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_subprogram_implementation5347 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_implementation5386 = new BitSet(new long[]{0x080000003840C000L});
    public static final BitSet FOLLOW_CALLS_in_subprogram_implementation5410 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_subprogram_call_sequence_in_subprogram_implementation5426 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_implementation5451 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_subprogram_implementation5472 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_subprogram_implementation5487 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_implementation5509 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_subprogram_implementation5533 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_subprogram_implementation5558 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_subprogram_implementation5590 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_implementation5635 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_subprogram_implementation5659 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_subprogram_implementation5669 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_subprogram_implementation5681 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_subprogram_implementation5692 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_implementation5696 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_subprogram_implementation5698 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_implementation5702 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_implementation5709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_group_implementation5745 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_subprogram_group_implementation5747 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_subprogram_group_implementation5749 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_implementation5753 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_subprogram_group_implementation5755 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_implementation5759 = new BitSet(new long[]{0x080200001424C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_subprogram_group_implementation5767 = new BitSet(new long[]{0x080200001424C000L});
    public static final BitSet FOLLOW_implementation_extension_in_subprogram_group_implementation5774 = new BitSet(new long[]{0x080200001420C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_subprogram_group_implementation5789 = new BitSet(new long[]{0x080200001400C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_subprogram_group_implementation5799 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_subprogram_group_implementation5821 = new BitSet(new long[]{0x080200001000C080L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_group_implementation5860 = new BitSet(new long[]{0x080200001000C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_subprogram_group_implementation5884 = new BitSet(new long[]{0x01200810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_subprogram_group_implementation5888 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_group_implementation5895 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_subprogram_group_implementation5909 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_subprogram_group_implementation5921 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_subprogram_group_implementation5932 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_implementation5936 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_subprogram_group_implementation5938 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_implementation5942 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_group_implementation5949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SYSTEM_in_system_implementation5985 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_system_implementation5987 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_system_implementation5991 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_system_implementation5993 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_system_implementation5997 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_system_implementation6003 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_system_implementation6010 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_system_implementation6025 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_system_implementation6035 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_system_implementation6057 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_system_implementation6078 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_subprogram_group_subcomponent_in_system_implementation6099 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_process_subcomponent_in_system_implementation6120 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_processor_subcomponent_in_system_implementation6141 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_virtual_processor_subcomponent_in_system_implementation6162 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_memory_subcomponent_in_system_implementation6183 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_device_subcomponent_in_system_implementation6204 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_system_subcomponent_in_system_implementation6225 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_system_implementation6246 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_bus_subcomponent_in_system_implementation6267 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_virtual_bus_subcomponent_in_system_implementation6288 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_system_implementation6327 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_system_implementation6351 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_system_implementation6366 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_system_implementation6388 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_system_implementation6412 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_system_implementation6437 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_system_implementation6469 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_system_implementation6514 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_system_implementation6538 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_system_implementation6548 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_system_implementation6560 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_system_implementation6571 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_system_implementation6575 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_system_implementation6577 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_system_implementation6581 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_system_implementation6588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_thread_implementation6624 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_thread_implementation6626 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_implementation6630 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_thread_implementation6632 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_implementation6636 = new BitSet(new long[]{0x080000003C64C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_thread_implementation6644 = new BitSet(new long[]{0x080000003C64C000L});
    public static final BitSet FOLLOW_implementation_extension_in_thread_implementation6651 = new BitSet(new long[]{0x080000003C60C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_thread_implementation6666 = new BitSet(new long[]{0x080000003C40C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_thread_implementation6676 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_thread_implementation6698 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_thread_implementation6719 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_subprogram_group_subcomponent_in_thread_implementation6740 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_thread_implementation6761 = new BitSet(new long[]{0x080000003840C080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_implementation6800 = new BitSet(new long[]{0x080000003840C000L});
    public static final BitSet FOLLOW_CALLS_in_thread_implementation6824 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_subprogram_call_sequence_in_thread_implementation6840 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_implementation6865 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_thread_implementation6886 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_thread_implementation6901 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_thread_implementation6923 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_thread_implementation6947 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_thread_implementation6972 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_thread_implementation7004 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_implementation7049 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_thread_implementation7073 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_thread_implementation7083 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_thread_implementation7095 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_thread_implementation7106 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_implementation7110 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_thread_implementation7112 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_implementation7116 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_thread_implementation7123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_thread_group_implementation7159 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_thread_group_implementation7161 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_thread_group_implementation7163 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_implementation7167 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_thread_group_implementation7169 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_implementation7173 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_thread_group_implementation7181 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_thread_group_implementation7188 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_thread_group_implementation7203 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_thread_group_implementation7213 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_data_subcomponent_in_thread_group_implementation7235 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_subprogram_subcomponent_in_thread_group_implementation7256 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_subprogram_group_subcomponent_in_thread_group_implementation7277 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_thread_subcomponent_in_thread_group_implementation7298 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_thread_group_subcomponent_in_thread_group_implementation7322 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_thread_group_implementation7343 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_group_implementation7382 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_thread_group_implementation7406 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_thread_group_implementation7415 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_thread_group_implementation7427 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_thread_group_implementation7445 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_thread_group_implementation7470 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_thread_group_implementation7502 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_group_implementation7547 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_thread_group_implementation7571 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_thread_group_implementation7581 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_thread_group_implementation7593 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_thread_group_implementation7604 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_implementation7608 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_thread_group_implementation7610 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_implementation7614 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_thread_group_implementation7621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_virtual_bus_implementation7658 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_virtual_bus_implementation7660 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_virtual_bus_implementation7662 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_implementation7666 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_virtual_bus_implementation7668 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_implementation7672 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_virtual_bus_implementation7680 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_virtual_bus_implementation7687 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_virtual_bus_implementation7702 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_virtual_bus_implementation7712 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_virtual_bus_implementation7737 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_virtual_bus_subcomponent_in_virtual_bus_implementation7769 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_bus_implementation7813 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_virtual_bus_implementation7837 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_virtual_bus_implementation7852 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_bus_implementation7874 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_virtual_bus_implementation7898 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_virtual_bus_implementation7923 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_virtual_bus_implementation7955 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_bus_implementation8001 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_virtual_bus_implementation8025 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_virtual_bus_implementation8035 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_virtual_bus_implementation8047 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_virtual_bus_implementation8058 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_implementation8062 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_virtual_bus_implementation8064 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_implementation8068 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_virtual_bus_implementation8075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_virtual_processor_implementation8111 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_virtual_processor_implementation8113 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_virtual_processor_implementation8115 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_implementation8119 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_virtual_processor_implementation8121 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_implementation8125 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_component_implementation_realization_in_virtual_processor_implementation8133 = new BitSet(new long[]{0x080000003464C000L});
    public static final BitSet FOLLOW_implementation_extension_in_virtual_processor_implementation8140 = new BitSet(new long[]{0x080000003460C000L});
    public static final BitSet FOLLOW_prototypes_for_implementation_in_virtual_processor_implementation8155 = new BitSet(new long[]{0x080000003440C000L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_virtual_processor_implementation8165 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_virtual_processor_subcomponent_in_virtual_processor_implementation8182 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_abstract_subcomponent_in_virtual_processor_implementation8203 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_virtual_bus_subcomponent_in_virtual_processor_implementation8224 = new BitSet(new long[]{0x080000003040C080L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_processor_implementation8249 = new BitSet(new long[]{0x080000003040C000L});
    public static final BitSet FOLLOW_CONNECTIONS_in_virtual_processor_implementation8267 = new BitSet(new long[]{0x01220810C0000880L,0x0000000040000000L});
    public static final BitSet FOLLOW_connections_in_virtual_processor_implementation8281 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_processor_implementation8295 = new BitSet(new long[]{0x080000002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_virtual_processor_implementation8314 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_flow_implementation_in_virtual_processor_implementation8339 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_end_to_end_flow_implementation_in_virtual_processor_implementation8371 = new BitSet(new long[]{0x080000000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_processor_implementation8416 = new BitSet(new long[]{0x080000000040C000L});
    public static final BitSet FOLLOW_modes_for_implementations_in_virtual_processor_implementation8440 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_virtual_processor_implementation8450 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_virtual_processor_implementation8462 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_virtual_processor_implementation8473 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_implementation8477 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_virtual_processor_implementation8479 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_implementation8483 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_virtual_processor_implementation8490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_implementation_reference_prototype_bindings8623 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_implementation_reference_prototype_bindings8627 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_implementation_reference_prototype_bindings8644 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_implementation_reference_prototype_bindings8648 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_implementation_reference_prototype_bindings8674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_subcomponent_prototype_bindings8702 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_subcomponent_prototype_bindings8706 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_subcomponent_prototype_bindings8723 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_subcomponent_prototype_bindings8727 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_subcomponent_prototype_bindings8753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURLY_in_subcomponent_properties8780 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_contained_property_association_in_subcomponent_properties8797 = new BitSet(new long[]{0x0002020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_subcomponent_properties8827 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_subcomponent_array_element_references8858 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_subcomponent_array_element_references8862 = new BitSet(new long[]{0x0000000000180020L});
    public static final BitSet FOLLOW_implementation_reference_prototype_bindings_in_subcomponent_array_element_references8883 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_subcomponent_array_element_references8906 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_subcomponent_array_element_references8910 = new BitSet(new long[]{0x0000000000180020L});
    public static final BitSet FOLLOW_implementation_reference_prototype_bindings_in_subcomponent_array_element_references8931 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_subcomponent_array_element_references8960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_data_subcomponent9002 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_data_subcomponent9004 = new BitSet(new long[]{0x0000080080000000L});
    public static final BitSet FOLLOW_REFINED_in_data_subcomponent9008 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_data_subcomponent9010 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_DATA_in_data_subcomponent9022 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_data_subcomponent9033 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_data_subcomponent9042 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_data_subcomponent9064 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_data_subcomponent9073 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_data_subcomponent9087 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_data_subcomponent9098 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_data_subcomponent9106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_subcomponent9146 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_subprogram_subcomponent9148 = new BitSet(new long[]{0x0000081000000000L});
    public static final BitSet FOLLOW_REFINED_in_subprogram_subcomponent9152 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_subprogram_subcomponent9154 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_subcomponent9166 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_subprogram_subcomponent9177 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_subprogram_subcomponent9188 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_subprogram_subcomponent9216 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_subprogram_subcomponent9227 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_subprogram_subcomponent9244 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_subprogram_subcomponent9256 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_subcomponent9264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_subcomponent9305 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_subprogram_group_subcomponent9307 = new BitSet(new long[]{0x0000081000000000L});
    public static final BitSet FOLLOW_REFINED_in_subprogram_group_subcomponent9311 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_subprogram_group_subcomponent9313 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_group_subcomponent9325 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_subprogram_group_subcomponent9327 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_subprogram_group_subcomponent9337 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_subprogram_group_subcomponent9348 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_subprogram_group_subcomponent9375 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_subprogram_group_subcomponent9386 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_subprogram_group_subcomponent9403 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_subprogram_group_subcomponent9415 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_group_subcomponent9423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_thread_subcomponent9464 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_thread_subcomponent9466 = new BitSet(new long[]{0x0000084000000000L});
    public static final BitSet FOLLOW_REFINED_in_thread_subcomponent9471 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_thread_subcomponent9473 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_THREAD_in_thread_subcomponent9484 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_thread_subcomponent9495 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_thread_subcomponent9506 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_thread_subcomponent9533 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_thread_subcomponent9544 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_thread_subcomponent9561 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_thread_subcomponent9573 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_thread_subcomponent9581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_subcomponent9622 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_thread_group_subcomponent9624 = new BitSet(new long[]{0x0000084000000000L});
    public static final BitSet FOLLOW_REFINED_in_thread_group_subcomponent9628 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_thread_group_subcomponent9630 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_THREAD_in_thread_group_subcomponent9643 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_thread_group_subcomponent9645 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_thread_group_subcomponent9656 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_thread_group_subcomponent9667 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_thread_group_subcomponent9694 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_thread_group_subcomponent9705 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_thread_group_subcomponent9722 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_thread_group_subcomponent9734 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_thread_group_subcomponent9742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_process_subcomponent9782 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_process_subcomponent9784 = new BitSet(new long[]{0x0000080400000000L});
    public static final BitSet FOLLOW_REFINED_in_process_subcomponent9788 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_process_subcomponent9790 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_PROCESS_in_process_subcomponent9802 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_process_subcomponent9813 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_process_subcomponent9824 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_process_subcomponent9851 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_process_subcomponent9862 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_process_subcomponent9879 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_process_subcomponent9891 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_process_subcomponent9899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_processor_subcomponent9939 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_processor_subcomponent9941 = new BitSet(new long[]{0x0000080800000000L});
    public static final BitSet FOLLOW_REFINED_in_processor_subcomponent9945 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_processor_subcomponent9947 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_processor_subcomponent9960 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_processor_subcomponent9971 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_processor_subcomponent9982 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_processor_subcomponent10009 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_processor_subcomponent10020 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_processor_subcomponent10037 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_processor_subcomponent10049 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_processor_subcomponent10057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_subcomponent10097 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_virtual_processor_subcomponent10099 = new BitSet(new long[]{0x0000088000000000L});
    public static final BitSet FOLLOW_REFINED_in_virtual_processor_subcomponent10103 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_virtual_processor_subcomponent10105 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_VIRTUAL_in_virtual_processor_subcomponent10117 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_virtual_processor_subcomponent10119 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_virtual_processor_subcomponent10130 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_virtual_processor_subcomponent10141 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_virtual_processor_subcomponent10168 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_virtual_processor_subcomponent10179 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_virtual_processor_subcomponent10196 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_virtual_processor_subcomponent10208 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_virtual_processor_subcomponent10216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_memory_subcomponent10256 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_memory_subcomponent10258 = new BitSet(new long[]{0x0000080200000000L});
    public static final BitSet FOLLOW_REFINED_in_memory_subcomponent10262 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_memory_subcomponent10264 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_MEMORY_in_memory_subcomponent10276 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_memory_subcomponent10287 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_memory_subcomponent10298 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_memory_subcomponent10325 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_memory_subcomponent10336 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_memory_subcomponent10353 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_memory_subcomponent10365 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_memory_subcomponent10373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_bus_subcomponent10413 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_bus_subcomponent10415 = new BitSet(new long[]{0x0000080040000000L});
    public static final BitSet FOLLOW_REFINED_in_bus_subcomponent10419 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_bus_subcomponent10421 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_bus_subcomponent10433 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_bus_subcomponent10444 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_bus_subcomponent10455 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_bus_subcomponent10482 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_bus_subcomponent10493 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_bus_subcomponent10510 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_bus_subcomponent10522 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_bus_subcomponent10530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_subcomponent10570 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_virtual_bus_subcomponent10572 = new BitSet(new long[]{0x0000088000000000L});
    public static final BitSet FOLLOW_REFINED_in_virtual_bus_subcomponent10576 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_virtual_bus_subcomponent10578 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_VIRTUAL_in_virtual_bus_subcomponent10590 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_virtual_bus_subcomponent10592 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_virtual_bus_subcomponent10603 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_virtual_bus_subcomponent10614 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_virtual_bus_subcomponent10641 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_virtual_bus_subcomponent10652 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_virtual_bus_subcomponent10669 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_virtual_bus_subcomponent10681 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_virtual_bus_subcomponent10689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_device_subcomponent10730 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_device_subcomponent10732 = new BitSet(new long[]{0x0000080100000000L});
    public static final BitSet FOLLOW_REFINED_in_device_subcomponent10736 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_device_subcomponent10738 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_DEVICE_in_device_subcomponent10750 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_device_subcomponent10761 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_device_subcomponent10772 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_device_subcomponent10799 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_device_subcomponent10810 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_device_subcomponent10827 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_device_subcomponent10839 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_device_subcomponent10847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_system_subcomponent10888 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_system_subcomponent10890 = new BitSet(new long[]{0x0000082000000000L});
    public static final BitSet FOLLOW_REFINED_in_system_subcomponent10894 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_system_subcomponent10896 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_SYSTEM_in_system_subcomponent10908 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_system_subcomponent10919 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_system_subcomponent10930 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_system_subcomponent10957 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_system_subcomponent10968 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_system_subcomponent10985 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_system_subcomponent10997 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_system_subcomponent11005 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_abstract_subcomponent11045 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_abstract_subcomponent11047 = new BitSet(new long[]{0x0000080000800000L});
    public static final BitSet FOLLOW_REFINED_in_abstract_subcomponent11052 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_abstract_subcomponent11054 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_ABSTRACT_in_abstract_subcomponent11066 = new BitSet(new long[]{0x0000A100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_abstract_subcomponent11077 = new BitSet(new long[]{0x0000A10000080040L});
    public static final BitSet FOLLOW_subcomponent_prototype_bindings_in_abstract_subcomponent11088 = new BitSet(new long[]{0x0000A10000000040L});
    public static final BitSet FOLLOW_array_dimensions_in_abstract_subcomponent11115 = new BitSet(new long[]{0x0000810000080040L});
    public static final BitSet FOLLOW_subcomponent_array_element_references_in_abstract_subcomponent11126 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_subcomponent_properties_in_abstract_subcomponent11143 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_component_in_modes_in_abstract_subcomponent11155 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_abstract_subcomponent11163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_prototype11247 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_prototype11249 = new BitSet(new long[]{0x000188FFC0800800L});
    public static final BitSet FOLLOW_REFINED_in_prototype11254 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_prototype11256 = new BitSet(new long[]{0x000180FFC0800800L});
    public static final BitSet FOLLOW_component_category_in_prototype11278 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_prototype11297 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_LBRACK_in_prototype11325 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_RBRACK_in_prototype11327 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_FEATURE_in_prototype11356 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_prototype11358 = new BitSet(new long[]{0x00000100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_prototype11373 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_IN_in_prototype11412 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_OUT_in_prototype11440 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_FEATURE_in_prototype11471 = new BitSet(new long[]{0x00000100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_prototype11490 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_prototype11521 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_prototype11531 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_prototype11548 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_prototype11558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONE_in_none_stmt11647 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_none_stmt11649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_abstract_feature11686 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_abstract_feature11688 = new BitSet(new long[]{0x0001880000000800L});
    public static final BitSet FOLLOW_REFINED_in_abstract_feature11693 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_abstract_feature11695 = new BitSet(new long[]{0x0001800000000800L});
    public static final BitSet FOLLOW_IN_in_abstract_feature11717 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_OUT_in_abstract_feature11739 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_FEATURE_in_abstract_feature11762 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_abstract_feature11775 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_abstract_feature11793 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_abstract_feature11809 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_abstract_feature11817 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_abstract_feature11835 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_abstract_feature11847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_feature_group11891 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_feature_group11893 = new BitSet(new long[]{0x0001880000000800L});
    public static final BitSet FOLLOW_REFINED_in_feature_group11897 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_feature_group11899 = new BitSet(new long[]{0x0001800000000800L});
    public static final BitSet FOLLOW_IN_in_feature_group11918 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_OUT_in_feature_group11937 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_FEATURE_in_feature_group11957 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_feature_group11959 = new BitSet(new long[]{0x00042100000000C0L});
    public static final BitSet FOLLOW_INVERSE_in_feature_group11971 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_OF_in_feature_group11973 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_feature_group11992 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_feature_group12013 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_feature_group12029 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_feature_group12039 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_feature_group12057 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_feature_group12066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_category_in_component_prototype_actual12130 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_component_prototype_actual12147 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_LPAREN_in_component_prototype_actual12157 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_component_prototype_actual12161 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_prototype_binding_in_component_prototype_actual12188 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_RPAREN_in_component_prototype_actual12225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_component_prototype_actual_list12282 = new BitSet(new long[]{0x000000FFC0800000L});
    public static final BitSet FOLLOW_component_prototype_actual_in_component_prototype_actual_list12290 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_component_prototype_actual_list12303 = new BitSet(new long[]{0x000000FFC0800000L});
    public static final BitSet FOLLOW_component_prototype_actual_in_component_prototype_actual_list12309 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_component_prototype_actual_list12320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FEATURE_in_feature_group_type_prototype_actual12347 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_feature_group_type_prototype_actual12349 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_feature_group_type_prototype_actual12363 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_LPAREN_in_feature_group_type_prototype_actual12381 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_feature_group_type_prototype_actual12385 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_prototype_binding_in_feature_group_type_prototype_actual12412 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_RPAREN_in_feature_group_type_prototype_actual12449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_feature_prototype_actual12522 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_OUT_in_feature_prototype_actual12550 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_FEATURE_in_feature_prototype_actual12581 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_prototype_actual12591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_feature_prototype_actual12623 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_OUT_in_feature_prototype_actual12625 = new BitSet(new long[]{0x0010000080000000L});
    public static final BitSet FOLLOW_OUT_in_feature_prototype_actual12653 = new BitSet(new long[]{0x0010000080000000L});
    public static final BitSet FOLLOW_IN_in_feature_prototype_actual12681 = new BitSet(new long[]{0x0010000080000000L});
    public static final BitSet FOLLOW_EVENT_in_feature_prototype_actual12720 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_DATA_in_feature_prototype_actual12722 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_EVENT_in_feature_prototype_actual12750 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_DATA_in_feature_prototype_actual12778 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_PORT_in_feature_prototype_actual12809 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_classifier_reference_in_feature_prototype_actual12821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REQUIRES_in_feature_prototype_actual12878 = new BitSet(new long[]{0x00000010C0000000L});
    public static final BitSet FOLLOW_PROVIDES_in_feature_prototype_actual12906 = new BitSet(new long[]{0x00000010C0000000L});
    public static final BitSet FOLLOW_BUS_in_feature_prototype_actual12945 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_DATA_in_feature_prototype_actual12973 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_feature_prototype_actual13001 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_feature_prototype_actual13003 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_feature_prototype_actual13031 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_feature_prototype_actual13060 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_feature_prototype_actual13064 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_prototype_binding13131 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_prototype_binding13133 = new BitSet(new long[]{0x00C180FFC0880800L});
    public static final BitSet FOLLOW_feature_group_type_prototype_actual_in_prototype_binding13143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_prototype_actual_list_in_prototype_binding13165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_prototype_actual_in_prototype_binding13183 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_feature_prototype_actual_in_prototype_binding13202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACK_in_array_dimension_body13307 = new BitSet(new long[]{0x0000400000000080L,0x0000000000020000L});
    public static final BitSet FOLLOW_integer_literal_in_array_dimension_body13327 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_unique_property_identifier_in_array_dimension_body13357 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_RBRACK_in_array_dimension_body13391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_dimension_body_in_array_dimension13434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_array_dimension_body_in_array_dimensions13471 = new BitSet(new long[]{0x0000200000000002L});
    public static final BitSet FOLLOW_FEATURE_in_feature_group_type13503 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_feature_group_type13505 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_type13509 = new BitSet(new long[]{0x0C0400000024C000L});
    public static final BitSet FOLLOW_EXTENDS_in_feature_group_type13519 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_unique_type_name_in_feature_group_type13525 = new BitSet(new long[]{0x0C0400000028C000L});
    public static final BitSet FOLLOW_LPAREN_in_feature_group_type13535 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_feature_group_type13539 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_feature_group_type13555 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_feature_group_type13559 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_feature_group_type13581 = new BitSet(new long[]{0x0C0400000020C000L});
    public static final BitSet FOLLOW_PROTOTYPES_in_feature_group_type13595 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_feature_group_type13604 = new BitSet(new long[]{0x0C0400000000C000L});
    public static final BitSet FOLLOW_prototype_in_feature_group_type13628 = new BitSet(new long[]{0x0C0600000000C080L});
    public static final BitSet FOLLOW_FEATURES_in_feature_group_type13658 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parameter_in_feature_group_type13672 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_abstract_feature_in_feature_group_type13703 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_bus_access_in_feature_group_type13729 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_data_access_in_feature_group_type13753 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_subprogram_access_in_feature_group_type13777 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_feature_group_type13801 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_feature_group_in_feature_group_type13825 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_data_port_in_feature_group_type13849 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_event_data_port_in_feature_group_type13873 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_event_port_in_feature_group_type13897 = new BitSet(new long[]{0x080400000000C080L});
    public static final BitSet FOLLOW_INVERSE_in_feature_group_type13924 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_OF_in_feature_group_type13926 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_feature_group_type13930 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_PROPERTIES_in_feature_group_type13942 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_feature_group_type13948 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_property_association_in_feature_group_type13973 = new BitSet(new long[]{0x0800000000008080L});
    public static final BitSet FOLLOW_annex_subclause_in_feature_group_type14010 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_feature_group_type14021 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_type14025 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_feature_group_type14032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_type_extension14068 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_unique_type_name_in_type_extension14074 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_LPAREN_in_type_extension14085 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_type_extension14089 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_type_extension14100 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_prototype_binding_in_type_extension14104 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_type_extension14121 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTOTYPES_in_prototypes_for_types14140 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_prototypes_for_types14145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_prototype_in_prototypes_for_types14166 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_REQUIRES_in_modes_for_types14207 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_MODES_in_modes_for_types14209 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_mode_in_modes_for_types14226 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_none_stmt_in_modes_for_types14263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MODES_in_modes_for_types14281 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_mode_in_modes_for_types14298 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_mode_transition_in_modes_for_types14329 = new BitSet(new long[]{0x0002000000000082L});
    public static final BitSet FOLLOW_none_stmt_in_modes_for_types14367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_abstract_type14399 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_abstract_type14403 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_abstract_type14416 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_abstract_type14430 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_abstract_type14440 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_abstract_type14446 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_feature_group_in_abstract_type14475 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_abstract_type14501 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_abstract_type14531 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_abstract_type14555 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_abstract_type14579 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_bus_access_in_abstract_type14607 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_access_in_abstract_type14631 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_abstract_type14655 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_abstract_type14679 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_abstract_type14710 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_abstract_type14719 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_abstract_type14737 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_abstract_type14761 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_abstract_type14770 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_abstract_type14782 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_abstract_type14793 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_abstract_type14797 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_abstract_type14804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_group_type14841 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_subprogram_group_type14843 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_type14847 = new BitSet(new long[]{0x0C0000000024C000L});
    public static final BitSet FOLLOW_type_extension_in_subprogram_group_type14855 = new BitSet(new long[]{0x0C0000000020C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_subprogram_group_type14869 = new BitSet(new long[]{0x0C0000000000C000L});
    public static final BitSet FOLLOW_FEATURES_in_subprogram_group_type14878 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_subprogram_access_in_subprogram_group_type14894 = new BitSet(new long[]{0x080000000000C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_subprogram_group_type14918 = new BitSet(new long[]{0x080000000000C080L});
    public static final BitSet FOLLOW_abstract_feature_in_subprogram_group_type14944 = new BitSet(new long[]{0x080000000000C080L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_group_type14975 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_subprogram_group_type14994 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_subprogram_group_type15007 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_END_in_subprogram_group_type15018 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_type15022 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_group_type15030 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_virtual_bus_type15066 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_virtual_bus_type15068 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_type15072 = new BitSet(new long[]{0x0C4200000064C000L});
    public static final BitSet FOLLOW_type_extension_in_virtual_bus_type15080 = new BitSet(new long[]{0x0C4200000060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_virtual_bus_type15094 = new BitSet(new long[]{0x0C4200000040C000L});
    public static final BitSet FOLLOW_FEATURES_in_virtual_bus_type15103 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_bus_type15107 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_modes_for_types_in_virtual_bus_type15121 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_virtual_bus_type15131 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_virtual_bus_type15144 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_END_in_virtual_bus_type15155 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_bus_type15159 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_virtual_bus_type15166 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_virtual_processor_type15203 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_virtual_processor_type15205 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_type15209 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_virtual_processor_type15217 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_virtual_processor_type15231 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_virtual_processor_type15240 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_processor_type15250 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_subprogram_access_in_virtual_processor_type15277 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_virtual_processor_type15301 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_virtual_processor_type15325 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_virtual_processor_type15349 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_virtual_processor_type15373 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_virtual_processor_type15397 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_virtual_processor_type15424 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_virtual_processor_type15457 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_virtual_processor_type15463 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_virtual_processor_type15481 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_virtual_processor_type15505 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_virtual_processor_type15515 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_virtual_processor_type15528 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_virtual_processor_type15539 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_virtual_processor_type15543 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_virtual_processor_type15550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_thread_type15586 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_type15590 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_thread_type15598 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_thread_type15612 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_thread_type15621 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_type15627 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_data_access_in_thread_type15652 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_thread_type15676 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_thread_type15700 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_thread_type15724 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_thread_type15748 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_thread_type15772 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_thread_type15796 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_thread_type15822 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_thread_type15856 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_type15862 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_thread_type15880 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_thread_type15904 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_thread_type15914 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_thread_type15927 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_thread_type15938 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_type15942 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_thread_type15949 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_thread_group_type15986 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_thread_group_type15988 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_type15992 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_thread_group_type16000 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_thread_group_type16014 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_thread_group_type16023 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_group_type16029 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_data_access_in_thread_group_type16054 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_thread_group_type16078 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_thread_group_type16102 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_thread_group_type16126 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_thread_group_type16150 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_thread_group_type16174 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_thread_group_type16198 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_thread_group_type16224 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_thread_group_type16258 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_thread_group_type16264 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_thread_group_type16282 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_thread_group_type16306 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_thread_group_type16316 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_thread_group_type16329 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_thread_group_type16340 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_thread_group_type16344 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_thread_group_type16351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESS_in_process_type16387 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_process_type16391 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_process_type16399 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_process_type16413 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_process_type16422 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_process_type16428 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_data_access_in_process_type16453 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_process_type16477 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_process_type16501 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_process_type16525 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_process_type16549 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_process_type16573 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_process_type16597 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_process_type16623 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_process_type16657 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_process_type16663 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_process_type16681 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_process_type16705 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_process_type16715 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_process_type16728 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_process_type16739 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_process_type16743 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_process_type16751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SYSTEM_in_system_type16787 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_system_type16791 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_system_type16799 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_system_type16813 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_system_type16823 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_system_type16829 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_bus_access_in_system_type16852 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_access_in_system_type16876 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_system_type16900 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_system_type16924 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_system_type16948 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_system_type16972 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_system_type16996 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_system_type17020 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_system_type17046 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_system_type17080 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_system_type17086 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_system_type17104 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_system_type17125 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_system_type17136 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_system_type17149 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_system_type17160 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_system_type17164 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_system_type17172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_type17210 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_type17214 = new BitSet(new long[]{0x0C4200000064C000L});
    public static final BitSet FOLLOW_type_extension_in_subprogram_type17222 = new BitSet(new long[]{0x0C4200000060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_subprogram_type17236 = new BitSet(new long[]{0x0C4200000040C000L});
    public static final BitSet FOLLOW_FEATURES_in_subprogram_type17245 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subprogram_access_in_subprogram_type17260 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_subprogram_type17284 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_event_data_port_in_subprogram_type17308 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_event_port_in_subprogram_type17332 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_feature_group_in_subprogram_type17356 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_data_access_in_subprogram_type17380 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_parameter_in_subprogram_type17404 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_subprogram_type17431 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_none_stmt_in_subprogram_type17463 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_modes_for_types_in_subprogram_type17484 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_subprogram_type17494 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_subprogram_type17507 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_END_in_subprogram_type17518 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_type17522 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_type17530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DATA_in_data_type17566 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_data_type17570 = new BitSet(new long[]{0x0C0200000024C000L});
    public static final BitSet FOLLOW_type_extension_in_data_type17578 = new BitSet(new long[]{0x0C0200000020C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_data_type17592 = new BitSet(new long[]{0x0C0200000000C000L});
    public static final BitSet FOLLOW_FEATURES_in_data_type17601 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subprogram_access_in_data_type17616 = new BitSet(new long[]{0x080000000000C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_data_type17640 = new BitSet(new long[]{0x080000000000C080L});
    public static final BitSet FOLLOW_abstract_feature_in_data_type17666 = new BitSet(new long[]{0x080000000000C080L});
    public static final BitSet FOLLOW_none_stmt_in_data_type17697 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_data_type17715 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_data_type17728 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_END_in_data_type17739 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_data_type17743 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_data_type17751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESSOR_in_processor_type17788 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_processor_type17792 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_processor_type17800 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_processor_type17814 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_processor_type17824 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_processor_type17830 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_bus_access_in_processor_type17853 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_processor_type17877 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_processor_type17901 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_processor_type17925 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_processor_type17949 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_processor_type17973 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_processor_type17997 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_processor_type18023 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_FLOWS_in_processor_type18057 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_processor_type18063 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_processor_type18081 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_processor_type18106 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_processor_type18116 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_processor_type18129 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_processor_type18140 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_processor_type18144 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_processor_type18152 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMORY_in_memory_type18188 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_memory_type18192 = new BitSet(new long[]{0x0C4200000064C000L});
    public static final BitSet FOLLOW_type_extension_in_memory_type18200 = new BitSet(new long[]{0x0C4200000060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_memory_type18214 = new BitSet(new long[]{0x0C4200000040C000L});
    public static final BitSet FOLLOW_FEATURES_in_memory_type18224 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_memory_type18230 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_bus_access_in_memory_type18253 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_feature_group_in_memory_type18277 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_memory_type18302 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_memory_type18336 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_memory_type18346 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_memory_type18359 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_memory_type18370 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_memory_type18374 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_memory_type18382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BUS_in_bus_type18419 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_bus_type18423 = new BitSet(new long[]{0x0C4200000064C000L});
    public static final BitSet FOLLOW_type_extension_in_bus_type18431 = new BitSet(new long[]{0x0C4200000060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_bus_type18445 = new BitSet(new long[]{0x0C4200000040C000L});
    public static final BitSet FOLLOW_FEATURES_in_bus_type18455 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_bus_type18464 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_bus_access_in_bus_type18487 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_feature_group_in_bus_type18512 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_bus_type18538 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_bus_type18575 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_bus_type18585 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_bus_type18598 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_bus_type18609 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_bus_type18613 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_bus_type18621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEVICE_in_device_type18658 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_device_type18662 = new BitSet(new long[]{0x0C4200002064C000L});
    public static final BitSet FOLLOW_type_extension_in_device_type18670 = new BitSet(new long[]{0x0C4200002060C000L});
    public static final BitSet FOLLOW_prototypes_for_types_in_device_type18684 = new BitSet(new long[]{0x0C4200002040C000L});
    public static final BitSet FOLLOW_FEATURES_in_device_type18694 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_bus_access_in_device_type18708 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_access_in_device_type18732 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_subprogram_group_access_in_device_type18756 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_feature_group_in_device_type18780 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_data_port_in_device_type18804 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_data_port_in_device_type18828 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_event_port_in_device_type18852 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_abstract_feature_in_device_type18878 = new BitSet(new long[]{0x084200002040C080L});
    public static final BitSet FOLLOW_none_stmt_in_device_type18910 = new BitSet(new long[]{0x084200002040C000L});
    public static final BitSet FOLLOW_FLOWS_in_device_type18928 = new BitSet(new long[]{0x0002000000000080L});
    public static final BitSet FOLLOW_none_stmt_in_device_type18934 = new BitSet(new long[]{0x084200000040C000L});
    public static final BitSet FOLLOW_flow_spec_in_device_type18952 = new BitSet(new long[]{0x084200000040C080L});
    public static final BitSet FOLLOW_modes_for_types_in_device_type18977 = new BitSet(new long[]{0x080000000000C000L});
    public static final BitSet FOLLOW_properties_for_classifiers_in_device_type18987 = new BitSet(new long[]{0x0800000000008000L});
    public static final BitSet FOLLOW_annex_subclause_in_device_type19000 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_device_type19011 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_device_type19015 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_device_type19023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_unique_type_name19414 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_unique_type_name19416 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unique_type_name19439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_unique_impl_name19473 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_unique_impl_name19475 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unique_impl_name19503 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_unique_impl_name19505 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unique_impl_name19509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_classifier_reference19569 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_classifier_reference19571 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_classifier_reference19594 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_DOT_in_classifier_reference19606 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_classifier_reference19610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ANNEX_in_annex_library20696 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_annex_library20700 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_ANNEX_TEXT_in_annex_library20711 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_annex_library20719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ANNEX_in_annex_subclause20743 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_annex_subclause20747 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_ANNEX_TEXT_in_annex_subclause20758 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_annex_subclause20765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROPERTY_in_property_set20869 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_SET_in_property_set20871 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_property_set20875 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_IS_in_property_set20877 = new BitSet(new long[]{0x0000000000008090L});
    public static final BitSet FOLLOW_WITH_in_property_set20885 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_property_set20893 = new BitSet(new long[]{0x00000000000000E0L});
    public static final BitSet FOLLOW_COMMA_in_property_set20904 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_property_set20908 = new BitSet(new long[]{0x00000000000000E0L});
    public static final BitSet FOLLOW_SEMI_in_property_set20931 = new BitSet(new long[]{0x0000000000008090L});
    public static final BitSet FOLLOW_property_type_declaration_in_property_set20944 = new BitSet(new long[]{0x0000000000008080L});
    public static final BitSet FOLLOW_property_definition_declaration_in_property_set20959 = new BitSet(new long[]{0x0000000000008080L});
    public static final BitSet FOLLOW_property_constant_in_property_set20974 = new BitSet(new long[]{0x0000000000008080L});
    public static final BitSet FOLLOW_END_in_property_set20986 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_property_set20990 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_property_set20992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_definition_declaration21029 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_property_definition_declaration21031 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_INHERIT_in_property_definition_declaration21036 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_LIST_in_property_definition_declaration21059 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_OF_in_property_definition_declaration21061 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_unique_property_type_identifier_in_property_definition_declaration21076 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_property_type_in_property_definition_declaration21092 = new BitSet(new long[]{0x0200000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_ASSIGN_in_property_definition_declaration21108 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_property_definition_declaration21116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_APPLIES_in_property_definition_declaration21134 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_property_definition_declaration21136 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_property_definition_declaration21138 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_property_owner_in_property_definition_declaration21147 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_property_definition_declaration21162 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_property_owner_in_property_definition_declaration21166 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_ALL_in_property_definition_declaration21194 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_property_definition_declaration21214 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_property_definition_declaration21216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unique_impl_name_in_property_owner21254 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualified_meta_model_identifier_in_property_owner21267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unique_type_name_in_property_owner21282 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_type_declaration21322 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_property_type_declaration21324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_TYPE_in_property_type_declaration21326 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_property_type_in_property_type_declaration21331 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_property_type_declaration21338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_type_in_property_type21495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_string_type_in_property_type21510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumeration_type_in_property_type21527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_units_type_in_property_type21541 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_type_in_property_type21554 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_type_in_property_type21568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_range_type_in_property_type21582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classifier_type_in_property_type21595 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_reference_type_in_property_type21608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_record_type_in_property_type21621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RECORD_in_record_type21652 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_record_type21654 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_record_field_in_record_type21660 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_record_field_in_record_type21673 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_RPAREN_in_record_type21686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_record_field21709 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_record_field21711 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_LIST_in_record_field21719 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_OF_in_record_field21721 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_property_type_in_record_field21735 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_IDENT_in_record_field21749 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_record_field21751 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_record_field21769 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_record_field21784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REFERENCE_in_reference_type21810 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_LPAREN_in_reference_type21819 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_qualified_meta_model_identifier_in_reference_type21825 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_reference_type21834 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_qualified_meta_model_identifier_in_reference_type21840 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_reference_type21853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_boolean_type_in_unnamed_property_type21890 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_string_type_in_unnamed_property_type21904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_enumeration_type_in_unnamed_property_type21915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_units_type_in_unnamed_property_type21926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_real_type_in_unnamed_property_type21937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_integer_type_in_unnamed_property_type21948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_range_type_in_unnamed_property_type21960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_classifier_type_in_unnamed_property_type21971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_unnamed_boolean_type22008 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_boolean_type22046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_string_type22082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_unnamed_string_type22122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_enumeration_type_in_enumeration_type22162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENUMERATION_in_unnamed_enumeration_type22189 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_unnamed_enumeration_type22192 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unnamed_enumeration_type22199 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_unnamed_enumeration_type22210 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unnamed_enumeration_type22214 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_unnamed_enumeration_type22230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNITS_in_units_type22263 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_units_list_in_units_type22277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNITS_in_unnamed_units_type22301 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_units_list_in_unnamed_units_type22303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_units_list22330 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_units_list22339 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_units_list22347 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_units_list22352 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_units_list22361 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_units_list22367 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_STAR_in_units_list22372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_number_value_in_units_list22378 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_units_list22393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_real_type_in_real_type22420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REAL_in_unnamed_real_type22456 = new BitSet(new long[]{0x0000000000000082L,0x0000000000036200L});
    public static final BitSet FOLLOW_real_range_in_unnamed_real_type22485 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_UNITS_in_unnamed_real_type22507 = new BitSet(new long[]{0x0000000000080080L});
    public static final BitSet FOLLOW_unique_property_type_identifier_in_unnamed_real_type22522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_units_list_in_unnamed_real_type22564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_integer_type_in_integer_type22607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_unnamed_integer_type22640 = new BitSet(new long[]{0x0000000000000082L,0x0000000000036200L});
    public static final BitSet FOLLOW_integer_range_in_unnamed_integer_type22652 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_UNITS_in_unnamed_integer_type22666 = new BitSet(new long[]{0x0000000000080080L});
    public static final BitSet FOLLOW_unique_property_type_identifier_in_unnamed_integer_type22677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_units_list_in_unnamed_integer_type22709 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlreal_in_real_range22752 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_PLUS_in_real_range22768 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_MINUS_in_real_range22782 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_property_name_constant_reference_in_real_range22802 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_DOTDOT_in_real_range22826 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_signed_aadlreal_in_real_range22841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_real_range22857 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_MINUS_in_real_range22871 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_property_name_constant_reference_in_real_range22891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_integer_range22936 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_PLUS_in_integer_range22960 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_MINUS_in_integer_range22976 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_property_name_constant_reference_in_integer_range22998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_DOTDOT_in_integer_range23017 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_integer_range23032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_integer_range23056 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_MINUS_in_integer_range23072 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_property_name_constant_reference_in_integer_range23094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_signed_aadlreal23131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000016000L});
    public static final BitSet FOLLOW_MINUS_in_signed_aadlreal23141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000016000L});
    public static final BitSet FOLLOW_real_literal_in_signed_aadlreal23162 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_IDENT_in_signed_aadlreal23190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_signed_aadlinteger23294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_MINUS_in_signed_aadlinteger23306 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_integer_literal_in_signed_aadlinteger23331 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_IDENT_in_signed_aadlinteger23359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_signed_aadlnumeric23445 = new BitSet(new long[]{0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_MINUS_in_signed_aadlnumeric23455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_REAL_LIT_in_signed_aadlnumeric23475 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_INTEGER_LIT_in_signed_aadlnumeric23496 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_IDENT_in_signed_aadlnumeric23532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REAL_LIT_in_number_value23573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LIT_in_number_value23593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlnumeric_in_signed_aadlnumeric_or_signed_constant23681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_signed_aadlnumeric_or_signed_constant23698 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_MINUS_in_signed_aadlnumeric_or_signed_constant23710 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_property_name_constant_reference_in_signed_aadlnumeric_or_signed_constant23729 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_in_unnamed_range_type23763 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_OF_in_unnamed_range_type23765 = new BitSet(new long[]{0x0000000000000080L,0x0000000000001800L});
    public static final BitSet FOLLOW_unnamed_real_type_in_unnamed_range_type23775 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_integer_type_in_unnamed_range_type23789 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unique_property_type_identifier_in_unnamed_range_type23803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_range_type_in_range_type23841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASSIFIER_in_unnamed_classifier_type23895 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_LPAREN_in_unnamed_classifier_type23903 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_qualified_meta_model_identifier_in_unnamed_classifier_type23907 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_unnamed_classifier_type23916 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_qualified_meta_model_identifier_in_unnamed_classifier_type23920 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_unnamed_classifier_type23934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LCURLY_in_qualified_meta_model_identifier23961 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_qualified_meta_model_identifier23965 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_RCURLY_in_qualified_meta_model_identifier23969 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_STAR_in_qualified_meta_model_identifier23971 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_STAR_in_qualified_meta_model_identifier23973 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_meta_model_class_identifier_in_qualified_meta_model_identifier23985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_core_metaclass_keyword_in_meta_model_class_identifier24022 = new BitSet(new long[]{0xEDFF98FFFDE7FB92L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_IDENT_in_meta_model_class_identifier24036 = new BitSet(new long[]{0xEDFF98FFFDE7FB92L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_ABSTRACT_in_core_metaclass_keyword24074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ACCESS_in_core_metaclass_keyword24085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_in_core_metaclass_keyword24097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ALL_in_core_metaclass_keyword24108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ANNEX_in_core_metaclass_keyword24120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_APPLIES_in_core_metaclass_keyword24132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BINDING_in_core_metaclass_keyword24144 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_in_core_metaclass_keyword24156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BUS_in_core_metaclass_keyword24168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CALLS_in_core_metaclass_keyword24180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASSIFIER_in_core_metaclass_keyword24192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REFERENCE_in_core_metaclass_keyword24204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONNECTIONS_in_core_metaclass_keyword24216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CONSTANT_in_core_metaclass_keyword24228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DATA_in_core_metaclass_keyword24240 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DELTA_in_core_metaclass_keyword24252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEVICE_in_core_metaclass_keyword24264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_END_in_core_metaclass_keyword24276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ENUMERATION_in_core_metaclass_keyword24288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EVENT_in_core_metaclass_keyword24300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EXTENDS_in_core_metaclass_keyword24312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FALSE_in_core_metaclass_keyword24324 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FEATURE_in_core_metaclass_keyword24336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FEATURES_in_core_metaclass_keyword24348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOW_in_core_metaclass_keyword24360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FLOWS_in_core_metaclass_keyword24372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_GROUP_in_core_metaclass_keyword24384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPLEMENTATION_in_core_metaclass_keyword24395 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_core_metaclass_keyword24407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INHERIT_in_core_metaclass_keyword24419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INITIAL_in_core_metaclass_keyword24431 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_in_core_metaclass_keyword24443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INVERSE_in_core_metaclass_keyword24455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IS_in_core_metaclass_keyword24467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LIST_in_core_metaclass_keyword24479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMORY_in_core_metaclass_keyword24491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MODE_in_core_metaclass_keyword24503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MODES_in_core_metaclass_keyword24515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NONE_in_core_metaclass_keyword24527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_in_core_metaclass_keyword24538 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OF_in_core_metaclass_keyword24549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_in_core_metaclass_keyword24560 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OUT_in_core_metaclass_keyword24571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PACKAGE_in_core_metaclass_keyword24582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PARAMETER_in_core_metaclass_keyword24593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PATH_in_core_metaclass_keyword24604 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PORT_in_core_metaclass_keyword24615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PRIVATE_in_core_metaclass_keyword24626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESS_in_core_metaclass_keyword24637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESSOR_in_core_metaclass_keyword24648 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROPERTIES_in_core_metaclass_keyword24659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROPERTY_in_core_metaclass_keyword24670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTOTYPE_in_core_metaclass_keyword24681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROTOTYPES_in_core_metaclass_keyword24692 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROVIDES_in_core_metaclass_keyword24703 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PUBLIC_in_core_metaclass_keyword24714 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RANGE_in_core_metaclass_keyword24725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REAL_in_core_metaclass_keyword24736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RECORD_in_core_metaclass_keyword24747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REFINED_in_core_metaclass_keyword24758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REFINES_in_core_metaclass_keyword24769 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RENAMES_in_core_metaclass_keyword24780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REQUIRES_in_core_metaclass_keyword24791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SERVER_in_core_metaclass_keyword24802 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SET_in_core_metaclass_keyword24813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SINK_in_core_metaclass_keyword24825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SOURCE_in_core_metaclass_keyword24836 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_in_core_metaclass_keyword24847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBCOMPONENTS_in_core_metaclass_keyword24858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_core_metaclass_keyword24869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SYSTEM_in_core_metaclass_keyword24880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_core_metaclass_keyword24891 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TO_in_core_metaclass_keyword24902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRANSITIONS_in_core_metaclass_keyword24913 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TRUE_in_core_metaclass_keyword24924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_TYPE_in_core_metaclass_keyword24935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_UNITS_in_core_metaclass_keyword24946 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VALUE_in_core_metaclass_keyword24957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_core_metaclass_keyword24968 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_WITH_in_core_metaclass_keyword24979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unnamed_classifier_type_in_classifier_type25016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_unique_property_type_identifier25156 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_unique_property_type_identifier25164 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unique_property_type_identifier25176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_constant25361 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_property_constant25363 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_CONSTANT_in_property_constant25365 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_LIST_in_property_constant25381 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_OF_in_property_constant25383 = new BitSet(new long[]{0x0000000000000080L,0x00000000000C1BF3L});
    public static final BitSet FOLLOW_unique_property_type_identifier_in_property_constant25398 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_property_type_in_property_constant25414 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_property_constant25428 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_constant_property_expression_in_property_constant25436 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_property_constant25449 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_record_term_in_constant_property_expression25513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_numeric_range_term_in_constant_property_expression25542 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_term_in_constant_property_expression25556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_term_in_constant_property_expression25570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_term_in_constant_property_expression25581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_string_term_in_constant_property_expression25592 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_classifier_term_in_constant_property_expression25603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_computed_term_in_constant_property_expression25614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_list_term_in_constant_property_expression25628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_constant_or_namelike_literal_in_constant_property_expression25652 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMPUTE_in_computed_term25687 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_computed_term25691 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_computed_term25698 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_computed_term25702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_record_term25731 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_record_term25738 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_record_term25740 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_record_term25758 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_record_term25761 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_IDENT_in_record_term25783 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_record_term25785 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_record_term25799 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_record_term25802 = new BitSet(new long[]{0x0000000000100080L});
    public static final BitSet FOLLOW_RPAREN_in_record_term25824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_modal_property_value25855 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_modal_property_value25886 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_in_modes_in_modal_property_value25909 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_modal_property_value25940 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_modal_property_value25964 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_in_modes_in_modal_property_value25987 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_modal_property_value26019 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_modal_property_value26039 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_modal_property_value26067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_expression_in_modal_property_value26099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_record_term_in_property_expression26216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_numeric_range_term_in_property_expression26257 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_reference_term_in_property_expression26279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_computed_term_in_property_expression26293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_string_term_in_property_expression26307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_term_in_property_expression26321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_term_in_property_expression26335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_component_classifier_term_in_property_expression26348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_term_in_property_expression26368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_constant_or_namelike_literal_in_property_expression26380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_list_term_in_property_expression26391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_list_term26439 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_list_term26441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_list_term26457 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_list_term26465 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_list_term26478 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_list_term26488 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_list_term26500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REFERENCE_in_reference_term26537 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_reference_term26539 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_contained_model_element_path_in_reference_term26543 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_reference_term26553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LBRACK_in_array_range26581 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_INTEGER_LIT_in_array_range26585 = new BitSet(new long[]{0x0000400000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_DOTDOT_in_array_range26594 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_INTEGER_LIT_in_array_range26598 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_RBRACK_in_array_range26610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_contained_model_element_path26649 = new BitSet(new long[]{0x0000200002000082L});
    public static final BitSet FOLLOW_array_range_in_contained_model_element_path26662 = new BitSet(new long[]{0x0000000002000082L});
    public static final BitSet FOLLOW_DOT_in_contained_model_element_path26680 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_contained_model_element_path26684 = new BitSet(new long[]{0x0000200002000082L});
    public static final BitSet FOLLOW_array_range_in_contained_model_element_path26699 = new BitSet(new long[]{0x0000000002000082L});
    public static final BitSet FOLLOW_IDENT_in_contained_model_element_path26730 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LCURLY_in_contained_model_element_path26736 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_STARSTAR_in_contained_model_element_path26738 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_ANNEX_TEXT_in_contained_model_element_path26746 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_STARSTAR_in_contained_model_element_path26752 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_RCURLY_in_contained_model_element_path26754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_contained_model_element_path26780 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LCURLY_in_contained_model_element_path26788 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_STARSTAR_in_contained_model_element_path26790 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_ANNEX_TEXT_in_contained_model_element_path26800 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_STARSTAR_in_contained_model_element_path26808 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_RCURLY_in_contained_model_element_path26810 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CLASSIFIER_in_component_classifier_term26850 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_component_classifier_term26852 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_unique_impl_name_in_component_classifier_term26862 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_unique_type_name_in_component_classifier_term26882 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_component_classifier_term26897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlreal_in_numeric_range_term26924 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_DOTDOT_in_numeric_range_term26928 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_signed_aadlreal_in_numeric_range_term26943 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_signed_property_name_constant_reference_in_numeric_range_term26960 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_numeric_range_term26981 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_DOTDOT_in_numeric_range_term26985 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_numeric_range_term26996 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27009 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_DOTDOT_in_numeric_range_term27035 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_signed_aadlreal_in_numeric_range_term27048 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_numeric_range_term27060 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27075 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_DELTA_in_numeric_range_term27091 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_numeric_range_term27099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlreal_in_numeric_range_term27111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_property_name_constant_reference_in_numeric_range_term27126 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_signed_property_name_constant_reference27162 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_MINUS_in_signed_property_name_constant_reference27171 = new BitSet(new long[]{0x0000000000000080L,0x0000000000036000L});
    public static final BitSet FOLLOW_property_name_constant_reference_in_signed_property_name_constant_reference27184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PLUS_in_property_constant_or_namelike_literal27258 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_MINUS_in_property_constant_or_namelike_literal27276 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_constant_term_in_property_constant_or_namelike_literal27298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STRING_LITERAL_in_string_term27335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlinteger_in_integer_term27383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_signed_aadlreal_in_real_term27413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_or_term_in_boolean_term27443 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_atom_in_and_term27480 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_AND_in_and_term27491 = new BitSet(new long[]{0x0000000000080080L,0x0000004011000000L});
    public static final BitSet FOLLOW_boolean_atom_in_and_term27496 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_and_term_in_or_term27539 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
    public static final BitSet FOLLOW_OR_in_or_term27550 = new BitSet(new long[]{0x0000000000080080L,0x0000004011000000L});
    public static final BitSet FOLLOW_and_term_in_or_term27554 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
    public static final BitSet FOLLOW_TRUE_in_boolean_atom27593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FALSE_in_boolean_atom27602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_in_boolean_atom27611 = new BitSet(new long[]{0x0000000000080080L,0x0000004011000000L});
    public static final BitSet FOLLOW_boolean_term_in_boolean_atom27615 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_constant_term_in_boolean_atom27626 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_boolean_atom27637 = new BitSet(new long[]{0x0000000000080080L,0x0000004011000000L});
    public static final BitSet FOLLOW_boolean_term_in_boolean_atom27641 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_boolean_atom27643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_constant_term27675 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_property_constant_term27677 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_property_constant_term27687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_constant_term27707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_name_reference_in_contained_property_association28029 = new BitSet(new long[]{0x0200000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_ASSIGNPLUS_in_contained_property_association28042 = new BitSet(new long[]{0x0000000000080080L,0x00000540114B6020L});
    public static final BitSet FOLLOW_ASSIGN_in_contained_property_association28055 = new BitSet(new long[]{0x0000000000080080L,0x00000540114B6020L});
    public static final BitSet FOLLOW_CONSTANT_in_contained_property_association28069 = new BitSet(new long[]{0x0000000000080080L,0x00000540114B6020L});
    public static final BitSet FOLLOW_modal_property_value_in_contained_property_association28085 = new BitSet(new long[]{0x0000800000000040L,0x0000000000000004L});
    public static final BitSet FOLLOW_APPLIES_in_contained_property_association28095 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_contained_property_association28097 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_contained_model_element_path_in_contained_property_association28111 = new BitSet(new long[]{0x0000800000000060L});
    public static final BitSet FOLLOW_COMMA_in_contained_property_association28134 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_contained_model_element_path_in_contained_property_association28136 = new BitSet(new long[]{0x0000800000000060L});
    public static final BitSet FOLLOW_in_binding_in_contained_property_association28161 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_contained_property_association28171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_name_reference_in_property_association28211 = new BitSet(new long[]{0x0200000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_ASSIGNPLUS_in_property_association28224 = new BitSet(new long[]{0x0000000000080080L,0x00000540114B6020L});
    public static final BitSet FOLLOW_ASSIGN_in_property_association28237 = new BitSet(new long[]{0x0000000000080080L,0x00000540114B6020L});
    public static final BitSet FOLLOW_CONSTANT_in_property_association28251 = new BitSet(new long[]{0x0000000000080080L,0x00000540114B6020L});
    public static final BitSet FOLLOW_modal_property_value_in_property_association28266 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_binding_in_property_association28274 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_property_association28284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_in_binding28303 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_BINDING_in_in_binding28305 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_in_binding28307 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_in_binding28312 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_in_binding28321 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_classifier_reference_in_in_binding28325 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_in_binding28340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_unique_property_identifier28434 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_unique_property_identifier28436 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_unique_property_identifier28453 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_name_reference28488 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_property_name_reference28490 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_property_name_reference28494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_property_name_reference28509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_name_reference_in_property_name_constant_reference28550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABSTRACT_in_component_category28934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BUS_in_component_category28944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DATA_in_component_category28954 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DEVICE_in_component_category28964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MEMORY_in_component_category28974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESS_in_component_category28984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESSOR_in_component_category28994 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_component_category29005 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_component_category29007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_component_category29018 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SYSTEM_in_component_category29028 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_component_category29040 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_component_category29042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_THREAD_in_component_category29053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_component_category29064 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_component_category29066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_VIRTUAL_in_component_category29078 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_component_category29080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_call_sequence29143 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_subprogram_call_sequence29145 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_LCURLY_in_subprogram_call_sequence29152 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subprogram_call_in_subprogram_call_sequence29158 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_subprogram_call_sequence29170 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_subprogram_call_sequence29174 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_subprogram_call_sequence29181 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_subprogram_call_sequence29195 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_subprogram_call_sequence29204 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_call_sequence29213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_call29235 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_subprogram_call29237 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_call29240 = new BitSet(new long[]{0x0000000800000080L});
    public static final BitSet FOLLOW_called_subprogram_in_subprogram_call29244 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_subprogram_call29252 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_subprogram_call29260 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_subprogram_call29271 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_call29278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESSOR_in_called_subprogram29300 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_called_subprogram29302 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29306 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29324 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_called_subprogram29326 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29337 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_DOUBLECOLON_in_called_subprogram29339 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29363 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_called_subprogram29365 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29432 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_called_subprogram29434 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_called_subprogram29456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_mode29580 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_mode29582 = new BitSet(new long[]{0x0000000000000000L,0x000000000C000000L});
    public static final BitSet FOLLOW_INITIAL_in_mode29596 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_MODE_in_mode29633 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_mode29643 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_mode29664 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_mode29704 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_mode29720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_mode_transition29785 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_mode_transition29787 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_mode_transition29815 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_LTRANS_in_mode_transition29830 = new BitSet(new long[]{0x0000000800000080L,0x0000400000000000L});
    public static final BitSet FOLLOW_mode_transition_trigger_in_mode_transition29834 = new BitSet(new long[]{0x0000000000000020L,0x0000200000000000L});
    public static final BitSet FOLLOW_COMMA_in_mode_transition29849 = new BitSet(new long[]{0x0000000800000080L,0x0000400000000000L});
    public static final BitSet FOLLOW_mode_transition_trigger_in_mode_transition29854 = new BitSet(new long[]{0x0000000000000020L,0x0000200000000000L});
    public static final BitSet FOLLOW_RTRANS_in_mode_transition29870 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_mode_transition29876 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_mode_transition29890 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_mode_transition29911 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_mode_transition29951 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_mode_transition29967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SELF_in_mode_transition_trigger30001 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_mode_transition_trigger30003 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_PROCESSOR_in_mode_transition_trigger30018 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_mode_transition_trigger30020 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_mode_transition_trigger30039 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_mode_transition_trigger30041 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_mode_transition_trigger30063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_mode_transition_trigger30085 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_component_in_modes30183 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_MODES_in_component_in_modes30185 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_component_in_modes30191 = new BitSet(new long[]{0x0000000000002080L});
    public static final BitSet FOLLOW_IDENT_in_component_in_modes30211 = new BitSet(new long[]{0x0200000000100020L});
    public static final BitSet FOLLOW_ASSIGN_in_component_in_modes30233 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_component_in_modes30237 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_component_in_modes30322 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_component_in_modes30326 = new BitSet(new long[]{0x0200000000100020L});
    public static final BitSet FOLLOW_ASSIGN_in_component_in_modes30352 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_component_in_modes30356 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_ALL_in_component_in_modes30465 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_component_in_modes30491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_in_modes30519 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_MODES_in_in_modes30521 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_in_modes30527 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_in_modes30547 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_in_modes30620 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_in_modes30624 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_in_modes30665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IN_in_in_modes_and_transitions30687 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_MODES_in_in_modes_and_transitions30689 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_LPAREN_in_in_modes_and_transitions30695 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_mode_or_transition_in_in_modes_and_transitions30707 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_in_modes_and_transitions30719 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_mode_or_transition_in_in_modes_and_transitions30721 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_RPAREN_in_in_modes_and_transitions30742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_mode_or_transition30766 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_data_port30825 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_data_port30827 = new BitSet(new long[]{0x0001880000000000L});
    public static final BitSet FOLLOW_REFINED_in_data_port30831 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_data_port30833 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_IN_in_data_port30846 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_OUT_in_data_port30848 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_OUT_in_data_port30858 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_IN_in_data_port30867 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_DATA_in_data_port30878 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_PORT_in_data_port30880 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_data_port30895 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_data_port30911 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_data_port30926 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_data_port30933 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_data_port30948 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_data_port30955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_event_data_port30997 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_event_data_port30999 = new BitSet(new long[]{0x0001880000000000L});
    public static final BitSet FOLLOW_REFINED_in_event_data_port31003 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_event_data_port31005 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_IN_in_event_data_port31018 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_OUT_in_event_data_port31020 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_OUT_in_event_data_port31030 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_IN_in_event_data_port31039 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_EVENT_in_event_data_port31050 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_DATA_in_event_data_port31052 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_PORT_in_event_data_port31054 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_event_data_port31069 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_event_data_port31091 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_event_data_port31106 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_event_data_port31114 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_event_data_port31132 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_event_data_port31140 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_event_port31180 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_event_port31182 = new BitSet(new long[]{0x0001880000000000L});
    public static final BitSet FOLLOW_REFINED_in_event_port31186 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_event_port31188 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_IN_in_event_port31201 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_OUT_in_event_port31203 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_OUT_in_event_port31213 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_IN_in_event_port31222 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_EVENT_in_event_port31233 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_PORT_in_event_port31235 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_event_port31249 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_event_port31264 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_event_port31272 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_event_port31290 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_event_port31298 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_parameter31470 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_parameter31472 = new BitSet(new long[]{0x0001880000000000L});
    public static final BitSet FOLLOW_REFINED_in_parameter31477 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_parameter31479 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_IN_in_parameter31499 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_OUT_in_parameter31501 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_IN_in_parameter31529 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_OUT_in_parameter31557 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_PARAMETER_in_parameter31590 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_parameter31608 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_parameter31627 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_parameter31642 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_parameter31650 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_parameter31668 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_parameter31677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_data_access31744 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_data_access31746 = new BitSet(new long[]{0x00C0080000000000L});
    public static final BitSet FOLLOW_REFINED_in_data_access31750 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_data_access31752 = new BitSet(new long[]{0x00C0000000000000L});
    public static final BitSet FOLLOW_PROVIDES_in_data_access31765 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_DATA_in_data_access31767 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_data_access31769 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_REQUIRES_in_data_access31780 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_DATA_in_data_access31782 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_data_access31784 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_data_access31805 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_data_access31820 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_data_access31835 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_data_access31843 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_data_access31861 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_data_access31869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_bus_access31910 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_bus_access31912 = new BitSet(new long[]{0x00C0080000000000L});
    public static final BitSet FOLLOW_REFINED_in_bus_access31916 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_bus_access31918 = new BitSet(new long[]{0x00C0000000000000L});
    public static final BitSet FOLLOW_PROVIDES_in_bus_access31933 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_bus_access31935 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_bus_access31937 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_REQUIRES_in_bus_access31954 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_BUS_in_bus_access31956 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_bus_access31958 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_bus_access31983 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_bus_access31998 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_bus_access32013 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_bus_access32021 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_bus_access32039 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_bus_access32048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_access32125 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_subprogram_access32127 = new BitSet(new long[]{0x00C0080000000000L});
    public static final BitSet FOLLOW_REFINED_in_subprogram_access32132 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_subprogram_access32134 = new BitSet(new long[]{0x00C0000000000000L});
    public static final BitSet FOLLOW_PROVIDES_in_subprogram_access32148 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_access32150 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_subprogram_access32152 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_REQUIRES_in_subprogram_access32168 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_access32170 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_subprogram_access32172 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_subprogram_access32201 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_subprogram_access32217 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_subprogram_access32232 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_subprogram_access32240 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_subprogram_access32258 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_access32266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subprogram_group_access32306 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_subprogram_group_access32308 = new BitSet(new long[]{0x00C0080000000000L});
    public static final BitSet FOLLOW_REFINED_in_subprogram_group_access32312 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_subprogram_group_access32314 = new BitSet(new long[]{0x00C0000000000000L});
    public static final BitSet FOLLOW_PROVIDES_in_subprogram_group_access32328 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_group_access32330 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_subprogram_group_access32332 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_subprogram_group_access32334 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_REQUIRES_in_subprogram_group_access32345 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_subprogram_group_access32347 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_subprogram_group_access32349 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_subprogram_group_access32351 = new BitSet(new long[]{0x00002100000000C0L});
    public static final BitSet FOLLOW_classifier_reference_in_subprogram_group_access32374 = new BitSet(new long[]{0x0000210000000040L});
    public static final BitSet FOLLOW_array_dimension_in_subprogram_group_access32389 = new BitSet(new long[]{0x0000010000000040L});
    public static final BitSet FOLLOW_LCURLY_in_subprogram_group_access32404 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_subprogram_group_access32412 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_subprogram_group_access32430 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_subprogram_group_access32438 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_port_connection_in_connection32575 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_feature_group_connection_in_connection32601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parameter_connection_in_connection32628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_access_connection_in_connection32656 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_feature_connection_in_connection32683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_feature_connection32770 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_feature_connection32772 = new BitSet(new long[]{0x0000080000000080L});
    public static final BitSet FOLLOW_REFINED_in_feature_connection32788 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_feature_connection32790 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_connection32808 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_feature_connection32810 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_connection32827 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
    public static final BitSet FOLLOW_ARROW_in_feature_connection32832 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_BARROW_in_feature_connection32839 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_connection32866 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_feature_connection32868 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_connection32885 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_feature_connection32897 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_feature_connection32911 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_feature_connection32939 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_feature_connection32954 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_feature_connection32967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SELF_in_port_connection_port_association33005 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_port_connection_port_association33030 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_IDENT_in_port_connection_port_association33057 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_port_connection_port_association33087 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_port_connection_port_association33100 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
    public static final BitSet FOLLOW_ARROW_in_port_connection_port_association33114 = new BitSet(new long[]{0x0000000800000080L,0x0000400000000000L});
    public static final BitSet FOLLOW_BARROW_in_port_connection_port_association33122 = new BitSet(new long[]{0x0000000800000080L,0x0000400000000000L});
    public static final BitSet FOLLOW_SELF_in_port_connection_port_association33156 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_PROCESSOR_in_port_connection_port_association33181 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_IDENT_in_port_connection_port_association33208 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_port_connection_port_association33238 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_port_connection_port_association33251 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_port_connection33291 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_port_connection33293 = new BitSet(new long[]{0x0020080000000000L});
    public static final BitSet FOLLOW_REFINED_in_port_connection33312 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_port_connection33314 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_PORT_in_port_connection33329 = new BitSet(new long[]{0x00008108000000C0L,0x0000400000000000L});
    public static final BitSet FOLLOW_port_connection_port_association_in_port_connection33343 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_PORT_in_port_connection33371 = new BitSet(new long[]{0x0000000800000080L,0x0000400000000000L});
    public static final BitSet FOLLOW_port_connection_port_association_in_port_connection33382 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_port_connection33402 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_port_connection33413 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_port_connection33432 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_port_connection33443 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_port_connection33452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_parameter_connection_parameter_association33571 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_parameter_connection_parameter_association33573 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_parameter_connection_parameter_association33596 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_parameter_connection_parameter_association33613 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_parameter_connection_parameter_association33621 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_parameter_connection_parameter_association33623 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_parameter_connection_parameter_association33644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_parameter_connection33688 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_parameter_connection33690 = new BitSet(new long[]{0x0000080000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_REFINED_in_parameter_connection33710 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_parameter_connection33712 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_PARAMETER_in_parameter_connection33727 = new BitSet(new long[]{0x00008100000000C0L});
    public static final BitSet FOLLOW_parameter_connection_parameter_association_in_parameter_connection33741 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_PARAMETER_in_parameter_connection33765 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_parameter_connection_parameter_association_in_parameter_connection33777 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_parameter_connection33797 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_parameter_connection33808 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_parameter_connection33827 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_parameter_connection33838 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_parameter_connection33847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_PROCESSOR_in_access_connection_access_association33882 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_IDENT_in_access_connection_access_association33906 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_access_connection_access_association33932 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_access_connection_access_association33944 = new BitSet(new long[]{0x0000000000000000L,0x0001800000000000L});
    public static final BitSet FOLLOW_BARROW_in_access_connection_access_association33959 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_ARROW_in_access_connection_access_association33972 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_access_connection_access_association33985 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_access_connection_access_association33987 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_access_connection_access_association34063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BUS_in_access_connection_access_definition34157 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_access_connection_access_definition34173 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_access_connection_access_definition34175 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_SUBPROGRAM_in_access_connection_access_definition34191 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_DATA_in_access_connection_access_definition34208 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_ACCESS_in_access_connection_access_definition34231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_access_connection34275 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_access_connection34277 = new BitSet(new long[]{0x01000810C0000080L});
    public static final BitSet FOLLOW_REFINED_in_access_connection34297 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_access_connection34299 = new BitSet(new long[]{0x01000810C0000080L});
    public static final BitSet FOLLOW_access_connection_access_definition_in_access_connection34313 = new BitSet(new long[]{0x00008108000000C0L});
    public static final BitSet FOLLOW_access_connection_access_association_in_access_connection34330 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_access_connection_access_definition_in_access_connection34356 = new BitSet(new long[]{0x0000000800000080L});
    public static final BitSet FOLLOW_access_connection_access_association_in_access_connection34368 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_access_connection34389 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_access_connection34403 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_access_connection34431 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_access_connection34446 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_access_connection34458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_connection_port_association34740 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_feature_group_connection_port_association34742 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_connection_port_association34763 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_BARROW_in_feature_group_connection_port_association34780 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_connection_port_association34797 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_feature_group_connection_port_association34799 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_connection_port_association34821 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_feature_group_connection34868 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_feature_group_connection34870 = new BitSet(new long[]{0x0000080000000800L});
    public static final BitSet FOLLOW_REFINED_in_feature_group_connection34885 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_feature_group_connection34887 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_FEATURE_in_feature_group_connection34898 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_feature_group_connection34900 = new BitSet(new long[]{0x00008100000000C0L});
    public static final BitSet FOLLOW_feature_group_connection_port_association_in_feature_group_connection34911 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_FEATURE_in_feature_group_connection34930 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_GROUP_in_feature_group_connection34932 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_feature_group_connection_port_association_in_feature_group_connection34942 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_feature_group_connection34956 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_feature_group_connection34967 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_feature_group_connection34986 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_feature_group_connection34995 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_feature_group_connection35003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_source_spec_in_flow_spec35281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_sink_spec_in_flow_spec35290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_path_spec_in_flow_spec35299 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_source_spec_refinement_in_flow_spec35317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_sink_spec_refinement_in_flow_spec35331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_path_spec_refinement_in_flow_spec35345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_source_spec35404 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_source_spec35406 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_source_spec35408 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_SOURCE_in_flow_source_spec35410 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_source_spec35414 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_source_spec35424 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_source_spec35429 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_source_spec35450 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_flow_source_spec35459 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_source_spec35465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_sink_spec35488 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_sink_spec35490 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_sink_spec35492 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_SINK_in_flow_sink_spec35494 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_sink_spec35498 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_sink_spec35507 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_sink_spec35512 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_sink_spec35533 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_flow_sink_spec35542 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_sink_spec35548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_path_spec35574 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_path_spec35576 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_path_spec35578 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_PATH_in_flow_path_spec35580 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_path_spec35584 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_path_spec35586 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_path_spec35590 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_path_spec35599 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_path_spec35604 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_path_spec35625 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_flow_path_spec35634 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_path_spec35640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_source_spec_refinement35665 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_source_spec_refinement35667 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_flow_source_spec_refinement35669 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_flow_source_spec_refinement35671 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_source_spec_refinement35673 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_SOURCE_in_flow_source_spec_refinement35675 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_source_spec_refinement35684 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_source_spec_refinement35689 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_source_spec_refinement35708 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_flow_source_spec_refinement35716 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_source_spec_refinement35722 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_sink_spec_refinement35746 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_sink_spec_refinement35748 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_flow_sink_spec_refinement35750 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_flow_sink_spec_refinement35752 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_sink_spec_refinement35754 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_SINK_in_flow_sink_spec_refinement35756 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_sink_spec_refinement35764 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_sink_spec_refinement35772 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_sink_spec_refinement35790 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_flow_sink_spec_refinement35799 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_sink_spec_refinement35805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_path_spec_refinement35829 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_path_spec_refinement35831 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_flow_path_spec_refinement35833 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_flow_path_spec_refinement35835 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_path_spec_refinement35837 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_PATH_in_flow_path_spec_refinement35839 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_path_spec_refinement35847 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_path_spec_refinement35857 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_path_spec_refinement35879 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_in_flow_path_spec_refinement35887 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_path_spec_refinement35893 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_end_to_end_flow_in_end_to_end_flow_implementation36063 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_end_to_end_flow_refinement_in_end_to_end_flow_implementation36100 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_end_to_end_flow_implementation36130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_flow_source_implementation_in_flow_implementation36178 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_flow_source_implementation_refinement_in_flow_implementation36213 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_flow_sink_implementation_in_flow_implementation36251 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_flow_sink_implementation_refinement_in_flow_implementation36285 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_flow_path_implementation_in_flow_implementation36326 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_flow_path_implementation_refinement_in_flow_implementation36368 = new BitSet(new long[]{0x0000810000000040L});
    public static final BitSet FOLLOW_LCURLY_in_flow_implementation36409 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_flow_implementation36420 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_flow_implementation36446 = new BitSet(new long[]{0x0000800000000040L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_flow_implementation36460 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_SEMI_in_flow_implementation36472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_source_implementation36538 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_source_implementation36540 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_source_implementation36545 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_SOURCE_in_flow_source_implementation36547 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subcomponent_flow_identifier_in_flow_source_implementation36580 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_source_implementation36606 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_flow_source_implementation36631 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_source_implementation36654 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_source_implementation36680 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_sink_implementation36715 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_sink_implementation36717 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_sink_implementation36725 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_SINK_in_flow_sink_implementation36727 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_sink_implementation36747 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_sink_implementation36774 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_flow_sink_implementation36780 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_sink_implementation36798 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subcomponent_flow_identifier_in_flow_sink_implementation36804 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_IDENT_in_flow_path_implementation36845 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_path_implementation36847 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_path_implementation36854 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_PATH_in_flow_path_implementation36856 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_path_implementation36874 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_path_implementation36889 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_flow_path_implementation36915 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_path_implementation36942 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subcomponent_flow_identifier_in_flow_path_implementation36975 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_path_implementation37008 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_flow_path_implementation37014 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_flow_path_implementation37045 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_flow_feature_identifier_in_flow_path_implementation37082 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_source_implementation_refinement37123 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_source_implementation_refinement37125 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_source_implementation_refinement37130 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_SOURCE_in_flow_source_implementation_refinement37132 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_flow_source_implementation_refinement37135 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_flow_source_implementation_refinement37137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_sink_implementation_refinement37167 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_sink_implementation_refinement37169 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_sink_implementation_refinement37174 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_SINK_in_flow_sink_implementation_refinement37176 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_flow_sink_implementation_refinement37179 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_flow_sink_implementation_refinement37181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_path_implementation_refinement37211 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_flow_path_implementation_refinement37213 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_flow_path_implementation_refinement37218 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_PATH_in_flow_path_implementation_refinement37220 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_flow_path_implementation_refinement37223 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_flow_path_implementation_refinement37225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subcomponent_flow_identifier37253 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_subcomponent_flow_identifier37255 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_subcomponent_flow_identifier37259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_subcomponent_flow_identifier37278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_end_to_end_flow37317 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_end_to_end_flow37319 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_end_to_end_flow37326 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_end_to_end_flow37328 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_end_to_end_flow37330 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_end_to_end_flow37332 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subcomponent_flow_identifier_in_end_to_end_flow37352 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_end_to_end_flow37377 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_end_to_end_flow37383 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_ARROW_in_end_to_end_flow37401 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_subcomponent_flow_identifier_in_end_to_end_flow37407 = new BitSet(new long[]{0x0000810000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_LCURLY_in_end_to_end_flow37433 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_end_to_end_flow37444 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_end_to_end_flow37471 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_end_to_end_flow37487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_end_to_end_flow_refinement37523 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_COLON_in_end_to_end_flow_refinement37525 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_REFINED_in_end_to_end_flow_refinement37529 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_end_to_end_flow_refinement37531 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_end_to_end_flow_refinement37536 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_TO_in_end_to_end_flow_refinement37538 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_END_in_end_to_end_flow_refinement37540 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_FLOW_in_end_to_end_flow_refinement37542 = new BitSet(new long[]{0x0000810000000002L});
    public static final BitSet FOLLOW_LCURLY_in_end_to_end_flow_refinement37552 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_property_association_in_end_to_end_flow_refinement37561 = new BitSet(new long[]{0x0000020000000080L});
    public static final BitSet FOLLOW_RCURLY_in_end_to_end_flow_refinement37581 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_in_modes_and_transitions_in_end_to_end_flow_refinement37591 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IDENT_in_flow_feature_identifier37632 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_DOT_in_flow_feature_identifier37634 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_flow_feature_identifier37650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REAL_LIT_in_real_literal37683 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LIT_in_integer_literal37712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_REQUIRES_in_synpred476_Aadl214207 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_MODES_in_synpred476_Aadl214209 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_mode_in_synpred476_Aadl214226 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_none_stmt_in_synpred476_Aadl214263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_none_stmt_in_synpred615_Aadl217463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_owner_in_synpred699_Aadl221147 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_COMMA_in_synpred699_Aadl221162 = new BitSet(new long[]{0xEDFF99FFFDE7FB90L,0x000000FFFFFC1BFFL});
    public static final BitSet FOLLOW_property_owner_in_synpred699_Aadl221166 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_unique_impl_name_in_synpred700_Aadl221245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualified_meta_model_identifier_in_synpred701_Aadl221267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_core_metaclass_keyword_in_synpred762_Aadl224015 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_synpred846_Aadl225502 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_synpred846_Aadl225504 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_synpred846_Aadl225506 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred850_Aadl225526 = new BitSet(new long[]{0xFFFFFFFFFFFFFFB0L,0x7FFFFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_DOTDOT_in_synpred850_Aadl225534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_term_in_synpred851_Aadl225556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_term_in_synpred852_Aadl225570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_term_in_synpred853_Aadl225581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_list_term_in_synpred857_Aadl225628 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COMMA_in_synpred859_Aadl225940 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_synpred859_Aadl225964 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_in_modes_in_synpred859_Aadl225987 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_synpred861_Aadl225855 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_synpred861_Aadl225886 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_in_modes_in_synpred861_Aadl225909 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_synpred861_Aadl225940 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_synpred861_Aadl225964 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_in_modes_in_synpred861_Aadl225987 = new BitSet(new long[]{0x0000000000100020L});
    public static final BitSet FOLLOW_COMMA_in_synpred861_Aadl226019 = new BitSet(new long[]{0x0000000000080080L,0x00000540110B6020L});
    public static final BitSet FOLLOW_property_expression_in_synpred861_Aadl226039 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_RPAREN_in_synpred861_Aadl226067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LPAREN_in_synpred862_Aadl226205 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_IDENT_in_synpred862_Aadl226207 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_ASSIGN_in_synpred862_Aadl226209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_synpred866_Aadl226240 = new BitSet(new long[]{0xFFFFFFFFFFFFFFB0L,0x7FFFFFFFFFFFFFFFL});
    public static final BitSet FOLLOW_DOTDOT_in_synpred866_Aadl226248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_real_term_in_synpred870_Aadl226321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_integer_term_in_synpred871_Aadl226335 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_boolean_term_in_synpred873_Aadl226368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_property_constant_or_namelike_literal_in_synpred874_Aadl226380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_in_synpred897_Aadl227491 = new BitSet(new long[]{0x0000000000080080L,0x0000004011000000L});
    public static final BitSet FOLLOW_boolean_atom_in_synpred897_Aadl227496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_in_synpred898_Aadl227550 = new BitSet(new long[]{0x0000000000080080L,0x0000004011000000L});
    public static final BitSet FOLLOW_and_term_in_synpred898_Aadl227554 = new BitSet(new long[]{0x0000000000000002L});

}