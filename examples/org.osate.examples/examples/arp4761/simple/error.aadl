package error_library
public
	annex EMV2 {**
		error types
			NoPower: type;
			NoService: type;
			ValueError: type;
			NoValue: type extends ValueError;
			PlatformFailure: type;
			HardwareFailure: type extends PlatformFailure;
			SoftwareFailure: type extends PlatformFailure;
		end types;
		
		error behavior ThreeState
			states
				Operational: initial state;
				NonCriticalModeFailure: state;
				CriticalModeFailure: state;
		end behavior;
		
		error behavior ThreeErrorStates
			events
				BadValueEvent: error event;
				NoValueEvent: error event;
				LateValueEvent: error event;
			states
				Operational: initial state;
				BadValueState: state;
				NoValueState: state;
				LateValueState: state;
			transitions
				BadValueTransition: Operational -[BadValueEvent]-> BadValueState;
				NoValueTransition: Operational -[NoValueEvent]-> NoValueState;
				LateTransition: Operational -[LateValueEvent]-> LateValueState;
		end behavior;
		
		error behavior Simple
			states
				Operational: initial state;
				Failed: state;
		end behavior;
		
		error behavior bscu
			states
				Operational: initial state;
				Alternate: state;
				Failed: state;
		end behavior;
		
		error behavior WBS
			states
				Operational: initial state;
				AnnunciatedBrakingLoss: state;
				UnannunciatedBrakingLoss: state;
				PartialBrakingLoss: state;
				AsymmetricLoss: state;
				InadvertentBrake: state;
		end behavior;
		
		error behavior SimpleAndTransient
			events
				Failure: error event;
				FailureTransient: error event;
				ResetEvent: recover event;
			states
				Operational: initial state;
				Failed: state;
				TransientFailure: state;
			transitions
				transerr: Operational -[Failure]-> Failed;
		
				transerr2: Operational -[FailureTransient]-> TransientFailure;
				treset: TransientFailure -[ResetEvent]-> Operational;
		end behavior;
	**};
end error_library;