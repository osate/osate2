-- Copyright 2022 Carnegie Mellon University.
-- This material is based upon work funded and supported by the Department of Defense
-- under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the operation of the 
-- Software Engineering Institute, a federally funded research and development center.
-- The view, opinions, and/or findings contained in this material are those of the author(s)
-- and should not be construed as an official Government position, policy, or decision,
-- unless designated by other documentation.
--
-- THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS.
-- CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING,
-- BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED
-- FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM
-- FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
-- [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.
--  Please see Copyright notice for non-US Government use and distribution.
--
-- Internal use:* Permission to reproduce this material and to prepare derivative works from this material
-- for internal use is granted, provided the copyright and “No Warranty” statements are included with all
-- reproductions and derivative works.
--
-- External use:* This material may be reproduced in its entirety, without modification, and freely distributed
-- in written or electronic form without requesting formal permission. Permission is required for any other external
-- and/or commercial use. Requests for permission should be directed to the Software Engineering Institute
-- at permission@sei.cmu.edu.
-- These restrictions do not apply to U.S. government entities.
-- DM22-0018

package SoftwareParts
public
	with DataModel;
		
	system DigitalControl	
	end DigitalControl;

	system implementation DigitalControl.tier1
		subcomponents
			IO_Process: process;
			Command_Process: process;
	end DigitalControl.tier1;

	process IO_Process
	end IO_Process;
	
	process implementation IO_Process.impl
		subcomponents
			sense: thread sensor_sense_thread; 
			mode_change: thread;
			actuate: thread actuator_output_thread;
	end IO_Process.impl;
	
	process Command_Process
	end Command_Process;

	process implementation Command_Process.impl
		subcomponents
			filter: thread filterApp;
			pilot: thread;
			control: thread controlApp;
	end Command_Process.impl;

	thread sensor_sense_thread
		features
			signalout: out data port DataModel::SensorData;-- data to filter
			signalin: in data port DataModel::SensorData;  -- raw data in
		properties
			Stack_Size => 10 Kbyte;
			Period => 20 ms;
			Compute_Execution_Time => 10 ms .. 12 ms;
	end sensor_sense_thread;

	thread actuator_output_thread
		features
			controlin: in data port DataModel::actuatecmd;-- data from filter
			actuate: out data port DataModel::actuatecmd; -- to actuator
		properties
			Stack_Size => 10 Kbyte;
			Period => 20 ms;
			Compute_Execution_Time => 8 ms .. 10 ms;
	end actuator_output_thread;
		
	thread filterApp
		features
			sensorraw: in data port DataModel::SensorData; -- from sensor
			sensorfiltered: out data port DataModel::SensorData;-- to control
		properties
			Stack_Size => 25 Kbyte;
			Data_size => 250 KByte; -- for logging
			Period => 20 ms;
			Compute_Execution_Time => 5 ms .. 7 ms;
	end filterApp;

	thread controlApp
		features
			sensorfiltered: in data port DataModel::SensorData;-- filtered
			actuatesensor: out data port DataModel::actuatecmd;-- new command
		properties
			Stack_Size => 25 Kbyte;
			Data_size => 50 KByte; -- for control state
			Period => 20 ms;
			Compute_Execution_Time => 2 ms .. 6 ms; 
	end controlApp;
end SoftwareParts;