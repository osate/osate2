-- Copyright 2022 Carnegie Mellon University.
-- This material is based upon work funded and supported by the Department of Defense
-- under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the operation of the 
-- Software Engineering Institute, a federally funded research and development center.
-- The view, opinions, and/or findings contained in this material are those of the author(s)
-- and should not be construed as an official Government position, policy, or decision,
-- unless designated by other documentation.
--
-- THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS.
-- CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING,
-- BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED
-- FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM
-- FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
-- [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.
--  Please see Copyright notice for non-US Government use and distribution.
--
-- Internal use:* Permission to reproduce this material and to prepare derivative works from this material
-- for internal use is granted, provided the copyright and “No Warranty” statements are included with all
-- reproductions and derivative works.
--
-- External use:* This material may be reproduced in its entirety, without modification, and freely distributed
-- in written or electronic form without requesting formal permission. Permission is required for any other external
-- and/or commercial use. Requests for permission should be directed to the Software Engineering Institute
-- at permission@sei.cmu.edu.
-- These restrictions do not apply to U.S. government entities.
-- DM22-0018

package Controller
public
	with DataDictionary, Infrastructure, SEI;
	system SimpleController
		features
			busIn: requires bus access Infrastructure::bus1553.i; 
			dataIn: in data port DataDictionary::SensorData;
			busOut: requires bus access Infrastructure::canBus.i; 
			dataOut: out data port DataDictionary::BrakeSignal;
			powerIn: requires bus access Infrastructure::power.generic;
		flows
			controllerFlow: flow path dataIn -> dataOut;
		annex EMV2{**
			use types ErrorLibrary;
			use behavior ErrorLibrary::FailStop;
			error propagations		
				datain: in propagation {ServiceOmission,ValueError};
				dataout : out propagation {ServiceOmission,ValueError};
				flows
					f1: error sink datain {ServiceOmission, ValueError};
					f2 : error source dataout {ServiceOmission, ValueError};
			end propagations;
			component error behavior
				events
					serviceommission:error event;
					valueerror:error event;
				transitions
					Operational-[serviceommission]-> FailStop;
					Operational-[valueerror]-> FailStop;
		end component;
		**};
	end SimpleController;
	
	system implementation SimpleController.i
		properties
			latency => 3ms..5ms  applies to controllerFlow;
			SEI::WeightLimit => 1.2kg;
			SEI::powerBudget =>4.0W applies to powerIn;
	end SimpleController.i;
end Controller;