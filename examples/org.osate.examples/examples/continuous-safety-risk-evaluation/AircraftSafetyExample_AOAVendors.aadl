--Copyright 2019 Carnegie Mellon University.
--This material is based upon work funded and supported by the Department of Defense under Contract No. FA8702-15-D-0002 with Carnegie Mellon University for the operation of the Software Engineering Institute, a federally funded research and development center.
--The view, opinions, and/or findings contained in this material are those of the author(s) and should not be construed as an official Government position, policy, or decision, unless designated by other documentation.
--NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
--[DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see Copyright notice for non-US Government use and distribution.
--Internal use:* Permission to reproduce this material and to prepare derivative works from this material for internal use is granted, provided the copyright and �No Warranty� statements are included with all reproductions and derivative works.
--External use:* This material may be reproduced in its entirety, without modification, and freely distributed in written or electronic form without requesting formal permission. Permission is required for any other external and/or commercial use. Requests for permission should be directed to the Software Engineering Institute at permission@sei.cmu.edu.
--* These restrictions do not apply to U.S. government entities.
--Carnegie Mellon� is registered in the U.S. Patent and Trademark Office by Carnegie Mellon University.
--DM19-1050
package AircraftSafetyExample::AOAVendors

public
	-- added component failures for sensor, ACC, flight surface.
	-- standby model with standby logic for ACC service omission in flight surface.
	-- Pilot observation of continuous ACC bad control action leads to ACC turn off action. 
	-- ACC continuous bad control due to bad sensor and not turned off.
	-- discrepancy indicator added in
	-- Added AOA vendor alternatives
	with AircraftSafetyExample::AOADiscrepancy;
	renames AircraftSafetyExample::AOADiscrepancy::all;

	device implementation aoasensor.vendorA
		annex emv2 {**
			properties
				EMV2::OccurrenceDistribution => [
					ProbabilityValue => 1.5E-5;] applies to reading;
		**};
	end aoasensor.vendorA;

	device implementation aoasensor.vendorB
		annex emv2 {**
			properties
				EMV2::OccurrenceDistribution => [
					ProbabilityValue => 2.5E-4;] applies to reading;
		**};
	end aoasensor.vendorB;

-- vendor A vs vendor B AOA
	system implementation ac.OSVAPermanentDiscrepancyFail extends ac.OSSPermanentDiscrepancyFail
		subcomponents
			aoa1: refined to device aoasensor.vendorA;
			aoa2: refined to device aoasensor.vendorA;
	end ac.OSVAPermanentDiscrepancyFail;

	system implementation ac.OSVBPermanentDiscrepancyFail extends ac.OSSPermanentDiscrepancyFail
		subcomponents
			aoa1: refined to device aoasensor.vendorB;
			aoa2: refined to device aoasensor.vendorB;
	end ac.OSVBPermanentDiscrepancyFail;

	system implementation ac.OSVBNoACCKnowledge extends ac.OSSNoACCKnowledge
		subcomponents
			aoa1: refined to device aoasensor.vendorB;
			aoa2: refined to device aoasensor.vendorB;
	end ac.OSVBNoACCKnowledge;

	system implementation ac.OneSensorVB extends ac.OneSensorSpec
		subcomponents
			aoa1: refined to device aoasensor.vendorB;
			aoa2: refined to device aoasensor.vendorB;
	end ac.OneSensorVB;

end AircraftSafetyExample::AOAVendors;