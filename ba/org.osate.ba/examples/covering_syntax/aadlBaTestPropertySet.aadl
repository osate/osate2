-- AADL-BA-FrontEnd
 
-- Copyright (c) 2011-2021 TELECOM ParisTech and CNRS
 
-- TELECOM ParisTech/LTCI

-- Authors: see AUTHORS
 
-- This program is free software: you can redistribute it and/or modify 
-- it under the terms of the Eclipse Public License as published by Eclipse,
-- either version 2.0 of the License, or (at your option) any later version.
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-- Eclipse Public License for more details.
-- You should have received a copy of the Eclipse Public License
-- along with this program.  If not, see 
-- https://www.eclipse.org/legal/epl-2.0/

property set AadlBaTestPropertySet is

aConstant : constant aadlinteger => 28 ;
aValue : aadlinteger => 28 applies to (data, subprogram, thread, system) ;
aIntegerConstant : constant aadlinteger => 42 ;
aNegativeIntegerConstant : constant aadlinteger => -42 ;
aFloatConstant : constant aadlreal => 42.1 ;
aStringConstant : constant aadlstring => "hello world" ;
aBooleanConstant : constant aadlboolean => true ;

aSimpleValue : aadlinteger applies to (data, data port, subprogram, thread, system) ;
aSimpleValueDefined : aadlinteger => 20 applies to (data, subprogram, thread, system) ;

rangeType : type range of aadlinteger units Time_Units ;
aRange : AadlBaTestPropertySet::rangeType applies to (data, subprogram, thread, system) ;
aRangeDefined : AadlBaTestPropertySet::rangeType => 0 sec .. 99 sec applies to (data, subprogram, thread, system) ;

enumType : type enumeration (zero, one, two , three, four, five, six, seven, eight, nine) ;
aEnum : AadlBaTestPropertySet::enumType applies to (data, subprogram, thread, system) ;
aEnumDefined : AadlBaTestPropertySet::enumType => nine applies to (data, subprogram, thread, system) ;

aSimpleList : list of aadlstring applies to (data, subprogram, thread, system) ;
aSimpleListDefined : list of aadlstring => ("hello", "hi", "good day") applies to (data, subprogram, thread, system) ;

simpleRecordType : type record ( bool : aadlboolean ;
                                 int : aadlinteger ;)  ;
aSimpleRecord : AadlBaTestPropertySet::simpleRecordType applies to (data, subprogram, thread, system) ;
aSimpleRecordDefined : AadlBaTestPropertySet::simpleRecordType => [bool => true ; int => 40 ;]
                       applies to (data, subprogram, thread, system) ;
            
complexRecordType : type record ( bool : aadlboolean ;
                                int : aadlinteger ;
                                rec : AadlBaTestPropertySet::simpleRecordType ;
                                listRec : list of AadlBaTestPropertySet::simpleRecordType ; ) ;
aComplexRecord : AadlBaTestPropertySet::complexRecordType applies to (data, subprogram, thread, system) ;
aComplexRecordDefined : AadlBaTestPropertySet::complexRecordType => [bool => true ;
                                                                   int => 60 ;
                                                                   rec => AadlBaTestPropertySet::aSimpleRecordDefined ;
                                                                   listRec => (AadlBaTestPropertySet::aSimpleRecordDefined);] 
                        applies to (data, subprogram, thread, system) ;

aComplexList : list of AadlBaTestPropertySet::complexRecordType applies to (data, subprogram, thread, system) ;
aComplexListDefined : list of AadlBaTestPropertySet::complexRecordType => (AadlBaTestPropertySet::aComplexRecordDefined) applies to (data, subprogram, thread, system) ;

aComplexListOfList : list of list of AadlBaTestPropertySet::complexRecordType applies to (data, subprogram, thread, system) ;
aComplexListOfListDefined : list of list of AadlBaTestPropertySet::complexRecordType => ((AadlBaTestPropertySet::aComplexRecordDefined)) applies to (data, subprogram, thread, system) ;

end AadlBaTestPropertySet;